(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[2],{"+fUG":function(module,exports,__webpack_require__){eval("var nativeCreate = __webpack_require__(\"5pfJ\");\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_hashGet.js?")},"+kuV":function(module,exports,__webpack_require__){eval("/**\n * Less - Leaner CSS v4.1.2\n * http://lesscss.org\n * \n * Copyright (c) 2009-2021, Alexis Sellier <self@cloudhead.net>\n * Licensed under the Apache-2.0 License.\n *\n * @license Apache-2.0\n */\n(function (global, factory) {\n   true ? module.exports = factory() : undefined;\n})(this, function () {\n  'use strict'; // Export a new default each time\n\n  function defaultOptions() {\n    return {\n      /* Inline Javascript - @plugin still allowed */\n      javascriptEnabled: false,\n\n      /* Outputs a makefile import dependency list to stdout. */\n      depends: false,\n\n      /* (DEPRECATED) Compress using less built-in compression.\r\n       * This does an okay job but does not utilise all the tricks of\r\n       * dedicated css compression. */\n      compress: false,\n\n      /* Runs the less parser and just reports errors without any output. */\n      lint: false,\n\n      /* Sets available include paths.\r\n       * If the file in an @import rule does not exist at that exact location,\r\n       * less will look for it at the location(s) passed to this option.\r\n       * You might use this for instance to specify a path to a library which\r\n       * you want to be referenced simply and relatively in the less files. */\n      paths: [],\n\n      /* color output in the terminal */\n      color: true,\n\n      /* The strictImports controls whether the compiler will allow an @import inside of either\r\n       * @media blocks or (a later addition) other selector blocks.\r\n       * See: https://github.com/less/less.js/issues/656 */\n      strictImports: false,\n\n      /* Allow Imports from Insecure HTTPS Hosts */\n      insecure: false,\n\n      /* Allows you to add a path to every generated import and url in your css.\r\n       * This does not affect less import statements that are processed, just ones\r\n       * that are left in the output css. */\n      rootpath: '',\n\n      /* By default URLs are kept as-is, so if you import a file in a sub-directory\r\n       * that references an image, exactly the same URL will be output in the css.\r\n       * This option allows you to re-write URL's in imported files so that the\r\n       * URL is always relative to the base imported file */\n      rewriteUrls: false,\n\n      /* How to process math\r\n       *   0 always           - eagerly try to solve all operations\r\n       *   1 parens-division  - require parens for division \"/\"\r\n       *   2 parens | strict  - require parens for all operations\r\n       *   3 strict-legacy    - legacy strict behavior (super-strict)\r\n       */\n      math: 1,\n\n      /* Without this option, less attempts to guess at the output unit when it does maths. */\n      strictUnits: false,\n\n      /* Effectively the declaration is put at the top of your base Less file,\r\n       * meaning it can be used but it also can be overridden if this variable\r\n       * is defined in the file. */\n      globalVars: null,\n\n      /* As opposed to the global variable option, this puts the declaration at the\r\n       * end of your base file, meaning it will override anything defined in your Less file. */\n      modifyVars: null,\n\n      /* This option allows you to specify a argument to go on to every URL.  */\n      urlArgs: ''\n    };\n  }\n\n  function extractId(href) {\n    return href.replace(/^[a-z-]+:\\/+?[^\\/]+/, '') // Remove protocol & domain\n    .replace(/[\\?\\&]livereload=\\w+/, '') // Remove LiveReload cachebuster\n    .replace(/^\\//, '') // Remove root /\n    .replace(/\\.[a-zA-Z]+$/, '') // Remove simple extension\n    .replace(/[^\\.\\w-]+/g, '-') // Replace illegal characters\n    .replace(/\\./g, ':'); // Replace dots with colons(for valid id)\n  }\n\n  function addDataAttr(options, tag) {\n    for (var opt in tag.dataset) {\n      if (tag.dataset.hasOwnProperty(opt)) {\n        if (opt === 'env' || opt === 'dumpLineNumbers' || opt === 'rootpath' || opt === 'errorReporting') {\n          options[opt] = tag.dataset[opt];\n        } else {\n          try {\n            options[opt] = JSON.parse(tag.dataset[opt]);\n          } catch (_) {}\n        }\n      }\n    }\n  }\n\n  var browser = {\n    createCSS: function createCSS(document, styles, sheet) {\n      // Strip the query-string\n      var href = sheet.href || ''; // If there is no title set, use the filename, minus the extension\n\n      var id = \"less:\" + (sheet.title || extractId(href)); // If this has already been inserted into the DOM, we may need to replace it\n\n      var oldStyleNode = document.getElementById(id);\n      var keepOldStyleNode = false; // Create a new stylesheet node for insertion or (if necessary) replacement\n\n      var styleNode = document.createElement('style');\n      styleNode.setAttribute('type', 'text/css');\n\n      if (sheet.media) {\n        styleNode.setAttribute('media', sheet.media);\n      }\n\n      styleNode.id = id;\n\n      if (!styleNode.styleSheet) {\n        styleNode.appendChild(document.createTextNode(styles)); // If new contents match contents of oldStyleNode, don't replace oldStyleNode\n\n        keepOldStyleNode = oldStyleNode !== null && oldStyleNode.childNodes.length > 0 && styleNode.childNodes.length > 0 && oldStyleNode.firstChild.nodeValue === styleNode.firstChild.nodeValue;\n      }\n\n      var head = document.getElementsByTagName('head')[0]; // If there is no oldStyleNode, just append; otherwise, only append if we need\n      // to replace oldStyleNode with an updated stylesheet\n\n      if (oldStyleNode === null || keepOldStyleNode === false) {\n        var nextEl = sheet && sheet.nextSibling || null;\n\n        if (nextEl) {\n          nextEl.parentNode.insertBefore(styleNode, nextEl);\n        } else {\n          head.appendChild(styleNode);\n        }\n      }\n\n      if (oldStyleNode && keepOldStyleNode === false) {\n        oldStyleNode.parentNode.removeChild(oldStyleNode);\n      } // For IE.\n      // This needs to happen *after* the style element is added to the DOM, otherwise IE 7 and 8 may crash.\n      // See http://social.msdn.microsoft.com/Forums/en-US/7e081b65-878a-4c22-8e68-c10d39c2ed32/internet-explorer-crashes-appending-style-element-to-head\n\n\n      if (styleNode.styleSheet) {\n        try {\n          styleNode.styleSheet.cssText = styles;\n        } catch (e) {\n          throw new Error('Couldn\\'t reassign styleSheet.cssText.');\n        }\n      }\n    },\n    currentScript: function currentScript(window) {\n      var document = window.document;\n      return document.currentScript || function () {\n        var scripts = document.getElementsByTagName('script');\n        return scripts[scripts.length - 1];\n      }();\n    }\n  };\n\n  var addDefaultOptions = function addDefaultOptions(window, options) {\n    // use options from the current script tag data attribues\n    addDataAttr(options, browser.currentScript(window));\n\n    if (options.isFileProtocol === undefined) {\n      options.isFileProtocol = /^(file|(chrome|safari)(-extension)?|resource|qrc|app):/.test(window.location.protocol);\n    } // Load styles asynchronously (default: false)\n    //\n    // This is set to `false` by default, so that the body\n    // doesn't start loading before the stylesheets are parsed.\n    // Setting this to `true` can result in flickering.\n    //\n\n\n    options.async = options.async || false;\n    options.fileAsync = options.fileAsync || false; // Interval between watch polls\n\n    options.poll = options.poll || (options.isFileProtocol ? 1000 : 1500);\n    options.env = options.env || (window.location.hostname == '127.0.0.1' || window.location.hostname == '0.0.0.0' || window.location.hostname == 'localhost' || window.location.port && window.location.port.length > 0 || options.isFileProtocol ? 'development' : 'production');\n    var dumpLineNumbers = /!dumpLineNumbers:(comments|mediaquery|all)/.exec(window.location.hash);\n\n    if (dumpLineNumbers) {\n      options.dumpLineNumbers = dumpLineNumbers[1];\n    }\n\n    if (options.useFileCache === undefined) {\n      options.useFileCache = true;\n    }\n\n    if (options.onReady === undefined) {\n      options.onReady = true;\n    }\n\n    if (options.relativeUrls) {\n      options.rewriteUrls = 'all';\n    }\n  };\n\n  var logger$1 = {\n    error: function error(msg) {\n      this._fireEvent('error', msg);\n    },\n    warn: function warn(msg) {\n      this._fireEvent('warn', msg);\n    },\n    info: function info(msg) {\n      this._fireEvent('info', msg);\n    },\n    debug: function debug(msg) {\n      this._fireEvent('debug', msg);\n    },\n    addListener: function addListener(listener) {\n      this._listeners.push(listener);\n    },\n    removeListener: function removeListener(listener) {\n      for (var i = 0; i < this._listeners.length; i++) {\n        if (this._listeners[i] === listener) {\n          this._listeners.splice(i, 1);\n\n          return;\n        }\n      }\n    },\n    _fireEvent: function _fireEvent(type, msg) {\n      for (var i = 0; i < this._listeners.length; i++) {\n        var logFunction = this._listeners[i][type];\n\n        if (logFunction) {\n          logFunction(msg);\n        }\n      }\n    },\n    _listeners: []\n  };\n  /**\r\n   * @todo Document why this abstraction exists, and the relationship between\r\n   *       environment, file managers, and plugin manager\r\n   */\n\n  var Environment =\n  /** @class */\n  function () {\n    function Environment(externalEnvironment, fileManagers) {\n      this.fileManagers = fileManagers || [];\n      externalEnvironment = externalEnvironment || {};\n      var optionalFunctions = ['encodeBase64', 'mimeLookup', 'charsetLookup', 'getSourceMapGenerator'];\n      var requiredFunctions = [];\n      var functions = requiredFunctions.concat(optionalFunctions);\n\n      for (var i = 0; i < functions.length; i++) {\n        var propName = functions[i];\n        var environmentFunc = externalEnvironment[propName];\n\n        if (environmentFunc) {\n          this[propName] = environmentFunc.bind(externalEnvironment);\n        } else if (i < requiredFunctions.length) {\n          this.warn(\"missing required function in environment - \" + propName);\n        }\n      }\n    }\n\n    Environment.prototype.getFileManager = function (filename, currentDirectory, options, environment, isSync) {\n      if (!filename) {\n        logger$1.warn('getFileManager called with no filename.. Please report this issue. continuing.');\n      }\n\n      if (currentDirectory == null) {\n        logger$1.warn('getFileManager called with null directory.. Please report this issue. continuing.');\n      }\n\n      var fileManagers = this.fileManagers;\n\n      if (options.pluginManager) {\n        fileManagers = [].concat(fileManagers).concat(options.pluginManager.getFileManagers());\n      }\n\n      for (var i = fileManagers.length - 1; i >= 0; i--) {\n        var fileManager = fileManagers[i];\n\n        if (fileManager[isSync ? 'supportsSync' : 'supports'](filename, currentDirectory, options, environment)) {\n          return fileManager;\n        }\n      }\n\n      return null;\n    };\n\n    Environment.prototype.addFileManager = function (fileManager) {\n      this.fileManagers.push(fileManager);\n    };\n\n    Environment.prototype.clearFileManagers = function () {\n      this.fileManagers = [];\n    };\n\n    return Environment;\n  }();\n\n  var colors = {\n    'aliceblue': '#f0f8ff',\n    'antiquewhite': '#faebd7',\n    'aqua': '#00ffff',\n    'aquamarine': '#7fffd4',\n    'azure': '#f0ffff',\n    'beige': '#f5f5dc',\n    'bisque': '#ffe4c4',\n    'black': '#000000',\n    'blanchedalmond': '#ffebcd',\n    'blue': '#0000ff',\n    'blueviolet': '#8a2be2',\n    'brown': '#a52a2a',\n    'burlywood': '#deb887',\n    'cadetblue': '#5f9ea0',\n    'chartreuse': '#7fff00',\n    'chocolate': '#d2691e',\n    'coral': '#ff7f50',\n    'cornflowerblue': '#6495ed',\n    'cornsilk': '#fff8dc',\n    'crimson': '#dc143c',\n    'cyan': '#00ffff',\n    'darkblue': '#00008b',\n    'darkcyan': '#008b8b',\n    'darkgoldenrod': '#b8860b',\n    'darkgray': '#a9a9a9',\n    'darkgrey': '#a9a9a9',\n    'darkgreen': '#006400',\n    'darkkhaki': '#bdb76b',\n    'darkmagenta': '#8b008b',\n    'darkolivegreen': '#556b2f',\n    'darkorange': '#ff8c00',\n    'darkorchid': '#9932cc',\n    'darkred': '#8b0000',\n    'darksalmon': '#e9967a',\n    'darkseagreen': '#8fbc8f',\n    'darkslateblue': '#483d8b',\n    'darkslategray': '#2f4f4f',\n    'darkslategrey': '#2f4f4f',\n    'darkturquoise': '#00ced1',\n    'darkviolet': '#9400d3',\n    'deeppink': '#ff1493',\n    'deepskyblue': '#00bfff',\n    'dimgray': '#696969',\n    'dimgrey': '#696969',\n    'dodgerblue': '#1e90ff',\n    'firebrick': '#b22222',\n    'floralwhite': '#fffaf0',\n    'forestgreen': '#228b22',\n    'fuchsia': '#ff00ff',\n    'gainsboro': '#dcdcdc',\n    'ghostwhite': '#f8f8ff',\n    'gold': '#ffd700',\n    'goldenrod': '#daa520',\n    'gray': '#808080',\n    'grey': '#808080',\n    'green': '#008000',\n    'greenyellow': '#adff2f',\n    'honeydew': '#f0fff0',\n    'hotpink': '#ff69b4',\n    'indianred': '#cd5c5c',\n    'indigo': '#4b0082',\n    'ivory': '#fffff0',\n    'khaki': '#f0e68c',\n    'lavender': '#e6e6fa',\n    'lavenderblush': '#fff0f5',\n    'lawngreen': '#7cfc00',\n    'lemonchiffon': '#fffacd',\n    'lightblue': '#add8e6',\n    'lightcoral': '#f08080',\n    'lightcyan': '#e0ffff',\n    'lightgoldenrodyellow': '#fafad2',\n    'lightgray': '#d3d3d3',\n    'lightgrey': '#d3d3d3',\n    'lightgreen': '#90ee90',\n    'lightpink': '#ffb6c1',\n    'lightsalmon': '#ffa07a',\n    'lightseagreen': '#20b2aa',\n    'lightskyblue': '#87cefa',\n    'lightslategray': '#778899',\n    'lightslategrey': '#778899',\n    'lightsteelblue': '#b0c4de',\n    'lightyellow': '#ffffe0',\n    'lime': '#00ff00',\n    'limegreen': '#32cd32',\n    'linen': '#faf0e6',\n    'magenta': '#ff00ff',\n    'maroon': '#800000',\n    'mediumaquamarine': '#66cdaa',\n    'mediumblue': '#0000cd',\n    'mediumorchid': '#ba55d3',\n    'mediumpurple': '#9370d8',\n    'mediumseagreen': '#3cb371',\n    'mediumslateblue': '#7b68ee',\n    'mediumspringgreen': '#00fa9a',\n    'mediumturquoise': '#48d1cc',\n    'mediumvioletred': '#c71585',\n    'midnightblue': '#191970',\n    'mintcream': '#f5fffa',\n    'mistyrose': '#ffe4e1',\n    'moccasin': '#ffe4b5',\n    'navajowhite': '#ffdead',\n    'navy': '#000080',\n    'oldlace': '#fdf5e6',\n    'olive': '#808000',\n    'olivedrab': '#6b8e23',\n    'orange': '#ffa500',\n    'orangered': '#ff4500',\n    'orchid': '#da70d6',\n    'palegoldenrod': '#eee8aa',\n    'palegreen': '#98fb98',\n    'paleturquoise': '#afeeee',\n    'palevioletred': '#d87093',\n    'papayawhip': '#ffefd5',\n    'peachpuff': '#ffdab9',\n    'peru': '#cd853f',\n    'pink': '#ffc0cb',\n    'plum': '#dda0dd',\n    'powderblue': '#b0e0e6',\n    'purple': '#800080',\n    'rebeccapurple': '#663399',\n    'red': '#ff0000',\n    'rosybrown': '#bc8f8f',\n    'royalblue': '#4169e1',\n    'saddlebrown': '#8b4513',\n    'salmon': '#fa8072',\n    'sandybrown': '#f4a460',\n    'seagreen': '#2e8b57',\n    'seashell': '#fff5ee',\n    'sienna': '#a0522d',\n    'silver': '#c0c0c0',\n    'skyblue': '#87ceeb',\n    'slateblue': '#6a5acd',\n    'slategray': '#708090',\n    'slategrey': '#708090',\n    'snow': '#fffafa',\n    'springgreen': '#00ff7f',\n    'steelblue': '#4682b4',\n    'tan': '#d2b48c',\n    'teal': '#008080',\n    'thistle': '#d8bfd8',\n    'tomato': '#ff6347',\n    'turquoise': '#40e0d0',\n    'violet': '#ee82ee',\n    'wheat': '#f5deb3',\n    'white': '#ffffff',\n    'whitesmoke': '#f5f5f5',\n    'yellow': '#ffff00',\n    'yellowgreen': '#9acd32'\n  };\n  var unitConversions = {\n    length: {\n      'm': 1,\n      'cm': 0.01,\n      'mm': 0.001,\n      'in': 0.0254,\n      'px': 0.0254 / 96,\n      'pt': 0.0254 / 72,\n      'pc': 0.0254 / 72 * 12\n    },\n    duration: {\n      's': 1,\n      'ms': 0.001\n    },\n    angle: {\n      'rad': 1 / (2 * Math.PI),\n      'deg': 1 / 360,\n      'grad': 1 / 400,\n      'turn': 1\n    }\n  };\n  var data = {\n    colors: colors,\n    unitConversions: unitConversions\n  };\n  /**\r\n   * The reason why Node is a class and other nodes simply do not extend\r\n   * from Node (since we're transpiling) is due to this issue:\r\n   *\r\n   * https://github.com/less/less.js/issues/3434\r\n   */\n\n  var Node =\n  /** @class */\n  function () {\n    function Node() {\n      this.parent = null;\n      this.visibilityBlocks = undefined;\n      this.nodeVisible = undefined;\n      this.rootNode = null;\n      this.parsed = null;\n    }\n\n    Object.defineProperty(Node.prototype, \"currentFileInfo\", {\n      get: function get() {\n        return this.fileInfo();\n      },\n      enumerable: false,\n      configurable: true\n    });\n    Object.defineProperty(Node.prototype, \"index\", {\n      get: function get() {\n        return this.getIndex();\n      },\n      enumerable: false,\n      configurable: true\n    });\n\n    Node.prototype.setParent = function (nodes, parent) {\n      function set(node) {\n        if (node && node instanceof Node) {\n          node.parent = parent;\n        }\n      }\n\n      if (Array.isArray(nodes)) {\n        nodes.forEach(set);\n      } else {\n        set(nodes);\n      }\n    };\n\n    Node.prototype.getIndex = function () {\n      return this._index || this.parent && this.parent.getIndex() || 0;\n    };\n\n    Node.prototype.fileInfo = function () {\n      return this._fileInfo || this.parent && this.parent.fileInfo() || {};\n    };\n\n    Node.prototype.isRulesetLike = function () {\n      return false;\n    };\n\n    Node.prototype.toCSS = function (context) {\n      var strs = [];\n      this.genCSS(context, {\n        add: function add(chunk, fileInfo, index) {\n          strs.push(chunk);\n        },\n        isEmpty: function isEmpty() {\n          return strs.length === 0;\n        }\n      });\n      return strs.join('');\n    };\n\n    Node.prototype.genCSS = function (context, output) {\n      output.add(this.value);\n    };\n\n    Node.prototype.accept = function (visitor) {\n      this.value = visitor.visit(this.value);\n    };\n\n    Node.prototype.eval = function () {\n      return this;\n    };\n\n    Node.prototype._operate = function (context, op, a, b) {\n      switch (op) {\n        case '+':\n          return a + b;\n\n        case '-':\n          return a - b;\n\n        case '*':\n          return a * b;\n\n        case '/':\n          return a / b;\n      }\n    };\n\n    Node.prototype.fround = function (context, value) {\n      var precision = context && context.numPrecision; // add \"epsilon\" to ensure numbers like 1.000000005 (represented as 1.000000004999...) are properly rounded:\n\n      return precision ? Number((value + 2e-16).toFixed(precision)) : value;\n    };\n\n    Node.compare = function (a, b) {\n      /* returns:\r\n       -1: a < b\r\n       0: a = b\r\n       1: a > b\r\n       and *any* other value for a != b (e.g. undefined, NaN, -2 etc.) */\n      if (a.compare && // for \"symmetric results\" force toCSS-based comparison\n      // of Quoted or Anonymous if either value is one of those\n      !(b.type === 'Quoted' || b.type === 'Anonymous')) {\n        return a.compare(b);\n      } else if (b.compare) {\n        return -b.compare(a);\n      } else if (a.type !== b.type) {\n        return undefined;\n      }\n\n      a = a.value;\n      b = b.value;\n\n      if (!Array.isArray(a)) {\n        return a === b ? 0 : undefined;\n      }\n\n      if (a.length !== b.length) {\n        return undefined;\n      }\n\n      for (var i = 0; i < a.length; i++) {\n        if (Node.compare(a[i], b[i]) !== 0) {\n          return undefined;\n        }\n      }\n\n      return 0;\n    };\n\n    Node.numericCompare = function (a, b) {\n      return a < b ? -1 : a === b ? 0 : a > b ? 1 : undefined;\n    }; // Returns true if this node represents root of ast imported by reference\n\n\n    Node.prototype.blocksVisibility = function () {\n      if (this.visibilityBlocks == null) {\n        this.visibilityBlocks = 0;\n      }\n\n      return this.visibilityBlocks !== 0;\n    };\n\n    Node.prototype.addVisibilityBlock = function () {\n      if (this.visibilityBlocks == null) {\n        this.visibilityBlocks = 0;\n      }\n\n      this.visibilityBlocks = this.visibilityBlocks + 1;\n    };\n\n    Node.prototype.removeVisibilityBlock = function () {\n      if (this.visibilityBlocks == null) {\n        this.visibilityBlocks = 0;\n      }\n\n      this.visibilityBlocks = this.visibilityBlocks - 1;\n    }; // Turns on node visibility - if called node will be shown in output regardless\n    // of whether it comes from import by reference or not\n\n\n    Node.prototype.ensureVisibility = function () {\n      this.nodeVisible = true;\n    }; // Turns off node visibility - if called node will NOT be shown in output regardless\n    // of whether it comes from import by reference or not\n\n\n    Node.prototype.ensureInvisibility = function () {\n      this.nodeVisible = false;\n    }; // return values:\n    // false - the node must not be visible\n    // true - the node must be visible\n    // undefined or null - the node has the same visibility as its parent\n\n\n    Node.prototype.isVisible = function () {\n      return this.nodeVisible;\n    };\n\n    Node.prototype.visibilityInfo = function () {\n      return {\n        visibilityBlocks: this.visibilityBlocks,\n        nodeVisible: this.nodeVisible\n      };\n    };\n\n    Node.prototype.copyVisibilityInfo = function (info) {\n      if (!info) {\n        return;\n      }\n\n      this.visibilityBlocks = info.visibilityBlocks;\n      this.nodeVisible = info.nodeVisible;\n    };\n\n    return Node;\n  }(); //\n  // RGB Colors - #ff0014, #eee\n  //\n\n\n  var Color = function Color(rgb, a, originalForm) {\n    var self = this; //\n    // The end goal here, is to parse the arguments\n    // into an integer triplet, such as `128, 255, 0`\n    //\n    // This facilitates operations and conversions.\n    //\n\n    if (Array.isArray(rgb)) {\n      this.rgb = rgb;\n    } else if (rgb.length >= 6) {\n      this.rgb = [];\n      rgb.match(/.{2}/g).map(function (c, i) {\n        if (i < 3) {\n          self.rgb.push(parseInt(c, 16));\n        } else {\n          self.alpha = parseInt(c, 16) / 255;\n        }\n      });\n    } else {\n      this.rgb = [];\n      rgb.split('').map(function (c, i) {\n        if (i < 3) {\n          self.rgb.push(parseInt(c + c, 16));\n        } else {\n          self.alpha = parseInt(c + c, 16) / 255;\n        }\n      });\n    }\n\n    this.alpha = this.alpha || (typeof a === 'number' ? a : 1);\n\n    if (typeof originalForm !== 'undefined') {\n      this.value = originalForm;\n    }\n  };\n\n  Color.prototype = Object.assign(new Node(), {\n    type: 'Color',\n    luma: function luma() {\n      var r = this.rgb[0] / 255,\n          g = this.rgb[1] / 255,\n          b = this.rgb[2] / 255;\n      r = r <= 0.03928 ? r / 12.92 : Math.pow((r + 0.055) / 1.055, 2.4);\n      g = g <= 0.03928 ? g / 12.92 : Math.pow((g + 0.055) / 1.055, 2.4);\n      b = b <= 0.03928 ? b / 12.92 : Math.pow((b + 0.055) / 1.055, 2.4);\n      return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n    },\n    genCSS: function genCSS(context, output) {\n      output.add(this.toCSS(context));\n    },\n    toCSS: function toCSS(context, doNotCompress) {\n      var compress = context && context.compress && !doNotCompress;\n      var color;\n      var alpha;\n      var colorFunction;\n      var args = []; // `value` is set if this color was originally\n      // converted from a named color string so we need\n      // to respect this and try to output named color too.\n\n      alpha = this.fround(context, this.alpha);\n\n      if (this.value) {\n        if (this.value.indexOf('rgb') === 0) {\n          if (alpha < 1) {\n            colorFunction = 'rgba';\n          }\n        } else if (this.value.indexOf('hsl') === 0) {\n          if (alpha < 1) {\n            colorFunction = 'hsla';\n          } else {\n            colorFunction = 'hsl';\n          }\n        } else {\n          return this.value;\n        }\n      } else {\n        if (alpha < 1) {\n          colorFunction = 'rgba';\n        }\n      }\n\n      switch (colorFunction) {\n        case 'rgba':\n          args = this.rgb.map(function (c) {\n            return clamp$1(Math.round(c), 255);\n          }).concat(clamp$1(alpha, 1));\n          break;\n\n        case 'hsla':\n          args.push(clamp$1(alpha, 1));\n\n        case 'hsl':\n          color = this.toHSL();\n          args = [this.fround(context, color.h), this.fround(context, color.s * 100) + \"%\", this.fround(context, color.l * 100) + \"%\"].concat(args);\n      }\n\n      if (colorFunction) {\n        // Values are capped between `0` and `255`, rounded and zero-padded.\n        return colorFunction + \"(\" + args.join(\",\" + (compress ? '' : ' ')) + \")\";\n      }\n\n      color = this.toRGB();\n\n      if (compress) {\n        var splitcolor = color.split(''); // Convert color to short format\n\n        if (splitcolor[1] === splitcolor[2] && splitcolor[3] === splitcolor[4] && splitcolor[5] === splitcolor[6]) {\n          color = \"#\" + splitcolor[1] + splitcolor[3] + splitcolor[5];\n        }\n      }\n\n      return color;\n    },\n    //\n    // Operations have to be done per-channel, if not,\n    // channels will spill onto each other. Once we have\n    // our result, in the form of an integer triplet,\n    // we create a new Color node to hold the result.\n    //\n    operate: function operate(context, op, other) {\n      var rgb = new Array(3);\n      var alpha = this.alpha * (1 - other.alpha) + other.alpha;\n\n      for (var c = 0; c < 3; c++) {\n        rgb[c] = this._operate(context, op, this.rgb[c], other.rgb[c]);\n      }\n\n      return new Color(rgb, alpha);\n    },\n    toRGB: function toRGB() {\n      return toHex(this.rgb);\n    },\n    toHSL: function toHSL() {\n      var r = this.rgb[0] / 255,\n          g = this.rgb[1] / 255,\n          b = this.rgb[2] / 255,\n          a = this.alpha;\n      var max = Math.max(r, g, b),\n          min = Math.min(r, g, b);\n      var h;\n      var s;\n      var l = (max + min) / 2;\n      var d = max - min;\n\n      if (max === min) {\n        h = s = 0;\n      } else {\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0);\n            break;\n\n          case g:\n            h = (b - r) / d + 2;\n            break;\n\n          case b:\n            h = (r - g) / d + 4;\n            break;\n        }\n\n        h /= 6;\n      }\n\n      return {\n        h: h * 360,\n        s: s,\n        l: l,\n        a: a\n      };\n    },\n    // Adapted from http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript\n    toHSV: function toHSV() {\n      var r = this.rgb[0] / 255,\n          g = this.rgb[1] / 255,\n          b = this.rgb[2] / 255,\n          a = this.alpha;\n      var max = Math.max(r, g, b),\n          min = Math.min(r, g, b);\n      var h;\n      var s;\n      var v = max;\n      var d = max - min;\n\n      if (max === 0) {\n        s = 0;\n      } else {\n        s = d / max;\n      }\n\n      if (max === min) {\n        h = 0;\n      } else {\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0);\n            break;\n\n          case g:\n            h = (b - r) / d + 2;\n            break;\n\n          case b:\n            h = (r - g) / d + 4;\n            break;\n        }\n\n        h /= 6;\n      }\n\n      return {\n        h: h * 360,\n        s: s,\n        v: v,\n        a: a\n      };\n    },\n    toARGB: function toARGB() {\n      return toHex([this.alpha * 255].concat(this.rgb));\n    },\n    compare: function compare(x) {\n      return x.rgb && x.rgb[0] === this.rgb[0] && x.rgb[1] === this.rgb[1] && x.rgb[2] === this.rgb[2] && x.alpha === this.alpha ? 0 : undefined;\n    }\n  });\n\n  Color.fromKeyword = function (keyword) {\n    var c;\n    var key = keyword.toLowerCase();\n\n    if (colors.hasOwnProperty(key)) {\n      c = new Color(colors[key].slice(1));\n    } else if (key === 'transparent') {\n      c = new Color([0, 0, 0], 0);\n    }\n\n    if (c) {\n      c.value = keyword;\n      return c;\n    }\n  };\n\n  function clamp$1(v, max) {\n    return Math.min(Math.max(v, 0), max);\n  }\n\n  function toHex(v) {\n    return \"#\" + v.map(function (c) {\n      c = clamp$1(Math.round(c), 255);\n      return (c < 16 ? '0' : '') + c.toString(16);\n    }).join('');\n  }\n\n  var Paren = function Paren(node) {\n    this.value = node;\n  };\n\n  Paren.prototype = Object.assign(new Node(), {\n    type: 'Paren',\n    genCSS: function genCSS(context, output) {\n      output.add('(');\n      this.value.genCSS(context, output);\n      output.add(')');\n    },\n    eval: function _eval(context) {\n      return new Paren(this.value.eval(context));\n    }\n  });\n  var _noSpaceCombinators = {\n    '': true,\n    ' ': true,\n    '|': true\n  };\n\n  var Combinator = function Combinator(value) {\n    if (value === ' ') {\n      this.value = ' ';\n      this.emptyOrWhitespace = true;\n    } else {\n      this.value = value ? value.trim() : '';\n      this.emptyOrWhitespace = this.value === '';\n    }\n  };\n\n  Combinator.prototype = Object.assign(new Node(), {\n    type: 'Combinator',\n    genCSS: function genCSS(context, output) {\n      var spaceOrEmpty = context.compress || _noSpaceCombinators[this.value] ? '' : ' ';\n      output.add(spaceOrEmpty + this.value + spaceOrEmpty);\n    }\n  });\n\n  var Element = function Element(combinator, value, isVariable, index, currentFileInfo, visibilityInfo) {\n    this.combinator = combinator instanceof Combinator ? combinator : new Combinator(combinator);\n\n    if (typeof value === 'string') {\n      this.value = value.trim();\n    } else if (value) {\n      this.value = value;\n    } else {\n      this.value = '';\n    }\n\n    this.isVariable = isVariable;\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    this.copyVisibilityInfo(visibilityInfo);\n    this.setParent(this.combinator, this);\n  };\n\n  Element.prototype = Object.assign(new Node(), {\n    type: 'Element',\n    accept: function accept(visitor) {\n      var value = this.value;\n      this.combinator = visitor.visit(this.combinator);\n\n      if (typeof value === 'object') {\n        this.value = visitor.visit(value);\n      }\n    },\n    eval: function _eval(context) {\n      return new Element(this.combinator, this.value.eval ? this.value.eval(context) : this.value, this.isVariable, this.getIndex(), this.fileInfo(), this.visibilityInfo());\n    },\n    clone: function clone() {\n      return new Element(this.combinator, this.value, this.isVariable, this.getIndex(), this.fileInfo(), this.visibilityInfo());\n    },\n    genCSS: function genCSS(context, output) {\n      output.add(this.toCSS(context), this.fileInfo(), this.getIndex());\n    },\n    toCSS: function toCSS(context) {\n      context = context || {};\n      var value = this.value;\n      var firstSelector = context.firstSelector;\n\n      if (value instanceof Paren) {\n        // selector in parens should not be affected by outer selector\n        // flags (breaks only interpolated selectors - see #1973)\n        context.firstSelector = true;\n      }\n\n      value = value.toCSS ? value.toCSS(context) : value;\n      context.firstSelector = firstSelector;\n\n      if (value === '' && this.combinator.value.charAt(0) === '&') {\n        return '';\n      } else {\n        return this.combinator.toCSS(context) + value;\n      }\n    }\n  });\n  var Math$1 = {\n    ALWAYS: 0,\n    PARENS_DIVISION: 1,\n    PARENS: 2 // removed - STRICT_LEGACY: 3\n\n  };\n  var RewriteUrls = {\n    OFF: 0,\n    LOCAL: 1,\n    ALL: 2\n  };\n  /**\r\n   * Returns the object type of the given payload\r\n   *\r\n   * @param {*} payload\r\n   * @returns {string}\r\n   */\n\n  function getType(payload) {\n    return Object.prototype.toString.call(payload).slice(8, -1);\n  }\n  /**\r\n   * Returns whether the payload is a plain JavaScript object (excluding special classes or objects with other prototypes)\r\n   *\r\n   * @param {*} payload\r\n   * @returns {payload is Record<string, any>}\r\n   */\n\n\n  function isPlainObject(payload) {\n    if (getType(payload) !== 'Object') return false;\n    return payload.constructor === Object && Object.getPrototypeOf(payload) === Object.prototype;\n  }\n  /**\r\n   * Returns whether the payload is an array\r\n   *\r\n   * @param {any} payload\r\n   * @returns {payload is any[]}\r\n   */\n\n\n  function isArray(payload) {\n    return getType(payload) === 'Array';\n  }\n  /*! *****************************************************************************\r\n  Copyright (c) Microsoft Corporation. All rights reserved.\r\n  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n  this file except in compliance with the License. You may obtain a copy of the\r\n  License at http://www.apache.org/licenses/LICENSE-2.0\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n  WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n  MERCHANTABLITY OR NON-INFRINGEMENT.\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n  and limitations under the License.\r\n  ***************************************************************************** */\n\n\n  function __spreadArrays() {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n      s += arguments[i].length;\n    }\n\n    for (var r = Array(s), k = 0, i = 0; i < il; i++) {\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n        r[k] = a[j];\n      }\n    }\n\n    return r;\n  }\n\n  function assignProp(carry, key, newVal, originalObject, includeNonenumerable) {\n    var propType = {}.propertyIsEnumerable.call(originalObject, key) ? 'enumerable' : 'nonenumerable';\n    if (propType === 'enumerable') carry[key] = newVal;\n\n    if (includeNonenumerable && propType === 'nonenumerable') {\n      Object.defineProperty(carry, key, {\n        value: newVal,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      });\n    }\n  }\n  /**\r\n   * Copy (clone) an object and all its props recursively to get rid of any prop referenced of the original object. Arrays are also cloned, however objects inside arrays are still linked.\r\n   *\r\n   * @export\r\n   * @template T\r\n   * @param {T} target Target can be anything\r\n   * @param {Options} [options={}] Options can be `props` or `nonenumerable`\r\n   * @returns {T} the target with replaced values\r\n   * @export\r\n   */\n\n\n  function copy(target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (isArray(target)) return target.map(function (i) {\n      return copy(i, options);\n    });\n    if (!isPlainObject(target)) return target;\n    var props = Object.getOwnPropertyNames(target);\n    var symbols = Object.getOwnPropertySymbols(target);\n    return __spreadArrays(props, symbols).reduce(function (carry, key) {\n      if (isArray(options.props) && !options.props.includes(key)) {\n        return carry;\n      }\n\n      var val = target[key];\n      var newVal = copy(val, options);\n      assignProp(carry, key, newVal, target, options.nonenumerable);\n      return carry;\n    }, {});\n  }\n  /* jshint proto: true */\n\n\n  function getLocation(index, inputStream) {\n    var n = index + 1;\n    var line = null;\n    var column = -1;\n\n    while (--n >= 0 && inputStream.charAt(n) !== '\\n') {\n      column++;\n    }\n\n    if (typeof index === 'number') {\n      line = (inputStream.slice(0, index).match(/\\n/g) || '').length;\n    }\n\n    return {\n      line: line,\n      column: column\n    };\n  }\n\n  function copyArray(arr) {\n    var i;\n    var length = arr.length;\n    var copy = new Array(length);\n\n    for (i = 0; i < length; i++) {\n      copy[i] = arr[i];\n    }\n\n    return copy;\n  }\n\n  function clone(obj) {\n    var cloned = {};\n\n    for (var prop in obj) {\n      if (obj.hasOwnProperty(prop)) {\n        cloned[prop] = obj[prop];\n      }\n    }\n\n    return cloned;\n  }\n\n  function defaults(obj1, obj2) {\n    var newObj = obj2 || {};\n\n    if (!obj2._defaults) {\n      newObj = {};\n      var defaults_1 = copy(obj1);\n      newObj._defaults = defaults_1;\n      var cloned = obj2 ? copy(obj2) : {};\n      Object.assign(newObj, defaults_1, cloned);\n    }\n\n    return newObj;\n  }\n\n  function copyOptions(obj1, obj2) {\n    if (obj2 && obj2._defaults) {\n      return obj2;\n    }\n\n    var opts = defaults(obj1, obj2);\n\n    if (opts.strictMath) {\n      opts.math = Math$1.PARENS;\n    } // Back compat with changed relativeUrls option\n\n\n    if (opts.relativeUrls) {\n      opts.rewriteUrls = RewriteUrls.ALL;\n    }\n\n    if (typeof opts.math === 'string') {\n      switch (opts.math.toLowerCase()) {\n        case 'always':\n          opts.math = Math$1.ALWAYS;\n          break;\n\n        case 'parens-division':\n          opts.math = Math$1.PARENS_DIVISION;\n          break;\n\n        case 'strict':\n        case 'parens':\n          opts.math = Math$1.PARENS;\n          break;\n\n        default:\n          opts.math = Math$1.PARENS;\n      }\n    }\n\n    if (typeof opts.rewriteUrls === 'string') {\n      switch (opts.rewriteUrls.toLowerCase()) {\n        case 'off':\n          opts.rewriteUrls = RewriteUrls.OFF;\n          break;\n\n        case 'local':\n          opts.rewriteUrls = RewriteUrls.LOCAL;\n          break;\n\n        case 'all':\n          opts.rewriteUrls = RewriteUrls.ALL;\n          break;\n      }\n    }\n\n    return opts;\n  }\n\n  function merge(obj1, obj2) {\n    for (var prop in obj2) {\n      if (obj2.hasOwnProperty(prop)) {\n        obj1[prop] = obj2[prop];\n      }\n    }\n\n    return obj1;\n  }\n\n  function flattenArray(arr, result) {\n    if (result === void 0) {\n      result = [];\n    }\n\n    for (var i = 0, length_1 = arr.length; i < length_1; i++) {\n      var value = arr[i];\n\n      if (Array.isArray(value)) {\n        flattenArray(value, result);\n      } else {\n        if (value !== undefined) {\n          result.push(value);\n        }\n      }\n    }\n\n    return result;\n  }\n\n  var utils = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    getLocation: getLocation,\n    copyArray: copyArray,\n    clone: clone,\n    defaults: defaults,\n    copyOptions: copyOptions,\n    merge: merge,\n    flattenArray: flattenArray\n  });\n  var anonymousFunc = /(<anonymous>|Function):(\\d+):(\\d+)/;\n  /**\r\n   * This is a centralized class of any error that could be thrown internally (mostly by the parser).\r\n   * Besides standard .message it keeps some additional data like a path to the file where the error\r\n   * occurred along with line and column numbers.\r\n   *\r\n   * @class\r\n   * @extends Error\r\n   * @type {module.LessError}\r\n   *\r\n   * @prop {string} type\r\n   * @prop {string} filename\r\n   * @prop {number} index\r\n   * @prop {number} line\r\n   * @prop {number} column\r\n   * @prop {number} callLine\r\n   * @prop {number} callExtract\r\n   * @prop {string[]} extract\r\n   *\r\n   * @param {Object} e              - An error object to wrap around or just a descriptive object\r\n   * @param {Object} fileContentMap - An object with file contents in 'contents' property (like importManager) @todo - move to fileManager?\r\n   * @param {string} [currentFilename]\r\n   */\n\n  var LessError = function LessError(e, fileContentMap, currentFilename) {\n    Error.call(this);\n    var filename = e.filename || currentFilename;\n    this.message = e.message;\n    this.stack = e.stack;\n\n    if (fileContentMap && filename) {\n      var input = fileContentMap.contents[filename];\n      var loc = getLocation(e.index, input);\n      var line = loc.line;\n      var col = loc.column;\n      var callLine = e.call && getLocation(e.call, input).line;\n      var lines = input ? input.split('\\n') : '';\n      this.type = e.type || 'Syntax';\n      this.filename = filename;\n      this.index = e.index;\n      this.line = typeof line === 'number' ? line + 1 : null;\n      this.column = col;\n\n      if (!this.line && this.stack) {\n        var found = this.stack.match(anonymousFunc);\n        /**\r\n         * We have to figure out how this environment stringifies anonymous functions\r\n         * so we can correctly map plugin errors.\r\n         *\r\n         * Note, in Node 8, the output of anonymous funcs varied based on parameters\r\n         * being present or not, so we inject dummy params.\r\n         */\n\n        var func = new Function('a', 'throw new Error()');\n        var lineAdjust = 0;\n\n        try {\n          func();\n        } catch (e) {\n          var match = e.stack.match(anonymousFunc);\n          var line = parseInt(match[2]);\n          lineAdjust = 1 - line;\n        }\n\n        if (found) {\n          if (found[2]) {\n            this.line = parseInt(found[2]) + lineAdjust;\n          }\n\n          if (found[3]) {\n            this.column = parseInt(found[3]);\n          }\n        }\n      }\n\n      this.callLine = callLine + 1;\n      this.callExtract = lines[callLine];\n      this.extract = [lines[this.line - 2], lines[this.line - 1], lines[this.line]];\n    }\n  };\n\n  if (typeof Object.create === 'undefined') {\n    var F = function F() {};\n\n    F.prototype = Error.prototype;\n    LessError.prototype = new F();\n  } else {\n    LessError.prototype = Object.create(Error.prototype);\n  }\n\n  LessError.prototype.constructor = LessError;\n  /**\r\n   * An overridden version of the default Object.prototype.toString\r\n   * which uses additional information to create a helpful message.\r\n   *\r\n   * @param {Object} options\r\n   * @returns {string}\r\n   */\n\n  LessError.prototype.toString = function (options) {\n    options = options || {};\n    var message = '';\n    var extract = this.extract || [];\n    var error = [];\n\n    var stylize = function stylize(str) {\n      return str;\n    };\n\n    if (options.stylize) {\n      var type = typeof options.stylize;\n\n      if (type !== 'function') {\n        throw Error(\"options.stylize should be a function, got a \" + type + \"!\");\n      }\n\n      stylize = options.stylize;\n    }\n\n    if (this.line !== null) {\n      if (typeof extract[0] === 'string') {\n        error.push(stylize(this.line - 1 + \" \" + extract[0], 'grey'));\n      }\n\n      if (typeof extract[1] === 'string') {\n        var errorTxt = this.line + \" \";\n\n        if (extract[1]) {\n          errorTxt += extract[1].slice(0, this.column) + stylize(stylize(stylize(extract[1].substr(this.column, 1), 'bold') + extract[1].slice(this.column + 1), 'red'), 'inverse');\n        }\n\n        error.push(errorTxt);\n      }\n\n      if (typeof extract[2] === 'string') {\n        error.push(stylize(this.line + 1 + \" \" + extract[2], 'grey'));\n      }\n\n      error = error.join('\\n') + stylize('', 'reset') + \"\\n\";\n    }\n\n    message += stylize(this.type + \"Error: \" + this.message, 'red');\n\n    if (this.filename) {\n      message += stylize(' in ', 'red') + this.filename;\n    }\n\n    if (this.line) {\n      message += stylize(\" on line \" + this.line + \", column \" + (this.column + 1) + \":\", 'grey');\n    }\n\n    message += \"\\n\" + error;\n\n    if (this.callLine) {\n      message += stylize('from ', 'red') + (this.filename || '') + \"/n\";\n      message += stylize(this.callLine, 'grey') + \" \" + this.callExtract + \"/n\";\n    }\n\n    return message;\n  };\n\n  var Selector = function Selector(elements, extendList, condition, index, currentFileInfo, visibilityInfo) {\n    this.extendList = extendList;\n    this.condition = condition;\n    this.evaldCondition = !condition;\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    this.elements = this.getElements(elements);\n    this.mixinElements_ = undefined;\n    this.copyVisibilityInfo(visibilityInfo);\n    this.setParent(this.elements, this);\n  };\n\n  Selector.prototype = Object.assign(new Node(), {\n    type: 'Selector',\n    accept: function accept(visitor) {\n      if (this.elements) {\n        this.elements = visitor.visitArray(this.elements);\n      }\n\n      if (this.extendList) {\n        this.extendList = visitor.visitArray(this.extendList);\n      }\n\n      if (this.condition) {\n        this.condition = visitor.visit(this.condition);\n      }\n    },\n    createDerived: function createDerived(elements, extendList, evaldCondition) {\n      elements = this.getElements(elements);\n      var newSelector = new Selector(elements, extendList || this.extendList, null, this.getIndex(), this.fileInfo(), this.visibilityInfo());\n      newSelector.evaldCondition = evaldCondition != null ? evaldCondition : this.evaldCondition;\n      newSelector.mediaEmpty = this.mediaEmpty;\n      return newSelector;\n    },\n    getElements: function getElements(els) {\n      if (!els) {\n        return [new Element('', '&', false, this._index, this._fileInfo)];\n      }\n\n      if (typeof els === 'string') {\n        this.parse.parseNode(els, ['selector'], this._index, this._fileInfo, function (err, result) {\n          if (err) {\n            throw new LessError({\n              index: err.index,\n              message: err.message\n            }, this.parse.imports, this._fileInfo.filename);\n          }\n\n          els = result[0].elements;\n        });\n      }\n\n      return els;\n    },\n    createEmptySelectors: function createEmptySelectors() {\n      var el = new Element('', '&', false, this._index, this._fileInfo),\n          sels = [new Selector([el], null, null, this._index, this._fileInfo)];\n      sels[0].mediaEmpty = true;\n      return sels;\n    },\n    match: function match(other) {\n      var elements = this.elements;\n      var len = elements.length;\n      var olen;\n      var i;\n      other = other.mixinElements();\n      olen = other.length;\n\n      if (olen === 0 || len < olen) {\n        return 0;\n      } else {\n        for (i = 0; i < olen; i++) {\n          if (elements[i].value !== other[i]) {\n            return 0;\n          }\n        }\n      }\n\n      return olen; // return number of matched elements\n    },\n    mixinElements: function mixinElements() {\n      if (this.mixinElements_) {\n        return this.mixinElements_;\n      }\n\n      var elements = this.elements.map(function (v) {\n        return v.combinator.value + (v.value.value || v.value);\n      }).join('').match(/[,&#\\*\\.\\w-]([\\w-]|(\\\\.))*/g);\n\n      if (elements) {\n        if (elements[0] === '&') {\n          elements.shift();\n        }\n      } else {\n        elements = [];\n      }\n\n      return this.mixinElements_ = elements;\n    },\n    isJustParentSelector: function isJustParentSelector() {\n      return !this.mediaEmpty && this.elements.length === 1 && this.elements[0].value === '&' && (this.elements[0].combinator.value === ' ' || this.elements[0].combinator.value === '');\n    },\n    eval: function _eval(context) {\n      var evaldCondition = this.condition && this.condition.eval(context);\n      var elements = this.elements;\n      var extendList = this.extendList;\n      elements = elements && elements.map(function (e) {\n        return e.eval(context);\n      });\n      extendList = extendList && extendList.map(function (extend) {\n        return extend.eval(context);\n      });\n      return this.createDerived(elements, extendList, evaldCondition);\n    },\n    genCSS: function genCSS(context, output) {\n      var i, element;\n\n      if ((!context || !context.firstSelector) && this.elements[0].combinator.value === '') {\n        output.add(' ', this.fileInfo(), this.getIndex());\n      }\n\n      for (i = 0; i < this.elements.length; i++) {\n        element = this.elements[i];\n        element.genCSS(context, output);\n      }\n    },\n    getIsOutput: function getIsOutput() {\n      return this.evaldCondition;\n    }\n  });\n\n  var Value = function Value(value) {\n    if (!value) {\n      throw new Error('Value requires an array argument');\n    }\n\n    if (!Array.isArray(value)) {\n      this.value = [value];\n    } else {\n      this.value = value;\n    }\n  };\n\n  Value.prototype = Object.assign(new Node(), {\n    type: 'Value',\n    accept: function accept(visitor) {\n      if (this.value) {\n        this.value = visitor.visitArray(this.value);\n      }\n    },\n    eval: function _eval(context) {\n      if (this.value.length === 1) {\n        return this.value[0].eval(context);\n      } else {\n        return new Value(this.value.map(function (v) {\n          return v.eval(context);\n        }));\n      }\n    },\n    genCSS: function genCSS(context, output) {\n      var i;\n\n      for (i = 0; i < this.value.length; i++) {\n        this.value[i].genCSS(context, output);\n\n        if (i + 1 < this.value.length) {\n          output.add(context && context.compress ? ',' : ', ');\n        }\n      }\n    }\n  });\n\n  var Keyword = function Keyword(value) {\n    this.value = value;\n  };\n\n  Keyword.prototype = Object.assign(new Node(), {\n    type: 'Keyword',\n    genCSS: function genCSS(context, output) {\n      if (this.value === '%') {\n        throw {\n          type: 'Syntax',\n          message: 'Invalid % without number'\n        };\n      }\n\n      output.add(this.value);\n    }\n  });\n  Keyword.True = new Keyword('true');\n  Keyword.False = new Keyword('false');\n\n  var Anonymous = function Anonymous(value, index, currentFileInfo, mapLines, rulesetLike, visibilityInfo) {\n    this.value = value;\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    this.mapLines = mapLines;\n    this.rulesetLike = typeof rulesetLike === 'undefined' ? false : rulesetLike;\n    this.allowRoot = true;\n    this.copyVisibilityInfo(visibilityInfo);\n  };\n\n  Anonymous.prototype = Object.assign(new Node(), {\n    type: 'Anonymous',\n    eval: function _eval() {\n      return new Anonymous(this.value, this._index, this._fileInfo, this.mapLines, this.rulesetLike, this.visibilityInfo());\n    },\n    compare: function compare(other) {\n      return other.toCSS && this.toCSS() === other.toCSS() ? 0 : undefined;\n    },\n    isRulesetLike: function isRulesetLike() {\n      return this.rulesetLike;\n    },\n    genCSS: function genCSS(context, output) {\n      this.nodeVisible = Boolean(this.value);\n\n      if (this.nodeVisible) {\n        output.add(this.value, this._fileInfo, this._index, this.mapLines);\n      }\n    }\n  });\n  var MATH$1 = Math$1;\n\n  function evalName(context, name) {\n    var value = '';\n    var i;\n    var n = name.length;\n    var output = {\n      add: function add(s) {\n        value += s;\n      }\n    };\n\n    for (i = 0; i < n; i++) {\n      name[i].eval(context).genCSS(context, output);\n    }\n\n    return value;\n  }\n\n  var Declaration = function Declaration(name, value, important, merge, index, currentFileInfo, inline, variable) {\n    this.name = name;\n    this.value = value instanceof Node ? value : new Value([value ? new Anonymous(value) : null]);\n    this.important = important ? \" \" + important.trim() : '';\n    this.merge = merge;\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    this.inline = inline || false;\n    this.variable = variable !== undefined ? variable : name.charAt && name.charAt(0) === '@';\n    this.allowRoot = true;\n    this.setParent(this.value, this);\n  };\n\n  Declaration.prototype = Object.assign(new Node(), {\n    type: 'Declaration',\n    genCSS: function genCSS(context, output) {\n      output.add(this.name + (context.compress ? ':' : ': '), this.fileInfo(), this.getIndex());\n\n      try {\n        this.value.genCSS(context, output);\n      } catch (e) {\n        e.index = this._index;\n        e.filename = this._fileInfo.filename;\n        throw e;\n      }\n\n      output.add(this.important + (this.inline || context.lastRule && context.compress ? '' : ';'), this._fileInfo, this._index);\n    },\n    eval: function _eval(context) {\n      var mathBypass = false,\n          prevMath,\n          name = this.name,\n          evaldValue,\n          variable = this.variable;\n\n      if (typeof name !== 'string') {\n        // expand 'primitive' name directly to get\n        // things faster (~10% for benchmark.less):\n        name = name.length === 1 && name[0] instanceof Keyword ? name[0].value : evalName(context, name);\n        variable = false; // never treat expanded interpolation as new variable name\n      } // @todo remove when parens-division is default\n\n\n      if (name === 'font' && context.math === MATH$1.ALWAYS) {\n        mathBypass = true;\n        prevMath = context.math;\n        context.math = MATH$1.PARENS_DIVISION;\n      }\n\n      try {\n        context.importantScope.push({});\n        evaldValue = this.value.eval(context);\n\n        if (!this.variable && evaldValue.type === 'DetachedRuleset') {\n          throw {\n            message: 'Rulesets cannot be evaluated on a property.',\n            index: this.getIndex(),\n            filename: this.fileInfo().filename\n          };\n        }\n\n        var important = this.important;\n        var importantResult = context.importantScope.pop();\n\n        if (!important && importantResult.important) {\n          important = importantResult.important;\n        }\n\n        return new Declaration(name, evaldValue, important, this.merge, this.getIndex(), this.fileInfo(), this.inline, variable);\n      } catch (e) {\n        if (typeof e.index !== 'number') {\n          e.index = this.getIndex();\n          e.filename = this.fileInfo().filename;\n        }\n\n        throw e;\n      } finally {\n        if (mathBypass) {\n          context.math = prevMath;\n        }\n      }\n    },\n    makeImportant: function makeImportant() {\n      return new Declaration(this.name, this.value, '!important', this.merge, this.getIndex(), this.fileInfo(), this.inline);\n    }\n  });\n\n  var debugInfo =\n  /** @class */\n  function () {\n    function debugInfo(context, ctx, lineSeparator) {\n      var result = '';\n\n      if (context.dumpLineNumbers && !context.compress) {\n        switch (context.dumpLineNumbers) {\n          case 'comments':\n            result = debugInfo.asComment(ctx);\n            break;\n\n          case 'mediaquery':\n            result = debugInfo.asMediaQuery(ctx);\n            break;\n\n          case 'all':\n            result = debugInfo.asComment(ctx) + (lineSeparator || '') + debugInfo.asMediaQuery(ctx);\n            break;\n        }\n      }\n\n      return result;\n    }\n\n    debugInfo.asComment = function (ctx) {\n      return \"/* line \" + ctx.debugInfo.lineNumber + \", \" + ctx.debugInfo.fileName + \" */\\n\";\n    };\n\n    debugInfo.asMediaQuery = function (ctx) {\n      var filenameWithProtocol = ctx.debugInfo.fileName;\n\n      if (!/^[a-z]+:\\/\\//i.test(filenameWithProtocol)) {\n        filenameWithProtocol = \"file://\" + filenameWithProtocol;\n      }\n\n      return \"@media -sass-debug-info{filename{font-family:\" + filenameWithProtocol.replace(/([.:\\/\\\\])/g, function (a) {\n        if (a == '\\\\') {\n          a = '\\/';\n        }\n\n        return \"\\\\\" + a;\n      }) + \"}line{font-family:\\\\00003\" + ctx.debugInfo.lineNumber + \"}}\\n\";\n    };\n\n    return debugInfo;\n  }();\n\n  var Comment = function Comment(value, isLineComment, index, currentFileInfo) {\n    this.value = value;\n    this.isLineComment = isLineComment;\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    this.allowRoot = true;\n  };\n\n  Comment.prototype = Object.assign(new Node(), {\n    type: 'Comment',\n    genCSS: function genCSS(context, output) {\n      if (this.debugInfo) {\n        output.add(debugInfo(context, this), this.fileInfo(), this.getIndex());\n      }\n\n      output.add(this.value);\n    },\n    isSilent: function isSilent(context) {\n      var isCompressed = context.compress && this.value[2] !== '!';\n      return this.isLineComment || isCompressed;\n    }\n  });\n  var contexts = {};\n\n  var copyFromOriginal = function copyFromOriginal(original, destination, propertiesToCopy) {\n    if (!original) {\n      return;\n    }\n\n    for (var i = 0; i < propertiesToCopy.length; i++) {\n      if (original.hasOwnProperty(propertiesToCopy[i])) {\n        destination[propertiesToCopy[i]] = original[propertiesToCopy[i]];\n      }\n    }\n  };\n  /*\r\n   parse is used whilst parsing\r\n   */\n\n\n  var parseCopyProperties = [// options\n  'paths', 'rewriteUrls', 'rootpath', 'strictImports', 'insecure', 'dumpLineNumbers', 'compress', 'syncImport', 'chunkInput', 'mime', 'useFileCache', // context\n  'processImports', // Used by the import manager to stop multiple import visitors being created.\n  'pluginManager' // Used as the plugin manager for the session\n  ];\n\n  contexts.Parse = function (options) {\n    copyFromOriginal(options, this, parseCopyProperties);\n\n    if (typeof this.paths === 'string') {\n      this.paths = [this.paths];\n    }\n  };\n\n  var evalCopyProperties = ['paths', 'compress', 'math', 'strictUnits', 'sourceMap', 'importMultiple', 'urlArgs', 'javascriptEnabled', 'pluginManager', 'importantScope', 'rewriteUrls' // option - whether to adjust URL's to be relative\n  ];\n\n  contexts.Eval = function (options, frames) {\n    copyFromOriginal(options, this, evalCopyProperties);\n\n    if (typeof this.paths === 'string') {\n      this.paths = [this.paths];\n    }\n\n    this.frames = frames || [];\n    this.importantScope = this.importantScope || [];\n  };\n\n  contexts.Eval.prototype.enterCalc = function () {\n    if (!this.calcStack) {\n      this.calcStack = [];\n    }\n\n    this.calcStack.push(true);\n    this.inCalc = true;\n  };\n\n  contexts.Eval.prototype.exitCalc = function () {\n    this.calcStack.pop();\n\n    if (!this.calcStack.length) {\n      this.inCalc = false;\n    }\n  };\n\n  contexts.Eval.prototype.inParenthesis = function () {\n    if (!this.parensStack) {\n      this.parensStack = [];\n    }\n\n    this.parensStack.push(true);\n  };\n\n  contexts.Eval.prototype.outOfParenthesis = function () {\n    this.parensStack.pop();\n  };\n\n  contexts.Eval.prototype.inCalc = false;\n  contexts.Eval.prototype.mathOn = true;\n\n  contexts.Eval.prototype.isMathOn = function (op) {\n    if (!this.mathOn) {\n      return false;\n    }\n\n    if (op === '/' && this.math !== Math$1.ALWAYS && (!this.parensStack || !this.parensStack.length)) {\n      return false;\n    }\n\n    if (this.math > Math$1.PARENS_DIVISION) {\n      return this.parensStack && this.parensStack.length;\n    }\n\n    return true;\n  };\n\n  contexts.Eval.prototype.pathRequiresRewrite = function (path) {\n    var isRelative = this.rewriteUrls === RewriteUrls.LOCAL ? isPathLocalRelative : isPathRelative;\n    return isRelative(path);\n  };\n\n  contexts.Eval.prototype.rewritePath = function (path, rootpath) {\n    var newPath;\n    rootpath = rootpath || '';\n    newPath = this.normalizePath(rootpath + path); // If a path was explicit relative and the rootpath was not an absolute path\n    // we must ensure that the new path is also explicit relative.\n\n    if (isPathLocalRelative(path) && isPathRelative(rootpath) && isPathLocalRelative(newPath) === false) {\n      newPath = \"./\" + newPath;\n    }\n\n    return newPath;\n  };\n\n  contexts.Eval.prototype.normalizePath = function (path) {\n    var segments = path.split('/').reverse();\n    var segment;\n    path = [];\n\n    while (segments.length !== 0) {\n      segment = segments.pop();\n\n      switch (segment) {\n        case '.':\n          break;\n\n        case '..':\n          if (path.length === 0 || path[path.length - 1] === '..') {\n            path.push(segment);\n          } else {\n            path.pop();\n          }\n\n          break;\n\n        default:\n          path.push(segment);\n          break;\n      }\n    }\n\n    return path.join('/');\n  };\n\n  function isPathRelative(path) {\n    return !/^(?:[a-z-]+:|\\/|#)/i.test(path);\n  }\n\n  function isPathLocalRelative(path) {\n    return path.charAt(0) === '.';\n  } // todo - do the same for the toCSS ?\n\n\n  function makeRegistry(base) {\n    return {\n      _data: {},\n      add: function add(name, func) {\n        // precautionary case conversion, as later querying of\n        // the registry by function-caller uses lower case as well.\n        name = name.toLowerCase();\n        if (this._data.hasOwnProperty(name)) ;\n        this._data[name] = func;\n      },\n      addMultiple: function addMultiple(functions) {\n        var _this = this;\n\n        Object.keys(functions).forEach(function (name) {\n          _this.add(name, functions[name]);\n        });\n      },\n      get: function get(name) {\n        return this._data[name] || base && base.get(name);\n      },\n      getLocalFunctions: function getLocalFunctions() {\n        return this._data;\n      },\n      inherit: function inherit() {\n        return makeRegistry(this);\n      },\n      create: function create(base) {\n        return makeRegistry(base);\n      }\n    };\n  }\n\n  var functionRegistry = makeRegistry(null);\n  var defaultFunc = {\n    eval: function _eval() {\n      var v = this.value_;\n      var e = this.error_;\n\n      if (e) {\n        throw e;\n      }\n\n      if (v != null) {\n        return v ? Keyword.True : Keyword.False;\n      }\n    },\n    value: function value(v) {\n      this.value_ = v;\n    },\n    error: function error(e) {\n      this.error_ = e;\n    },\n    reset: function reset() {\n      this.value_ = this.error_ = null;\n    }\n  };\n\n  var Ruleset = function Ruleset(selectors, rules, strictImports, visibilityInfo) {\n    this.selectors = selectors;\n    this.rules = rules;\n    this._lookups = {};\n    this._variables = null;\n    this._properties = null;\n    this.strictImports = strictImports;\n    this.copyVisibilityInfo(visibilityInfo);\n    this.allowRoot = true;\n    this.setParent(this.selectors, this);\n    this.setParent(this.rules, this);\n  };\n\n  Ruleset.prototype = Object.assign(new Node(), {\n    type: 'Ruleset',\n    isRuleset: true,\n    isRulesetLike: function isRulesetLike() {\n      return true;\n    },\n    accept: function accept(visitor) {\n      if (this.paths) {\n        this.paths = visitor.visitArray(this.paths, true);\n      } else if (this.selectors) {\n        this.selectors = visitor.visitArray(this.selectors);\n      }\n\n      if (this.rules && this.rules.length) {\n        this.rules = visitor.visitArray(this.rules);\n      }\n    },\n    eval: function _eval(context) {\n      var selectors;\n      var selCnt;\n      var selector;\n      var i;\n      var hasVariable;\n      var hasOnePassingSelector = false;\n\n      if (this.selectors && (selCnt = this.selectors.length)) {\n        selectors = new Array(selCnt);\n        defaultFunc.error({\n          type: 'Syntax',\n          message: 'it is currently only allowed in parametric mixin guards,'\n        });\n\n        for (i = 0; i < selCnt; i++) {\n          selector = this.selectors[i].eval(context);\n\n          for (var j = 0; j < selector.elements.length; j++) {\n            if (selector.elements[j].isVariable) {\n              hasVariable = true;\n              break;\n            }\n          }\n\n          selectors[i] = selector;\n\n          if (selector.evaldCondition) {\n            hasOnePassingSelector = true;\n          }\n        }\n\n        if (hasVariable) {\n          var toParseSelectors = new Array(selCnt);\n\n          for (i = 0; i < selCnt; i++) {\n            selector = selectors[i];\n            toParseSelectors[i] = selector.toCSS(context);\n          }\n\n          this.parse.parseNode(toParseSelectors.join(','), [\"selectors\"], selectors[0].getIndex(), selectors[0].fileInfo(), function (err, result) {\n            if (result) {\n              selectors = flattenArray(result);\n            }\n          });\n        }\n\n        defaultFunc.reset();\n      } else {\n        hasOnePassingSelector = true;\n      }\n\n      var rules = this.rules ? copyArray(this.rules) : null;\n      var ruleset = new Ruleset(selectors, rules, this.strictImports, this.visibilityInfo());\n      var rule;\n      var subRule;\n      ruleset.originalRuleset = this;\n      ruleset.root = this.root;\n      ruleset.firstRoot = this.firstRoot;\n      ruleset.allowImports = this.allowImports;\n\n      if (this.debugInfo) {\n        ruleset.debugInfo = this.debugInfo;\n      }\n\n      if (!hasOnePassingSelector) {\n        rules.length = 0;\n      } // inherit a function registry from the frames stack when possible;\n      // otherwise from the global registry\n\n\n      ruleset.functionRegistry = function (frames) {\n        var i = 0;\n        var n = frames.length;\n        var found;\n\n        for (; i !== n; ++i) {\n          found = frames[i].functionRegistry;\n\n          if (found) {\n            return found;\n          }\n        }\n\n        return functionRegistry;\n      }(context.frames).inherit(); // push the current ruleset to the frames stack\n\n\n      var ctxFrames = context.frames;\n      ctxFrames.unshift(ruleset); // currrent selectors\n\n      var ctxSelectors = context.selectors;\n\n      if (!ctxSelectors) {\n        context.selectors = ctxSelectors = [];\n      }\n\n      ctxSelectors.unshift(this.selectors); // Evaluate imports\n\n      if (ruleset.root || ruleset.allowImports || !ruleset.strictImports) {\n        ruleset.evalImports(context);\n      } // Store the frames around mixin definitions,\n      // so they can be evaluated like closures when the time comes.\n\n\n      var rsRules = ruleset.rules;\n\n      for (i = 0; rule = rsRules[i]; i++) {\n        if (rule.evalFirst) {\n          rsRules[i] = rule.eval(context);\n        }\n      }\n\n      var mediaBlockCount = context.mediaBlocks && context.mediaBlocks.length || 0; // Evaluate mixin calls.\n\n      for (i = 0; rule = rsRules[i]; i++) {\n        if (rule.type === 'MixinCall') {\n          /* jshint loopfunc:true */\n          rules = rule.eval(context).filter(function (r) {\n            if (r instanceof Declaration && r.variable) {\n              // do not pollute the scope if the variable is\n              // already there. consider returning false here\n              // but we need a way to \"return\" variable from mixins\n              return !ruleset.variable(r.name);\n            }\n\n            return true;\n          });\n          rsRules.splice.apply(rsRules, [i, 1].concat(rules));\n          i += rules.length - 1;\n          ruleset.resetCache();\n        } else if (rule.type === 'VariableCall') {\n          /* jshint loopfunc:true */\n          rules = rule.eval(context).rules.filter(function (r) {\n            if (r instanceof Declaration && r.variable) {\n              // do not pollute the scope at all\n              return false;\n            }\n\n            return true;\n          });\n          rsRules.splice.apply(rsRules, [i, 1].concat(rules));\n          i += rules.length - 1;\n          ruleset.resetCache();\n        }\n      } // Evaluate everything else\n\n\n      for (i = 0; rule = rsRules[i]; i++) {\n        if (!rule.evalFirst) {\n          rsRules[i] = rule = rule.eval ? rule.eval(context) : rule;\n        }\n      } // Evaluate everything else\n\n\n      for (i = 0; rule = rsRules[i]; i++) {\n        // for rulesets, check if it is a css guard and can be removed\n        if (rule instanceof Ruleset && rule.selectors && rule.selectors.length === 1) {\n          // check if it can be folded in (e.g. & where)\n          if (rule.selectors[0] && rule.selectors[0].isJustParentSelector()) {\n            rsRules.splice(i--, 1);\n\n            for (var j = 0; subRule = rule.rules[j]; j++) {\n              if (subRule instanceof Node) {\n                subRule.copyVisibilityInfo(rule.visibilityInfo());\n\n                if (!(subRule instanceof Declaration) || !subRule.variable) {\n                  rsRules.splice(++i, 0, subRule);\n                }\n              }\n            }\n          }\n        }\n      } // Pop the stack\n\n\n      ctxFrames.shift();\n      ctxSelectors.shift();\n\n      if (context.mediaBlocks) {\n        for (i = mediaBlockCount; i < context.mediaBlocks.length; i++) {\n          context.mediaBlocks[i].bubbleSelectors(selectors);\n        }\n      }\n\n      return ruleset;\n    },\n    evalImports: function evalImports(context) {\n      var rules = this.rules;\n      var i;\n      var importRules;\n\n      if (!rules) {\n        return;\n      }\n\n      for (i = 0; i < rules.length; i++) {\n        if (rules[i].type === 'Import') {\n          importRules = rules[i].eval(context);\n\n          if (importRules && (importRules.length || importRules.length === 0)) {\n            rules.splice.apply(rules, [i, 1].concat(importRules));\n            i += importRules.length - 1;\n          } else {\n            rules.splice(i, 1, importRules);\n          }\n\n          this.resetCache();\n        }\n      }\n    },\n    makeImportant: function makeImportant() {\n      var result = new Ruleset(this.selectors, this.rules.map(function (r) {\n        if (r.makeImportant) {\n          return r.makeImportant();\n        } else {\n          return r;\n        }\n      }), this.strictImports, this.visibilityInfo());\n      return result;\n    },\n    matchArgs: function matchArgs(args) {\n      return !args || args.length === 0;\n    },\n    // lets you call a css selector with a guard\n    matchCondition: function matchCondition(args, context) {\n      var lastSelector = this.selectors[this.selectors.length - 1];\n\n      if (!lastSelector.evaldCondition) {\n        return false;\n      }\n\n      if (lastSelector.condition && !lastSelector.condition.eval(new contexts.Eval(context, context.frames))) {\n        return false;\n      }\n\n      return true;\n    },\n    resetCache: function resetCache() {\n      this._rulesets = null;\n      this._variables = null;\n      this._properties = null;\n      this._lookups = {};\n    },\n    variables: function variables() {\n      if (!this._variables) {\n        this._variables = !this.rules ? {} : this.rules.reduce(function (hash, r) {\n          if (r instanceof Declaration && r.variable === true) {\n            hash[r.name] = r;\n          } // when evaluating variables in an import statement, imports have not been eval'd\n          // so we need to go inside import statements.\n          // guard against root being a string (in the case of inlined less)\n\n\n          if (r.type === 'Import' && r.root && r.root.variables) {\n            var vars = r.root.variables();\n\n            for (var name_1 in vars) {\n              if (vars.hasOwnProperty(name_1)) {\n                hash[name_1] = r.root.variable(name_1);\n              }\n            }\n          }\n\n          return hash;\n        }, {});\n      }\n\n      return this._variables;\n    },\n    properties: function properties() {\n      if (!this._properties) {\n        this._properties = !this.rules ? {} : this.rules.reduce(function (hash, r) {\n          if (r instanceof Declaration && r.variable !== true) {\n            var name_2 = r.name.length === 1 && r.name[0] instanceof Keyword ? r.name[0].value : r.name; // Properties don't overwrite as they can merge\n\n            if (!hash[\"$\" + name_2]) {\n              hash[\"$\" + name_2] = [r];\n            } else {\n              hash[\"$\" + name_2].push(r);\n            }\n          }\n\n          return hash;\n        }, {});\n      }\n\n      return this._properties;\n    },\n    variable: function variable(name) {\n      var decl = this.variables()[name];\n\n      if (decl) {\n        return this.parseValue(decl);\n      }\n    },\n    property: function property(name) {\n      var decl = this.properties()[name];\n\n      if (decl) {\n        return this.parseValue(decl);\n      }\n    },\n    lastDeclaration: function lastDeclaration() {\n      for (var i = this.rules.length; i > 0; i--) {\n        var decl = this.rules[i - 1];\n\n        if (decl instanceof Declaration) {\n          return this.parseValue(decl);\n        }\n      }\n    },\n    parseValue: function parseValue(toParse) {\n      var self = this;\n\n      function transformDeclaration(decl) {\n        if (decl.value instanceof Anonymous && !decl.parsed) {\n          if (typeof decl.value.value === 'string') {\n            this.parse.parseNode(decl.value.value, ['value', 'important'], decl.value.getIndex(), decl.fileInfo(), function (err, result) {\n              if (err) {\n                decl.parsed = true;\n              }\n\n              if (result) {\n                decl.value = result[0];\n                decl.important = result[1] || '';\n                decl.parsed = true;\n              }\n            });\n          } else {\n            decl.parsed = true;\n          }\n\n          return decl;\n        } else {\n          return decl;\n        }\n      }\n\n      if (!Array.isArray(toParse)) {\n        return transformDeclaration.call(self, toParse);\n      } else {\n        var nodes_1 = [];\n        toParse.forEach(function (n) {\n          nodes_1.push(transformDeclaration.call(self, n));\n        });\n        return nodes_1;\n      }\n    },\n    rulesets: function rulesets() {\n      if (!this.rules) {\n        return [];\n      }\n\n      var filtRules = [];\n      var rules = this.rules;\n      var i;\n      var rule;\n\n      for (i = 0; rule = rules[i]; i++) {\n        if (rule.isRuleset) {\n          filtRules.push(rule);\n        }\n      }\n\n      return filtRules;\n    },\n    prependRule: function prependRule(rule) {\n      var rules = this.rules;\n\n      if (rules) {\n        rules.unshift(rule);\n      } else {\n        this.rules = [rule];\n      }\n\n      this.setParent(rule, this);\n    },\n    find: function find(selector, self, filter) {\n      self = self || this;\n      var rules = [];\n      var match;\n      var foundMixins;\n      var key = selector.toCSS();\n\n      if (key in this._lookups) {\n        return this._lookups[key];\n      }\n\n      this.rulesets().forEach(function (rule) {\n        if (rule !== self) {\n          for (var j = 0; j < rule.selectors.length; j++) {\n            match = selector.match(rule.selectors[j]);\n\n            if (match) {\n              if (selector.elements.length > match) {\n                if (!filter || filter(rule)) {\n                  foundMixins = rule.find(new Selector(selector.elements.slice(match)), self, filter);\n\n                  for (var i = 0; i < foundMixins.length; ++i) {\n                    foundMixins[i].path.push(rule);\n                  }\n\n                  Array.prototype.push.apply(rules, foundMixins);\n                }\n              } else {\n                rules.push({\n                  rule: rule,\n                  path: []\n                });\n              }\n\n              break;\n            }\n          }\n        }\n      });\n      this._lookups[key] = rules;\n      return rules;\n    },\n    genCSS: function genCSS(context, output) {\n      var i;\n      var j;\n      var charsetRuleNodes = [];\n      var ruleNodes = [];\n      var // Line number debugging\n      debugInfo$1;\n      var rule;\n      var path;\n      context.tabLevel = context.tabLevel || 0;\n\n      if (!this.root) {\n        context.tabLevel++;\n      }\n\n      var tabRuleStr = context.compress ? '' : Array(context.tabLevel + 1).join('  ');\n      var tabSetStr = context.compress ? '' : Array(context.tabLevel).join('  ');\n      var sep;\n      var charsetNodeIndex = 0;\n      var importNodeIndex = 0;\n\n      for (i = 0; rule = this.rules[i]; i++) {\n        if (rule instanceof Comment) {\n          if (importNodeIndex === i) {\n            importNodeIndex++;\n          }\n\n          ruleNodes.push(rule);\n        } else if (rule.isCharset && rule.isCharset()) {\n          ruleNodes.splice(charsetNodeIndex, 0, rule);\n          charsetNodeIndex++;\n          importNodeIndex++;\n        } else if (rule.type === 'Import') {\n          ruleNodes.splice(importNodeIndex, 0, rule);\n          importNodeIndex++;\n        } else {\n          ruleNodes.push(rule);\n        }\n      }\n\n      ruleNodes = charsetRuleNodes.concat(ruleNodes); // If this is the root node, we don't render\n      // a selector, or {}.\n\n      if (!this.root) {\n        debugInfo$1 = debugInfo(context, this, tabSetStr);\n\n        if (debugInfo$1) {\n          output.add(debugInfo$1);\n          output.add(tabSetStr);\n        }\n\n        var paths = this.paths;\n        var pathCnt = paths.length;\n        var pathSubCnt = void 0;\n        sep = context.compress ? ',' : \",\\n\" + tabSetStr;\n\n        for (i = 0; i < pathCnt; i++) {\n          path = paths[i];\n\n          if (!(pathSubCnt = path.length)) {\n            continue;\n          }\n\n          if (i > 0) {\n            output.add(sep);\n          }\n\n          context.firstSelector = true;\n          path[0].genCSS(context, output);\n          context.firstSelector = false;\n\n          for (j = 1; j < pathSubCnt; j++) {\n            path[j].genCSS(context, output);\n          }\n        }\n\n        output.add((context.compress ? '{' : ' {\\n') + tabRuleStr);\n      } // Compile rules and rulesets\n\n\n      for (i = 0; rule = ruleNodes[i]; i++) {\n        if (i + 1 === ruleNodes.length) {\n          context.lastRule = true;\n        }\n\n        var currentLastRule = context.lastRule;\n\n        if (rule.isRulesetLike(rule)) {\n          context.lastRule = false;\n        }\n\n        if (rule.genCSS) {\n          rule.genCSS(context, output);\n        } else if (rule.value) {\n          output.add(rule.value.toString());\n        }\n\n        context.lastRule = currentLastRule;\n\n        if (!context.lastRule && rule.isVisible()) {\n          output.add(context.compress ? '' : \"\\n\" + tabRuleStr);\n        } else {\n          context.lastRule = false;\n        }\n      }\n\n      if (!this.root) {\n        output.add(context.compress ? '}' : \"\\n\" + tabSetStr + \"}\");\n        context.tabLevel--;\n      }\n\n      if (!output.isEmpty() && !context.compress && this.firstRoot) {\n        output.add('\\n');\n      }\n    },\n    joinSelectors: function joinSelectors(paths, context, selectors) {\n      for (var s = 0; s < selectors.length; s++) {\n        this.joinSelector(paths, context, selectors[s]);\n      }\n    },\n    joinSelector: function joinSelector(paths, context, selector) {\n      function createParenthesis(elementsToPak, originalElement) {\n        var replacementParen, j;\n\n        if (elementsToPak.length === 0) {\n          replacementParen = new Paren(elementsToPak[0]);\n        } else {\n          var insideParent = new Array(elementsToPak.length);\n\n          for (j = 0; j < elementsToPak.length; j++) {\n            insideParent[j] = new Element(null, elementsToPak[j], originalElement.isVariable, originalElement._index, originalElement._fileInfo);\n          }\n\n          replacementParen = new Paren(new Selector(insideParent));\n        }\n\n        return replacementParen;\n      }\n\n      function createSelector(containedElement, originalElement) {\n        var element, selector;\n        element = new Element(null, containedElement, originalElement.isVariable, originalElement._index, originalElement._fileInfo);\n        selector = new Selector([element]);\n        return selector;\n      } // joins selector path from `beginningPath` with selector path in `addPath`\n      // `replacedElement` contains element that is being replaced by `addPath`\n      // returns concatenated path\n\n\n      function addReplacementIntoPath(beginningPath, addPath, replacedElement, originalSelector) {\n        var newSelectorPath, lastSelector, newJoinedSelector; // our new selector path\n\n        newSelectorPath = []; // construct the joined selector - if & is the first thing this will be empty,\n        // if not newJoinedSelector will be the last set of elements in the selector\n\n        if (beginningPath.length > 0) {\n          newSelectorPath = copyArray(beginningPath);\n          lastSelector = newSelectorPath.pop();\n          newJoinedSelector = originalSelector.createDerived(copyArray(lastSelector.elements));\n        } else {\n          newJoinedSelector = originalSelector.createDerived([]);\n        }\n\n        if (addPath.length > 0) {\n          // /deep/ is a CSS4 selector - (removed, so should deprecate)\n          // that is valid without anything in front of it\n          // so if the & does not have a combinator that is \"\" or \" \" then\n          // and there is a combinator on the parent, then grab that.\n          // this also allows + a { & .b { .a & { ... though not sure why you would want to do that\n          var combinator = replacedElement.combinator;\n          var parentEl = addPath[0].elements[0];\n\n          if (combinator.emptyOrWhitespace && !parentEl.combinator.emptyOrWhitespace) {\n            combinator = parentEl.combinator;\n          } // join the elements so far with the first part of the parent\n\n\n          newJoinedSelector.elements.push(new Element(combinator, parentEl.value, replacedElement.isVariable, replacedElement._index, replacedElement._fileInfo));\n          newJoinedSelector.elements = newJoinedSelector.elements.concat(addPath[0].elements.slice(1));\n        } // now add the joined selector - but only if it is not empty\n\n\n        if (newJoinedSelector.elements.length !== 0) {\n          newSelectorPath.push(newJoinedSelector);\n        } // put together the parent selectors after the join (e.g. the rest of the parent)\n\n\n        if (addPath.length > 1) {\n          var restOfPath = addPath.slice(1);\n          restOfPath = restOfPath.map(function (selector) {\n            return selector.createDerived(selector.elements, []);\n          });\n          newSelectorPath = newSelectorPath.concat(restOfPath);\n        }\n\n        return newSelectorPath;\n      } // joins selector path from `beginningPath` with every selector path in `addPaths` array\n      // `replacedElement` contains element that is being replaced by `addPath`\n      // returns array with all concatenated paths\n\n\n      function addAllReplacementsIntoPath(beginningPath, addPaths, replacedElement, originalSelector, result) {\n        var j;\n\n        for (j = 0; j < beginningPath.length; j++) {\n          var newSelectorPath = addReplacementIntoPath(beginningPath[j], addPaths, replacedElement, originalSelector);\n          result.push(newSelectorPath);\n        }\n\n        return result;\n      }\n\n      function mergeElementsOnToSelectors(elements, selectors) {\n        var i, sel;\n\n        if (elements.length === 0) {\n          return;\n        }\n\n        if (selectors.length === 0) {\n          selectors.push([new Selector(elements)]);\n          return;\n        }\n\n        for (i = 0; sel = selectors[i]; i++) {\n          // if the previous thing in sel is a parent this needs to join on to it\n          if (sel.length > 0) {\n            sel[sel.length - 1] = sel[sel.length - 1].createDerived(sel[sel.length - 1].elements.concat(elements));\n          } else {\n            sel.push(new Selector(elements));\n          }\n        }\n      } // replace all parent selectors inside `inSelector` by content of `context` array\n      // resulting selectors are returned inside `paths` array\n      // returns true if `inSelector` contained at least one parent selector\n\n\n      function replaceParentSelector(paths, context, inSelector) {\n        // The paths are [[Selector]]\n        // The first list is a list of comma separated selectors\n        // The inner list is a list of inheritance separated selectors\n        // e.g.\n        // .a, .b {\n        //   .c {\n        //   }\n        // }\n        // == [[.a] [.c]] [[.b] [.c]]\n        //\n        var i,\n            j,\n            k,\n            currentElements,\n            newSelectors,\n            selectorsMultiplied,\n            sel,\n            el,\n            hadParentSelector = false,\n            length,\n            lastSelector;\n\n        function findNestedSelector(element) {\n          var maybeSelector;\n\n          if (!(element.value instanceof Paren)) {\n            return null;\n          }\n\n          maybeSelector = element.value.value;\n\n          if (!(maybeSelector instanceof Selector)) {\n            return null;\n          }\n\n          return maybeSelector;\n        } // the elements from the current selector so far\n\n\n        currentElements = []; // the current list of new selectors to add to the path.\n        // We will build it up. We initiate it with one empty selector as we \"multiply\" the new selectors\n        // by the parents\n\n        newSelectors = [[]];\n\n        for (i = 0; el = inSelector.elements[i]; i++) {\n          // non parent reference elements just get added\n          if (el.value !== '&') {\n            var nestedSelector = findNestedSelector(el);\n\n            if (nestedSelector != null) {\n              // merge the current list of non parent selector elements\n              // on to the current list of selectors to add\n              mergeElementsOnToSelectors(currentElements, newSelectors);\n              var nestedPaths = [];\n              var replaced = void 0;\n              var replacedNewSelectors = [];\n              replaced = replaceParentSelector(nestedPaths, context, nestedSelector);\n              hadParentSelector = hadParentSelector || replaced; // the nestedPaths array should have only one member - replaceParentSelector does not multiply selectors\n\n              for (k = 0; k < nestedPaths.length; k++) {\n                var replacementSelector = createSelector(createParenthesis(nestedPaths[k], el), el);\n                addAllReplacementsIntoPath(newSelectors, [replacementSelector], el, inSelector, replacedNewSelectors);\n              }\n\n              newSelectors = replacedNewSelectors;\n              currentElements = [];\n            } else {\n              currentElements.push(el);\n            }\n          } else {\n            hadParentSelector = true; // the new list of selectors to add\n\n            selectorsMultiplied = []; // merge the current list of non parent selector elements\n            // on to the current list of selectors to add\n\n            mergeElementsOnToSelectors(currentElements, newSelectors); // loop through our current selectors\n\n            for (j = 0; j < newSelectors.length; j++) {\n              sel = newSelectors[j]; // if we don't have any parent paths, the & might be in a mixin so that it can be used\n              // whether there are parents or not\n\n              if (context.length === 0) {\n                // the combinator used on el should now be applied to the next element instead so that\n                // it is not lost\n                if (sel.length > 0) {\n                  sel[0].elements.push(new Element(el.combinator, '', el.isVariable, el._index, el._fileInfo));\n                }\n\n                selectorsMultiplied.push(sel);\n              } else {\n                // and the parent selectors\n                for (k = 0; k < context.length; k++) {\n                  // We need to put the current selectors\n                  // then join the last selector's elements on to the parents selectors\n                  var newSelectorPath = addReplacementIntoPath(sel, context[k], el, inSelector); // add that to our new set of selectors\n\n                  selectorsMultiplied.push(newSelectorPath);\n                }\n              }\n            } // our new selectors has been multiplied, so reset the state\n\n\n            newSelectors = selectorsMultiplied;\n            currentElements = [];\n          }\n        } // if we have any elements left over (e.g. .a& .b == .b)\n        // add them on to all the current selectors\n\n\n        mergeElementsOnToSelectors(currentElements, newSelectors);\n\n        for (i = 0; i < newSelectors.length; i++) {\n          length = newSelectors[i].length;\n\n          if (length > 0) {\n            paths.push(newSelectors[i]);\n            lastSelector = newSelectors[i][length - 1];\n            newSelectors[i][length - 1] = lastSelector.createDerived(lastSelector.elements, inSelector.extendList);\n          }\n        }\n\n        return hadParentSelector;\n      }\n\n      function deriveSelector(visibilityInfo, deriveFrom) {\n        var newSelector = deriveFrom.createDerived(deriveFrom.elements, deriveFrom.extendList, deriveFrom.evaldCondition);\n        newSelector.copyVisibilityInfo(visibilityInfo);\n        return newSelector;\n      } // joinSelector code follows\n\n\n      var i, newPaths, hadParentSelector;\n      newPaths = [];\n      hadParentSelector = replaceParentSelector(newPaths, context, selector);\n\n      if (!hadParentSelector) {\n        if (context.length > 0) {\n          newPaths = [];\n\n          for (i = 0; i < context.length; i++) {\n            var concatenated = context[i].map(deriveSelector.bind(this, selector.visibilityInfo()));\n            concatenated.push(selector);\n            newPaths.push(concatenated);\n          }\n        } else {\n          newPaths = [[selector]];\n        }\n      }\n\n      for (i = 0; i < newPaths.length; i++) {\n        paths.push(newPaths[i]);\n      }\n    }\n  });\n\n  var AtRule = function AtRule(name, value, rules, index, currentFileInfo, debugInfo, isRooted, visibilityInfo) {\n    var i;\n    this.name = name;\n    this.value = value instanceof Node ? value : value ? new Anonymous(value) : value;\n\n    if (rules) {\n      if (Array.isArray(rules)) {\n        this.rules = rules;\n      } else {\n        this.rules = [rules];\n        this.rules[0].selectors = new Selector([], null, null, index, currentFileInfo).createEmptySelectors();\n      }\n\n      for (i = 0; i < this.rules.length; i++) {\n        this.rules[i].allowImports = true;\n      }\n\n      this.setParent(this.rules, this);\n    }\n\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    this.debugInfo = debugInfo;\n    this.isRooted = isRooted || false;\n    this.copyVisibilityInfo(visibilityInfo);\n    this.allowRoot = true;\n  };\n\n  AtRule.prototype = Object.assign(new Node(), {\n    type: 'AtRule',\n    accept: function accept(visitor) {\n      var value = this.value,\n          rules = this.rules;\n\n      if (rules) {\n        this.rules = visitor.visitArray(rules);\n      }\n\n      if (value) {\n        this.value = visitor.visit(value);\n      }\n    },\n    isRulesetLike: function isRulesetLike() {\n      return this.rules || !this.isCharset();\n    },\n    isCharset: function isCharset() {\n      return '@charset' === this.name;\n    },\n    genCSS: function genCSS(context, output) {\n      var value = this.value,\n          rules = this.rules;\n      output.add(this.name, this.fileInfo(), this.getIndex());\n\n      if (value) {\n        output.add(' ');\n        value.genCSS(context, output);\n      }\n\n      if (rules) {\n        this.outputRuleset(context, output, rules);\n      } else {\n        output.add(';');\n      }\n    },\n    eval: function _eval(context) {\n      var mediaPathBackup,\n          mediaBlocksBackup,\n          value = this.value,\n          rules = this.rules; // media stored inside other atrule should not bubble over it\n      // backpup media bubbling information\n\n      mediaPathBackup = context.mediaPath;\n      mediaBlocksBackup = context.mediaBlocks; // deleted media bubbling information\n\n      context.mediaPath = [];\n      context.mediaBlocks = [];\n\n      if (value) {\n        value = value.eval(context);\n      }\n\n      if (rules) {\n        // assuming that there is only one rule at this point - that is how parser constructs the rule\n        rules = [rules[0].eval(context)];\n        rules[0].root = true;\n      } // restore media bubbling information\n\n\n      context.mediaPath = mediaPathBackup;\n      context.mediaBlocks = mediaBlocksBackup;\n      return new AtRule(this.name, value, rules, this.getIndex(), this.fileInfo(), this.debugInfo, this.isRooted, this.visibilityInfo());\n    },\n    variable: function variable(name) {\n      if (this.rules) {\n        // assuming that there is only one rule at this point - that is how parser constructs the rule\n        return Ruleset.prototype.variable.call(this.rules[0], name);\n      }\n    },\n    find: function find() {\n      if (this.rules) {\n        // assuming that there is only one rule at this point - that is how parser constructs the rule\n        return Ruleset.prototype.find.apply(this.rules[0], arguments);\n      }\n    },\n    rulesets: function rulesets() {\n      if (this.rules) {\n        // assuming that there is only one rule at this point - that is how parser constructs the rule\n        return Ruleset.prototype.rulesets.apply(this.rules[0]);\n      }\n    },\n    outputRuleset: function outputRuleset(context, output, rules) {\n      var ruleCnt = rules.length;\n      var i;\n      context.tabLevel = (context.tabLevel | 0) + 1; // Compressed\n\n      if (context.compress) {\n        output.add('{');\n\n        for (i = 0; i < ruleCnt; i++) {\n          rules[i].genCSS(context, output);\n        }\n\n        output.add('}');\n        context.tabLevel--;\n        return;\n      } // Non-compressed\n\n\n      var tabSetStr = \"\\n\" + Array(context.tabLevel).join('  '),\n          tabRuleStr = tabSetStr + \"  \";\n\n      if (!ruleCnt) {\n        output.add(\" {\" + tabSetStr + \"}\");\n      } else {\n        output.add(\" {\" + tabRuleStr);\n        rules[0].genCSS(context, output);\n\n        for (i = 1; i < ruleCnt; i++) {\n          output.add(tabRuleStr);\n          rules[i].genCSS(context, output);\n        }\n\n        output.add(tabSetStr + \"}\");\n      }\n\n      context.tabLevel--;\n    }\n  });\n\n  var DetachedRuleset = function DetachedRuleset(ruleset, frames) {\n    this.ruleset = ruleset;\n    this.frames = frames;\n    this.setParent(this.ruleset, this);\n  };\n\n  DetachedRuleset.prototype = Object.assign(new Node(), {\n    type: 'DetachedRuleset',\n    evalFirst: true,\n    accept: function accept(visitor) {\n      this.ruleset = visitor.visit(this.ruleset);\n    },\n    eval: function _eval(context) {\n      var frames = this.frames || copyArray(context.frames);\n      return new DetachedRuleset(this.ruleset, frames);\n    },\n    callEval: function callEval(context) {\n      return this.ruleset.eval(this.frames ? new contexts.Eval(context, this.frames.concat(context.frames)) : context);\n    }\n  });\n\n  var Unit = function Unit(numerator, denominator, backupUnit) {\n    this.numerator = numerator ? copyArray(numerator).sort() : [];\n    this.denominator = denominator ? copyArray(denominator).sort() : [];\n\n    if (backupUnit) {\n      this.backupUnit = backupUnit;\n    } else if (numerator && numerator.length) {\n      this.backupUnit = numerator[0];\n    }\n  };\n\n  Unit.prototype = Object.assign(new Node(), {\n    type: 'Unit',\n    clone: function clone() {\n      return new Unit(copyArray(this.numerator), copyArray(this.denominator), this.backupUnit);\n    },\n    genCSS: function genCSS(context, output) {\n      // Dimension checks the unit is singular and throws an error if in strict math mode.\n      var strictUnits = context && context.strictUnits;\n\n      if (this.numerator.length === 1) {\n        output.add(this.numerator[0]); // the ideal situation\n      } else if (!strictUnits && this.backupUnit) {\n        output.add(this.backupUnit);\n      } else if (!strictUnits && this.denominator.length) {\n        output.add(this.denominator[0]);\n      }\n    },\n    toString: function toString() {\n      var i,\n          returnStr = this.numerator.join('*');\n\n      for (i = 0; i < this.denominator.length; i++) {\n        returnStr += \"/\" + this.denominator[i];\n      }\n\n      return returnStr;\n    },\n    compare: function compare(other) {\n      return this.is(other.toString()) ? 0 : undefined;\n    },\n    is: function is(unitString) {\n      return this.toString().toUpperCase() === unitString.toUpperCase();\n    },\n    isLength: function isLength() {\n      return RegExp('^(px|em|ex|ch|rem|in|cm|mm|pc|pt|ex|vw|vh|vmin|vmax)$', 'gi').test(this.toCSS());\n    },\n    isEmpty: function isEmpty() {\n      return this.numerator.length === 0 && this.denominator.length === 0;\n    },\n    isSingular: function isSingular() {\n      return this.numerator.length <= 1 && this.denominator.length === 0;\n    },\n    map: function map(callback) {\n      var i;\n\n      for (i = 0; i < this.numerator.length; i++) {\n        this.numerator[i] = callback(this.numerator[i], false);\n      }\n\n      for (i = 0; i < this.denominator.length; i++) {\n        this.denominator[i] = callback(this.denominator[i], true);\n      }\n    },\n    usedUnits: function usedUnits() {\n      var group;\n      var result = {};\n      var mapUnit;\n      var groupName;\n\n      mapUnit = function mapUnit(atomicUnit) {\n        /* jshint loopfunc:true */\n        if (group.hasOwnProperty(atomicUnit) && !result[groupName]) {\n          result[groupName] = atomicUnit;\n        }\n\n        return atomicUnit;\n      };\n\n      for (groupName in unitConversions) {\n        if (unitConversions.hasOwnProperty(groupName)) {\n          group = unitConversions[groupName];\n          this.map(mapUnit);\n        }\n      }\n\n      return result;\n    },\n    cancel: function cancel() {\n      var counter = {};\n      var atomicUnit;\n      var i;\n\n      for (i = 0; i < this.numerator.length; i++) {\n        atomicUnit = this.numerator[i];\n        counter[atomicUnit] = (counter[atomicUnit] || 0) + 1;\n      }\n\n      for (i = 0; i < this.denominator.length; i++) {\n        atomicUnit = this.denominator[i];\n        counter[atomicUnit] = (counter[atomicUnit] || 0) - 1;\n      }\n\n      this.numerator = [];\n      this.denominator = [];\n\n      for (atomicUnit in counter) {\n        if (counter.hasOwnProperty(atomicUnit)) {\n          var count = counter[atomicUnit];\n\n          if (count > 0) {\n            for (i = 0; i < count; i++) {\n              this.numerator.push(atomicUnit);\n            }\n          } else if (count < 0) {\n            for (i = 0; i < -count; i++) {\n              this.denominator.push(atomicUnit);\n            }\n          }\n        }\n      }\n\n      this.numerator.sort();\n      this.denominator.sort();\n    }\n  }); //\n  // A number with a unit\n  //\n\n  var Dimension = function Dimension(value, unit) {\n    this.value = parseFloat(value);\n\n    if (isNaN(this.value)) {\n      throw new Error('Dimension is not a number.');\n    }\n\n    this.unit = unit && unit instanceof Unit ? unit : new Unit(unit ? [unit] : undefined);\n    this.setParent(this.unit, this);\n  };\n\n  Dimension.prototype = Object.assign(new Node(), {\n    type: 'Dimension',\n    accept: function accept(visitor) {\n      this.unit = visitor.visit(this.unit);\n    },\n    eval: function _eval(context) {\n      return this;\n    },\n    toColor: function toColor() {\n      return new Color([this.value, this.value, this.value]);\n    },\n    genCSS: function genCSS(context, output) {\n      if (context && context.strictUnits && !this.unit.isSingular()) {\n        throw new Error(\"Multiple units in dimension. Correct the units or use the unit function. Bad unit: \" + this.unit.toString());\n      }\n\n      var value = this.fround(context, this.value);\n      var strValue = String(value);\n\n      if (value !== 0 && value < 0.000001 && value > -0.000001) {\n        // would be output 1e-6 etc.\n        strValue = value.toFixed(20).replace(/0+$/, '');\n      }\n\n      if (context && context.compress) {\n        // Zero values doesn't need a unit\n        if (value === 0 && this.unit.isLength()) {\n          output.add(strValue);\n          return;\n        } // Float values doesn't need a leading zero\n\n\n        if (value > 0 && value < 1) {\n          strValue = strValue.substr(1);\n        }\n      }\n\n      output.add(strValue);\n      this.unit.genCSS(context, output);\n    },\n    // In an operation between two Dimensions,\n    // we default to the first Dimension's unit,\n    // so `1px + 2` will yield `3px`.\n    operate: function operate(context, op, other) {\n      /* jshint noempty:false */\n      var value = this._operate(context, op, this.value, other.value);\n\n      var unit = this.unit.clone();\n\n      if (op === '+' || op === '-') {\n        if (unit.numerator.length === 0 && unit.denominator.length === 0) {\n          unit = other.unit.clone();\n\n          if (this.unit.backupUnit) {\n            unit.backupUnit = this.unit.backupUnit;\n          }\n        } else if (other.unit.numerator.length === 0 && unit.denominator.length === 0) ;else {\n          other = other.convertTo(this.unit.usedUnits());\n\n          if (context.strictUnits && other.unit.toString() !== unit.toString()) {\n            throw new Error(\"Incompatible units. Change the units or use the unit function. \" + (\"Bad units: '\" + unit.toString() + \"' and '\" + other.unit.toString() + \"'.\"));\n          }\n\n          value = this._operate(context, op, this.value, other.value);\n        }\n      } else if (op === '*') {\n        unit.numerator = unit.numerator.concat(other.unit.numerator).sort();\n        unit.denominator = unit.denominator.concat(other.unit.denominator).sort();\n        unit.cancel();\n      } else if (op === '/') {\n        unit.numerator = unit.numerator.concat(other.unit.denominator).sort();\n        unit.denominator = unit.denominator.concat(other.unit.numerator).sort();\n        unit.cancel();\n      }\n\n      return new Dimension(value, unit);\n    },\n    compare: function compare(other) {\n      var a, b;\n\n      if (!(other instanceof Dimension)) {\n        return undefined;\n      }\n\n      if (this.unit.isEmpty() || other.unit.isEmpty()) {\n        a = this;\n        b = other;\n      } else {\n        a = this.unify();\n        b = other.unify();\n\n        if (a.unit.compare(b.unit) !== 0) {\n          return undefined;\n        }\n      }\n\n      return Node.numericCompare(a.value, b.value);\n    },\n    unify: function unify() {\n      return this.convertTo({\n        length: 'px',\n        duration: 's',\n        angle: 'rad'\n      });\n    },\n    convertTo: function convertTo(conversions) {\n      var value = this.value;\n      var unit = this.unit.clone();\n      var i;\n      var groupName;\n      var group;\n      var targetUnit;\n      var derivedConversions = {};\n      var applyUnit;\n\n      if (typeof conversions === 'string') {\n        for (i in unitConversions) {\n          if (unitConversions[i].hasOwnProperty(conversions)) {\n            derivedConversions = {};\n            derivedConversions[i] = conversions;\n          }\n        }\n\n        conversions = derivedConversions;\n      }\n\n      applyUnit = function applyUnit(atomicUnit, denominator) {\n        /* jshint loopfunc:true */\n        if (group.hasOwnProperty(atomicUnit)) {\n          if (denominator) {\n            value = value / (group[atomicUnit] / group[targetUnit]);\n          } else {\n            value = value * (group[atomicUnit] / group[targetUnit]);\n          }\n\n          return targetUnit;\n        }\n\n        return atomicUnit;\n      };\n\n      for (groupName in conversions) {\n        if (conversions.hasOwnProperty(groupName)) {\n          targetUnit = conversions[groupName];\n          group = unitConversions[groupName];\n          unit.map(applyUnit);\n        }\n      }\n\n      unit.cancel();\n      return new Dimension(value, unit);\n    }\n  });\n  var MATH = Math$1;\n\n  var Operation = function Operation(op, operands, isSpaced) {\n    this.op = op.trim();\n    this.operands = operands;\n    this.isSpaced = isSpaced;\n  };\n\n  Operation.prototype = Object.assign(new Node(), {\n    type: 'Operation',\n    accept: function accept(visitor) {\n      this.operands = visitor.visitArray(this.operands);\n    },\n    eval: function _eval(context) {\n      var a = this.operands[0].eval(context),\n          b = this.operands[1].eval(context),\n          op;\n\n      if (context.isMathOn(this.op)) {\n        op = this.op === './' ? '/' : this.op;\n\n        if (a instanceof Dimension && b instanceof Color) {\n          a = a.toColor();\n        }\n\n        if (b instanceof Dimension && a instanceof Color) {\n          b = b.toColor();\n        }\n\n        if (!a.operate || !b.operate) {\n          if ((a instanceof Operation || b instanceof Operation) && a.op === '/' && context.math === MATH.PARENS_DIVISION) {\n            return new Operation(this.op, [a, b], this.isSpaced);\n          }\n\n          throw {\n            type: 'Operation',\n            message: 'Operation on an invalid type'\n          };\n        }\n\n        return a.operate(context, op, b);\n      } else {\n        return new Operation(this.op, [a, b], this.isSpaced);\n      }\n    },\n    genCSS: function genCSS(context, output) {\n      this.operands[0].genCSS(context, output);\n\n      if (this.isSpaced) {\n        output.add(' ');\n      }\n\n      output.add(this.op);\n\n      if (this.isSpaced) {\n        output.add(' ');\n      }\n\n      this.operands[1].genCSS(context, output);\n    }\n  });\n  /*! *****************************************************************************\r\n  Copyright (c) Microsoft Corporation.\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n  purpose with or without fee is hereby granted.\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n  PERFORMANCE OF THIS SOFTWARE.\r\n  ***************************************************************************** */\n\n  function __spreadArray(to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n        if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n        ar[i] = from[i];\n      }\n    }\n    return to.concat(ar || from);\n  }\n\n  var Expression = function Expression(value, noSpacing) {\n    this.value = value;\n    this.noSpacing = noSpacing;\n\n    if (!value) {\n      throw new Error('Expression requires an array parameter');\n    }\n  };\n\n  Expression.prototype = Object.assign(new Node(), {\n    type: 'Expression',\n    accept: function accept(visitor) {\n      this.value = visitor.visitArray(this.value);\n    },\n    eval: function _eval(context) {\n      var returnValue;\n      var mathOn = context.isMathOn();\n      var inParenthesis = this.parens;\n      var doubleParen = false;\n\n      if (inParenthesis) {\n        context.inParenthesis();\n      }\n\n      if (this.value.length > 1) {\n        returnValue = new Expression(this.value.map(function (e) {\n          if (!e.eval) {\n            return e;\n          }\n\n          return e.eval(context);\n        }), this.noSpacing);\n      } else if (this.value.length === 1) {\n        if (this.value[0].parens && !this.value[0].parensInOp && !context.inCalc) {\n          doubleParen = true;\n        }\n\n        returnValue = this.value[0].eval(context);\n      } else {\n        returnValue = this;\n      }\n\n      if (inParenthesis) {\n        context.outOfParenthesis();\n      }\n\n      if (this.parens && this.parensInOp && !mathOn && !doubleParen && !(returnValue instanceof Dimension)) {\n        returnValue = new Paren(returnValue);\n      }\n\n      return returnValue;\n    },\n    genCSS: function genCSS(context, output) {\n      for (var i = 0; i < this.value.length; i++) {\n        this.value[i].genCSS(context, output);\n\n        if (!this.noSpacing && i + 1 < this.value.length) {\n          output.add(' ');\n        }\n      }\n    },\n    throwAwayComments: function throwAwayComments() {\n      this.value = this.value.filter(function (v) {\n        return !(v instanceof Comment);\n      });\n    }\n  });\n\n  var functionCaller =\n  /** @class */\n  function () {\n    function functionCaller(name, context, index, currentFileInfo) {\n      this.name = name.toLowerCase();\n      this.index = index;\n      this.context = context;\n      this.currentFileInfo = currentFileInfo;\n      this.func = context.frames[0].functionRegistry.get(this.name);\n    }\n\n    functionCaller.prototype.isValid = function () {\n      return Boolean(this.func);\n    };\n\n    functionCaller.prototype.call = function (args) {\n      var _this = this;\n\n      if (!Array.isArray(args)) {\n        args = [args];\n      }\n\n      var evalArgs = this.func.evalArgs;\n\n      if (evalArgs !== false) {\n        args = args.map(function (a) {\n          return a.eval(_this.context);\n        });\n      }\n\n      var commentFilter = function commentFilter(item) {\n        return !(item.type === 'Comment');\n      }; // This code is terrible and should be replaced as per this issue...\n      // https://github.com/less/less.js/issues/2477\n\n\n      args = args.filter(commentFilter).map(function (item) {\n        if (item.type === 'Expression') {\n          var subNodes = item.value.filter(commentFilter);\n\n          if (subNodes.length === 1) {\n            // https://github.com/less/less.js/issues/3616\n            if (item.parens && subNodes[0].op === '/') {\n              return item;\n            }\n\n            return subNodes[0];\n          } else {\n            return new Expression(subNodes);\n          }\n        }\n\n        return item;\n      });\n\n      if (evalArgs === false) {\n        return this.func.apply(this, __spreadArray([this.context], args));\n      }\n\n      return this.func.apply(this, args);\n    };\n\n    return functionCaller;\n  }(); //\n  // A function call node.\n  //\n\n\n  var Call = function Call(name, args, index, currentFileInfo) {\n    this.name = name;\n    this.args = args;\n    this.calc = name === 'calc';\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n  };\n\n  Call.prototype = Object.assign(new Node(), {\n    type: 'Call',\n    accept: function accept(visitor) {\n      if (this.args) {\n        this.args = visitor.visitArray(this.args);\n      }\n    },\n    //\n    // When evaluating a function call,\n    // we either find the function in the functionRegistry,\n    // in which case we call it, passing the  evaluated arguments,\n    // if this returns null or we cannot find the function, we\n    // simply print it out as it appeared originally [2].\n    //\n    // The reason why we evaluate the arguments, is in the case where\n    // we try to pass a variable to a function, like: `saturate(@color)`.\n    // The function should receive the value, not the variable.\n    //\n    eval: function _eval(context) {\n      var _this = this;\n      /**\r\n       * Turn off math for calc(), and switch back on for evaluating nested functions\r\n       */\n\n\n      var currentMathContext = context.mathOn;\n      context.mathOn = !this.calc;\n\n      if (this.calc || context.inCalc) {\n        context.enterCalc();\n      }\n\n      var exitCalc = function exitCalc() {\n        if (_this.calc || context.inCalc) {\n          context.exitCalc();\n        }\n\n        context.mathOn = currentMathContext;\n      };\n\n      var result;\n      var funcCaller = new functionCaller(this.name, context, this.getIndex(), this.fileInfo());\n\n      if (funcCaller.isValid()) {\n        try {\n          result = funcCaller.call(this.args);\n          exitCalc();\n        } catch (e) {\n          if (e.hasOwnProperty('line') && e.hasOwnProperty('column')) {\n            throw e;\n          }\n\n          throw {\n            type: e.type || 'Runtime',\n            message: \"Error evaluating function `\" + this.name + \"`\" + (e.message ? \": \" + e.message : ''),\n            index: this.getIndex(),\n            filename: this.fileInfo().filename,\n            line: e.lineNumber,\n            column: e.columnNumber\n          };\n        }\n      }\n\n      if (result !== null && result !== undefined) {\n        // Results that that are not nodes are cast as Anonymous nodes\n        // Falsy values or booleans are returned as empty nodes\n        if (!(result instanceof Node)) {\n          if (!result || result === true) {\n            result = new Anonymous(null);\n          } else {\n            result = new Anonymous(result.toString());\n          }\n        }\n\n        result._index = this._index;\n        result._fileInfo = this._fileInfo;\n        return result;\n      }\n\n      var args = this.args.map(function (a) {\n        return a.eval(context);\n      });\n      exitCalc();\n      return new Call(this.name, args, this.getIndex(), this.fileInfo());\n    },\n    genCSS: function genCSS(context, output) {\n      output.add(this.name + \"(\", this.fileInfo(), this.getIndex());\n\n      for (var i = 0; i < this.args.length; i++) {\n        this.args[i].genCSS(context, output);\n\n        if (i + 1 < this.args.length) {\n          output.add(', ');\n        }\n      }\n\n      output.add(')');\n    }\n  });\n\n  var Variable = function Variable(name, index, currentFileInfo) {\n    this.name = name;\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n  };\n\n  Variable.prototype = Object.assign(new Node(), {\n    type: 'Variable',\n    eval: function _eval(context) {\n      var variable,\n          name = this.name;\n\n      if (name.indexOf('@@') === 0) {\n        name = \"@\" + new Variable(name.slice(1), this.getIndex(), this.fileInfo()).eval(context).value;\n      }\n\n      if (this.evaluating) {\n        throw {\n          type: 'Name',\n          message: \"Recursive variable definition for \" + name,\n          filename: this.fileInfo().filename,\n          index: this.getIndex()\n        };\n      }\n\n      this.evaluating = true;\n      variable = this.find(context.frames, function (frame) {\n        var v = frame.variable(name);\n\n        if (v) {\n          if (v.important) {\n            var importantScope = context.importantScope[context.importantScope.length - 1];\n            importantScope.important = v.important;\n          } // If in calc, wrap vars in a function call to cascade evaluate args first\n\n\n          if (context.inCalc) {\n            return new Call('_SELF', [v.value]).eval(context);\n          } else {\n            return v.value.eval(context);\n          }\n        }\n      });\n\n      if (variable) {\n        this.evaluating = false;\n        return variable;\n      } else {\n        throw {\n          type: 'Name',\n          message: \"variable \" + name + \" is undefined\",\n          filename: this.fileInfo().filename,\n          index: this.getIndex()\n        };\n      }\n    },\n    find: function find(obj, fun) {\n      for (var i = 0, r = void 0; i < obj.length; i++) {\n        r = fun.call(obj, obj[i]);\n\n        if (r) {\n          return r;\n        }\n      }\n\n      return null;\n    }\n  });\n\n  var Property = function Property(name, index, currentFileInfo) {\n    this.name = name;\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n  };\n\n  Property.prototype = Object.assign(new Node(), {\n    type: 'Property',\n    eval: function _eval(context) {\n      var property;\n      var name = this.name; // TODO: shorten this reference\n\n      var mergeRules = context.pluginManager.less.visitors.ToCSSVisitor.prototype._mergeRules;\n\n      if (this.evaluating) {\n        throw {\n          type: 'Name',\n          message: \"Recursive property reference for \" + name,\n          filename: this.fileInfo().filename,\n          index: this.getIndex()\n        };\n      }\n\n      this.evaluating = true;\n      property = this.find(context.frames, function (frame) {\n        var v;\n        var vArr = frame.property(name);\n\n        if (vArr) {\n          for (var i = 0; i < vArr.length; i++) {\n            v = vArr[i];\n            vArr[i] = new Declaration(v.name, v.value, v.important, v.merge, v.index, v.currentFileInfo, v.inline, v.variable);\n          }\n\n          mergeRules(vArr);\n          v = vArr[vArr.length - 1];\n\n          if (v.important) {\n            var importantScope = context.importantScope[context.importantScope.length - 1];\n            importantScope.important = v.important;\n          }\n\n          v = v.value.eval(context);\n          return v;\n        }\n      });\n\n      if (property) {\n        this.evaluating = false;\n        return property;\n      } else {\n        throw {\n          type: 'Name',\n          message: \"Property '\" + name + \"' is undefined\",\n          filename: this.currentFileInfo.filename,\n          index: this.index\n        };\n      }\n    },\n    find: function find(obj, fun) {\n      for (var i = 0, r = void 0; i < obj.length; i++) {\n        r = fun.call(obj, obj[i]);\n\n        if (r) {\n          return r;\n        }\n      }\n\n      return null;\n    }\n  });\n\n  var Attribute = function Attribute(key, op, value) {\n    this.key = key;\n    this.op = op;\n    this.value = value;\n  };\n\n  Attribute.prototype = Object.assign(new Node(), {\n    type: 'Attribute',\n    eval: function _eval(context) {\n      return new Attribute(this.key.eval ? this.key.eval(context) : this.key, this.op, this.value && this.value.eval ? this.value.eval(context) : this.value);\n    },\n    genCSS: function genCSS(context, output) {\n      output.add(this.toCSS(context));\n    },\n    toCSS: function toCSS(context) {\n      var value = this.key.toCSS ? this.key.toCSS(context) : this.key;\n\n      if (this.op) {\n        value += this.op;\n        value += this.value.toCSS ? this.value.toCSS(context) : this.value;\n      }\n\n      return \"[\" + value + \"]\";\n    }\n  });\n\n  var Quoted = function Quoted(str, content, escaped, index, currentFileInfo) {\n    this.escaped = escaped == null ? true : escaped;\n    this.value = content || '';\n    this.quote = str.charAt(0);\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    this.variableRegex = /@\\{([\\w-]+)\\}/g;\n    this.propRegex = /\\$\\{([\\w-]+)\\}/g;\n    this.allowRoot = escaped;\n  };\n\n  Quoted.prototype = Object.assign(new Node(), {\n    type: 'Quoted',\n    genCSS: function genCSS(context, output) {\n      if (!this.escaped) {\n        output.add(this.quote, this.fileInfo(), this.getIndex());\n      }\n\n      output.add(this.value);\n\n      if (!this.escaped) {\n        output.add(this.quote);\n      }\n    },\n    containsVariables: function containsVariables() {\n      return this.value.match(this.variableRegex);\n    },\n    eval: function _eval(context) {\n      var that = this;\n      var value = this.value;\n\n      var variableReplacement = function variableReplacement(_, name) {\n        var v = new Variable(\"@\" + name, that.getIndex(), that.fileInfo()).eval(context, true);\n        return v instanceof Quoted ? v.value : v.toCSS();\n      };\n\n      var propertyReplacement = function propertyReplacement(_, name) {\n        var v = new Property(\"$\" + name, that.getIndex(), that.fileInfo()).eval(context, true);\n        return v instanceof Quoted ? v.value : v.toCSS();\n      };\n\n      function iterativeReplace(value, regexp, replacementFnc) {\n        var evaluatedValue = value;\n\n        do {\n          value = evaluatedValue.toString();\n          evaluatedValue = value.replace(regexp, replacementFnc);\n        } while (value !== evaluatedValue);\n\n        return evaluatedValue;\n      }\n\n      value = iterativeReplace(value, this.variableRegex, variableReplacement);\n      value = iterativeReplace(value, this.propRegex, propertyReplacement);\n      return new Quoted(this.quote + value + this.quote, value, this.escaped, this.getIndex(), this.fileInfo());\n    },\n    compare: function compare(other) {\n      // when comparing quoted strings allow the quote to differ\n      if (other.type === 'Quoted' && !this.escaped && !other.escaped) {\n        return Node.numericCompare(this.value, other.value);\n      } else {\n        return other.toCSS && this.toCSS() === other.toCSS() ? 0 : undefined;\n      }\n    }\n  });\n\n  function escapePath(path) {\n    return path.replace(/[\\(\\)'\"\\s]/g, function (match) {\n      return \"\\\\\" + match;\n    });\n  }\n\n  var URL = function URL(val, index, currentFileInfo, isEvald) {\n    this.value = val;\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    this.isEvald = isEvald;\n  };\n\n  URL.prototype = Object.assign(new Node(), {\n    type: 'Url',\n    accept: function accept(visitor) {\n      this.value = visitor.visit(this.value);\n    },\n    genCSS: function genCSS(context, output) {\n      output.add('url(');\n      this.value.genCSS(context, output);\n      output.add(')');\n    },\n    eval: function _eval(context) {\n      var val = this.value.eval(context);\n      var rootpath;\n\n      if (!this.isEvald) {\n        // Add the rootpath if the URL requires a rewrite\n        rootpath = this.fileInfo() && this.fileInfo().rootpath;\n\n        if (typeof rootpath === 'string' && typeof val.value === 'string' && context.pathRequiresRewrite(val.value)) {\n          if (!val.quote) {\n            rootpath = escapePath(rootpath);\n          }\n\n          val.value = context.rewritePath(val.value, rootpath);\n        } else {\n          val.value = context.normalizePath(val.value);\n        } // Add url args if enabled\n\n\n        if (context.urlArgs) {\n          if (!val.value.match(/^\\s*data:/)) {\n            var delimiter = val.value.indexOf('?') === -1 ? '?' : '&';\n            var urlArgs = delimiter + context.urlArgs;\n\n            if (val.value.indexOf('#') !== -1) {\n              val.value = val.value.replace('#', urlArgs + \"#\");\n            } else {\n              val.value += urlArgs;\n            }\n          }\n        }\n      }\n\n      return new URL(val, this.getIndex(), this.fileInfo(), true);\n    }\n  });\n\n  var Media = function Media(value, features, index, currentFileInfo, visibilityInfo) {\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    var selectors = new Selector([], null, null, this._index, this._fileInfo).createEmptySelectors();\n    this.features = new Value(features);\n    this.rules = [new Ruleset(selectors, value)];\n    this.rules[0].allowImports = true;\n    this.copyVisibilityInfo(visibilityInfo);\n    this.allowRoot = true;\n    this.setParent(selectors, this);\n    this.setParent(this.features, this);\n    this.setParent(this.rules, this);\n  };\n\n  Media.prototype = Object.assign(new AtRule(), {\n    type: 'Media',\n    isRulesetLike: function isRulesetLike() {\n      return true;\n    },\n    accept: function accept(visitor) {\n      if (this.features) {\n        this.features = visitor.visit(this.features);\n      }\n\n      if (this.rules) {\n        this.rules = visitor.visitArray(this.rules);\n      }\n    },\n    genCSS: function genCSS(context, output) {\n      output.add('@media ', this._fileInfo, this._index);\n      this.features.genCSS(context, output);\n      this.outputRuleset(context, output, this.rules);\n    },\n    eval: function _eval(context) {\n      if (!context.mediaBlocks) {\n        context.mediaBlocks = [];\n        context.mediaPath = [];\n      }\n\n      var media = new Media(null, [], this._index, this._fileInfo, this.visibilityInfo());\n\n      if (this.debugInfo) {\n        this.rules[0].debugInfo = this.debugInfo;\n        media.debugInfo = this.debugInfo;\n      }\n\n      media.features = this.features.eval(context);\n      context.mediaPath.push(media);\n      context.mediaBlocks.push(media);\n      this.rules[0].functionRegistry = context.frames[0].functionRegistry.inherit();\n      context.frames.unshift(this.rules[0]);\n      media.rules = [this.rules[0].eval(context)];\n      context.frames.shift();\n      context.mediaPath.pop();\n      return context.mediaPath.length === 0 ? media.evalTop(context) : media.evalNested(context);\n    },\n    evalTop: function evalTop(context) {\n      var result = this; // Render all dependent Media blocks.\n\n      if (context.mediaBlocks.length > 1) {\n        var selectors = new Selector([], null, null, this.getIndex(), this.fileInfo()).createEmptySelectors();\n        result = new Ruleset(selectors, context.mediaBlocks);\n        result.multiMedia = true;\n        result.copyVisibilityInfo(this.visibilityInfo());\n        this.setParent(result, this);\n      }\n\n      delete context.mediaBlocks;\n      delete context.mediaPath;\n      return result;\n    },\n    evalNested: function evalNested(context) {\n      var i;\n      var value;\n      var path = context.mediaPath.concat([this]); // Extract the media-query conditions separated with `,` (OR).\n\n      for (i = 0; i < path.length; i++) {\n        value = path[i].features instanceof Value ? path[i].features.value : path[i].features;\n        path[i] = Array.isArray(value) ? value : [value];\n      } // Trace all permutations to generate the resulting media-query.\n      //\n      // (a, b and c) with nested (d, e) ->\n      //    a and d\n      //    a and e\n      //    b and c and d\n      //    b and c and e\n\n\n      this.features = new Value(this.permute(path).map(function (path) {\n        path = path.map(function (fragment) {\n          return fragment.toCSS ? fragment : new Anonymous(fragment);\n        });\n\n        for (i = path.length - 1; i > 0; i--) {\n          path.splice(i, 0, new Anonymous('and'));\n        }\n\n        return new Expression(path);\n      }));\n      this.setParent(this.features, this); // Fake a tree-node that doesn't output anything.\n\n      return new Ruleset([], []);\n    },\n    permute: function permute(arr) {\n      if (arr.length === 0) {\n        return [];\n      } else if (arr.length === 1) {\n        return arr[0];\n      } else {\n        var result = [];\n        var rest = this.permute(arr.slice(1));\n\n        for (var i = 0; i < rest.length; i++) {\n          for (var j = 0; j < arr[0].length; j++) {\n            result.push([arr[0][j]].concat(rest[i]));\n          }\n        }\n\n        return result;\n      }\n    },\n    bubbleSelectors: function bubbleSelectors(selectors) {\n      if (!selectors) {\n        return;\n      }\n\n      this.rules = [new Ruleset(copyArray(selectors), [this.rules[0]])];\n      this.setParent(this.rules, this);\n    }\n  }); //\n  // CSS @import node\n  //\n  // The general strategy here is that we don't want to wait\n  // for the parsing to be completed, before we start importing\n  // the file. That's because in the context of a browser,\n  // most of the time will be spent waiting for the server to respond.\n  //\n  // On creation, we push the import path to our import queue, though\n  // `import,push`, we also pass it a callback, which it'll call once\n  // the file has been fetched, and parsed.\n  //\n\n  var Import = function Import(path, features, options, index, currentFileInfo, visibilityInfo) {\n    this.options = options;\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    this.path = path;\n    this.features = features;\n    this.allowRoot = true;\n\n    if (this.options.less !== undefined || this.options.inline) {\n      this.css = !this.options.less || this.options.inline;\n    } else {\n      var pathValue = this.getPath();\n\n      if (pathValue && /[#\\.\\&\\?]css([\\?;].*)?$/.test(pathValue)) {\n        this.css = true;\n      }\n    }\n\n    this.copyVisibilityInfo(visibilityInfo);\n    this.setParent(this.features, this);\n    this.setParent(this.path, this);\n  };\n\n  Import.prototype = Object.assign(new Node(), {\n    type: 'Import',\n    accept: function accept(visitor) {\n      if (this.features) {\n        this.features = visitor.visit(this.features);\n      }\n\n      this.path = visitor.visit(this.path);\n\n      if (!this.options.isPlugin && !this.options.inline && this.root) {\n        this.root = visitor.visit(this.root);\n      }\n    },\n    genCSS: function genCSS(context, output) {\n      if (this.css && this.path._fileInfo.reference === undefined) {\n        output.add('@import ', this._fileInfo, this._index);\n        this.path.genCSS(context, output);\n\n        if (this.features) {\n          output.add(' ');\n          this.features.genCSS(context, output);\n        }\n\n        output.add(';');\n      }\n    },\n    getPath: function getPath() {\n      return this.path instanceof URL ? this.path.value.value : this.path.value;\n    },\n    isVariableImport: function isVariableImport() {\n      var path = this.path;\n\n      if (path instanceof URL) {\n        path = path.value;\n      }\n\n      if (path instanceof Quoted) {\n        return path.containsVariables();\n      }\n\n      return true;\n    },\n    evalForImport: function evalForImport(context) {\n      var path = this.path;\n\n      if (path instanceof URL) {\n        path = path.value;\n      }\n\n      return new Import(path.eval(context), this.features, this.options, this._index, this._fileInfo, this.visibilityInfo());\n    },\n    evalPath: function evalPath(context) {\n      var path = this.path.eval(context);\n      var fileInfo = this._fileInfo;\n\n      if (!(path instanceof URL)) {\n        // Add the rootpath if the URL requires a rewrite\n        var pathValue = path.value;\n\n        if (fileInfo && pathValue && context.pathRequiresRewrite(pathValue)) {\n          path.value = context.rewritePath(pathValue, fileInfo.rootpath);\n        } else {\n          path.value = context.normalizePath(path.value);\n        }\n      }\n\n      return path;\n    },\n    eval: function _eval(context) {\n      var result = this.doEval(context);\n\n      if (this.options.reference || this.blocksVisibility()) {\n        if (result.length || result.length === 0) {\n          result.forEach(function (node) {\n            node.addVisibilityBlock();\n          });\n        } else {\n          result.addVisibilityBlock();\n        }\n      }\n\n      return result;\n    },\n    doEval: function doEval(context) {\n      var ruleset;\n      var registry;\n      var features = this.features && this.features.eval(context);\n\n      if (this.options.isPlugin) {\n        if (this.root && this.root.eval) {\n          try {\n            this.root.eval(context);\n          } catch (e) {\n            e.message = 'Plugin error during evaluation';\n            throw new LessError(e, this.root.imports, this.root.filename);\n          }\n        }\n\n        registry = context.frames[0] && context.frames[0].functionRegistry;\n\n        if (registry && this.root && this.root.functions) {\n          registry.addMultiple(this.root.functions);\n        }\n\n        return [];\n      }\n\n      if (this.skip) {\n        if (typeof this.skip === 'function') {\n          this.skip = this.skip();\n        }\n\n        if (this.skip) {\n          return [];\n        }\n      }\n\n      if (this.options.inline) {\n        var contents = new Anonymous(this.root, 0, {\n          filename: this.importedFilename,\n          reference: this.path._fileInfo && this.path._fileInfo.reference\n        }, true, true);\n        return this.features ? new Media([contents], this.features.value) : [contents];\n      } else if (this.css) {\n        var newImport = new Import(this.evalPath(context), features, this.options, this._index);\n\n        if (!newImport.css && this.error) {\n          throw this.error;\n        }\n\n        return newImport;\n      } else if (this.root) {\n        ruleset = new Ruleset(null, copyArray(this.root.rules));\n        ruleset.evalImports(context);\n        return this.features ? new Media(ruleset.rules, this.features.value) : ruleset.rules;\n      } else {\n        return [];\n      }\n    }\n  });\n\n  var JsEvalNode = function JsEvalNode() {};\n\n  JsEvalNode.prototype = Object.assign(new Node(), {\n    evaluateJavaScript: function evaluateJavaScript(expression, context) {\n      var result;\n      var that = this;\n      var evalContext = {};\n\n      if (!context.javascriptEnabled) {\n        throw {\n          message: 'Inline JavaScript is not enabled. Is it set in your options?',\n          filename: this.fileInfo().filename,\n          index: this.getIndex()\n        };\n      }\n\n      expression = expression.replace(/@\\{([\\w-]+)\\}/g, function (_, name) {\n        return that.jsify(new Variable(\"@\" + name, that.getIndex(), that.fileInfo()).eval(context));\n      });\n\n      try {\n        expression = new Function(\"return (\" + expression + \")\");\n      } catch (e) {\n        throw {\n          message: \"JavaScript evaluation error: \" + e.message + \" from `\" + expression + \"`\",\n          filename: this.fileInfo().filename,\n          index: this.getIndex()\n        };\n      }\n\n      var variables = context.frames[0].variables();\n\n      for (var k in variables) {\n        if (variables.hasOwnProperty(k)) {\n          /* jshint loopfunc:true */\n          evalContext[k.slice(1)] = {\n            value: variables[k].value,\n            toJS: function toJS() {\n              return this.value.eval(context).toCSS();\n            }\n          };\n        }\n      }\n\n      try {\n        result = expression.call(evalContext);\n      } catch (e) {\n        throw {\n          message: \"JavaScript evaluation error: '\" + e.name + \": \" + e.message.replace(/[\"]/g, '\\'') + \"'\",\n          filename: this.fileInfo().filename,\n          index: this.getIndex()\n        };\n      }\n\n      return result;\n    },\n    jsify: function jsify(obj) {\n      if (Array.isArray(obj.value) && obj.value.length > 1) {\n        return \"[\" + obj.value.map(function (v) {\n          return v.toCSS();\n        }).join(', ') + \"]\";\n      } else {\n        return obj.toCSS();\n      }\n    }\n  });\n\n  var JavaScript = function JavaScript(string, escaped, index, currentFileInfo) {\n    this.escaped = escaped;\n    this.expression = string;\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n  };\n\n  JavaScript.prototype = Object.assign(new JsEvalNode(), {\n    type: 'JavaScript',\n    eval: function _eval(context) {\n      var result = this.evaluateJavaScript(this.expression, context);\n      var type = typeof result;\n\n      if (type === 'number' && !isNaN(result)) {\n        return new Dimension(result);\n      } else if (type === 'string') {\n        return new Quoted(\"\\\"\" + result + \"\\\"\", result, this.escaped, this._index);\n      } else if (Array.isArray(result)) {\n        return new Anonymous(result.join(', '));\n      } else {\n        return new Anonymous(result);\n      }\n    }\n  });\n\n  var Assignment = function Assignment(key, val) {\n    this.key = key;\n    this.value = val;\n  };\n\n  Assignment.prototype = Object.assign(new Node(), {\n    type: 'Assignment',\n    accept: function accept(visitor) {\n      this.value = visitor.visit(this.value);\n    },\n    eval: function _eval(context) {\n      if (this.value.eval) {\n        return new Assignment(this.key, this.value.eval(context));\n      }\n\n      return this;\n    },\n    genCSS: function genCSS(context, output) {\n      output.add(this.key + \"=\");\n\n      if (this.value.genCSS) {\n        this.value.genCSS(context, output);\n      } else {\n        output.add(this.value);\n      }\n    }\n  });\n\n  var Condition = function Condition(op, l, r, i, negate) {\n    this.op = op.trim();\n    this.lvalue = l;\n    this.rvalue = r;\n    this._index = i;\n    this.negate = negate;\n  };\n\n  Condition.prototype = Object.assign(new Node(), {\n    type: 'Condition',\n    accept: function accept(visitor) {\n      this.lvalue = visitor.visit(this.lvalue);\n      this.rvalue = visitor.visit(this.rvalue);\n    },\n    eval: function _eval(context) {\n      var result = function (op, a, b) {\n        switch (op) {\n          case 'and':\n            return a && b;\n\n          case 'or':\n            return a || b;\n\n          default:\n            switch (Node.compare(a, b)) {\n              case -1:\n                return op === '<' || op === '=<' || op === '<=';\n\n              case 0:\n                return op === '=' || op === '>=' || op === '=<' || op === '<=';\n\n              case 1:\n                return op === '>' || op === '>=';\n\n              default:\n                return false;\n            }\n\n        }\n      }(this.op, this.lvalue.eval(context), this.rvalue.eval(context));\n\n      return this.negate ? !result : result;\n    }\n  });\n\n  var UnicodeDescriptor = function UnicodeDescriptor(value) {\n    this.value = value;\n  };\n\n  UnicodeDescriptor.prototype = Object.assign(new Node(), {\n    type: 'UnicodeDescriptor'\n  });\n\n  var Negative = function Negative(node) {\n    this.value = node;\n  };\n\n  Negative.prototype = Object.assign(new Node(), {\n    type: 'Negative',\n    genCSS: function genCSS(context, output) {\n      output.add('-');\n      this.value.genCSS(context, output);\n    },\n    eval: function _eval(context) {\n      if (context.isMathOn()) {\n        return new Operation('*', [new Dimension(-1), this.value]).eval(context);\n      }\n\n      return new Negative(this.value.eval(context));\n    }\n  });\n\n  var Extend = function Extend(selector, option, index, currentFileInfo, visibilityInfo) {\n    this.selector = selector;\n    this.option = option;\n    this.object_id = Extend.next_id++;\n    this.parent_ids = [this.object_id];\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    this.copyVisibilityInfo(visibilityInfo);\n    this.allowRoot = true;\n\n    switch (option) {\n      case 'all':\n        this.allowBefore = true;\n        this.allowAfter = true;\n        break;\n\n      default:\n        this.allowBefore = false;\n        this.allowAfter = false;\n        break;\n    }\n\n    this.setParent(this.selector, this);\n  };\n\n  Extend.prototype = Object.assign(new Node(), {\n    type: 'Extend',\n    accept: function accept(visitor) {\n      this.selector = visitor.visit(this.selector);\n    },\n    eval: function _eval(context) {\n      return new Extend(this.selector.eval(context), this.option, this.getIndex(), this.fileInfo(), this.visibilityInfo());\n    },\n    clone: function clone(context) {\n      return new Extend(this.selector, this.option, this.getIndex(), this.fileInfo(), this.visibilityInfo());\n    },\n    // it concatenates (joins) all selectors in selector array\n    findSelfSelectors: function findSelfSelectors(selectors) {\n      var selfElements = [],\n          i,\n          selectorElements;\n\n      for (i = 0; i < selectors.length; i++) {\n        selectorElements = selectors[i].elements; // duplicate the logic in genCSS function inside the selector node.\n        // future TODO - move both logics into the selector joiner visitor\n\n        if (i > 0 && selectorElements.length && selectorElements[0].combinator.value === '') {\n          selectorElements[0].combinator.value = ' ';\n        }\n\n        selfElements = selfElements.concat(selectors[i].elements);\n      }\n\n      this.selfSelectors = [new Selector(selfElements)];\n      this.selfSelectors[0].copyVisibilityInfo(this.visibilityInfo());\n    }\n  });\n  Extend.next_id = 0;\n\n  var VariableCall = function VariableCall(variable, index, currentFileInfo) {\n    this.variable = variable;\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    this.allowRoot = true;\n  };\n\n  VariableCall.prototype = Object.assign(new Node(), {\n    type: 'VariableCall',\n    eval: function _eval(context) {\n      var rules;\n      var detachedRuleset = new Variable(this.variable, this.getIndex(), this.fileInfo()).eval(context);\n      var error = new LessError({\n        message: \"Could not evaluate variable call \" + this.variable\n      });\n\n      if (!detachedRuleset.ruleset) {\n        if (detachedRuleset.rules) {\n          rules = detachedRuleset;\n        } else if (Array.isArray(detachedRuleset)) {\n          rules = new Ruleset('', detachedRuleset);\n        } else if (Array.isArray(detachedRuleset.value)) {\n          rules = new Ruleset('', detachedRuleset.value);\n        } else {\n          throw error;\n        }\n\n        detachedRuleset = new DetachedRuleset(rules);\n      }\n\n      if (detachedRuleset.ruleset) {\n        return detachedRuleset.callEval(context);\n      }\n\n      throw error;\n    }\n  });\n\n  var NamespaceValue = function NamespaceValue(ruleCall, lookups, index, fileInfo) {\n    this.value = ruleCall;\n    this.lookups = lookups;\n    this._index = index;\n    this._fileInfo = fileInfo;\n  };\n\n  NamespaceValue.prototype = Object.assign(new Node(), {\n    type: 'NamespaceValue',\n    eval: function _eval(context) {\n      var i,\n          name,\n          rules = this.value.eval(context);\n\n      for (i = 0; i < this.lookups.length; i++) {\n        name = this.lookups[i];\n        /**\r\n         * Eval'd DRs return rulesets.\r\n         * Eval'd mixins return rules, so let's make a ruleset if we need it.\r\n         * We need to do this because of late parsing of values\r\n         */\n\n        if (Array.isArray(rules)) {\n          rules = new Ruleset([new Selector()], rules);\n        }\n\n        if (name === '') {\n          rules = rules.lastDeclaration();\n        } else if (name.charAt(0) === '@') {\n          if (name.charAt(1) === '@') {\n            name = \"@\" + new Variable(name.substr(1)).eval(context).value;\n          }\n\n          if (rules.variables) {\n            rules = rules.variable(name);\n          }\n\n          if (!rules) {\n            throw {\n              type: 'Name',\n              message: \"variable \" + name + \" not found\",\n              filename: this.fileInfo().filename,\n              index: this.getIndex()\n            };\n          }\n        } else {\n          if (name.substring(0, 2) === '$@') {\n            name = \"$\" + new Variable(name.substr(1)).eval(context).value;\n          } else {\n            name = name.charAt(0) === '$' ? name : \"$\" + name;\n          }\n\n          if (rules.properties) {\n            rules = rules.property(name);\n          }\n\n          if (!rules) {\n            throw {\n              type: 'Name',\n              message: \"property \\\"\" + name.substr(1) + \"\\\" not found\",\n              filename: this.fileInfo().filename,\n              index: this.getIndex()\n            };\n          } // Properties are an array of values, since a ruleset can have multiple props.\n          // We pick the last one (the \"cascaded\" value)\n\n\n          rules = rules[rules.length - 1];\n        }\n\n        if (rules.value) {\n          rules = rules.eval(context).value;\n        }\n\n        if (rules.ruleset) {\n          rules = rules.ruleset.eval(context);\n        }\n      }\n\n      return rules;\n    }\n  });\n\n  var Definition = function Definition(name, params, rules, condition, variadic, frames, visibilityInfo) {\n    this.name = name || 'anonymous mixin';\n    this.selectors = [new Selector([new Element(null, name, false, this._index, this._fileInfo)])];\n    this.params = params;\n    this.condition = condition;\n    this.variadic = variadic;\n    this.arity = params.length;\n    this.rules = rules;\n    this._lookups = {};\n    var optionalParameters = [];\n    this.required = params.reduce(function (count, p) {\n      if (!p.name || p.name && !p.value) {\n        return count + 1;\n      } else {\n        optionalParameters.push(p.name);\n        return count;\n      }\n    }, 0);\n    this.optionalParameters = optionalParameters;\n    this.frames = frames;\n    this.copyVisibilityInfo(visibilityInfo);\n    this.allowRoot = true;\n  };\n\n  Definition.prototype = Object.assign(new Ruleset(), {\n    type: 'MixinDefinition',\n    evalFirst: true,\n    accept: function accept(visitor) {\n      if (this.params && this.params.length) {\n        this.params = visitor.visitArray(this.params);\n      }\n\n      this.rules = visitor.visitArray(this.rules);\n\n      if (this.condition) {\n        this.condition = visitor.visit(this.condition);\n      }\n    },\n    evalParams: function evalParams(context, mixinEnv, args, evaldArguments) {\n      /* jshint boss:true */\n      var frame = new Ruleset(null, null);\n      var varargs;\n      var arg;\n      var params = copyArray(this.params);\n      var i;\n      var j;\n      var val;\n      var name;\n      var isNamedFound;\n      var argIndex;\n      var argsLength = 0;\n\n      if (mixinEnv.frames && mixinEnv.frames[0] && mixinEnv.frames[0].functionRegistry) {\n        frame.functionRegistry = mixinEnv.frames[0].functionRegistry.inherit();\n      }\n\n      mixinEnv = new contexts.Eval(mixinEnv, [frame].concat(mixinEnv.frames));\n\n      if (args) {\n        args = copyArray(args);\n        argsLength = args.length;\n\n        for (i = 0; i < argsLength; i++) {\n          arg = args[i];\n\n          if (name = arg && arg.name) {\n            isNamedFound = false;\n\n            for (j = 0; j < params.length; j++) {\n              if (!evaldArguments[j] && name === params[j].name) {\n                evaldArguments[j] = arg.value.eval(context);\n                frame.prependRule(new Declaration(name, arg.value.eval(context)));\n                isNamedFound = true;\n                break;\n              }\n            }\n\n            if (isNamedFound) {\n              args.splice(i, 1);\n              i--;\n              continue;\n            } else {\n              throw {\n                type: 'Runtime',\n                message: \"Named argument for \" + this.name + \" \" + args[i].name + \" not found\"\n              };\n            }\n          }\n        }\n      }\n\n      argIndex = 0;\n\n      for (i = 0; i < params.length; i++) {\n        if (evaldArguments[i]) {\n          continue;\n        }\n\n        arg = args && args[argIndex];\n\n        if (name = params[i].name) {\n          if (params[i].variadic) {\n            varargs = [];\n\n            for (j = argIndex; j < argsLength; j++) {\n              varargs.push(args[j].value.eval(context));\n            }\n\n            frame.prependRule(new Declaration(name, new Expression(varargs).eval(context)));\n          } else {\n            val = arg && arg.value;\n\n            if (val) {\n              // This was a mixin call, pass in a detached ruleset of it's eval'd rules\n              if (Array.isArray(val)) {\n                val = new DetachedRuleset(new Ruleset('', val));\n              } else {\n                val = val.eval(context);\n              }\n            } else if (params[i].value) {\n              val = params[i].value.eval(mixinEnv);\n              frame.resetCache();\n            } else {\n              throw {\n                type: 'Runtime',\n                message: \"wrong number of arguments for \" + this.name + \" (\" + argsLength + \" for \" + this.arity + \")\"\n              };\n            }\n\n            frame.prependRule(new Declaration(name, val));\n            evaldArguments[i] = val;\n          }\n        }\n\n        if (params[i].variadic && args) {\n          for (j = argIndex; j < argsLength; j++) {\n            evaldArguments[j] = args[j].value.eval(context);\n          }\n        }\n\n        argIndex++;\n      }\n\n      return frame;\n    },\n    makeImportant: function makeImportant() {\n      var rules = !this.rules ? this.rules : this.rules.map(function (r) {\n        if (r.makeImportant) {\n          return r.makeImportant(true);\n        } else {\n          return r;\n        }\n      });\n      var result = new Definition(this.name, this.params, rules, this.condition, this.variadic, this.frames);\n      return result;\n    },\n    eval: function _eval(context) {\n      return new Definition(this.name, this.params, this.rules, this.condition, this.variadic, this.frames || copyArray(context.frames));\n    },\n    evalCall: function evalCall(context, args, important) {\n      var _arguments = [];\n      var mixinFrames = this.frames ? this.frames.concat(context.frames) : context.frames;\n      var frame = this.evalParams(context, new contexts.Eval(context, mixinFrames), args, _arguments);\n      var rules;\n      var ruleset;\n      frame.prependRule(new Declaration('@arguments', new Expression(_arguments).eval(context)));\n      rules = copyArray(this.rules);\n      ruleset = new Ruleset(null, rules);\n      ruleset.originalRuleset = this;\n      ruleset = ruleset.eval(new contexts.Eval(context, [this, frame].concat(mixinFrames)));\n\n      if (important) {\n        ruleset = ruleset.makeImportant();\n      }\n\n      return ruleset;\n    },\n    matchCondition: function matchCondition(args, context) {\n      if (this.condition && !this.condition.eval(new contexts.Eval(context, [this.evalParams(context,\n      /* the parameter variables */\n      new contexts.Eval(context, this.frames ? this.frames.concat(context.frames) : context.frames), args, [])].concat(this.frames || []) // the parent namespace/mixin frames\n      .concat(context.frames)))) {\n        // the current environment frames\n        return false;\n      }\n\n      return true;\n    },\n    matchArgs: function matchArgs(args, context) {\n      var allArgsCnt = args && args.length || 0;\n      var len;\n      var optionalParameters = this.optionalParameters;\n      var requiredArgsCnt = !args ? 0 : args.reduce(function (count, p) {\n        if (optionalParameters.indexOf(p.name) < 0) {\n          return count + 1;\n        } else {\n          return count;\n        }\n      }, 0);\n\n      if (!this.variadic) {\n        if (requiredArgsCnt < this.required) {\n          return false;\n        }\n\n        if (allArgsCnt > this.params.length) {\n          return false;\n        }\n      } else {\n        if (requiredArgsCnt < this.required - 1) {\n          return false;\n        }\n      } // check patterns\n\n\n      len = Math.min(requiredArgsCnt, this.arity);\n\n      for (var i = 0; i < len; i++) {\n        if (!this.params[i].name && !this.params[i].variadic) {\n          if (args[i].value.eval(context).toCSS() != this.params[i].value.eval(context).toCSS()) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    }\n  });\n\n  var MixinCall = function MixinCall(elements, args, index, currentFileInfo, important) {\n    this.selector = new Selector(elements);\n    this.arguments = args || [];\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    this.important = important;\n    this.allowRoot = true;\n    this.setParent(this.selector, this);\n  };\n\n  MixinCall.prototype = Object.assign(new Node(), {\n    type: 'MixinCall',\n    accept: function accept(visitor) {\n      if (this.selector) {\n        this.selector = visitor.visit(this.selector);\n      }\n\n      if (this.arguments.length) {\n        this.arguments = visitor.visitArray(this.arguments);\n      }\n    },\n    eval: function _eval(context) {\n      var mixins;\n      var mixin;\n      var mixinPath;\n      var args = [];\n      var arg;\n      var argValue;\n      var rules = [];\n      var match = false;\n      var i;\n      var m;\n      var f;\n      var isRecursive;\n      var isOneFound;\n      var candidates = [];\n      var candidate;\n      var conditionResult = [];\n      var defaultResult;\n      var defFalseEitherCase = -1;\n      var defNone = 0;\n      var defTrue = 1;\n      var defFalse = 2;\n      var count;\n      var originalRuleset;\n      var noArgumentsFilter;\n      this.selector = this.selector.eval(context);\n\n      function calcDefGroup(mixin, mixinPath) {\n        var f, p, namespace;\n\n        for (f = 0; f < 2; f++) {\n          conditionResult[f] = true;\n          defaultFunc.value(f);\n\n          for (p = 0; p < mixinPath.length && conditionResult[f]; p++) {\n            namespace = mixinPath[p];\n\n            if (namespace.matchCondition) {\n              conditionResult[f] = conditionResult[f] && namespace.matchCondition(null, context);\n            }\n          }\n\n          if (mixin.matchCondition) {\n            conditionResult[f] = conditionResult[f] && mixin.matchCondition(args, context);\n          }\n        }\n\n        if (conditionResult[0] || conditionResult[1]) {\n          if (conditionResult[0] != conditionResult[1]) {\n            return conditionResult[1] ? defTrue : defFalse;\n          }\n\n          return defNone;\n        }\n\n        return defFalseEitherCase;\n      }\n\n      for (i = 0; i < this.arguments.length; i++) {\n        arg = this.arguments[i];\n        argValue = arg.value.eval(context);\n\n        if (arg.expand && Array.isArray(argValue.value)) {\n          argValue = argValue.value;\n\n          for (m = 0; m < argValue.length; m++) {\n            args.push({\n              value: argValue[m]\n            });\n          }\n        } else {\n          args.push({\n            name: arg.name,\n            value: argValue\n          });\n        }\n      }\n\n      noArgumentsFilter = function noArgumentsFilter(rule) {\n        return rule.matchArgs(null, context);\n      };\n\n      for (i = 0; i < context.frames.length; i++) {\n        if ((mixins = context.frames[i].find(this.selector, null, noArgumentsFilter)).length > 0) {\n          isOneFound = true; // To make `default()` function independent of definition order we have two \"subpasses\" here.\n          // At first we evaluate each guard *twice* (with `default() == true` and `default() == false`),\n          // and build candidate list with corresponding flags. Then, when we know all possible matches,\n          // we make a final decision.\n\n          for (m = 0; m < mixins.length; m++) {\n            mixin = mixins[m].rule;\n            mixinPath = mixins[m].path;\n            isRecursive = false;\n\n            for (f = 0; f < context.frames.length; f++) {\n              if (!(mixin instanceof Definition) && mixin === (context.frames[f].originalRuleset || context.frames[f])) {\n                isRecursive = true;\n                break;\n              }\n            }\n\n            if (isRecursive) {\n              continue;\n            }\n\n            if (mixin.matchArgs(args, context)) {\n              candidate = {\n                mixin: mixin,\n                group: calcDefGroup(mixin, mixinPath)\n              };\n\n              if (candidate.group !== defFalseEitherCase) {\n                candidates.push(candidate);\n              }\n\n              match = true;\n            }\n          }\n\n          defaultFunc.reset();\n          count = [0, 0, 0];\n\n          for (m = 0; m < candidates.length; m++) {\n            count[candidates[m].group]++;\n          }\n\n          if (count[defNone] > 0) {\n            defaultResult = defFalse;\n          } else {\n            defaultResult = defTrue;\n\n            if (count[defTrue] + count[defFalse] > 1) {\n              throw {\n                type: 'Runtime',\n                message: \"Ambiguous use of `default()` found when matching for `\" + this.format(args) + \"`\",\n                index: this.getIndex(),\n                filename: this.fileInfo().filename\n              };\n            }\n          }\n\n          for (m = 0; m < candidates.length; m++) {\n            candidate = candidates[m].group;\n\n            if (candidate === defNone || candidate === defaultResult) {\n              try {\n                mixin = candidates[m].mixin;\n\n                if (!(mixin instanceof Definition)) {\n                  originalRuleset = mixin.originalRuleset || mixin;\n                  mixin = new Definition('', [], mixin.rules, null, false, null, originalRuleset.visibilityInfo());\n                  mixin.originalRuleset = originalRuleset;\n                }\n\n                var newRules = mixin.evalCall(context, args, this.important).rules;\n\n                this._setVisibilityToReplacement(newRules);\n\n                Array.prototype.push.apply(rules, newRules);\n              } catch (e) {\n                throw {\n                  message: e.message,\n                  index: this.getIndex(),\n                  filename: this.fileInfo().filename,\n                  stack: e.stack\n                };\n              }\n            }\n          }\n\n          if (match) {\n            return rules;\n          }\n        }\n      }\n\n      if (isOneFound) {\n        throw {\n          type: 'Runtime',\n          message: \"No matching definition was found for `\" + this.format(args) + \"`\",\n          index: this.getIndex(),\n          filename: this.fileInfo().filename\n        };\n      } else {\n        throw {\n          type: 'Name',\n          message: this.selector.toCSS().trim() + \" is undefined\",\n          index: this.getIndex(),\n          filename: this.fileInfo().filename\n        };\n      }\n    },\n    _setVisibilityToReplacement: function _setVisibilityToReplacement(replacement) {\n      var i, rule;\n\n      if (this.blocksVisibility()) {\n        for (i = 0; i < replacement.length; i++) {\n          rule = replacement[i];\n          rule.addVisibilityBlock();\n        }\n      }\n    },\n    format: function format(args) {\n      return this.selector.toCSS().trim() + \"(\" + (args ? args.map(function (a) {\n        var argValue = '';\n\n        if (a.name) {\n          argValue += a.name + \":\";\n        }\n\n        if (a.value.toCSS) {\n          argValue += a.value.toCSS();\n        } else {\n          argValue += '???';\n        }\n\n        return argValue;\n      }).join(', ') : '') + \")\";\n    }\n  });\n  var tree = {\n    Node: Node,\n    Color: Color,\n    AtRule: AtRule,\n    DetachedRuleset: DetachedRuleset,\n    Operation: Operation,\n    Dimension: Dimension,\n    Unit: Unit,\n    Keyword: Keyword,\n    Variable: Variable,\n    Property: Property,\n    Ruleset: Ruleset,\n    Element: Element,\n    Attribute: Attribute,\n    Combinator: Combinator,\n    Selector: Selector,\n    Quoted: Quoted,\n    Expression: Expression,\n    Declaration: Declaration,\n    Call: Call,\n    URL: URL,\n    Import: Import,\n    Comment: Comment,\n    Anonymous: Anonymous,\n    Value: Value,\n    JavaScript: JavaScript,\n    Assignment: Assignment,\n    Condition: Condition,\n    Paren: Paren,\n    Media: Media,\n    UnicodeDescriptor: UnicodeDescriptor,\n    Negative: Negative,\n    Extend: Extend,\n    VariableCall: VariableCall,\n    NamespaceValue: NamespaceValue,\n    mixin: {\n      Call: MixinCall,\n      Definition: Definition\n    }\n  };\n\n  var AbstractFileManager =\n  /** @class */\n  function () {\n    function AbstractFileManager() {}\n\n    AbstractFileManager.prototype.getPath = function (filename) {\n      var j = filename.lastIndexOf('?');\n\n      if (j > 0) {\n        filename = filename.slice(0, j);\n      }\n\n      j = filename.lastIndexOf('/');\n\n      if (j < 0) {\n        j = filename.lastIndexOf('\\\\');\n      }\n\n      if (j < 0) {\n        return '';\n      }\n\n      return filename.slice(0, j + 1);\n    };\n\n    AbstractFileManager.prototype.tryAppendExtension = function (path, ext) {\n      return /(\\.[a-z]*$)|([\\?;].*)$/.test(path) ? path : path + ext;\n    };\n\n    AbstractFileManager.prototype.tryAppendLessExtension = function (path) {\n      return this.tryAppendExtension(path, '.less');\n    };\n\n    AbstractFileManager.prototype.supportsSync = function () {\n      return false;\n    };\n\n    AbstractFileManager.prototype.alwaysMakePathsAbsolute = function () {\n      return false;\n    };\n\n    AbstractFileManager.prototype.isPathAbsolute = function (filename) {\n      return /^(?:[a-z-]+:|\\/|\\\\|#)/i.test(filename);\n    }; // TODO: pull out / replace?\n\n\n    AbstractFileManager.prototype.join = function (basePath, laterPath) {\n      if (!basePath) {\n        return laterPath;\n      }\n\n      return basePath + laterPath;\n    };\n\n    AbstractFileManager.prototype.pathDiff = function (url, baseUrl) {\n      // diff between two paths to create a relative path\n      var urlParts = this.extractUrlParts(url);\n      var baseUrlParts = this.extractUrlParts(baseUrl);\n      var i;\n      var max;\n      var urlDirectories;\n      var baseUrlDirectories;\n      var diff = '';\n\n      if (urlParts.hostPart !== baseUrlParts.hostPart) {\n        return '';\n      }\n\n      max = Math.max(baseUrlParts.directories.length, urlParts.directories.length);\n\n      for (i = 0; i < max; i++) {\n        if (baseUrlParts.directories[i] !== urlParts.directories[i]) {\n          break;\n        }\n      }\n\n      baseUrlDirectories = baseUrlParts.directories.slice(i);\n      urlDirectories = urlParts.directories.slice(i);\n\n      for (i = 0; i < baseUrlDirectories.length - 1; i++) {\n        diff += '../';\n      }\n\n      for (i = 0; i < urlDirectories.length - 1; i++) {\n        diff += urlDirectories[i] + \"/\";\n      }\n\n      return diff;\n    }; // helper function, not part of API\n\n\n    AbstractFileManager.prototype.extractUrlParts = function (url, baseUrl) {\n      // urlParts[1] = protocol://hostname/ OR /\n      // urlParts[2] = / if path relative to host base\n      // urlParts[3] = directories\n      // urlParts[4] = filename\n      // urlParts[5] = parameters\n      var urlPartsRegex = /^((?:[a-z-]+:)?\\/{2}(?:[^\\/\\?#]*\\/)|([\\/\\\\]))?((?:[^\\/\\\\\\?#]*[\\/\\\\])*)([^\\/\\\\\\?#]*)([#\\?].*)?$/i;\n      var urlParts = url.match(urlPartsRegex);\n      var returner = {};\n      var rawDirectories = [];\n      var directories = [];\n      var i;\n      var baseUrlParts;\n\n      if (!urlParts) {\n        throw new Error(\"Could not parse sheet href - '\" + url + \"'\");\n      } // Stylesheets in IE don't always return the full path\n\n\n      if (baseUrl && (!urlParts[1] || urlParts[2])) {\n        baseUrlParts = baseUrl.match(urlPartsRegex);\n\n        if (!baseUrlParts) {\n          throw new Error(\"Could not parse page url - '\" + baseUrl + \"'\");\n        }\n\n        urlParts[1] = urlParts[1] || baseUrlParts[1] || '';\n\n        if (!urlParts[2]) {\n          urlParts[3] = baseUrlParts[3] + urlParts[3];\n        }\n      }\n\n      if (urlParts[3]) {\n        rawDirectories = urlParts[3].replace(/\\\\/g, '/').split('/'); // collapse '..' and skip '.'\n\n        for (i = 0; i < rawDirectories.length; i++) {\n          if (rawDirectories[i] === '..') {\n            directories.pop();\n          } else if (rawDirectories[i] !== '.') {\n            directories.push(rawDirectories[i]);\n          }\n        }\n      }\n\n      returner.hostPart = urlParts[1];\n      returner.directories = directories;\n      returner.rawPath = (urlParts[1] || '') + rawDirectories.join('/');\n      returner.path = (urlParts[1] || '') + directories.join('/');\n      returner.filename = urlParts[4];\n      returner.fileUrl = returner.path + (urlParts[4] || '');\n      returner.url = returner.fileUrl + (urlParts[5] || '');\n      return returner;\n    };\n\n    return AbstractFileManager;\n  }();\n\n  var AbstractPluginLoader =\n  /** @class */\n  function () {\n    function AbstractPluginLoader() {\n      // Implemented by Node.js plugin loader\n      this.require = function () {\n        return null;\n      };\n    }\n\n    AbstractPluginLoader.prototype.evalPlugin = function (contents, context, imports, pluginOptions, fileInfo) {\n      var loader, registry, pluginObj, localModule, pluginManager, filename, result;\n      pluginManager = context.pluginManager;\n\n      if (fileInfo) {\n        if (typeof fileInfo === 'string') {\n          filename = fileInfo;\n        } else {\n          filename = fileInfo.filename;\n        }\n      }\n\n      var shortname = new this.less.FileManager().extractUrlParts(filename).filename;\n\n      if (filename) {\n        pluginObj = pluginManager.get(filename);\n\n        if (pluginObj) {\n          result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\n\n          if (result) {\n            return result;\n          }\n\n          try {\n            if (pluginObj.use) {\n              pluginObj.use.call(this.context, pluginObj);\n            }\n          } catch (e) {\n            e.message = e.message || 'Error during @plugin call';\n            return new LessError(e, imports, filename);\n          }\n\n          return pluginObj;\n        }\n      }\n\n      localModule = {\n        exports: {},\n        pluginManager: pluginManager,\n        fileInfo: fileInfo\n      };\n      registry = functionRegistry.create();\n\n      var registerPlugin = function registerPlugin(obj) {\n        pluginObj = obj;\n      };\n\n      try {\n        loader = new Function('module', 'require', 'registerPlugin', 'functions', 'tree', 'less', 'fileInfo', contents);\n        loader(localModule, this.require(filename), registerPlugin, registry, this.less.tree, this.less, fileInfo);\n      } catch (e) {\n        return new LessError(e, imports, filename);\n      }\n\n      if (!pluginObj) {\n        pluginObj = localModule.exports;\n      }\n\n      pluginObj = this.validatePlugin(pluginObj, filename, shortname);\n\n      if (pluginObj instanceof LessError) {\n        return pluginObj;\n      }\n\n      if (pluginObj) {\n        pluginObj.imports = imports;\n        pluginObj.filename = filename; // For < 3.x (or unspecified minVersion) - setOptions() before install()\n\n        if (!pluginObj.minVersion || this.compareVersion('3.0.0', pluginObj.minVersion) < 0) {\n          result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\n\n          if (result) {\n            return result;\n          }\n        } // Run on first load\n\n\n        pluginManager.addPlugin(pluginObj, fileInfo.filename, registry);\n        pluginObj.functions = registry.getLocalFunctions(); // Need to call setOptions again because the pluginObj might have functions\n\n        result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\n\n        if (result) {\n          return result;\n        } // Run every @plugin call\n\n\n        try {\n          if (pluginObj.use) {\n            pluginObj.use.call(this.context, pluginObj);\n          }\n        } catch (e) {\n          e.message = e.message || 'Error during @plugin call';\n          return new LessError(e, imports, filename);\n        }\n      } else {\n        return new LessError({\n          message: 'Not a valid plugin'\n        }, imports, filename);\n      }\n\n      return pluginObj;\n    };\n\n    AbstractPluginLoader.prototype.trySetOptions = function (plugin, filename, name, options) {\n      if (options && !plugin.setOptions) {\n        return new LessError({\n          message: \"Options have been provided but the plugin \" + name + \" does not support any options.\"\n        });\n      }\n\n      try {\n        plugin.setOptions && plugin.setOptions(options);\n      } catch (e) {\n        return new LessError(e);\n      }\n    };\n\n    AbstractPluginLoader.prototype.validatePlugin = function (plugin, filename, name) {\n      if (plugin) {\n        // support plugins being a function\n        // so that the plugin can be more usable programmatically\n        if (typeof plugin === 'function') {\n          plugin = new plugin();\n        }\n\n        if (plugin.minVersion) {\n          if (this.compareVersion(plugin.minVersion, this.less.version) < 0) {\n            return new LessError({\n              message: \"Plugin \" + name + \" requires version \" + this.versionToString(plugin.minVersion)\n            });\n          }\n        }\n\n        return plugin;\n      }\n\n      return null;\n    };\n\n    AbstractPluginLoader.prototype.compareVersion = function (aVersion, bVersion) {\n      if (typeof aVersion === 'string') {\n        aVersion = aVersion.match(/^(\\d+)\\.?(\\d+)?\\.?(\\d+)?/);\n        aVersion.shift();\n      }\n\n      for (var i = 0; i < aVersion.length; i++) {\n        if (aVersion[i] !== bVersion[i]) {\n          return parseInt(aVersion[i]) > parseInt(bVersion[i]) ? -1 : 1;\n        }\n      }\n\n      return 0;\n    };\n\n    AbstractPluginLoader.prototype.versionToString = function (version) {\n      var versionString = '';\n\n      for (var i = 0; i < version.length; i++) {\n        versionString += (versionString ? '.' : '') + version[i];\n      }\n\n      return versionString;\n    };\n\n    AbstractPluginLoader.prototype.printUsage = function (plugins) {\n      for (var i = 0; i < plugins.length; i++) {\n        var plugin = plugins[i];\n\n        if (plugin.printUsage) {\n          plugin.printUsage();\n        }\n      }\n    };\n\n    return AbstractPluginLoader;\n  }();\n\n  var _visitArgs = {\n    visitDeeper: true\n  };\n  var _hasIndexed = false;\n\n  function _noop(node) {\n    return node;\n  }\n\n  function indexNodeTypes(parent, ticker) {\n    // add .typeIndex to tree node types for lookup table\n    var key, child;\n\n    for (key in parent) {\n      /* eslint guard-for-in: 0 */\n      child = parent[key];\n\n      switch (typeof child) {\n        case 'function':\n          // ignore bound functions directly on tree which do not have a prototype\n          // or aren't nodes\n          if (child.prototype && child.prototype.type) {\n            child.prototype.typeIndex = ticker++;\n          }\n\n          break;\n\n        case 'object':\n          ticker = indexNodeTypes(child, ticker);\n          break;\n      }\n    }\n\n    return ticker;\n  }\n\n  var Visitor =\n  /** @class */\n  function () {\n    function Visitor(implementation) {\n      this._implementation = implementation;\n      this._visitInCache = {};\n      this._visitOutCache = {};\n\n      if (!_hasIndexed) {\n        indexNodeTypes(tree, 1);\n        _hasIndexed = true;\n      }\n    }\n\n    Visitor.prototype.visit = function (node) {\n      if (!node) {\n        return node;\n      }\n\n      var nodeTypeIndex = node.typeIndex;\n\n      if (!nodeTypeIndex) {\n        // MixinCall args aren't a node type?\n        if (node.value && node.value.typeIndex) {\n          this.visit(node.value);\n        }\n\n        return node;\n      }\n\n      var impl = this._implementation;\n      var func = this._visitInCache[nodeTypeIndex];\n      var funcOut = this._visitOutCache[nodeTypeIndex];\n      var visitArgs = _visitArgs;\n      var fnName;\n      visitArgs.visitDeeper = true;\n\n      if (!func) {\n        fnName = \"visit\" + node.type;\n        func = impl[fnName] || _noop;\n        funcOut = impl[fnName + \"Out\"] || _noop;\n        this._visitInCache[nodeTypeIndex] = func;\n        this._visitOutCache[nodeTypeIndex] = funcOut;\n      }\n\n      if (func !== _noop) {\n        var newNode = func.call(impl, node, visitArgs);\n\n        if (node && impl.isReplacing) {\n          node = newNode;\n        }\n      }\n\n      if (visitArgs.visitDeeper && node) {\n        if (node.length) {\n          for (var i = 0, cnt = node.length; i < cnt; i++) {\n            if (node[i].accept) {\n              node[i].accept(this);\n            }\n          }\n        } else if (node.accept) {\n          node.accept(this);\n        }\n      }\n\n      if (funcOut != _noop) {\n        funcOut.call(impl, node);\n      }\n\n      return node;\n    };\n\n    Visitor.prototype.visitArray = function (nodes, nonReplacing) {\n      if (!nodes) {\n        return nodes;\n      }\n\n      var cnt = nodes.length;\n      var i; // Non-replacing\n\n      if (nonReplacing || !this._implementation.isReplacing) {\n        for (i = 0; i < cnt; i++) {\n          this.visit(nodes[i]);\n        }\n\n        return nodes;\n      } // Replacing\n\n\n      var out = [];\n\n      for (i = 0; i < cnt; i++) {\n        var evald = this.visit(nodes[i]);\n\n        if (evald === undefined) {\n          continue;\n        }\n\n        if (!evald.splice) {\n          out.push(evald);\n        } else if (evald.length) {\n          this.flatten(evald, out);\n        }\n      }\n\n      return out;\n    };\n\n    Visitor.prototype.flatten = function (arr, out) {\n      if (!out) {\n        out = [];\n      }\n\n      var cnt, i, item, nestedCnt, j, nestedItem;\n\n      for (i = 0, cnt = arr.length; i < cnt; i++) {\n        item = arr[i];\n\n        if (item === undefined) {\n          continue;\n        }\n\n        if (!item.splice) {\n          out.push(item);\n          continue;\n        }\n\n        for (j = 0, nestedCnt = item.length; j < nestedCnt; j++) {\n          nestedItem = item[j];\n\n          if (nestedItem === undefined) {\n            continue;\n          }\n\n          if (!nestedItem.splice) {\n            out.push(nestedItem);\n          } else if (nestedItem.length) {\n            this.flatten(nestedItem, out);\n          }\n        }\n      }\n\n      return out;\n    };\n\n    return Visitor;\n  }();\n\n  var ImportSequencer =\n  /** @class */\n  function () {\n    function ImportSequencer(onSequencerEmpty) {\n      this.imports = [];\n      this.variableImports = [];\n      this._onSequencerEmpty = onSequencerEmpty;\n      this._currentDepth = 0;\n    }\n\n    ImportSequencer.prototype.addImport = function (callback) {\n      var importSequencer = this,\n          importItem = {\n        callback: callback,\n        args: null,\n        isReady: false\n      };\n      this.imports.push(importItem);\n      return function () {\n        importItem.args = Array.prototype.slice.call(arguments, 0);\n        importItem.isReady = true;\n        importSequencer.tryRun();\n      };\n    };\n\n    ImportSequencer.prototype.addVariableImport = function (callback) {\n      this.variableImports.push(callback);\n    };\n\n    ImportSequencer.prototype.tryRun = function () {\n      this._currentDepth++;\n\n      try {\n        while (true) {\n          while (this.imports.length > 0) {\n            var importItem = this.imports[0];\n\n            if (!importItem.isReady) {\n              return;\n            }\n\n            this.imports = this.imports.slice(1);\n            importItem.callback.apply(null, importItem.args);\n          }\n\n          if (this.variableImports.length === 0) {\n            break;\n          }\n\n          var variableImport = this.variableImports[0];\n          this.variableImports = this.variableImports.slice(1);\n          variableImport();\n        }\n      } finally {\n        this._currentDepth--;\n      }\n\n      if (this._currentDepth === 0 && this._onSequencerEmpty) {\n        this._onSequencerEmpty();\n      }\n    };\n\n    return ImportSequencer;\n  }();\n\n  var ImportVisitor = function ImportVisitor(importer, finish) {\n    this._visitor = new Visitor(this);\n    this._importer = importer;\n    this._finish = finish;\n    this.context = new contexts.Eval();\n    this.importCount = 0;\n    this.onceFileDetectionMap = {};\n    this.recursionDetector = {};\n    this._sequencer = new ImportSequencer(this._onSequencerEmpty.bind(this));\n  };\n\n  ImportVisitor.prototype = {\n    isReplacing: false,\n    run: function run(root) {\n      try {\n        // process the contents\n        this._visitor.visit(root);\n      } catch (e) {\n        this.error = e;\n      }\n\n      this.isFinished = true;\n\n      this._sequencer.tryRun();\n    },\n    _onSequencerEmpty: function _onSequencerEmpty() {\n      if (!this.isFinished) {\n        return;\n      }\n\n      this._finish(this.error);\n    },\n    visitImport: function visitImport(importNode, visitArgs) {\n      var inlineCSS = importNode.options.inline;\n\n      if (!importNode.css || inlineCSS) {\n        var context = new contexts.Eval(this.context, copyArray(this.context.frames));\n        var importParent = context.frames[0];\n        this.importCount++;\n\n        if (importNode.isVariableImport()) {\n          this._sequencer.addVariableImport(this.processImportNode.bind(this, importNode, context, importParent));\n        } else {\n          this.processImportNode(importNode, context, importParent);\n        }\n      }\n\n      visitArgs.visitDeeper = false;\n    },\n    processImportNode: function processImportNode(importNode, context, importParent) {\n      var evaldImportNode;\n      var inlineCSS = importNode.options.inline;\n\n      try {\n        evaldImportNode = importNode.evalForImport(context);\n      } catch (e) {\n        if (!e.filename) {\n          e.index = importNode.getIndex();\n          e.filename = importNode.fileInfo().filename;\n        } // attempt to eval properly and treat as css\n\n\n        importNode.css = true; // if that fails, this error will be thrown\n\n        importNode.error = e;\n      }\n\n      if (evaldImportNode && (!evaldImportNode.css || inlineCSS)) {\n        if (evaldImportNode.options.multiple) {\n          context.importMultiple = true;\n        } // try appending if we haven't determined if it is css or not\n\n\n        var tryAppendLessExtension = evaldImportNode.css === undefined;\n\n        for (var i = 0; i < importParent.rules.length; i++) {\n          if (importParent.rules[i] === importNode) {\n            importParent.rules[i] = evaldImportNode;\n            break;\n          }\n        }\n\n        var onImported = this.onImported.bind(this, evaldImportNode, context),\n            sequencedOnImported = this._sequencer.addImport(onImported);\n\n        this._importer.push(evaldImportNode.getPath(), tryAppendLessExtension, evaldImportNode.fileInfo(), evaldImportNode.options, sequencedOnImported);\n      } else {\n        this.importCount--;\n\n        if (this.isFinished) {\n          this._sequencer.tryRun();\n        }\n      }\n    },\n    onImported: function onImported(importNode, context, e, root, importedAtRoot, fullPath) {\n      if (e) {\n        if (!e.filename) {\n          e.index = importNode.getIndex();\n          e.filename = importNode.fileInfo().filename;\n        }\n\n        this.error = e;\n      }\n\n      var importVisitor = this,\n          inlineCSS = importNode.options.inline,\n          isPlugin = importNode.options.isPlugin,\n          isOptional = importNode.options.optional,\n          duplicateImport = importedAtRoot || fullPath in importVisitor.recursionDetector;\n\n      if (!context.importMultiple) {\n        if (duplicateImport) {\n          importNode.skip = true;\n        } else {\n          importNode.skip = function () {\n            if (fullPath in importVisitor.onceFileDetectionMap) {\n              return true;\n            }\n\n            importVisitor.onceFileDetectionMap[fullPath] = true;\n            return false;\n          };\n        }\n      }\n\n      if (!fullPath && isOptional) {\n        importNode.skip = true;\n      }\n\n      if (root) {\n        importNode.root = root;\n        importNode.importedFilename = fullPath;\n\n        if (!inlineCSS && !isPlugin && (context.importMultiple || !duplicateImport)) {\n          importVisitor.recursionDetector[fullPath] = true;\n          var oldContext = this.context;\n          this.context = context;\n\n          try {\n            this._visitor.visit(root);\n          } catch (e) {\n            this.error = e;\n          }\n\n          this.context = oldContext;\n        }\n      }\n\n      importVisitor.importCount--;\n\n      if (importVisitor.isFinished) {\n        importVisitor._sequencer.tryRun();\n      }\n    },\n    visitDeclaration: function visitDeclaration(declNode, visitArgs) {\n      if (declNode.value.type === 'DetachedRuleset') {\n        this.context.frames.unshift(declNode);\n      } else {\n        visitArgs.visitDeeper = false;\n      }\n    },\n    visitDeclarationOut: function visitDeclarationOut(declNode) {\n      if (declNode.value.type === 'DetachedRuleset') {\n        this.context.frames.shift();\n      }\n    },\n    visitAtRule: function visitAtRule(atRuleNode, visitArgs) {\n      this.context.frames.unshift(atRuleNode);\n    },\n    visitAtRuleOut: function visitAtRuleOut(atRuleNode) {\n      this.context.frames.shift();\n    },\n    visitMixinDefinition: function visitMixinDefinition(mixinDefinitionNode, visitArgs) {\n      this.context.frames.unshift(mixinDefinitionNode);\n    },\n    visitMixinDefinitionOut: function visitMixinDefinitionOut(mixinDefinitionNode) {\n      this.context.frames.shift();\n    },\n    visitRuleset: function visitRuleset(rulesetNode, visitArgs) {\n      this.context.frames.unshift(rulesetNode);\n    },\n    visitRulesetOut: function visitRulesetOut(rulesetNode) {\n      this.context.frames.shift();\n    },\n    visitMedia: function visitMedia(mediaNode, visitArgs) {\n      this.context.frames.unshift(mediaNode.rules[0]);\n    },\n    visitMediaOut: function visitMediaOut(mediaNode) {\n      this.context.frames.shift();\n    }\n  };\n\n  var SetTreeVisibilityVisitor =\n  /** @class */\n  function () {\n    function SetTreeVisibilityVisitor(visible) {\n      this.visible = visible;\n    }\n\n    SetTreeVisibilityVisitor.prototype.run = function (root) {\n      this.visit(root);\n    };\n\n    SetTreeVisibilityVisitor.prototype.visitArray = function (nodes) {\n      if (!nodes) {\n        return nodes;\n      }\n\n      var cnt = nodes.length;\n      var i;\n\n      for (i = 0; i < cnt; i++) {\n        this.visit(nodes[i]);\n      }\n\n      return nodes;\n    };\n\n    SetTreeVisibilityVisitor.prototype.visit = function (node) {\n      if (!node) {\n        return node;\n      }\n\n      if (node.constructor === Array) {\n        return this.visitArray(node);\n      }\n\n      if (!node.blocksVisibility || node.blocksVisibility()) {\n        return node;\n      }\n\n      if (this.visible) {\n        node.ensureVisibility();\n      } else {\n        node.ensureInvisibility();\n      }\n\n      node.accept(this);\n      return node;\n    };\n\n    return SetTreeVisibilityVisitor;\n  }();\n  /* jshint loopfunc:true */\n\n\n  var ExtendFinderVisitor =\n  /** @class */\n  function () {\n    function ExtendFinderVisitor() {\n      this._visitor = new Visitor(this);\n      this.contexts = [];\n      this.allExtendsStack = [[]];\n    }\n\n    ExtendFinderVisitor.prototype.run = function (root) {\n      root = this._visitor.visit(root);\n      root.allExtends = this.allExtendsStack[0];\n      return root;\n    };\n\n    ExtendFinderVisitor.prototype.visitDeclaration = function (declNode, visitArgs) {\n      visitArgs.visitDeeper = false;\n    };\n\n    ExtendFinderVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\n      visitArgs.visitDeeper = false;\n    };\n\n    ExtendFinderVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\n      if (rulesetNode.root) {\n        return;\n      }\n\n      var i;\n      var j;\n      var extend;\n      var allSelectorsExtendList = [];\n      var extendList; // get &:extend(.a); rules which apply to all selectors in this ruleset\n\n      var rules = rulesetNode.rules,\n          ruleCnt = rules ? rules.length : 0;\n\n      for (i = 0; i < ruleCnt; i++) {\n        if (rulesetNode.rules[i] instanceof tree.Extend) {\n          allSelectorsExtendList.push(rules[i]);\n          rulesetNode.extendOnEveryPath = true;\n        }\n      } // now find every selector and apply the extends that apply to all extends\n      // and the ones which apply to an individual extend\n\n\n      var paths = rulesetNode.paths;\n\n      for (i = 0; i < paths.length; i++) {\n        var selectorPath = paths[i],\n            selector = selectorPath[selectorPath.length - 1],\n            selExtendList = selector.extendList;\n        extendList = selExtendList ? copyArray(selExtendList).concat(allSelectorsExtendList) : allSelectorsExtendList;\n\n        if (extendList) {\n          extendList = extendList.map(function (allSelectorsExtend) {\n            return allSelectorsExtend.clone();\n          });\n        }\n\n        for (j = 0; j < extendList.length; j++) {\n          this.foundExtends = true;\n          extend = extendList[j];\n          extend.findSelfSelectors(selectorPath);\n          extend.ruleset = rulesetNode;\n\n          if (j === 0) {\n            extend.firstExtendOnThisSelectorPath = true;\n          }\n\n          this.allExtendsStack[this.allExtendsStack.length - 1].push(extend);\n        }\n      }\n\n      this.contexts.push(rulesetNode.selectors);\n    };\n\n    ExtendFinderVisitor.prototype.visitRulesetOut = function (rulesetNode) {\n      if (!rulesetNode.root) {\n        this.contexts.length = this.contexts.length - 1;\n      }\n    };\n\n    ExtendFinderVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\n      mediaNode.allExtends = [];\n      this.allExtendsStack.push(mediaNode.allExtends);\n    };\n\n    ExtendFinderVisitor.prototype.visitMediaOut = function (mediaNode) {\n      this.allExtendsStack.length = this.allExtendsStack.length - 1;\n    };\n\n    ExtendFinderVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\n      atRuleNode.allExtends = [];\n      this.allExtendsStack.push(atRuleNode.allExtends);\n    };\n\n    ExtendFinderVisitor.prototype.visitAtRuleOut = function (atRuleNode) {\n      this.allExtendsStack.length = this.allExtendsStack.length - 1;\n    };\n\n    return ExtendFinderVisitor;\n  }();\n\n  var ProcessExtendsVisitor =\n  /** @class */\n  function () {\n    function ProcessExtendsVisitor() {\n      this._visitor = new Visitor(this);\n    }\n\n    ProcessExtendsVisitor.prototype.run = function (root) {\n      var extendFinder = new ExtendFinderVisitor();\n      this.extendIndices = {};\n      extendFinder.run(root);\n\n      if (!extendFinder.foundExtends) {\n        return root;\n      }\n\n      root.allExtends = root.allExtends.concat(this.doExtendChaining(root.allExtends, root.allExtends));\n      this.allExtendsStack = [root.allExtends];\n\n      var newRoot = this._visitor.visit(root);\n\n      this.checkExtendsForNonMatched(root.allExtends);\n      return newRoot;\n    };\n\n    ProcessExtendsVisitor.prototype.checkExtendsForNonMatched = function (extendList) {\n      var indices = this.extendIndices;\n      extendList.filter(function (extend) {\n        return !extend.hasFoundMatches && extend.parent_ids.length == 1;\n      }).forEach(function (extend) {\n        var selector = '_unknown_';\n\n        try {\n          selector = extend.selector.toCSS({});\n        } catch (_) {}\n\n        if (!indices[extend.index + \" \" + selector]) {\n          indices[extend.index + \" \" + selector] = true;\n          logger$1.warn(\"extend '\" + selector + \"' has no matches\");\n        }\n      });\n    };\n\n    ProcessExtendsVisitor.prototype.doExtendChaining = function (extendsList, extendsListTarget, iterationCount) {\n      //\n      // chaining is different from normal extension.. if we extend an extend then we are not just copying, altering\n      // and pasting the selector we would do normally, but we are also adding an extend with the same target selector\n      // this means this new extend can then go and alter other extends\n      //\n      // this method deals with all the chaining work - without it, extend is flat and doesn't work on other extend selectors\n      // this is also the most expensive.. and a match on one selector can cause an extension of a selector we had already\n      // processed if we look at each selector at a time, as is done in visitRuleset\n      var extendIndex;\n      var targetExtendIndex;\n      var matches;\n      var extendsToAdd = [];\n      var newSelector;\n      var extendVisitor = this;\n      var selectorPath;\n      var extend;\n      var targetExtend;\n      var newExtend;\n      iterationCount = iterationCount || 0; // loop through comparing every extend with every target extend.\n      // a target extend is the one on the ruleset we are looking at copy/edit/pasting in place\n      // e.g.  .a:extend(.b) {}  and .b:extend(.c) {} then the first extend extends the second one\n      // and the second is the target.\n      // the separation into two lists allows us to process a subset of chains with a bigger set, as is the\n      // case when processing media queries\n\n      for (extendIndex = 0; extendIndex < extendsList.length; extendIndex++) {\n        for (targetExtendIndex = 0; targetExtendIndex < extendsListTarget.length; targetExtendIndex++) {\n          extend = extendsList[extendIndex];\n          targetExtend = extendsListTarget[targetExtendIndex]; // look for circular references\n\n          if (extend.parent_ids.indexOf(targetExtend.object_id) >= 0) {\n            continue;\n          } // find a match in the target extends self selector (the bit before :extend)\n\n\n          selectorPath = [targetExtend.selfSelectors[0]];\n          matches = extendVisitor.findMatch(extend, selectorPath);\n\n          if (matches.length) {\n            extend.hasFoundMatches = true; // we found a match, so for each self selector..\n\n            extend.selfSelectors.forEach(function (selfSelector) {\n              var info = targetExtend.visibilityInfo(); // process the extend as usual\n\n              newSelector = extendVisitor.extendSelector(matches, selectorPath, selfSelector, extend.isVisible()); // but now we create a new extend from it\n\n              newExtend = new tree.Extend(targetExtend.selector, targetExtend.option, 0, targetExtend.fileInfo(), info);\n              newExtend.selfSelectors = newSelector; // add the extend onto the list of extends for that selector\n\n              newSelector[newSelector.length - 1].extendList = [newExtend]; // record that we need to add it.\n\n              extendsToAdd.push(newExtend);\n              newExtend.ruleset = targetExtend.ruleset; // remember its parents for circular references\n\n              newExtend.parent_ids = newExtend.parent_ids.concat(targetExtend.parent_ids, extend.parent_ids); // only process the selector once.. if we have :extend(.a,.b) then multiple\n              // extends will look at the same selector path, so when extending\n              // we know that any others will be duplicates in terms of what is added to the css\n\n              if (targetExtend.firstExtendOnThisSelectorPath) {\n                newExtend.firstExtendOnThisSelectorPath = true;\n                targetExtend.ruleset.paths.push(newSelector);\n              }\n            });\n          }\n        }\n      }\n\n      if (extendsToAdd.length) {\n        // try to detect circular references to stop a stack overflow.\n        // may no longer be needed.\n        this.extendChainCount++;\n\n        if (iterationCount > 100) {\n          var selectorOne = '{unable to calculate}';\n          var selectorTwo = '{unable to calculate}';\n\n          try {\n            selectorOne = extendsToAdd[0].selfSelectors[0].toCSS();\n            selectorTwo = extendsToAdd[0].selector.toCSS();\n          } catch (e) {}\n\n          throw {\n            message: \"extend circular reference detected. One of the circular extends is currently:\" + selectorOne + \":extend(\" + selectorTwo + \")\"\n          };\n        } // now process the new extends on the existing rules so that we can handle a extending b extending c extending\n        // d extending e...\n\n\n        return extendsToAdd.concat(extendVisitor.doExtendChaining(extendsToAdd, extendsListTarget, iterationCount + 1));\n      } else {\n        return extendsToAdd;\n      }\n    };\n\n    ProcessExtendsVisitor.prototype.visitDeclaration = function (ruleNode, visitArgs) {\n      visitArgs.visitDeeper = false;\n    };\n\n    ProcessExtendsVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\n      visitArgs.visitDeeper = false;\n    };\n\n    ProcessExtendsVisitor.prototype.visitSelector = function (selectorNode, visitArgs) {\n      visitArgs.visitDeeper = false;\n    };\n\n    ProcessExtendsVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\n      if (rulesetNode.root) {\n        return;\n      }\n\n      var matches;\n      var pathIndex;\n      var extendIndex;\n      var allExtends = this.allExtendsStack[this.allExtendsStack.length - 1];\n      var selectorsToAdd = [];\n      var extendVisitor = this;\n      var selectorPath; // look at each selector path in the ruleset, find any extend matches and then copy, find and replace\n\n      for (extendIndex = 0; extendIndex < allExtends.length; extendIndex++) {\n        for (pathIndex = 0; pathIndex < rulesetNode.paths.length; pathIndex++) {\n          selectorPath = rulesetNode.paths[pathIndex]; // extending extends happens initially, before the main pass\n\n          if (rulesetNode.extendOnEveryPath) {\n            continue;\n          }\n\n          var extendList = selectorPath[selectorPath.length - 1].extendList;\n\n          if (extendList && extendList.length) {\n            continue;\n          }\n\n          matches = this.findMatch(allExtends[extendIndex], selectorPath);\n\n          if (matches.length) {\n            allExtends[extendIndex].hasFoundMatches = true;\n            allExtends[extendIndex].selfSelectors.forEach(function (selfSelector) {\n              var extendedSelectors;\n              extendedSelectors = extendVisitor.extendSelector(matches, selectorPath, selfSelector, allExtends[extendIndex].isVisible());\n              selectorsToAdd.push(extendedSelectors);\n            });\n          }\n        }\n      }\n\n      rulesetNode.paths = rulesetNode.paths.concat(selectorsToAdd);\n    };\n\n    ProcessExtendsVisitor.prototype.findMatch = function (extend, haystackSelectorPath) {\n      //\n      // look through the haystack selector path to try and find the needle - extend.selector\n      // returns an array of selector matches that can then be replaced\n      //\n      var haystackSelectorIndex;\n      var hackstackSelector;\n      var hackstackElementIndex;\n      var haystackElement;\n      var targetCombinator;\n      var i;\n      var extendVisitor = this;\n      var needleElements = extend.selector.elements;\n      var potentialMatches = [];\n      var potentialMatch;\n      var matches = []; // loop through the haystack elements\n\n      for (haystackSelectorIndex = 0; haystackSelectorIndex < haystackSelectorPath.length; haystackSelectorIndex++) {\n        hackstackSelector = haystackSelectorPath[haystackSelectorIndex];\n\n        for (hackstackElementIndex = 0; hackstackElementIndex < hackstackSelector.elements.length; hackstackElementIndex++) {\n          haystackElement = hackstackSelector.elements[hackstackElementIndex]; // if we allow elements before our match we can add a potential match every time. otherwise only at the first element.\n\n          if (extend.allowBefore || haystackSelectorIndex === 0 && hackstackElementIndex === 0) {\n            potentialMatches.push({\n              pathIndex: haystackSelectorIndex,\n              index: hackstackElementIndex,\n              matched: 0,\n              initialCombinator: haystackElement.combinator\n            });\n          }\n\n          for (i = 0; i < potentialMatches.length; i++) {\n            potentialMatch = potentialMatches[i]; // selectors add \" \" onto the first element. When we use & it joins the selectors together, but if we don't\n            // then each selector in haystackSelectorPath has a space before it added in the toCSS phase. so we need to\n            // work out what the resulting combinator will be\n\n            targetCombinator = haystackElement.combinator.value;\n\n            if (targetCombinator === '' && hackstackElementIndex === 0) {\n              targetCombinator = ' ';\n            } // if we don't match, null our match to indicate failure\n\n\n            if (!extendVisitor.isElementValuesEqual(needleElements[potentialMatch.matched].value, haystackElement.value) || potentialMatch.matched > 0 && needleElements[potentialMatch.matched].combinator.value !== targetCombinator) {\n              potentialMatch = null;\n            } else {\n              potentialMatch.matched++;\n            } // if we are still valid and have finished, test whether we have elements after and whether these are allowed\n\n\n            if (potentialMatch) {\n              potentialMatch.finished = potentialMatch.matched === needleElements.length;\n\n              if (potentialMatch.finished && !extend.allowAfter && (hackstackElementIndex + 1 < hackstackSelector.elements.length || haystackSelectorIndex + 1 < haystackSelectorPath.length)) {\n                potentialMatch = null;\n              }\n            } // if null we remove, if not, we are still valid, so either push as a valid match or continue\n\n\n            if (potentialMatch) {\n              if (potentialMatch.finished) {\n                potentialMatch.length = needleElements.length;\n                potentialMatch.endPathIndex = haystackSelectorIndex;\n                potentialMatch.endPathElementIndex = hackstackElementIndex + 1; // index after end of match\n\n                potentialMatches.length = 0; // we don't allow matches to overlap, so start matching again\n\n                matches.push(potentialMatch);\n              }\n            } else {\n              potentialMatches.splice(i, 1);\n              i--;\n            }\n          }\n        }\n      }\n\n      return matches;\n    };\n\n    ProcessExtendsVisitor.prototype.isElementValuesEqual = function (elementValue1, elementValue2) {\n      if (typeof elementValue1 === 'string' || typeof elementValue2 === 'string') {\n        return elementValue1 === elementValue2;\n      }\n\n      if (elementValue1 instanceof tree.Attribute) {\n        if (elementValue1.op !== elementValue2.op || elementValue1.key !== elementValue2.key) {\n          return false;\n        }\n\n        if (!elementValue1.value || !elementValue2.value) {\n          if (elementValue1.value || elementValue2.value) {\n            return false;\n          }\n\n          return true;\n        }\n\n        elementValue1 = elementValue1.value.value || elementValue1.value;\n        elementValue2 = elementValue2.value.value || elementValue2.value;\n        return elementValue1 === elementValue2;\n      }\n\n      elementValue1 = elementValue1.value;\n      elementValue2 = elementValue2.value;\n\n      if (elementValue1 instanceof tree.Selector) {\n        if (!(elementValue2 instanceof tree.Selector) || elementValue1.elements.length !== elementValue2.elements.length) {\n          return false;\n        }\n\n        for (var i = 0; i < elementValue1.elements.length; i++) {\n          if (elementValue1.elements[i].combinator.value !== elementValue2.elements[i].combinator.value) {\n            if (i !== 0 || (elementValue1.elements[i].combinator.value || ' ') !== (elementValue2.elements[i].combinator.value || ' ')) {\n              return false;\n            }\n          }\n\n          if (!this.isElementValuesEqual(elementValue1.elements[i].value, elementValue2.elements[i].value)) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n\n      return false;\n    };\n\n    ProcessExtendsVisitor.prototype.extendSelector = function (matches, selectorPath, replacementSelector, isVisible) {\n      // for a set of matches, replace each match with the replacement selector\n      var currentSelectorPathIndex = 0,\n          currentSelectorPathElementIndex = 0,\n          path = [],\n          matchIndex,\n          selector,\n          firstElement,\n          match,\n          newElements;\n\n      for (matchIndex = 0; matchIndex < matches.length; matchIndex++) {\n        match = matches[matchIndex];\n        selector = selectorPath[match.pathIndex];\n        firstElement = new tree.Element(match.initialCombinator, replacementSelector.elements[0].value, replacementSelector.elements[0].isVariable, replacementSelector.elements[0].getIndex(), replacementSelector.elements[0].fileInfo());\n\n        if (match.pathIndex > currentSelectorPathIndex && currentSelectorPathElementIndex > 0) {\n          path[path.length - 1].elements = path[path.length - 1].elements.concat(selectorPath[currentSelectorPathIndex].elements.slice(currentSelectorPathElementIndex));\n          currentSelectorPathElementIndex = 0;\n          currentSelectorPathIndex++;\n        }\n\n        newElements = selector.elements.slice(currentSelectorPathElementIndex, match.index).concat([firstElement]).concat(replacementSelector.elements.slice(1));\n\n        if (currentSelectorPathIndex === match.pathIndex && matchIndex > 0) {\n          path[path.length - 1].elements = path[path.length - 1].elements.concat(newElements);\n        } else {\n          path = path.concat(selectorPath.slice(currentSelectorPathIndex, match.pathIndex));\n          path.push(new tree.Selector(newElements));\n        }\n\n        currentSelectorPathIndex = match.endPathIndex;\n        currentSelectorPathElementIndex = match.endPathElementIndex;\n\n        if (currentSelectorPathElementIndex >= selectorPath[currentSelectorPathIndex].elements.length) {\n          currentSelectorPathElementIndex = 0;\n          currentSelectorPathIndex++;\n        }\n      }\n\n      if (currentSelectorPathIndex < selectorPath.length && currentSelectorPathElementIndex > 0) {\n        path[path.length - 1].elements = path[path.length - 1].elements.concat(selectorPath[currentSelectorPathIndex].elements.slice(currentSelectorPathElementIndex));\n        currentSelectorPathIndex++;\n      }\n\n      path = path.concat(selectorPath.slice(currentSelectorPathIndex, selectorPath.length));\n      path = path.map(function (currentValue) {\n        // we can re-use elements here, because the visibility property matters only for selectors\n        var derived = currentValue.createDerived(currentValue.elements);\n\n        if (isVisible) {\n          derived.ensureVisibility();\n        } else {\n          derived.ensureInvisibility();\n        }\n\n        return derived;\n      });\n      return path;\n    };\n\n    ProcessExtendsVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\n      var newAllExtends = mediaNode.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length - 1]);\n      newAllExtends = newAllExtends.concat(this.doExtendChaining(newAllExtends, mediaNode.allExtends));\n      this.allExtendsStack.push(newAllExtends);\n    };\n\n    ProcessExtendsVisitor.prototype.visitMediaOut = function (mediaNode) {\n      var lastIndex = this.allExtendsStack.length - 1;\n      this.allExtendsStack.length = lastIndex;\n    };\n\n    ProcessExtendsVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\n      var newAllExtends = atRuleNode.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length - 1]);\n      newAllExtends = newAllExtends.concat(this.doExtendChaining(newAllExtends, atRuleNode.allExtends));\n      this.allExtendsStack.push(newAllExtends);\n    };\n\n    ProcessExtendsVisitor.prototype.visitAtRuleOut = function (atRuleNode) {\n      var lastIndex = this.allExtendsStack.length - 1;\n      this.allExtendsStack.length = lastIndex;\n    };\n\n    return ProcessExtendsVisitor;\n  }();\n\n  var JoinSelectorVisitor =\n  /** @class */\n  function () {\n    function JoinSelectorVisitor() {\n      this.contexts = [[]];\n      this._visitor = new Visitor(this);\n    }\n\n    JoinSelectorVisitor.prototype.run = function (root) {\n      return this._visitor.visit(root);\n    };\n\n    JoinSelectorVisitor.prototype.visitDeclaration = function (declNode, visitArgs) {\n      visitArgs.visitDeeper = false;\n    };\n\n    JoinSelectorVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\n      visitArgs.visitDeeper = false;\n    };\n\n    JoinSelectorVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\n      var context = this.contexts[this.contexts.length - 1];\n      var paths = [];\n      var selectors;\n      this.contexts.push(paths);\n\n      if (!rulesetNode.root) {\n        selectors = rulesetNode.selectors;\n\n        if (selectors) {\n          selectors = selectors.filter(function (selector) {\n            return selector.getIsOutput();\n          });\n          rulesetNode.selectors = selectors.length ? selectors : selectors = null;\n\n          if (selectors) {\n            rulesetNode.joinSelectors(paths, context, selectors);\n          }\n        }\n\n        if (!selectors) {\n          rulesetNode.rules = null;\n        }\n\n        rulesetNode.paths = paths;\n      }\n    };\n\n    JoinSelectorVisitor.prototype.visitRulesetOut = function (rulesetNode) {\n      this.contexts.length = this.contexts.length - 1;\n    };\n\n    JoinSelectorVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\n      var context = this.contexts[this.contexts.length - 1];\n      mediaNode.rules[0].root = context.length === 0 || context[0].multiMedia;\n    };\n\n    JoinSelectorVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\n      var context = this.contexts[this.contexts.length - 1];\n\n      if (atRuleNode.rules && atRuleNode.rules.length) {\n        atRuleNode.rules[0].root = atRuleNode.isRooted || context.length === 0 || null;\n      }\n    };\n\n    return JoinSelectorVisitor;\n  }();\n\n  var CSSVisitorUtils =\n  /** @class */\n  function () {\n    function CSSVisitorUtils(context) {\n      this._visitor = new Visitor(this);\n      this._context = context;\n    }\n\n    CSSVisitorUtils.prototype.containsSilentNonBlockedChild = function (bodyRules) {\n      var rule;\n\n      if (!bodyRules) {\n        return false;\n      }\n\n      for (var r = 0; r < bodyRules.length; r++) {\n        rule = bodyRules[r];\n\n        if (rule.isSilent && rule.isSilent(this._context) && !rule.blocksVisibility()) {\n          // the atrule contains something that was referenced (likely by extend)\n          // therefore it needs to be shown in output too\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    CSSVisitorUtils.prototype.keepOnlyVisibleChilds = function (owner) {\n      if (owner && owner.rules) {\n        owner.rules = owner.rules.filter(function (thing) {\n          return thing.isVisible();\n        });\n      }\n    };\n\n    CSSVisitorUtils.prototype.isEmpty = function (owner) {\n      return owner && owner.rules ? owner.rules.length === 0 : true;\n    };\n\n    CSSVisitorUtils.prototype.hasVisibleSelector = function (rulesetNode) {\n      return rulesetNode && rulesetNode.paths ? rulesetNode.paths.length > 0 : false;\n    };\n\n    CSSVisitorUtils.prototype.resolveVisibility = function (node, originalRules) {\n      if (!node.blocksVisibility()) {\n        if (this.isEmpty(node) && !this.containsSilentNonBlockedChild(originalRules)) {\n          return;\n        }\n\n        return node;\n      }\n\n      var compiledRulesBody = node.rules[0];\n      this.keepOnlyVisibleChilds(compiledRulesBody);\n\n      if (this.isEmpty(compiledRulesBody)) {\n        return;\n      }\n\n      node.ensureVisibility();\n      node.removeVisibilityBlock();\n      return node;\n    };\n\n    CSSVisitorUtils.prototype.isVisibleRuleset = function (rulesetNode) {\n      if (rulesetNode.firstRoot) {\n        return true;\n      }\n\n      if (this.isEmpty(rulesetNode)) {\n        return false;\n      }\n\n      if (!rulesetNode.root && !this.hasVisibleSelector(rulesetNode)) {\n        return false;\n      }\n\n      return true;\n    };\n\n    return CSSVisitorUtils;\n  }();\n\n  var ToCSSVisitor = function ToCSSVisitor(context) {\n    this._visitor = new Visitor(this);\n    this._context = context;\n    this.utils = new CSSVisitorUtils(context);\n  };\n\n  ToCSSVisitor.prototype = {\n    isReplacing: true,\n    run: function run(root) {\n      return this._visitor.visit(root);\n    },\n    visitDeclaration: function visitDeclaration(declNode, visitArgs) {\n      if (declNode.blocksVisibility() || declNode.variable) {\n        return;\n      }\n\n      return declNode;\n    },\n    visitMixinDefinition: function visitMixinDefinition(mixinNode, visitArgs) {\n      // mixin definitions do not get eval'd - this means they keep state\n      // so we have to clear that state here so it isn't used if toCSS is called twice\n      mixinNode.frames = [];\n    },\n    visitExtend: function visitExtend(extendNode, visitArgs) {},\n    visitComment: function visitComment(commentNode, visitArgs) {\n      if (commentNode.blocksVisibility() || commentNode.isSilent(this._context)) {\n        return;\n      }\n\n      return commentNode;\n    },\n    visitMedia: function visitMedia(mediaNode, visitArgs) {\n      var originalRules = mediaNode.rules[0].rules;\n      mediaNode.accept(this._visitor);\n      visitArgs.visitDeeper = false;\n      return this.utils.resolveVisibility(mediaNode, originalRules);\n    },\n    visitImport: function visitImport(importNode, visitArgs) {\n      if (importNode.blocksVisibility()) {\n        return;\n      }\n\n      return importNode;\n    },\n    visitAtRule: function visitAtRule(atRuleNode, visitArgs) {\n      if (atRuleNode.rules && atRuleNode.rules.length) {\n        return this.visitAtRuleWithBody(atRuleNode, visitArgs);\n      } else {\n        return this.visitAtRuleWithoutBody(atRuleNode, visitArgs);\n      }\n    },\n    visitAnonymous: function visitAnonymous(anonymousNode, visitArgs) {\n      if (!anonymousNode.blocksVisibility()) {\n        anonymousNode.accept(this._visitor);\n        return anonymousNode;\n      }\n    },\n    visitAtRuleWithBody: function visitAtRuleWithBody(atRuleNode, visitArgs) {\n      // if there is only one nested ruleset and that one has no path, then it is\n      // just fake ruleset\n      function hasFakeRuleset(atRuleNode) {\n        var bodyRules = atRuleNode.rules;\n        return bodyRules.length === 1 && (!bodyRules[0].paths || bodyRules[0].paths.length === 0);\n      }\n\n      function getBodyRules(atRuleNode) {\n        var nodeRules = atRuleNode.rules;\n\n        if (hasFakeRuleset(atRuleNode)) {\n          return nodeRules[0].rules;\n        }\n\n        return nodeRules;\n      } // it is still true that it is only one ruleset in array\n      // this is last such moment\n      // process childs\n\n\n      var originalRules = getBodyRules(atRuleNode);\n      atRuleNode.accept(this._visitor);\n      visitArgs.visitDeeper = false;\n\n      if (!this.utils.isEmpty(atRuleNode)) {\n        this._mergeRules(atRuleNode.rules[0].rules);\n      }\n\n      return this.utils.resolveVisibility(atRuleNode, originalRules);\n    },\n    visitAtRuleWithoutBody: function visitAtRuleWithoutBody(atRuleNode, visitArgs) {\n      if (atRuleNode.blocksVisibility()) {\n        return;\n      }\n\n      if (atRuleNode.name === '@charset') {\n        // Only output the debug info together with subsequent @charset definitions\n        // a comment (or @media statement) before the actual @charset atrule would\n        // be considered illegal css as it has to be on the first line\n        if (this.charset) {\n          if (atRuleNode.debugInfo) {\n            var comment = new tree.Comment(\"/* \" + atRuleNode.toCSS(this._context).replace(/\\n/g, '') + \" */\\n\");\n            comment.debugInfo = atRuleNode.debugInfo;\n            return this._visitor.visit(comment);\n          }\n\n          return;\n        }\n\n        this.charset = true;\n      }\n\n      return atRuleNode;\n    },\n    checkValidNodes: function checkValidNodes(rules, isRoot) {\n      if (!rules) {\n        return;\n      }\n\n      for (var i = 0; i < rules.length; i++) {\n        var ruleNode = rules[i];\n\n        if (isRoot && ruleNode instanceof tree.Declaration && !ruleNode.variable) {\n          throw {\n            message: 'Properties must be inside selector blocks. They cannot be in the root',\n            index: ruleNode.getIndex(),\n            filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename\n          };\n        }\n\n        if (ruleNode instanceof tree.Call) {\n          throw {\n            message: \"Function '\" + ruleNode.name + \"' did not return a root node\",\n            index: ruleNode.getIndex(),\n            filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename\n          };\n        }\n\n        if (ruleNode.type && !ruleNode.allowRoot) {\n          throw {\n            message: ruleNode.type + \" node returned by a function is not valid here\",\n            index: ruleNode.getIndex(),\n            filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename\n          };\n        }\n      }\n    },\n    visitRuleset: function visitRuleset(rulesetNode, visitArgs) {\n      // at this point rulesets are nested into each other\n      var rule;\n      var rulesets = [];\n      this.checkValidNodes(rulesetNode.rules, rulesetNode.firstRoot);\n\n      if (!rulesetNode.root) {\n        // remove invisible paths\n        this._compileRulesetPaths(rulesetNode); // remove rulesets from this ruleset body and compile them separately\n\n\n        var nodeRules = rulesetNode.rules;\n        var nodeRuleCnt = nodeRules ? nodeRules.length : 0;\n\n        for (var i = 0; i < nodeRuleCnt;) {\n          rule = nodeRules[i];\n\n          if (rule && rule.rules) {\n            // visit because we are moving them out from being a child\n            rulesets.push(this._visitor.visit(rule));\n            nodeRules.splice(i, 1);\n            nodeRuleCnt--;\n            continue;\n          }\n\n          i++;\n        } // accept the visitor to remove rules and refactor itself\n        // then we can decide nogw whether we want it or not\n        // compile body\n\n\n        if (nodeRuleCnt > 0) {\n          rulesetNode.accept(this._visitor);\n        } else {\n          rulesetNode.rules = null;\n        }\n\n        visitArgs.visitDeeper = false;\n      } else {\n        // if (! rulesetNode.root) {\n        rulesetNode.accept(this._visitor);\n        visitArgs.visitDeeper = false;\n      }\n\n      if (rulesetNode.rules) {\n        this._mergeRules(rulesetNode.rules);\n\n        this._removeDuplicateRules(rulesetNode.rules);\n      } // now decide whether we keep the ruleset\n\n\n      if (this.utils.isVisibleRuleset(rulesetNode)) {\n        rulesetNode.ensureVisibility();\n        rulesets.splice(0, 0, rulesetNode);\n      }\n\n      if (rulesets.length === 1) {\n        return rulesets[0];\n      }\n\n      return rulesets;\n    },\n    _compileRulesetPaths: function _compileRulesetPaths(rulesetNode) {\n      if (rulesetNode.paths) {\n        rulesetNode.paths = rulesetNode.paths.filter(function (p) {\n          var i;\n\n          if (p[0].elements[0].combinator.value === ' ') {\n            p[0].elements[0].combinator = new tree.Combinator('');\n          }\n\n          for (i = 0; i < p.length; i++) {\n            if (p[i].isVisible() && p[i].getIsOutput()) {\n              return true;\n            }\n          }\n\n          return false;\n        });\n      }\n    },\n    _removeDuplicateRules: function _removeDuplicateRules(rules) {\n      if (!rules) {\n        return;\n      } // remove duplicates\n\n\n      var ruleCache = {};\n      var ruleList;\n      var rule;\n      var i;\n\n      for (i = rules.length - 1; i >= 0; i--) {\n        rule = rules[i];\n\n        if (rule instanceof tree.Declaration) {\n          if (!ruleCache[rule.name]) {\n            ruleCache[rule.name] = rule;\n          } else {\n            ruleList = ruleCache[rule.name];\n\n            if (ruleList instanceof tree.Declaration) {\n              ruleList = ruleCache[rule.name] = [ruleCache[rule.name].toCSS(this._context)];\n            }\n\n            var ruleCSS = rule.toCSS(this._context);\n\n            if (ruleList.indexOf(ruleCSS) !== -1) {\n              rules.splice(i, 1);\n            } else {\n              ruleList.push(ruleCSS);\n            }\n          }\n        }\n      }\n    },\n    _mergeRules: function _mergeRules(rules) {\n      if (!rules) {\n        return;\n      }\n\n      var groups = {};\n      var groupsArr = [];\n\n      for (var i = 0; i < rules.length; i++) {\n        var rule = rules[i];\n\n        if (rule.merge) {\n          var key = rule.name;\n          groups[key] ? rules.splice(i--, 1) : groupsArr.push(groups[key] = []);\n          groups[key].push(rule);\n        }\n      }\n\n      groupsArr.forEach(function (group) {\n        if (group.length > 0) {\n          var result_1 = group[0];\n          var space_1 = [];\n          var comma_1 = [new tree.Expression(space_1)];\n          group.forEach(function (rule) {\n            if (rule.merge === '+' && space_1.length > 0) {\n              comma_1.push(new tree.Expression(space_1 = []));\n            }\n\n            space_1.push(rule.value);\n            result_1.important = result_1.important || rule.important;\n          });\n          result_1.value = new tree.Value(comma_1);\n        }\n      });\n    }\n  };\n  var visitors = {\n    Visitor: Visitor,\n    ImportVisitor: ImportVisitor,\n    MarkVisibleSelectorsVisitor: SetTreeVisibilityVisitor,\n    ExtendVisitor: ProcessExtendsVisitor,\n    JoinSelectorVisitor: JoinSelectorVisitor,\n    ToCSSVisitor: ToCSSVisitor\n  }; // Split the input into chunks.\n\n  function chunker(input, fail) {\n    var len = input.length;\n    var level = 0;\n    var parenLevel = 0;\n    var lastOpening;\n    var lastOpeningParen;\n    var lastMultiComment;\n    var lastMultiCommentEndBrace;\n    var chunks = [];\n    var emitFrom = 0;\n    var chunkerCurrentIndex;\n    var currentChunkStartIndex;\n    var cc;\n    var cc2;\n    var matched;\n\n    function emitChunk(force) {\n      var len = chunkerCurrentIndex - emitFrom;\n\n      if (len < 512 && !force || !len) {\n        return;\n      }\n\n      chunks.push(input.slice(emitFrom, chunkerCurrentIndex + 1));\n      emitFrom = chunkerCurrentIndex + 1;\n    }\n\n    for (chunkerCurrentIndex = 0; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\n      cc = input.charCodeAt(chunkerCurrentIndex);\n\n      if (cc >= 97 && cc <= 122 || cc < 34) {\n        // a-z or whitespace\n        continue;\n      }\n\n      switch (cc) {\n        case 40:\n          // (\n          parenLevel++;\n          lastOpeningParen = chunkerCurrentIndex;\n          continue;\n\n        case 41:\n          // )\n          if (--parenLevel < 0) {\n            return fail('missing opening `(`', chunkerCurrentIndex);\n          }\n\n          continue;\n\n        case 59:\n          // ;\n          if (!parenLevel) {\n            emitChunk();\n          }\n\n          continue;\n\n        case 123:\n          // {\n          level++;\n          lastOpening = chunkerCurrentIndex;\n          continue;\n\n        case 125:\n          // }\n          if (--level < 0) {\n            return fail('missing opening `{`', chunkerCurrentIndex);\n          }\n\n          if (!level && !parenLevel) {\n            emitChunk();\n          }\n\n          continue;\n\n        case 92:\n          // \\\n          if (chunkerCurrentIndex < len - 1) {\n            chunkerCurrentIndex++;\n            continue;\n          }\n\n          return fail('unescaped `\\\\`', chunkerCurrentIndex);\n\n        case 34:\n        case 39:\n        case 96:\n          // \", ' and `\n          matched = 0;\n          currentChunkStartIndex = chunkerCurrentIndex;\n\n          for (chunkerCurrentIndex = chunkerCurrentIndex + 1; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\n            cc2 = input.charCodeAt(chunkerCurrentIndex);\n\n            if (cc2 > 96) {\n              continue;\n            }\n\n            if (cc2 == cc) {\n              matched = 1;\n              break;\n            }\n\n            if (cc2 == 92) {\n              // \\\n              if (chunkerCurrentIndex == len - 1) {\n                return fail('unescaped `\\\\`', chunkerCurrentIndex);\n              }\n\n              chunkerCurrentIndex++;\n            }\n          }\n\n          if (matched) {\n            continue;\n          }\n\n          return fail(\"unmatched `\" + String.fromCharCode(cc) + \"`\", currentChunkStartIndex);\n\n        case 47:\n          // /, check for comment\n          if (parenLevel || chunkerCurrentIndex == len - 1) {\n            continue;\n          }\n\n          cc2 = input.charCodeAt(chunkerCurrentIndex + 1);\n\n          if (cc2 == 47) {\n            // //, find lnfeed\n            for (chunkerCurrentIndex = chunkerCurrentIndex + 2; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\n              cc2 = input.charCodeAt(chunkerCurrentIndex);\n\n              if (cc2 <= 13 && (cc2 == 10 || cc2 == 13)) {\n                break;\n              }\n            }\n          } else if (cc2 == 42) {\n            // /*, find */\n            lastMultiComment = currentChunkStartIndex = chunkerCurrentIndex;\n\n            for (chunkerCurrentIndex = chunkerCurrentIndex + 2; chunkerCurrentIndex < len - 1; chunkerCurrentIndex++) {\n              cc2 = input.charCodeAt(chunkerCurrentIndex);\n\n              if (cc2 == 125) {\n                lastMultiCommentEndBrace = chunkerCurrentIndex;\n              }\n\n              if (cc2 != 42) {\n                continue;\n              }\n\n              if (input.charCodeAt(chunkerCurrentIndex + 1) == 47) {\n                break;\n              }\n            }\n\n            if (chunkerCurrentIndex == len - 1) {\n              return fail('missing closing `*/`', currentChunkStartIndex);\n            }\n\n            chunkerCurrentIndex++;\n          }\n\n          continue;\n\n        case 42:\n          // *, check for unmatched */\n          if (chunkerCurrentIndex < len - 1 && input.charCodeAt(chunkerCurrentIndex + 1) == 47) {\n            return fail('unmatched `/*`', chunkerCurrentIndex);\n          }\n\n          continue;\n      }\n    }\n\n    if (level !== 0) {\n      if (lastMultiComment > lastOpening && lastMultiCommentEndBrace > lastMultiComment) {\n        return fail('missing closing `}` or `*/`', lastOpening);\n      } else {\n        return fail('missing closing `}`', lastOpening);\n      }\n    } else if (parenLevel !== 0) {\n      return fail('missing closing `)`', lastOpeningParen);\n    }\n\n    emitChunk(true);\n    return chunks;\n  }\n\n  var getParserInput = function getParserInput() {\n    var // Less input string\n    input;\n    var // current chunk\n    j;\n    var // holds state for backtracking\n    saveStack = [];\n    var // furthest index the parser has gone to\n    furthest;\n    var // if this is furthest we got to, this is the probably cause\n    furthestPossibleErrorMessage;\n    var // chunkified input\n    chunks;\n    var // current chunk\n    current;\n    var // index of current chunk, in `input`\n    currentPos;\n    var parserInput = {};\n    var CHARCODE_SPACE = 32;\n    var CHARCODE_TAB = 9;\n    var CHARCODE_LF = 10;\n    var CHARCODE_CR = 13;\n    var CHARCODE_PLUS = 43;\n    var CHARCODE_COMMA = 44;\n    var CHARCODE_FORWARD_SLASH = 47;\n    var CHARCODE_9 = 57;\n\n    function skipWhitespace(length) {\n      var oldi = parserInput.i;\n      var oldj = j;\n      var curr = parserInput.i - currentPos;\n      var endIndex = parserInput.i + current.length - curr;\n      var mem = parserInput.i += length;\n      var inp = input;\n      var c;\n      var nextChar;\n      var comment;\n\n      for (; parserInput.i < endIndex; parserInput.i++) {\n        c = inp.charCodeAt(parserInput.i);\n\n        if (parserInput.autoCommentAbsorb && c === CHARCODE_FORWARD_SLASH) {\n          nextChar = inp.charAt(parserInput.i + 1);\n\n          if (nextChar === '/') {\n            comment = {\n              index: parserInput.i,\n              isLineComment: true\n            };\n            var nextNewLine = inp.indexOf('\\n', parserInput.i + 2);\n\n            if (nextNewLine < 0) {\n              nextNewLine = endIndex;\n            }\n\n            parserInput.i = nextNewLine;\n            comment.text = inp.substr(comment.index, parserInput.i - comment.index);\n            parserInput.commentStore.push(comment);\n            continue;\n          } else if (nextChar === '*') {\n            var nextStarSlash = inp.indexOf('*/', parserInput.i + 2);\n\n            if (nextStarSlash >= 0) {\n              comment = {\n                index: parserInput.i,\n                text: inp.substr(parserInput.i, nextStarSlash + 2 - parserInput.i),\n                isLineComment: false\n              };\n              parserInput.i += comment.text.length - 1;\n              parserInput.commentStore.push(comment);\n              continue;\n            }\n          }\n\n          break;\n        }\n\n        if (c !== CHARCODE_SPACE && c !== CHARCODE_LF && c !== CHARCODE_TAB && c !== CHARCODE_CR) {\n          break;\n        }\n      }\n\n      current = current.slice(length + parserInput.i - mem + curr);\n      currentPos = parserInput.i;\n\n      if (!current.length) {\n        if (j < chunks.length - 1) {\n          current = chunks[++j];\n          skipWhitespace(0); // skip space at the beginning of a chunk\n\n          return true; // things changed\n        }\n\n        parserInput.finished = true;\n      }\n\n      return oldi !== parserInput.i || oldj !== j;\n    }\n\n    parserInput.save = function () {\n      currentPos = parserInput.i;\n      saveStack.push({\n        current: current,\n        i: parserInput.i,\n        j: j\n      });\n    };\n\n    parserInput.restore = function (possibleErrorMessage) {\n      if (parserInput.i > furthest || parserInput.i === furthest && possibleErrorMessage && !furthestPossibleErrorMessage) {\n        furthest = parserInput.i;\n        furthestPossibleErrorMessage = possibleErrorMessage;\n      }\n\n      var state = saveStack.pop();\n      current = state.current;\n      currentPos = parserInput.i = state.i;\n      j = state.j;\n    };\n\n    parserInput.forget = function () {\n      saveStack.pop();\n    };\n\n    parserInput.isWhitespace = function (offset) {\n      var pos = parserInput.i + (offset || 0);\n      var code = input.charCodeAt(pos);\n      return code === CHARCODE_SPACE || code === CHARCODE_CR || code === CHARCODE_TAB || code === CHARCODE_LF;\n    }; // Specialization of $(tok)\n\n\n    parserInput.$re = function (tok) {\n      if (parserInput.i > currentPos) {\n        current = current.slice(parserInput.i - currentPos);\n        currentPos = parserInput.i;\n      }\n\n      var m = tok.exec(current);\n\n      if (!m) {\n        return null;\n      }\n\n      skipWhitespace(m[0].length);\n\n      if (typeof m === 'string') {\n        return m;\n      }\n\n      return m.length === 1 ? m[0] : m;\n    };\n\n    parserInput.$char = function (tok) {\n      if (input.charAt(parserInput.i) !== tok) {\n        return null;\n      }\n\n      skipWhitespace(1);\n      return tok;\n    };\n\n    parserInput.$str = function (tok) {\n      var tokLength = tok.length; // https://jsperf.com/string-startswith/21\n\n      for (var i = 0; i < tokLength; i++) {\n        if (input.charAt(parserInput.i + i) !== tok.charAt(i)) {\n          return null;\n        }\n      }\n\n      skipWhitespace(tokLength);\n      return tok;\n    };\n\n    parserInput.$quoted = function (loc) {\n      var pos = loc || parserInput.i;\n      var startChar = input.charAt(pos);\n\n      if (startChar !== '\\'' && startChar !== '\"') {\n        return;\n      }\n\n      var length = input.length;\n      var currentPosition = pos;\n\n      for (var i = 1; i + currentPosition < length; i++) {\n        var nextChar = input.charAt(i + currentPosition);\n\n        switch (nextChar) {\n          case '\\\\':\n            i++;\n            continue;\n\n          case '\\r':\n          case '\\n':\n            break;\n\n          case startChar:\n            var str = input.substr(currentPosition, i + 1);\n\n            if (!loc && loc !== 0) {\n              skipWhitespace(i + 1);\n              return str;\n            }\n\n            return [startChar, str];\n        }\n      }\n\n      return null;\n    };\n    /**\r\n     * Permissive parsing. Ignores everything except matching {} [] () and quotes\r\n     * until matching token (outside of blocks)\r\n     */\n\n\n    parserInput.$parseUntil = function (tok) {\n      var quote = '';\n      var returnVal = null;\n      var inComment = false;\n      var blockDepth = 0;\n      var blockStack = [];\n      var parseGroups = [];\n      var length = input.length;\n      var startPos = parserInput.i;\n      var lastPos = parserInput.i;\n      var i = parserInput.i;\n      var loop = true;\n      var testChar;\n\n      if (typeof tok === 'string') {\n        testChar = function testChar(_char) {\n          return _char === tok;\n        };\n      } else {\n        testChar = function testChar(_char2) {\n          return tok.test(_char2);\n        };\n      }\n\n      do {\n        var nextChar = input.charAt(i);\n\n        if (blockDepth === 0 && testChar(nextChar)) {\n          returnVal = input.substr(lastPos, i - lastPos);\n\n          if (returnVal) {\n            parseGroups.push(returnVal);\n          } else {\n            parseGroups.push(' ');\n          }\n\n          returnVal = parseGroups;\n          skipWhitespace(i - startPos);\n          loop = false;\n        } else {\n          if (inComment) {\n            if (nextChar === '*' && input.charAt(i + 1) === '/') {\n              i++;\n              blockDepth--;\n              inComment = false;\n            }\n\n            i++;\n            continue;\n          }\n\n          switch (nextChar) {\n            case '\\\\':\n              i++;\n              nextChar = input.charAt(i);\n              parseGroups.push(input.substr(lastPos, i - lastPos + 1));\n              lastPos = i + 1;\n              break;\n\n            case '/':\n              if (input.charAt(i + 1) === '*') {\n                i++;\n                inComment = true;\n                blockDepth++;\n              }\n\n              break;\n\n            case '\\'':\n            case '\"':\n              quote = parserInput.$quoted(i);\n\n              if (quote) {\n                parseGroups.push(input.substr(lastPos, i - lastPos), quote);\n                i += quote[1].length - 1;\n                lastPos = i + 1;\n              } else {\n                skipWhitespace(i - startPos);\n                returnVal = nextChar;\n                loop = false;\n              }\n\n              break;\n\n            case '{':\n              blockStack.push('}');\n              blockDepth++;\n              break;\n\n            case '(':\n              blockStack.push(')');\n              blockDepth++;\n              break;\n\n            case '[':\n              blockStack.push(']');\n              blockDepth++;\n              break;\n\n            case '}':\n            case ')':\n            case ']':\n              var expected = blockStack.pop();\n\n              if (nextChar === expected) {\n                blockDepth--;\n              } else {\n                // move the parser to the error and return expected\n                skipWhitespace(i - startPos);\n                returnVal = expected;\n                loop = false;\n              }\n\n          }\n\n          i++;\n\n          if (i > length) {\n            loop = false;\n          }\n        }\n      } while (loop);\n\n      return returnVal ? returnVal : null;\n    };\n\n    parserInput.autoCommentAbsorb = true;\n    parserInput.commentStore = [];\n    parserInput.finished = false; // Same as $(), but don't change the state of the parser,\n    // just return the match.\n\n    parserInput.peek = function (tok) {\n      if (typeof tok === 'string') {\n        // https://jsperf.com/string-startswith/21\n        for (var i = 0; i < tok.length; i++) {\n          if (input.charAt(parserInput.i + i) !== tok.charAt(i)) {\n            return false;\n          }\n        }\n\n        return true;\n      } else {\n        return tok.test(current);\n      }\n    }; // Specialization of peek()\n    // TODO remove or change some currentChar calls to peekChar\n\n\n    parserInput.peekChar = function (tok) {\n      return input.charAt(parserInput.i) === tok;\n    };\n\n    parserInput.currentChar = function () {\n      return input.charAt(parserInput.i);\n    };\n\n    parserInput.prevChar = function () {\n      return input.charAt(parserInput.i - 1);\n    };\n\n    parserInput.getInput = function () {\n      return input;\n    };\n\n    parserInput.peekNotNumeric = function () {\n      var c = input.charCodeAt(parserInput.i); // Is the first char of the dimension 0-9, '.', '+' or '-'\n\n      return c > CHARCODE_9 || c < CHARCODE_PLUS || c === CHARCODE_FORWARD_SLASH || c === CHARCODE_COMMA;\n    };\n\n    parserInput.start = function (str, chunkInput, failFunction) {\n      input = str;\n      parserInput.i = j = currentPos = furthest = 0; // chunking apparently makes things quicker (but my tests indicate\n      // it might actually make things slower in node at least)\n      // and it is a non-perfect parse - it can't recognise\n      // unquoted urls, meaning it can't distinguish comments\n      // meaning comments with quotes or {}() in them get 'counted'\n      // and then lead to parse errors.\n      // In addition if the chunking chunks in the wrong place we might\n      // not be able to parse a parser statement in one go\n      // this is officially deprecated but can be switched on via an option\n      // in the case it causes too much performance issues.\n\n      if (chunkInput) {\n        chunks = chunker(str, failFunction);\n      } else {\n        chunks = [str];\n      }\n\n      current = chunks[0];\n      skipWhitespace(0);\n    };\n\n    parserInput.end = function () {\n      var message;\n      var isFinished = parserInput.i >= input.length;\n\n      if (parserInput.i < furthest) {\n        message = furthestPossibleErrorMessage;\n        parserInput.i = furthest;\n      }\n\n      return {\n        isFinished: isFinished,\n        furthest: parserInput.i,\n        furthestPossibleErrorMessage: message,\n        furthestReachedEnd: parserInput.i >= input.length - 1,\n        furthestChar: input[parserInput.i]\n      };\n    };\n\n    return parserInput;\n  }; //\n  // less.js - parser\n  //\n  //    A relatively straight-forward predictive parser.\n  //    There is no tokenization/lexing stage, the input is parsed\n  //    in one sweep.\n  //\n  //    To make the parser fast enough to run in the browser, several\n  //    optimization had to be made:\n  //\n  //    - Matching and slicing on a huge input is often cause of slowdowns.\n  //      The solution is to chunkify the input into smaller strings.\n  //      The chunks are stored in the `chunks` var,\n  //      `j` holds the current chunk index, and `currentPos` holds\n  //      the index of the current chunk in relation to `input`.\n  //      This gives us an almost 4x speed-up.\n  //\n  //    - In many cases, we don't need to match individual tokens;\n  //      for example, if a value doesn't hold any variables, operations\n  //      or dynamic references, the parser can effectively 'skip' it,\n  //      treating it as a literal.\n  //      An example would be '1px solid #000' - which evaluates to itself,\n  //      we don't need to know what the individual components are.\n  //      The drawback, of course is that you don't get the benefits of\n  //      syntax-checking on the CSS. This gives us a 50% speed-up in the parser,\n  //      and a smaller speed-up in the code-gen.\n  //\n  //\n  //    Token matching is done with the `$` function, which either takes\n  //    a terminal string or regexp, or a non-terminal function to call.\n  //    It also takes care of moving all the indices forwards.\n  //\n\n\n  var Parser = function Parser(context, imports, fileInfo) {\n    var parsers;\n    var parserInput = getParserInput();\n\n    function error(msg, type) {\n      throw new LessError({\n        index: parserInput.i,\n        filename: fileInfo.filename,\n        type: type || 'Syntax',\n        message: msg\n      }, imports);\n    }\n\n    function expect(arg, msg) {\n      // some older browsers return typeof 'function' for RegExp\n      var result = arg instanceof Function ? arg.call(parsers) : parserInput.$re(arg);\n\n      if (result) {\n        return result;\n      }\n\n      error(msg || (typeof arg === 'string' ? \"expected '\" + arg + \"' got '\" + parserInput.currentChar() + \"'\" : 'unexpected token'));\n    } // Specialization of expect()\n\n\n    function expectChar(arg, msg) {\n      if (parserInput.$char(arg)) {\n        return arg;\n      }\n\n      error(msg || \"expected '\" + arg + \"' got '\" + parserInput.currentChar() + \"'\");\n    }\n\n    function getDebugInfo(index) {\n      var filename = fileInfo.filename;\n      return {\n        lineNumber: getLocation(index, parserInput.getInput()).line + 1,\n        fileName: filename\n      };\n    }\n    /**\r\n     *  Used after initial parsing to create nodes on the fly\r\n     *\r\n     *  @param {String} str          - string to parse\r\n     *  @param {Array}  parseList    - array of parsers to run input through e.g. [\"value\", \"important\"]\r\n     *  @param {Number} currentIndex - start number to begin indexing\r\n     *  @param {Object} fileInfo     - fileInfo to attach to created nodes\r\n     */\n\n\n    function parseNode(str, parseList, currentIndex, fileInfo, callback) {\n      var result;\n      var returnNodes = [];\n      var parser = parserInput;\n\n      try {\n        parser.start(str, false, function fail(msg, index) {\n          callback({\n            message: msg,\n            index: index + currentIndex\n          });\n        });\n\n        for (var x = 0, p = void 0, i = void 0; p = parseList[x]; x++) {\n          i = parser.i;\n          result = parsers[p]();\n\n          if (result) {\n            try {\n              result._index = i + currentIndex;\n              result._fileInfo = fileInfo;\n            } catch (e) {}\n\n            returnNodes.push(result);\n          } else {\n            returnNodes.push(null);\n          }\n        }\n\n        var endInfo = parser.end();\n\n        if (endInfo.isFinished) {\n          callback(null, returnNodes);\n        } else {\n          callback(true, null);\n        }\n      } catch (e) {\n        throw new LessError({\n          index: e.index + currentIndex,\n          message: e.message\n        }, imports, fileInfo.filename);\n      }\n    } //\n    // The Parser\n    //\n\n\n    return {\n      parserInput: parserInput,\n      imports: imports,\n      fileInfo: fileInfo,\n      parseNode: parseNode,\n      //\n      // Parse an input string into an abstract syntax tree,\n      // @param str A string containing 'less' markup\n      // @param callback call `callback` when done.\n      // @param [additionalData] An optional map which can contains vars - a map (key, value) of variables to apply\n      //\n      parse: function parse(str, callback, additionalData) {\n        var root;\n        var error = null;\n        var globalVars;\n        var modifyVars;\n        var ignored;\n        var preText = '';\n        globalVars = additionalData && additionalData.globalVars ? Parser.serializeVars(additionalData.globalVars) + \"\\n\" : '';\n        modifyVars = additionalData && additionalData.modifyVars ? \"\\n\" + Parser.serializeVars(additionalData.modifyVars) : '';\n\n        if (context.pluginManager) {\n          var preProcessors = context.pluginManager.getPreProcessors();\n\n          for (var i = 0; i < preProcessors.length; i++) {\n            str = preProcessors[i].process(str, {\n              context: context,\n              imports: imports,\n              fileInfo: fileInfo\n            });\n          }\n        }\n\n        if (globalVars || additionalData && additionalData.banner) {\n          preText = (additionalData && additionalData.banner ? additionalData.banner : '') + globalVars;\n          ignored = imports.contentsIgnoredChars;\n          ignored[fileInfo.filename] = ignored[fileInfo.filename] || 0;\n          ignored[fileInfo.filename] += preText.length;\n        }\n\n        str = str.replace(/\\r\\n?/g, '\\n'); // Remove potential UTF Byte Order Mark\n\n        str = preText + str.replace(/^\\uFEFF/, '') + modifyVars;\n        imports.contents[fileInfo.filename] = str; // Start with the primary rule.\n        // The whole syntax tree is held under a Ruleset node,\n        // with the `root` property set to true, so no `{}` are\n        // output. The callback is called when the input is parsed.\n\n        try {\n          parserInput.start(str, context.chunkInput, function fail(msg, index) {\n            throw new LessError({\n              index: index,\n              type: 'Parse',\n              message: msg,\n              filename: fileInfo.filename\n            }, imports);\n          });\n          tree.Node.prototype.parse = this;\n          root = new tree.Ruleset(null, this.parsers.primary());\n          tree.Node.prototype.rootNode = root;\n          root.root = true;\n          root.firstRoot = true;\n          root.functionRegistry = functionRegistry.inherit();\n        } catch (e) {\n          return callback(new LessError(e, imports, fileInfo.filename));\n        } // If `i` is smaller than the `input.length - 1`,\n        // it means the parser wasn't able to parse the whole\n        // string, so we've got a parsing error.\n        //\n        // We try to extract a \\n delimited string,\n        // showing the line where the parse error occurred.\n        // We split it up into two parts (the part which parsed,\n        // and the part which didn't), so we can color them differently.\n\n\n        var endInfo = parserInput.end();\n\n        if (!endInfo.isFinished) {\n          var message = endInfo.furthestPossibleErrorMessage;\n\n          if (!message) {\n            message = 'Unrecognised input';\n\n            if (endInfo.furthestChar === '}') {\n              message += '. Possibly missing opening \\'{\\'';\n            } else if (endInfo.furthestChar === ')') {\n              message += '. Possibly missing opening \\'(\\'';\n            } else if (endInfo.furthestReachedEnd) {\n              message += '. Possibly missing something';\n            }\n          }\n\n          error = new LessError({\n            type: 'Parse',\n            message: message,\n            index: endInfo.furthest,\n            filename: fileInfo.filename\n          }, imports);\n        }\n\n        var finish = function finish(e) {\n          e = error || e || imports.error;\n\n          if (e) {\n            if (!(e instanceof LessError)) {\n              e = new LessError(e, imports, fileInfo.filename);\n            }\n\n            return callback(e);\n          } else {\n            return callback(null, root);\n          }\n        };\n\n        if (context.processImports !== false) {\n          new visitors.ImportVisitor(imports, finish).run(root);\n        } else {\n          return finish();\n        }\n      },\n      //\n      // Here in, the parsing rules/functions\n      //\n      // The basic structure of the syntax tree generated is as follows:\n      //\n      //   Ruleset ->  Declaration -> Value -> Expression -> Entity\n      //\n      // Here's some Less code:\n      //\n      //    .class {\n      //      color: #fff;\n      //      border: 1px solid #000;\n      //      width: @w + 4px;\n      //      > .child {...}\n      //    }\n      //\n      // And here's what the parse tree might look like:\n      //\n      //     Ruleset (Selector '.class', [\n      //         Declaration (\"color\",  Value ([Expression [Color #fff]]))\n      //         Declaration (\"border\", Value ([Expression [Dimension 1px][Keyword \"solid\"][Color #000]]))\n      //         Declaration (\"width\",  Value ([Expression [Operation \" + \" [Variable \"@w\"][Dimension 4px]]]))\n      //         Ruleset (Selector [Element '>', '.child'], [...])\n      //     ])\n      //\n      //  In general, most rules will try to parse a token with the `$re()` function, and if the return\n      //  value is truly, will return a new node, of the relevant type. Sometimes, we need to check\n      //  first, before parsing, that's when we use `peek()`.\n      //\n      parsers: parsers = {\n        //\n        // The `primary` rule is the *entry* and *exit* point of the parser.\n        // The rules here can appear at any level of the parse tree.\n        //\n        // The recursive nature of the grammar is an interplay between the `block`\n        // rule, which represents `{ ... }`, the `ruleset` rule, and this `primary` rule,\n        // as represented by this simplified grammar:\n        //\n        //     primary  \u2192  (ruleset | declaration)+\n        //     ruleset  \u2192  selector+ block\n        //     block    \u2192  '{' primary '}'\n        //\n        // Only at one point is the primary rule not called from the\n        // block rule: at the root level.\n        //\n        primary: function primary() {\n          var mixin = this.mixin;\n          var root = [];\n          var node;\n\n          while (true) {\n            while (true) {\n              node = this.comment();\n\n              if (!node) {\n                break;\n              }\n\n              root.push(node);\n            } // always process comments before deciding if finished\n\n\n            if (parserInput.finished) {\n              break;\n            }\n\n            if (parserInput.peek('}')) {\n              break;\n            }\n\n            node = this.extendRule();\n\n            if (node) {\n              root = root.concat(node);\n              continue;\n            }\n\n            node = mixin.definition() || this.declaration() || mixin.call(false, false) || this.ruleset() || this.variableCall() || this.entities.call() || this.atrule();\n\n            if (node) {\n              root.push(node);\n            } else {\n              var foundSemiColon = false;\n\n              while (parserInput.$char(';')) {\n                foundSemiColon = true;\n              }\n\n              if (!foundSemiColon) {\n                break;\n              }\n            }\n          }\n\n          return root;\n        },\n        // comments are collected by the main parsing mechanism and then assigned to nodes\n        // where the current structure allows it\n        comment: function comment() {\n          if (parserInput.commentStore.length) {\n            var comment = parserInput.commentStore.shift();\n            return new tree.Comment(comment.text, comment.isLineComment, comment.index, fileInfo);\n          }\n        },\n        //\n        // Entities are tokens which can be found inside an Expression\n        //\n        entities: {\n          mixinLookup: function mixinLookup() {\n            return parsers.mixin.call(true, true);\n          },\n          //\n          // A string, which supports escaping \" and '\n          //\n          //     \"milky way\" 'he\\'s the one!'\n          //\n          quoted: function quoted(forceEscaped) {\n            var str;\n            var index = parserInput.i;\n            var isEscaped = false;\n            parserInput.save();\n\n            if (parserInput.$char('~')) {\n              isEscaped = true;\n            } else if (forceEscaped) {\n              parserInput.restore();\n              return;\n            }\n\n            str = parserInput.$quoted();\n\n            if (!str) {\n              parserInput.restore();\n              return;\n            }\n\n            parserInput.forget();\n            return new tree.Quoted(str.charAt(0), str.substr(1, str.length - 2), isEscaped, index, fileInfo);\n          },\n          //\n          // A catch-all word, such as:\n          //\n          //     black border-collapse\n          //\n          keyword: function keyword() {\n            var k = parserInput.$char('%') || parserInput.$re(/^\\[?(?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+\\]?/);\n\n            if (k) {\n              return tree.Color.fromKeyword(k) || new tree.Keyword(k);\n            }\n          },\n          //\n          // A function call\n          //\n          //     rgb(255, 0, 255)\n          //\n          // The arguments are parsed with the `entities.arguments` parser.\n          //\n          call: function call() {\n            var name;\n            var args;\n            var func;\n            var index = parserInput.i; // http://jsperf.com/case-insensitive-regex-vs-strtolower-then-regex/18\n\n            if (parserInput.peek(/^url\\(/i)) {\n              return;\n            }\n\n            parserInput.save();\n            name = parserInput.$re(/^([\\w-]+|%|~|progid:[\\w\\.]+)\\(/);\n\n            if (!name) {\n              parserInput.forget();\n              return;\n            }\n\n            name = name[1];\n            func = this.customFuncCall(name);\n\n            if (func) {\n              args = func.parse();\n\n              if (args && func.stop) {\n                parserInput.forget();\n                return args;\n              }\n            }\n\n            args = this.arguments(args);\n\n            if (!parserInput.$char(')')) {\n              parserInput.restore('Could not parse call arguments or missing \\')\\'');\n              return;\n            }\n\n            parserInput.forget();\n            return new tree.Call(name, args, index, fileInfo);\n          },\n          //\n          // Parsing rules for functions with non-standard args, e.g.:\n          //\n          //     boolean(not(2 > 1))\n          //\n          //     This is a quick prototype, to be modified/improved when\n          //     more custom-parsed funcs come (e.g. `selector(...)`)\n          //\n          customFuncCall: function customFuncCall(name) {\n            /* Ideally the table is to be moved out of here for faster perf.,\r\n               but it's quite tricky since it relies on all these `parsers`\r\n               and `expect` available only here */\n            return {\n              alpha: f(parsers.ieAlpha, true),\n              \"boolean\": f(condition),\n              'if': f(condition)\n            }[name.toLowerCase()];\n\n            function f(parse, stop) {\n              return {\n                parse: parse,\n                stop: stop // when true - stop after parse() and return its result, \n                // otherwise continue for plain args\n\n              };\n            }\n\n            function condition() {\n              return [expect(parsers.condition, 'expected condition')];\n            }\n          },\n          arguments: function _arguments(prevArgs) {\n            var argsComma = prevArgs || [];\n            var argsSemiColon = [];\n            var isSemiColonSeparated;\n            var value;\n            parserInput.save();\n\n            while (true) {\n              if (prevArgs) {\n                prevArgs = false;\n              } else {\n                value = parsers.detachedRuleset() || this.assignment() || parsers.expression();\n\n                if (!value) {\n                  break;\n                }\n\n                if (value.value && value.value.length == 1) {\n                  value = value.value[0];\n                }\n\n                argsComma.push(value);\n              }\n\n              if (parserInput.$char(',')) {\n                continue;\n              }\n\n              if (parserInput.$char(';') || isSemiColonSeparated) {\n                isSemiColonSeparated = true;\n                value = argsComma.length < 1 ? argsComma[0] : new tree.Value(argsComma);\n                argsSemiColon.push(value);\n                argsComma = [];\n              }\n            }\n\n            parserInput.forget();\n            return isSemiColonSeparated ? argsSemiColon : argsComma;\n          },\n          literal: function literal() {\n            return this.dimension() || this.color() || this.quoted() || this.unicodeDescriptor();\n          },\n          // Assignments are argument entities for calls.\n          // They are present in ie filter properties as shown below.\n          //\n          //     filter: progid:DXImageTransform.Microsoft.Alpha( *opacity=50* )\n          //\n          assignment: function assignment() {\n            var key;\n            var value;\n            parserInput.save();\n            key = parserInput.$re(/^\\w+(?=\\s?=)/i);\n\n            if (!key) {\n              parserInput.restore();\n              return;\n            }\n\n            if (!parserInput.$char('=')) {\n              parserInput.restore();\n              return;\n            }\n\n            value = parsers.entity();\n\n            if (value) {\n              parserInput.forget();\n              return new tree.Assignment(key, value);\n            } else {\n              parserInput.restore();\n            }\n          },\n          //\n          // Parse url() tokens\n          //\n          // We use a specific rule for urls, because they don't really behave like\n          // standard function calls. The difference is that the argument doesn't have\n          // to be enclosed within a string, so it can't be parsed as an Expression.\n          //\n          url: function url() {\n            var value;\n            var index = parserInput.i;\n            parserInput.autoCommentAbsorb = false;\n\n            if (!parserInput.$str('url(')) {\n              parserInput.autoCommentAbsorb = true;\n              return;\n            }\n\n            value = this.quoted() || this.variable() || this.property() || parserInput.$re(/^(?:(?:\\\\[\\(\\)'\"])|[^\\(\\)'\"])+/) || '';\n            parserInput.autoCommentAbsorb = true;\n            expectChar(')');\n            return new tree.URL(value.value != null || value instanceof tree.Variable || value instanceof tree.Property ? value : new tree.Anonymous(value, index), index, fileInfo);\n          },\n          //\n          // A Variable entity, such as `@fink`, in\n          //\n          //     width: @fink + 2px\n          //\n          // We use a different parser for variable definitions,\n          // see `parsers.variable`.\n          //\n          variable: function variable() {\n            var ch;\n            var name;\n            var index = parserInput.i;\n            parserInput.save();\n\n            if (parserInput.currentChar() === '@' && (name = parserInput.$re(/^@@?[\\w-]+/))) {\n              ch = parserInput.currentChar();\n\n              if (ch === '(' || ch === '[' && !parserInput.prevChar().match(/^\\s/)) {\n                // this may be a VariableCall lookup\n                var result = parsers.variableCall(name);\n\n                if (result) {\n                  parserInput.forget();\n                  return result;\n                }\n              }\n\n              parserInput.forget();\n              return new tree.Variable(name, index, fileInfo);\n            }\n\n            parserInput.restore();\n          },\n          // A variable entity using the protective {} e.g. @{var}\n          variableCurly: function variableCurly() {\n            var curly;\n            var index = parserInput.i;\n\n            if (parserInput.currentChar() === '@' && (curly = parserInput.$re(/^@\\{([\\w-]+)\\}/))) {\n              return new tree.Variable(\"@\" + curly[1], index, fileInfo);\n            }\n          },\n          //\n          // A Property accessor, such as `$color`, in\n          //\n          //     background-color: $color\n          //\n          property: function property() {\n            var name;\n            var index = parserInput.i;\n\n            if (parserInput.currentChar() === '$' && (name = parserInput.$re(/^\\$[\\w-]+/))) {\n              return new tree.Property(name, index, fileInfo);\n            }\n          },\n          // A property entity useing the protective {} e.g. ${prop}\n          propertyCurly: function propertyCurly() {\n            var curly;\n            var index = parserInput.i;\n\n            if (parserInput.currentChar() === '$' && (curly = parserInput.$re(/^\\$\\{([\\w-]+)\\}/))) {\n              return new tree.Property(\"$\" + curly[1], index, fileInfo);\n            }\n          },\n          //\n          // A Hexadecimal color\n          //\n          //     #4F3C2F\n          //\n          // `rgb` and `hsl` colors are parsed through the `entities.call` parser.\n          //\n          color: function color() {\n            var rgb;\n            parserInput.save();\n\n            if (parserInput.currentChar() === '#' && (rgb = parserInput.$re(/^#([A-Fa-f0-9]{8}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3,4})([\\w.#\\[])?/))) {\n              if (!rgb[2]) {\n                parserInput.forget();\n                return new tree.Color(rgb[1], undefined, rgb[0]);\n              }\n            }\n\n            parserInput.restore();\n          },\n          colorKeyword: function colorKeyword() {\n            parserInput.save();\n            var autoCommentAbsorb = parserInput.autoCommentAbsorb;\n            parserInput.autoCommentAbsorb = false;\n            var k = parserInput.$re(/^[_A-Za-z-][_A-Za-z0-9-]+/);\n            parserInput.autoCommentAbsorb = autoCommentAbsorb;\n\n            if (!k) {\n              parserInput.forget();\n              return;\n            }\n\n            parserInput.restore();\n            var color = tree.Color.fromKeyword(k);\n\n            if (color) {\n              parserInput.$str(k);\n              return color;\n            }\n          },\n          //\n          // A Dimension, that is, a number and a unit\n          //\n          //     0.5em 95%\n          //\n          dimension: function dimension() {\n            if (parserInput.peekNotNumeric()) {\n              return;\n            }\n\n            var value = parserInput.$re(/^([+-]?\\d*\\.?\\d+)(%|[a-z_]+)?/i);\n\n            if (value) {\n              return new tree.Dimension(value[1], value[2]);\n            }\n          },\n          //\n          // A unicode descriptor, as is used in unicode-range\n          //\n          // U+0??  or U+00A1-00A9\n          //\n          unicodeDescriptor: function unicodeDescriptor() {\n            var ud;\n            ud = parserInput.$re(/^U\\+[0-9a-fA-F?]+(\\-[0-9a-fA-F?]+)?/);\n\n            if (ud) {\n              return new tree.UnicodeDescriptor(ud[0]);\n            }\n          },\n          //\n          // JavaScript code to be evaluated\n          //\n          //     `window.location.href`\n          //\n          javascript: function javascript() {\n            var js;\n            var index = parserInput.i;\n            parserInput.save();\n            var escape = parserInput.$char('~');\n            var jsQuote = parserInput.$char('`');\n\n            if (!jsQuote) {\n              parserInput.restore();\n              return;\n            }\n\n            js = parserInput.$re(/^[^`]*`/);\n\n            if (js) {\n              parserInput.forget();\n              return new tree.JavaScript(js.substr(0, js.length - 1), Boolean(escape), index, fileInfo);\n            }\n\n            parserInput.restore('invalid javascript definition');\n          }\n        },\n        //\n        // The variable part of a variable definition. Used in the `rule` parser\n        //\n        //     @fink:\n        //\n        variable: function variable() {\n          var name;\n\n          if (parserInput.currentChar() === '@' && (name = parserInput.$re(/^(@[\\w-]+)\\s*:/))) {\n            return name[1];\n          }\n        },\n        //\n        // Call a variable value to retrieve a detached ruleset\n        // or a value from a detached ruleset's rules.\n        //\n        //     @fink();\n        //     @fink;\n        //     color: @fink[@color];\n        //\n        variableCall: function variableCall(parsedName) {\n          var lookups;\n          var i = parserInput.i;\n          var inValue = !!parsedName;\n          var name = parsedName;\n          parserInput.save();\n\n          if (name || parserInput.currentChar() === '@' && (name = parserInput.$re(/^(@[\\w-]+)(\\(\\s*\\))?/))) {\n            lookups = this.mixin.ruleLookups();\n\n            if (!lookups && (inValue && parserInput.$str('()') !== '()' || name[2] !== '()')) {\n              parserInput.restore('Missing \\'[...]\\' lookup in variable call');\n              return;\n            }\n\n            if (!inValue) {\n              name = name[1];\n            }\n\n            var call = new tree.VariableCall(name, i, fileInfo);\n\n            if (!inValue && parsers.end()) {\n              parserInput.forget();\n              return call;\n            } else {\n              parserInput.forget();\n              return new tree.NamespaceValue(call, lookups, i, fileInfo);\n            }\n          }\n\n          parserInput.restore();\n        },\n        //\n        // extend syntax - used to extend selectors\n        //\n        extend: function extend(isRule) {\n          var elements;\n          var e;\n          var index = parserInput.i;\n          var option;\n          var extendList;\n          var extend;\n\n          if (!parserInput.$str(isRule ? '&:extend(' : ':extend(')) {\n            return;\n          }\n\n          do {\n            option = null;\n            elements = null;\n\n            while (!(option = parserInput.$re(/^(all)(?=\\s*(\\)|,))/))) {\n              e = this.element();\n\n              if (!e) {\n                break;\n              }\n\n              if (elements) {\n                elements.push(e);\n              } else {\n                elements = [e];\n              }\n            }\n\n            option = option && option[1];\n\n            if (!elements) {\n              error('Missing target selector for :extend().');\n            }\n\n            extend = new tree.Extend(new tree.Selector(elements), option, index, fileInfo);\n\n            if (extendList) {\n              extendList.push(extend);\n            } else {\n              extendList = [extend];\n            }\n          } while (parserInput.$char(','));\n\n          expect(/^\\)/);\n\n          if (isRule) {\n            expect(/^;/);\n          }\n\n          return extendList;\n        },\n        //\n        // extendRule - used in a rule to extend all the parent selectors\n        //\n        extendRule: function extendRule() {\n          return this.extend(true);\n        },\n        //\n        // Mixins\n        //\n        mixin: {\n          //\n          // A Mixin call, with an optional argument list\n          //\n          //     #mixins > .square(#fff);\n          //     #mixins.square(#fff);\n          //     .rounded(4px, black);\n          //     .button;\n          //\n          // We can lookup / return a value using the lookup syntax:\n          //\n          //     color: #mixin.square(#fff)[@color];\n          //\n          // The `while` loop is there because mixins can be\n          // namespaced, but we only support the child and descendant\n          // selector for now.\n          //\n          call: function call(inValue, getLookup) {\n            var s = parserInput.currentChar();\n            var important = false;\n            var lookups;\n            var index = parserInput.i;\n            var elements;\n            var args;\n            var hasParens;\n\n            if (s !== '.' && s !== '#') {\n              return;\n            }\n\n            parserInput.save(); // stop us absorbing part of an invalid selector\n\n            elements = this.elements();\n\n            if (elements) {\n              if (parserInput.$char('(')) {\n                args = this.args(true).args;\n                expectChar(')');\n                hasParens = true;\n              }\n\n              if (getLookup !== false) {\n                lookups = this.ruleLookups();\n              }\n\n              if (getLookup === true && !lookups) {\n                parserInput.restore();\n                return;\n              }\n\n              if (inValue && !lookups && !hasParens) {\n                // This isn't a valid in-value mixin call\n                parserInput.restore();\n                return;\n              }\n\n              if (!inValue && parsers.important()) {\n                important = true;\n              }\n\n              if (inValue || parsers.end()) {\n                parserInput.forget();\n                var mixin = new tree.mixin.Call(elements, args, index, fileInfo, !lookups && important);\n\n                if (lookups) {\n                  return new tree.NamespaceValue(mixin, lookups);\n                } else {\n                  return mixin;\n                }\n              }\n            }\n\n            parserInput.restore();\n          },\n\n          /**\r\n           * Matching elements for mixins\r\n           * (Start with . or # and can have > )\r\n           */\n          elements: function elements() {\n            var elements;\n            var e;\n            var c;\n            var elem;\n            var elemIndex;\n            var re = /^[#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/;\n\n            while (true) {\n              elemIndex = parserInput.i;\n              e = parserInput.$re(re);\n\n              if (!e) {\n                break;\n              }\n\n              elem = new tree.Element(c, e, false, elemIndex, fileInfo);\n\n              if (elements) {\n                elements.push(elem);\n              } else {\n                elements = [elem];\n              }\n\n              c = parserInput.$char('>');\n            }\n\n            return elements;\n          },\n          args: function args(isCall) {\n            var entities = parsers.entities;\n            var returner = {\n              args: null,\n              variadic: false\n            };\n            var expressions = [];\n            var argsSemiColon = [];\n            var argsComma = [];\n            var isSemiColonSeparated;\n            var expressionContainsNamed;\n            var name;\n            var nameLoop;\n            var value;\n            var arg;\n            var expand;\n            var hasSep = true;\n            parserInput.save();\n\n            while (true) {\n              if (isCall) {\n                arg = parsers.detachedRuleset() || parsers.expression();\n              } else {\n                parserInput.commentStore.length = 0;\n\n                if (parserInput.$str('...')) {\n                  returner.variadic = true;\n\n                  if (parserInput.$char(';') && !isSemiColonSeparated) {\n                    isSemiColonSeparated = true;\n                  }\n\n                  (isSemiColonSeparated ? argsSemiColon : argsComma).push({\n                    variadic: true\n                  });\n                  break;\n                }\n\n                arg = entities.variable() || entities.property() || entities.literal() || entities.keyword() || this.call(true);\n              }\n\n              if (!arg || !hasSep) {\n                break;\n              }\n\n              nameLoop = null;\n\n              if (arg.throwAwayComments) {\n                arg.throwAwayComments();\n              }\n\n              value = arg;\n              var val = null;\n\n              if (isCall) {\n                // Variable\n                if (arg.value && arg.value.length == 1) {\n                  val = arg.value[0];\n                }\n              } else {\n                val = arg;\n              }\n\n              if (val && (val instanceof tree.Variable || val instanceof tree.Property)) {\n                if (parserInput.$char(':')) {\n                  if (expressions.length > 0) {\n                    if (isSemiColonSeparated) {\n                      error('Cannot mix ; and , as delimiter types');\n                    }\n\n                    expressionContainsNamed = true;\n                  }\n\n                  value = parsers.detachedRuleset() || parsers.expression();\n\n                  if (!value) {\n                    if (isCall) {\n                      error('could not understand value for named argument');\n                    } else {\n                      parserInput.restore();\n                      returner.args = [];\n                      return returner;\n                    }\n                  }\n\n                  nameLoop = name = val.name;\n                } else if (parserInput.$str('...')) {\n                  if (!isCall) {\n                    returner.variadic = true;\n\n                    if (parserInput.$char(';') && !isSemiColonSeparated) {\n                      isSemiColonSeparated = true;\n                    }\n\n                    (isSemiColonSeparated ? argsSemiColon : argsComma).push({\n                      name: arg.name,\n                      variadic: true\n                    });\n                    break;\n                  } else {\n                    expand = true;\n                  }\n                } else if (!isCall) {\n                  name = nameLoop = val.name;\n                  value = null;\n                }\n              }\n\n              if (value) {\n                expressions.push(value);\n              }\n\n              argsComma.push({\n                name: nameLoop,\n                value: value,\n                expand: expand\n              });\n\n              if (parserInput.$char(',')) {\n                hasSep = true;\n                continue;\n              }\n\n              hasSep = parserInput.$char(';') === ';';\n\n              if (hasSep || isSemiColonSeparated) {\n                if (expressionContainsNamed) {\n                  error('Cannot mix ; and , as delimiter types');\n                }\n\n                isSemiColonSeparated = true;\n\n                if (expressions.length > 1) {\n                  value = new tree.Value(expressions);\n                }\n\n                argsSemiColon.push({\n                  name: name,\n                  value: value,\n                  expand: expand\n                });\n                name = null;\n                expressions = [];\n                expressionContainsNamed = false;\n              }\n            }\n\n            parserInput.forget();\n            returner.args = isSemiColonSeparated ? argsSemiColon : argsComma;\n            return returner;\n          },\n          //\n          // A Mixin definition, with a list of parameters\n          //\n          //     .rounded (@radius: 2px, @color) {\n          //        ...\n          //     }\n          //\n          // Until we have a finer grained state-machine, we have to\n          // do a look-ahead, to make sure we don't have a mixin call.\n          // See the `rule` function for more information.\n          //\n          // We start by matching `.rounded (`, and then proceed on to\n          // the argument list, which has optional default values.\n          // We store the parameters in `params`, with a `value` key,\n          // if there is a value, such as in the case of `@radius`.\n          //\n          // Once we've got our params list, and a closing `)`, we parse\n          // the `{...}` block.\n          //\n          definition: function definition() {\n            var name;\n            var params = [];\n            var match;\n            var ruleset;\n            var cond;\n            var variadic = false;\n\n            if (parserInput.currentChar() !== '.' && parserInput.currentChar() !== '#' || parserInput.peek(/^[^{]*\\}/)) {\n              return;\n            }\n\n            parserInput.save();\n            match = parserInput.$re(/^([#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+)\\s*\\(/);\n\n            if (match) {\n              name = match[1];\n              var argInfo = this.args(false);\n              params = argInfo.args;\n              variadic = argInfo.variadic; // .mixincall(\"@{a}\");\n              // looks a bit like a mixin definition..\n              // also\n              // .mixincall(@a: {rule: set;});\n              // so we have to be nice and restore\n\n              if (!parserInput.$char(')')) {\n                parserInput.restore('Missing closing \\')\\'');\n                return;\n              }\n\n              parserInput.commentStore.length = 0;\n\n              if (parserInput.$str('when')) {\n                // Guard\n                cond = expect(parsers.conditions, 'expected condition');\n              }\n\n              ruleset = parsers.block();\n\n              if (ruleset) {\n                parserInput.forget();\n                return new tree.mixin.Definition(name, params, ruleset, cond, variadic);\n              } else {\n                parserInput.restore();\n              }\n            } else {\n              parserInput.restore();\n            }\n          },\n          ruleLookups: function ruleLookups() {\n            var rule;\n            var lookups = [];\n\n            if (parserInput.currentChar() !== '[') {\n              return;\n            }\n\n            while (true) {\n              parserInput.save();\n              rule = this.lookupValue();\n\n              if (!rule && rule !== '') {\n                parserInput.restore();\n                break;\n              }\n\n              lookups.push(rule);\n              parserInput.forget();\n            }\n\n            if (lookups.length > 0) {\n              return lookups;\n            }\n          },\n          lookupValue: function lookupValue() {\n            parserInput.save();\n\n            if (!parserInput.$char('[')) {\n              parserInput.restore();\n              return;\n            }\n\n            var name = parserInput.$re(/^(?:[@$]{0,2})[_a-zA-Z0-9-]*/);\n\n            if (!parserInput.$char(']')) {\n              parserInput.restore();\n              return;\n            }\n\n            if (name || name === '') {\n              parserInput.forget();\n              return name;\n            }\n\n            parserInput.restore();\n          }\n        },\n        //\n        // Entities are the smallest recognized token,\n        // and can be found inside a rule's value.\n        //\n        entity: function entity() {\n          var entities = this.entities;\n          return this.comment() || entities.literal() || entities.variable() || entities.url() || entities.property() || entities.call() || entities.keyword() || this.mixin.call(true) || entities.javascript();\n        },\n        //\n        // A Declaration terminator. Note that we use `peek()` to check for '}',\n        // because the `block` rule will be expecting it, but we still need to make sure\n        // it's there, if ';' was omitted.\n        //\n        end: function end() {\n          return parserInput.$char(';') || parserInput.peek('}');\n        },\n        //\n        // IE's alpha function\n        //\n        //     alpha(opacity=88)\n        //\n        ieAlpha: function ieAlpha() {\n          var value; // http://jsperf.com/case-insensitive-regex-vs-strtolower-then-regex/18\n\n          if (!parserInput.$re(/^opacity=/i)) {\n            return;\n          }\n\n          value = parserInput.$re(/^\\d+/);\n\n          if (!value) {\n            value = expect(parsers.entities.variable, 'Could not parse alpha');\n            value = \"@{\" + value.name.slice(1) + \"}\";\n          }\n\n          expectChar(')');\n          return new tree.Quoted('', \"alpha(opacity=\" + value + \")\");\n        },\n        //\n        // A Selector Element\n        //\n        //     div\n        //     + h1\n        //     #socks\n        //     input[type=\"text\"]\n        //\n        // Elements are the building blocks for Selectors,\n        // they are made out of a `Combinator` (see combinator rule),\n        // and an element name, such as a tag a class, or `*`.\n        //\n        element: function element() {\n          var e;\n          var c;\n          var v;\n          var index = parserInput.i;\n          c = this.combinator();\n          e = parserInput.$re(/^(?:\\d+\\.\\d+|\\d+)%/) || parserInput.$re(/^(?:[.#]?|:*)(?:[\\w-]|[^\\x00-\\x9f]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/) || parserInput.$char('*') || parserInput.$char('&') || this.attribute() || parserInput.$re(/^\\([^&()@]+\\)/) || parserInput.$re(/^[\\.#:](?=@)/) || this.entities.variableCurly();\n\n          if (!e) {\n            parserInput.save();\n\n            if (parserInput.$char('(')) {\n              if ((v = this.selector(false)) && parserInput.$char(')')) {\n                e = new tree.Paren(v);\n                parserInput.forget();\n              } else {\n                parserInput.restore('Missing closing \\')\\'');\n              }\n            } else {\n              parserInput.forget();\n            }\n          }\n\n          if (e) {\n            return new tree.Element(c, e, e instanceof tree.Variable, index, fileInfo);\n          }\n        },\n        //\n        // Combinators combine elements together, in a Selector.\n        //\n        // Because our parser isn't white-space sensitive, special care\n        // has to be taken, when parsing the descendant combinator, ` `,\n        // as it's an empty space. We have to check the previous character\n        // in the input, to see if it's a ` ` character. More info on how\n        // we deal with this in *combinator.js*.\n        //\n        combinator: function combinator() {\n          var c = parserInput.currentChar();\n\n          if (c === '/') {\n            parserInput.save();\n            var slashedCombinator = parserInput.$re(/^\\/[a-z]+\\//i);\n\n            if (slashedCombinator) {\n              parserInput.forget();\n              return new tree.Combinator(slashedCombinator);\n            }\n\n            parserInput.restore();\n          }\n\n          if (c === '>' || c === '+' || c === '~' || c === '|' || c === '^') {\n            parserInput.i++;\n\n            if (c === '^' && parserInput.currentChar() === '^') {\n              c = '^^';\n              parserInput.i++;\n            }\n\n            while (parserInput.isWhitespace()) {\n              parserInput.i++;\n            }\n\n            return new tree.Combinator(c);\n          } else if (parserInput.isWhitespace(-1)) {\n            return new tree.Combinator(' ');\n          } else {\n            return new tree.Combinator(null);\n          }\n        },\n        //\n        // A CSS Selector\n        // with less extensions e.g. the ability to extend and guard\n        //\n        //     .class > div + h1\n        //     li a:hover\n        //\n        // Selectors are made out of one or more Elements, see above.\n        //\n        selector: function selector(isLess) {\n          var index = parserInput.i;\n          var elements;\n          var extendList;\n          var c;\n          var e;\n          var allExtends;\n          var when;\n          var condition;\n          isLess = isLess !== false;\n\n          while (isLess && (extendList = this.extend()) || isLess && (when = parserInput.$str('when')) || (e = this.element())) {\n            if (when) {\n              condition = expect(this.conditions, 'expected condition');\n            } else if (condition) {\n              error('CSS guard can only be used at the end of selector');\n            } else if (extendList) {\n              if (allExtends) {\n                allExtends = allExtends.concat(extendList);\n              } else {\n                allExtends = extendList;\n              }\n            } else {\n              if (allExtends) {\n                error('Extend can only be used at the end of selector');\n              }\n\n              c = parserInput.currentChar();\n\n              if (elements) {\n                elements.push(e);\n              } else {\n                elements = [e];\n              }\n\n              e = null;\n            }\n\n            if (c === '{' || c === '}' || c === ';' || c === ',' || c === ')') {\n              break;\n            }\n          }\n\n          if (elements) {\n            return new tree.Selector(elements, allExtends, condition, index, fileInfo);\n          }\n\n          if (allExtends) {\n            error('Extend must be used to extend a selector, it cannot be used on its own');\n          }\n        },\n        selectors: function selectors() {\n          var s;\n          var selectors;\n\n          while (true) {\n            s = this.selector();\n\n            if (!s) {\n              break;\n            }\n\n            if (selectors) {\n              selectors.push(s);\n            } else {\n              selectors = [s];\n            }\n\n            parserInput.commentStore.length = 0;\n\n            if (s.condition && selectors.length > 1) {\n              error(\"Guards are only currently allowed on a single selector.\");\n            }\n\n            if (!parserInput.$char(',')) {\n              break;\n            }\n\n            if (s.condition) {\n              error(\"Guards are only currently allowed on a single selector.\");\n            }\n\n            parserInput.commentStore.length = 0;\n          }\n\n          return selectors;\n        },\n        attribute: function attribute() {\n          if (!parserInput.$char('[')) {\n            return;\n          }\n\n          var entities = this.entities;\n          var key;\n          var val;\n          var op;\n\n          if (!(key = entities.variableCurly())) {\n            key = expect(/^(?:[_A-Za-z0-9-\\*]*\\|)?(?:[_A-Za-z0-9-]|\\\\.)+/);\n          }\n\n          op = parserInput.$re(/^[|~*$^]?=/);\n\n          if (op) {\n            val = entities.quoted() || parserInput.$re(/^[0-9]+%/) || parserInput.$re(/^[\\w-]+/) || entities.variableCurly();\n          }\n\n          expectChar(']');\n          return new tree.Attribute(key, op, val);\n        },\n        //\n        // The `block` rule is used by `ruleset` and `mixin.definition`.\n        // It's a wrapper around the `primary` rule, with added `{}`.\n        //\n        block: function block() {\n          var content;\n\n          if (parserInput.$char('{') && (content = this.primary()) && parserInput.$char('}')) {\n            return content;\n          }\n        },\n        blockRuleset: function blockRuleset() {\n          var block = this.block();\n\n          if (block) {\n            block = new tree.Ruleset(null, block);\n          }\n\n          return block;\n        },\n        detachedRuleset: function detachedRuleset() {\n          var argInfo;\n          var params;\n          var variadic;\n          parserInput.save();\n\n          if (parserInput.$re(/^[.#]\\(/)) {\n            /**\r\n             * DR args currently only implemented for each() function, and not\r\n             * yet settable as `@dr: #(@arg) {}`\r\n             * This should be done when DRs are merged with mixins.\r\n             * See: https://github.com/less/less-meta/issues/16\r\n             */\n            argInfo = this.mixin.args(false);\n            params = argInfo.args;\n            variadic = argInfo.variadic;\n\n            if (!parserInput.$char(')')) {\n              parserInput.restore();\n              return;\n            }\n          }\n\n          var blockRuleset = this.blockRuleset();\n\n          if (blockRuleset) {\n            parserInput.forget();\n\n            if (params) {\n              return new tree.mixin.Definition(null, params, blockRuleset, null, variadic);\n            }\n\n            return new tree.DetachedRuleset(blockRuleset);\n          }\n\n          parserInput.restore();\n        },\n        //\n        // div, .class, body > p {...}\n        //\n        ruleset: function ruleset() {\n          var selectors;\n          var rules;\n          var debugInfo;\n          parserInput.save();\n\n          if (context.dumpLineNumbers) {\n            debugInfo = getDebugInfo(parserInput.i);\n          }\n\n          selectors = this.selectors();\n\n          if (selectors && (rules = this.block())) {\n            parserInput.forget();\n            var ruleset = new tree.Ruleset(selectors, rules, context.strictImports);\n\n            if (context.dumpLineNumbers) {\n              ruleset.debugInfo = debugInfo;\n            }\n\n            return ruleset;\n          } else {\n            parserInput.restore();\n          }\n        },\n        declaration: function declaration() {\n          var name;\n          var value;\n          var index = parserInput.i;\n          var hasDR;\n          var c = parserInput.currentChar();\n          var important;\n          var merge;\n          var isVariable;\n\n          if (c === '.' || c === '#' || c === '&' || c === ':') {\n            return;\n          }\n\n          parserInput.save();\n          name = this.variable() || this.ruleProperty();\n\n          if (name) {\n            isVariable = typeof name === 'string';\n\n            if (isVariable) {\n              value = this.detachedRuleset();\n\n              if (value) {\n                hasDR = true;\n              }\n            }\n\n            parserInput.commentStore.length = 0;\n\n            if (!value) {\n              // a name returned by this.ruleProperty() is always an array of the form:\n              // [string-1, ..., string-n, \"\"] or [string-1, ..., string-n, \"+\"]\n              // where each item is a tree.Keyword or tree.Variable\n              merge = !isVariable && name.length > 1 && name.pop().value; // Custom property values get permissive parsing\n\n              if (name[0].value && name[0].value.slice(0, 2) === '--') {\n                value = this.permissiveValue();\n              } // Try to store values as anonymous\n              // If we need the value later we'll re-parse it in ruleset.parseValue\n              else {\n                  value = this.anonymousValue();\n                }\n\n              if (value) {\n                parserInput.forget(); // anonymous values absorb the end ';' which is required for them to work\n\n                return new tree.Declaration(name, value, false, merge, index, fileInfo);\n              }\n\n              if (!value) {\n                value = this.value();\n              }\n\n              if (value) {\n                important = this.important();\n              } else if (isVariable) {\n                // As a last resort, try permissiveValue\n                value = this.permissiveValue();\n              }\n            }\n\n            if (value && (this.end() || hasDR)) {\n              parserInput.forget();\n              return new tree.Declaration(name, value, important, merge, index, fileInfo);\n            } else {\n              parserInput.restore();\n            }\n          } else {\n            parserInput.restore();\n          }\n        },\n        anonymousValue: function anonymousValue() {\n          var index = parserInput.i;\n          var match = parserInput.$re(/^([^.#@\\$+\\/'\"*`(;{}-]*);/);\n\n          if (match) {\n            return new tree.Anonymous(match[1], index);\n          }\n        },\n\n        /**\r\n         * Used for custom properties, at-rules, and variables (as fallback)\r\n         * Parses almost anything inside of {} [] () \"\" blocks\r\n         * until it reaches outer-most tokens.\r\n         *\r\n         * First, it will try to parse comments and entities to reach\r\n         * the end. This is mostly like the Expression parser except no\r\n         * math is allowed.\r\n         */\n        permissiveValue: function permissiveValue(untilTokens) {\n          var i;\n          var e;\n          var done;\n          var value;\n          var tok = untilTokens || ';';\n          var index = parserInput.i;\n          var result = [];\n\n          function testCurrentChar() {\n            var _char3 = parserInput.currentChar();\n\n            if (typeof tok === 'string') {\n              return _char3 === tok;\n            } else {\n              return tok.test(_char3);\n            }\n          }\n\n          if (testCurrentChar()) {\n            return;\n          }\n\n          value = [];\n\n          do {\n            e = this.comment();\n\n            if (e) {\n              value.push(e);\n              continue;\n            }\n\n            e = this.entity();\n\n            if (e) {\n              value.push(e);\n            }\n          } while (e);\n\n          done = testCurrentChar();\n\n          if (value.length > 0) {\n            value = new tree.Expression(value);\n\n            if (done) {\n              return value;\n            } else {\n              result.push(value);\n            } // Preserve space before $parseUntil as it will not\n\n\n            if (parserInput.prevChar() === ' ') {\n              result.push(new tree.Anonymous(' ', index));\n            }\n          }\n\n          parserInput.save();\n          value = parserInput.$parseUntil(tok);\n\n          if (value) {\n            if (typeof value === 'string') {\n              error(\"Expected '\" + value + \"'\", 'Parse');\n            }\n\n            if (value.length === 1 && value[0] === ' ') {\n              parserInput.forget();\n              return new tree.Anonymous('', index);\n            }\n\n            var item = void 0;\n\n            for (i = 0; i < value.length; i++) {\n              item = value[i];\n\n              if (Array.isArray(item)) {\n                // Treat actual quotes as normal quoted values\n                result.push(new tree.Quoted(item[0], item[1], true, index, fileInfo));\n              } else {\n                if (i === value.length - 1) {\n                  item = item.trim();\n                } // Treat like quoted values, but replace vars like unquoted expressions\n\n\n                var quote = new tree.Quoted('\\'', item, true, index, fileInfo);\n                quote.variableRegex = /@([\\w-]+)/g;\n                quote.propRegex = /\\$([\\w-]+)/g;\n                result.push(quote);\n              }\n            }\n\n            parserInput.forget();\n            return new tree.Expression(result, true);\n          }\n\n          parserInput.restore();\n        },\n        //\n        // An @import atrule\n        //\n        //     @import \"lib\";\n        //\n        // Depending on our environment, importing is done differently:\n        // In the browser, it's an XHR request, in Node, it would be a\n        // file-system operation. The function used for importing is\n        // stored in `import`, which we pass to the Import constructor.\n        //\n        'import': function _import() {\n          var path;\n          var features;\n          var index = parserInput.i;\n          var dir = parserInput.$re(/^@import?\\s+/);\n\n          if (dir) {\n            var options = (dir ? this.importOptions() : null) || {};\n\n            if (path = this.entities.quoted() || this.entities.url()) {\n              features = this.mediaFeatures();\n\n              if (!parserInput.$char(';')) {\n                parserInput.i = index;\n                error('missing semi-colon or unrecognised media features on import');\n              }\n\n              features = features && new tree.Value(features);\n              return new tree.Import(path, features, options, index, fileInfo);\n            } else {\n              parserInput.i = index;\n              error('malformed import statement');\n            }\n          }\n        },\n        importOptions: function importOptions() {\n          var o;\n          var options = {};\n          var optionName;\n          var value; // list of options, surrounded by parens\n\n          if (!parserInput.$char('(')) {\n            return null;\n          }\n\n          do {\n            o = this.importOption();\n\n            if (o) {\n              optionName = o;\n              value = true;\n\n              switch (optionName) {\n                case 'css':\n                  optionName = 'less';\n                  value = false;\n                  break;\n\n                case 'once':\n                  optionName = 'multiple';\n                  value = false;\n                  break;\n              }\n\n              options[optionName] = value;\n\n              if (!parserInput.$char(',')) {\n                break;\n              }\n            }\n          } while (o);\n\n          expectChar(')');\n          return options;\n        },\n        importOption: function importOption() {\n          var opt = parserInput.$re(/^(less|css|multiple|once|inline|reference|optional)/);\n\n          if (opt) {\n            return opt[1];\n          }\n        },\n        mediaFeature: function mediaFeature() {\n          var entities = this.entities;\n          var nodes = [];\n          var e;\n          var p;\n          parserInput.save();\n\n          do {\n            e = entities.keyword() || entities.variable() || entities.mixinLookup();\n\n            if (e) {\n              nodes.push(e);\n            } else if (parserInput.$char('(')) {\n              p = this.property();\n              e = this.value();\n\n              if (parserInput.$char(')')) {\n                if (p && e) {\n                  nodes.push(new tree.Paren(new tree.Declaration(p, e, null, null, parserInput.i, fileInfo, true)));\n                } else if (e) {\n                  nodes.push(new tree.Paren(e));\n                } else {\n                  error('badly formed media feature definition');\n                }\n              } else {\n                error('Missing closing \\')\\'', 'Parse');\n              }\n            }\n          } while (e);\n\n          parserInput.forget();\n\n          if (nodes.length > 0) {\n            return new tree.Expression(nodes);\n          }\n        },\n        mediaFeatures: function mediaFeatures() {\n          var entities = this.entities;\n          var features = [];\n          var e;\n\n          do {\n            e = this.mediaFeature();\n\n            if (e) {\n              features.push(e);\n\n              if (!parserInput.$char(',')) {\n                break;\n              }\n            } else {\n              e = entities.variable() || entities.mixinLookup();\n\n              if (e) {\n                features.push(e);\n\n                if (!parserInput.$char(',')) {\n                  break;\n                }\n              }\n            }\n          } while (e);\n\n          return features.length > 0 ? features : null;\n        },\n        media: function media() {\n          var features;\n          var rules;\n          var media;\n          var debugInfo;\n          var index = parserInput.i;\n\n          if (context.dumpLineNumbers) {\n            debugInfo = getDebugInfo(index);\n          }\n\n          parserInput.save();\n\n          if (parserInput.$str('@media')) {\n            features = this.mediaFeatures();\n            rules = this.block();\n\n            if (!rules) {\n              error('media definitions require block statements after any features');\n            }\n\n            parserInput.forget();\n            media = new tree.Media(rules, features, index, fileInfo);\n\n            if (context.dumpLineNumbers) {\n              media.debugInfo = debugInfo;\n            }\n\n            return media;\n          }\n\n          parserInput.restore();\n        },\n        //\n        // A @plugin directive, used to import plugins dynamically.\n        //\n        //     @plugin (args) \"lib\";\n        //\n        plugin: function plugin() {\n          var path;\n          var args;\n          var options;\n          var index = parserInput.i;\n          var dir = parserInput.$re(/^@plugin?\\s+/);\n\n          if (dir) {\n            args = this.pluginArgs();\n\n            if (args) {\n              options = {\n                pluginArgs: args,\n                isPlugin: true\n              };\n            } else {\n              options = {\n                isPlugin: true\n              };\n            }\n\n            if (path = this.entities.quoted() || this.entities.url()) {\n              if (!parserInput.$char(';')) {\n                parserInput.i = index;\n                error('missing semi-colon on @plugin');\n              }\n\n              return new tree.Import(path, null, options, index, fileInfo);\n            } else {\n              parserInput.i = index;\n              error('malformed @plugin statement');\n            }\n          }\n        },\n        pluginArgs: function pluginArgs() {\n          // list of options, surrounded by parens\n          parserInput.save();\n\n          if (!parserInput.$char('(')) {\n            parserInput.restore();\n            return null;\n          }\n\n          var args = parserInput.$re(/^\\s*([^\\);]+)\\)\\s*/);\n\n          if (args[1]) {\n            parserInput.forget();\n            return args[1].trim();\n          } else {\n            parserInput.restore();\n            return null;\n          }\n        },\n        //\n        // A CSS AtRule\n        //\n        //     @charset \"utf-8\";\n        //\n        atrule: function atrule() {\n          var index = parserInput.i;\n          var name;\n          var value;\n          var rules;\n          var nonVendorSpecificName;\n          var hasIdentifier;\n          var hasExpression;\n          var hasUnknown;\n          var hasBlock = true;\n          var isRooted = true;\n\n          if (parserInput.currentChar() !== '@') {\n            return;\n          }\n\n          value = this['import']() || this.plugin() || this.media();\n\n          if (value) {\n            return value;\n          }\n\n          parserInput.save();\n          name = parserInput.$re(/^@[a-z-]+/);\n\n          if (!name) {\n            return;\n          }\n\n          nonVendorSpecificName = name;\n\n          if (name.charAt(1) == '-' && name.indexOf('-', 2) > 0) {\n            nonVendorSpecificName = \"@\" + name.slice(name.indexOf('-', 2) + 1);\n          }\n\n          switch (nonVendorSpecificName) {\n            case '@charset':\n              hasIdentifier = true;\n              hasBlock = false;\n              break;\n\n            case '@namespace':\n              hasExpression = true;\n              hasBlock = false;\n              break;\n\n            case '@keyframes':\n            case '@counter-style':\n              hasIdentifier = true;\n              break;\n\n            case '@document':\n            case '@supports':\n              hasUnknown = true;\n              isRooted = false;\n              break;\n\n            default:\n              hasUnknown = true;\n              break;\n          }\n\n          parserInput.commentStore.length = 0;\n\n          if (hasIdentifier) {\n            value = this.entity();\n\n            if (!value) {\n              error(\"expected \" + name + \" identifier\");\n            }\n          } else if (hasExpression) {\n            value = this.expression();\n\n            if (!value) {\n              error(\"expected \" + name + \" expression\");\n            }\n          } else if (hasUnknown) {\n            value = this.permissiveValue(/^[{;]/);\n            hasBlock = parserInput.currentChar() === '{';\n\n            if (!value) {\n              if (!hasBlock && parserInput.currentChar() !== ';') {\n                error(name + \" rule is missing block or ending semi-colon\");\n              }\n            } else if (!value.value) {\n              value = null;\n            }\n          }\n\n          if (hasBlock) {\n            rules = this.blockRuleset();\n          }\n\n          if (rules || !hasBlock && value && parserInput.$char(';')) {\n            parserInput.forget();\n            return new tree.AtRule(name, value, rules, index, fileInfo, context.dumpLineNumbers ? getDebugInfo(index) : null, isRooted);\n          }\n\n          parserInput.restore('at-rule options not recognised');\n        },\n        //\n        // A Value is a comma-delimited list of Expressions\n        //\n        //     font-family: Baskerville, Georgia, serif;\n        //\n        // In a Rule, a Value represents everything after the `:`,\n        // and before the `;`.\n        //\n        value: function value() {\n          var e;\n          var expressions = [];\n          var index = parserInput.i;\n\n          do {\n            e = this.expression();\n\n            if (e) {\n              expressions.push(e);\n\n              if (!parserInput.$char(',')) {\n                break;\n              }\n            }\n          } while (e);\n\n          if (expressions.length > 0) {\n            return new tree.Value(expressions, index);\n          }\n        },\n        important: function important() {\n          if (parserInput.currentChar() === '!') {\n            return parserInput.$re(/^! *important/);\n          }\n        },\n        sub: function sub() {\n          var a;\n          var e;\n          parserInput.save();\n\n          if (parserInput.$char('(')) {\n            a = this.addition();\n\n            if (a && parserInput.$char(')')) {\n              parserInput.forget();\n              e = new tree.Expression([a]);\n              e.parens = true;\n              return e;\n            }\n\n            parserInput.restore('Expected \\')\\'');\n            return;\n          }\n\n          parserInput.restore();\n        },\n        multiplication: function multiplication() {\n          var m;\n          var a;\n          var op;\n          var operation;\n          var isSpaced;\n          m = this.operand();\n\n          if (m) {\n            isSpaced = parserInput.isWhitespace(-1);\n\n            while (true) {\n              if (parserInput.peek(/^\\/[*\\/]/)) {\n                break;\n              }\n\n              parserInput.save();\n              op = parserInput.$char('/') || parserInput.$char('*') || parserInput.$str('./');\n\n              if (!op) {\n                parserInput.forget();\n                break;\n              }\n\n              a = this.operand();\n\n              if (!a) {\n                parserInput.restore();\n                break;\n              }\n\n              parserInput.forget();\n              m.parensInOp = true;\n              a.parensInOp = true;\n              operation = new tree.Operation(op, [operation || m, a], isSpaced);\n              isSpaced = parserInput.isWhitespace(-1);\n            }\n\n            return operation || m;\n          }\n        },\n        addition: function addition() {\n          var m;\n          var a;\n          var op;\n          var operation;\n          var isSpaced;\n          m = this.multiplication();\n\n          if (m) {\n            isSpaced = parserInput.isWhitespace(-1);\n\n            while (true) {\n              op = parserInput.$re(/^[-+]\\s+/) || !isSpaced && (parserInput.$char('+') || parserInput.$char('-'));\n\n              if (!op) {\n                break;\n              }\n\n              a = this.multiplication();\n\n              if (!a) {\n                break;\n              }\n\n              m.parensInOp = true;\n              a.parensInOp = true;\n              operation = new tree.Operation(op, [operation || m, a], isSpaced);\n              isSpaced = parserInput.isWhitespace(-1);\n            }\n\n            return operation || m;\n          }\n        },\n        conditions: function conditions() {\n          var a;\n          var b;\n          var index = parserInput.i;\n          var condition;\n          a = this.condition(true);\n\n          if (a) {\n            while (true) {\n              if (!parserInput.peek(/^,\\s*(not\\s*)?\\(/) || !parserInput.$char(',')) {\n                break;\n              }\n\n              b = this.condition(true);\n\n              if (!b) {\n                break;\n              }\n\n              condition = new tree.Condition('or', condition || a, b, index);\n            }\n\n            return condition || a;\n          }\n        },\n        condition: function condition(needsParens) {\n          var result;\n          var logical;\n          var next;\n\n          function or() {\n            return parserInput.$str('or');\n          }\n\n          result = this.conditionAnd(needsParens);\n\n          if (!result) {\n            return;\n          }\n\n          logical = or();\n\n          if (logical) {\n            next = this.condition(needsParens);\n\n            if (next) {\n              result = new tree.Condition(logical, result, next);\n            } else {\n              return;\n            }\n          }\n\n          return result;\n        },\n        conditionAnd: function conditionAnd(needsParens) {\n          var result;\n          var logical;\n          var next;\n          var self = this;\n\n          function insideCondition() {\n            var cond = self.negatedCondition(needsParens) || self.parenthesisCondition(needsParens);\n\n            if (!cond && !needsParens) {\n              return self.atomicCondition(needsParens);\n            }\n\n            return cond;\n          }\n\n          function and() {\n            return parserInput.$str('and');\n          }\n\n          result = insideCondition();\n\n          if (!result) {\n            return;\n          }\n\n          logical = and();\n\n          if (logical) {\n            next = this.conditionAnd(needsParens);\n\n            if (next) {\n              result = new tree.Condition(logical, result, next);\n            } else {\n              return;\n            }\n          }\n\n          return result;\n        },\n        negatedCondition: function negatedCondition(needsParens) {\n          if (parserInput.$str('not')) {\n            var result = this.parenthesisCondition(needsParens);\n\n            if (result) {\n              result.negate = !result.negate;\n            }\n\n            return result;\n          }\n        },\n        parenthesisCondition: function parenthesisCondition(needsParens) {\n          function tryConditionFollowedByParenthesis(me) {\n            var body;\n            parserInput.save();\n            body = me.condition(needsParens);\n\n            if (!body) {\n              parserInput.restore();\n              return;\n            }\n\n            if (!parserInput.$char(')')) {\n              parserInput.restore();\n              return;\n            }\n\n            parserInput.forget();\n            return body;\n          }\n\n          var body;\n          parserInput.save();\n\n          if (!parserInput.$str('(')) {\n            parserInput.restore();\n            return;\n          }\n\n          body = tryConditionFollowedByParenthesis(this);\n\n          if (body) {\n            parserInput.forget();\n            return body;\n          }\n\n          body = this.atomicCondition(needsParens);\n\n          if (!body) {\n            parserInput.restore();\n            return;\n          }\n\n          if (!parserInput.$char(')')) {\n            parserInput.restore(\"expected ')' got '\" + parserInput.currentChar() + \"'\");\n            return;\n          }\n\n          parserInput.forget();\n          return body;\n        },\n        atomicCondition: function atomicCondition(needsParens) {\n          var entities = this.entities;\n          var index = parserInput.i;\n          var a;\n          var b;\n          var c;\n          var op;\n\n          function cond() {\n            return this.addition() || entities.keyword() || entities.quoted() || entities.mixinLookup();\n          }\n\n          cond = cond.bind(this);\n          a = cond();\n\n          if (a) {\n            if (parserInput.$char('>')) {\n              if (parserInput.$char('=')) {\n                op = '>=';\n              } else {\n                op = '>';\n              }\n            } else if (parserInput.$char('<')) {\n              if (parserInput.$char('=')) {\n                op = '<=';\n              } else {\n                op = '<';\n              }\n            } else if (parserInput.$char('=')) {\n              if (parserInput.$char('>')) {\n                op = '=>';\n              } else if (parserInput.$char('<')) {\n                op = '=<';\n              } else {\n                op = '=';\n              }\n            }\n\n            if (op) {\n              b = cond();\n\n              if (b) {\n                c = new tree.Condition(op, a, b, index, false);\n              } else {\n                error('expected expression');\n              }\n            } else {\n              c = new tree.Condition('=', a, new tree.Keyword('true'), index, false);\n            }\n\n            return c;\n          }\n        },\n        //\n        // An operand is anything that can be part of an operation,\n        // such as a Color, or a Variable\n        //\n        operand: function operand() {\n          var entities = this.entities;\n          var negate;\n\n          if (parserInput.peek(/^-[@\\$\\(]/)) {\n            negate = parserInput.$char('-');\n          }\n\n          var o = this.sub() || entities.dimension() || entities.color() || entities.variable() || entities.property() || entities.call() || entities.quoted(true) || entities.colorKeyword() || entities.mixinLookup();\n\n          if (negate) {\n            o.parensInOp = true;\n            o = new tree.Negative(o);\n          }\n\n          return o;\n        },\n        //\n        // Expressions either represent mathematical operations,\n        // or white-space delimited Entities.\n        //\n        //     1px solid black\n        //     @var * 2\n        //\n        expression: function expression() {\n          var entities = [];\n          var e;\n          var delim;\n          var index = parserInput.i;\n\n          do {\n            e = this.comment();\n\n            if (e) {\n              entities.push(e);\n              continue;\n            }\n\n            e = this.addition() || this.entity();\n\n            if (e instanceof tree.Comment) {\n              e = null;\n            }\n\n            if (e) {\n              entities.push(e); // operations do not allow keyword \"/\" dimension (e.g. small/20px) so we support that here\n\n              if (!parserInput.peek(/^\\/[\\/*]/)) {\n                delim = parserInput.$char('/');\n\n                if (delim) {\n                  entities.push(new tree.Anonymous(delim, index));\n                }\n              }\n            }\n          } while (e);\n\n          if (entities.length > 0) {\n            return new tree.Expression(entities);\n          }\n        },\n        property: function property() {\n          var name = parserInput.$re(/^(\\*?-?[_a-zA-Z0-9-]+)\\s*:/);\n\n          if (name) {\n            return name[1];\n          }\n        },\n        ruleProperty: function ruleProperty() {\n          var name = [];\n          var index = [];\n          var s;\n          var k;\n          parserInput.save();\n          var simpleProperty = parserInput.$re(/^([_a-zA-Z0-9-]+)\\s*:/);\n\n          if (simpleProperty) {\n            name = [new tree.Keyword(simpleProperty[1])];\n            parserInput.forget();\n            return name;\n          }\n\n          function match(re) {\n            var i = parserInput.i;\n            var chunk = parserInput.$re(re);\n\n            if (chunk) {\n              index.push(i);\n              return name.push(chunk[1]);\n            }\n          }\n\n          match(/^(\\*?)/);\n\n          while (true) {\n            if (!match(/^((?:[\\w-]+)|(?:[@\\$]\\{[\\w-]+\\}))/)) {\n              break;\n            }\n          }\n\n          if (name.length > 1 && match(/^((?:\\+_|\\+)?)\\s*:/)) {\n            parserInput.forget(); // at last, we have the complete match now. move forward,\n            // convert name particles to tree objects and return:\n\n            if (name[0] === '') {\n              name.shift();\n              index.shift();\n            }\n\n            for (k = 0; k < name.length; k++) {\n              s = name[k];\n              name[k] = s.charAt(0) !== '@' && s.charAt(0) !== '$' ? new tree.Keyword(s) : s.charAt(0) === '@' ? new tree.Variable(\"@\" + s.slice(2, -1), index[k], fileInfo) : new tree.Property(\"$\" + s.slice(2, -1), index[k], fileInfo);\n            }\n\n            return name;\n          }\n\n          parserInput.restore();\n        }\n      }\n    };\n  };\n\n  Parser.serializeVars = function (vars) {\n    var s = '';\n\n    for (var name_1 in vars) {\n      if (Object.hasOwnProperty.call(vars, name_1)) {\n        var value = vars[name_1];\n        s += (name_1[0] === '@' ? '' : '@') + name_1 + \": \" + value + (String(value).slice(-1) === ';' ? '' : ';');\n      }\n    }\n\n    return s;\n  };\n\n  function _boolean(condition) {\n    return condition ? Keyword.True : Keyword.False;\n  }\n  /**\r\n   * Functions with evalArgs set to false are sent context\r\n   * as the first argument.\r\n   */\n\n\n  function If(context, condition, trueValue, falseValue) {\n    return condition.eval(context) ? trueValue.eval(context) : falseValue ? falseValue.eval(context) : new Anonymous();\n  }\n\n  If.evalArgs = false;\n\n  function isdefined(context, variable) {\n    try {\n      variable.eval(context);\n      return Keyword.True;\n    } catch (e) {\n      return Keyword.False;\n    }\n  }\n\n  isdefined.evalArgs = false;\n  var boolean$1 = {\n    isdefined: isdefined,\n    \"boolean\": _boolean,\n    'if': If\n  };\n  var colorFunctions;\n\n  function clamp(val) {\n    return Math.min(1, Math.max(0, val));\n  }\n\n  function hsla(origColor, hsl) {\n    var color = colorFunctions.hsla(hsl.h, hsl.s, hsl.l, hsl.a);\n\n    if (color) {\n      if (origColor.value && /^(rgb|hsl)/.test(origColor.value)) {\n        color.value = origColor.value;\n      } else {\n        color.value = 'rgb';\n      }\n\n      return color;\n    }\n  }\n\n  function toHSL(color) {\n    if (color.toHSL) {\n      return color.toHSL();\n    } else {\n      throw new Error('Argument cannot be evaluated to a color');\n    }\n  }\n\n  function toHSV(color) {\n    if (color.toHSV) {\n      return color.toHSV();\n    } else {\n      throw new Error('Argument cannot be evaluated to a color');\n    }\n  }\n\n  function number$1(n) {\n    if (n instanceof Dimension) {\n      return parseFloat(n.unit.is('%') ? n.value / 100 : n.value);\n    } else if (typeof n === 'number') {\n      return n;\n    } else {\n      throw {\n        type: 'Argument',\n        message: 'color functions take numbers as parameters'\n      };\n    }\n  }\n\n  function scaled(n, size) {\n    if (n instanceof Dimension && n.unit.is('%')) {\n      return parseFloat(n.value * size / 100);\n    } else {\n      return number$1(n);\n    }\n  }\n\n  colorFunctions = {\n    rgb: function rgb(r, g, b) {\n      var a = 1;\n      /**\r\n       * Comma-less syntax\r\n       *   e.g. rgb(0 128 255 / 50%)\r\n       */\n\n      if (r instanceof Expression) {\n        var val = r.value;\n        r = val[0];\n        g = val[1];\n        b = val[2];\n        /**\r\n         * @todo - should this be normalized in\r\n         *   function caller? Or parsed differently?\r\n         */\n\n        if (b instanceof Operation) {\n          var op = b;\n          b = op.operands[0];\n          a = op.operands[1];\n        }\n      }\n\n      var color = colorFunctions.rgba(r, g, b, a);\n\n      if (color) {\n        color.value = 'rgb';\n        return color;\n      }\n    },\n    rgba: function rgba(r, g, b, a) {\n      try {\n        if (r instanceof Color) {\n          if (g) {\n            a = number$1(g);\n          } else {\n            a = r.alpha;\n          }\n\n          return new Color(r.rgb, a, 'rgba');\n        }\n\n        var rgb = [r, g, b].map(function (c) {\n          return scaled(c, 255);\n        });\n        a = number$1(a);\n        return new Color(rgb, a, 'rgba');\n      } catch (e) {}\n    },\n    hsl: function hsl(h, s, l) {\n      var a = 1;\n\n      if (h instanceof Expression) {\n        var val = h.value;\n        h = val[0];\n        s = val[1];\n        l = val[2];\n\n        if (l instanceof Operation) {\n          var op = l;\n          l = op.operands[0];\n          a = op.operands[1];\n        }\n      }\n\n      var color = colorFunctions.hsla(h, s, l, a);\n\n      if (color) {\n        color.value = 'hsl';\n        return color;\n      }\n    },\n    hsla: function hsla(h, s, l, a) {\n      try {\n        var hue = function hue(h) {\n          h = h < 0 ? h + 1 : h > 1 ? h - 1 : h;\n\n          if (h * 6 < 1) {\n            return m1_1 + (m2_1 - m1_1) * h * 6;\n          } else if (h * 2 < 1) {\n            return m2_1;\n          } else if (h * 3 < 2) {\n            return m1_1 + (m2_1 - m1_1) * (2 / 3 - h) * 6;\n          } else {\n            return m1_1;\n          }\n        };\n\n        if (h instanceof Color) {\n          if (s) {\n            a = number$1(s);\n          } else {\n            a = h.alpha;\n          }\n\n          return new Color(h.rgb, a, 'hsla');\n        }\n\n        var m1_1;\n        var m2_1;\n        h = number$1(h) % 360 / 360;\n        s = clamp(number$1(s));\n        l = clamp(number$1(l));\n        a = clamp(number$1(a));\n        m2_1 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        m1_1 = l * 2 - m2_1;\n        var rgb = [hue(h + 1 / 3) * 255, hue(h) * 255, hue(h - 1 / 3) * 255];\n        a = number$1(a);\n        return new Color(rgb, a, 'hsla');\n      } catch (e) {}\n    },\n    hsv: function hsv(h, s, v) {\n      return colorFunctions.hsva(h, s, v, 1.0);\n    },\n    hsva: function hsva(h, s, v, a) {\n      h = number$1(h) % 360 / 360 * 360;\n      s = number$1(s);\n      v = number$1(v);\n      a = number$1(a);\n      var i;\n      var f;\n      i = Math.floor(h / 60 % 6);\n      f = h / 60 - i;\n      var vs = [v, v * (1 - s), v * (1 - f * s), v * (1 - (1 - f) * s)];\n      var perm = [[0, 3, 1], [2, 0, 1], [1, 0, 3], [1, 2, 0], [3, 1, 0], [0, 1, 2]];\n      return colorFunctions.rgba(vs[perm[i][0]] * 255, vs[perm[i][1]] * 255, vs[perm[i][2]] * 255, a);\n    },\n    hue: function hue(color) {\n      return new Dimension(toHSL(color).h);\n    },\n    saturation: function saturation(color) {\n      return new Dimension(toHSL(color).s * 100, '%');\n    },\n    lightness: function lightness(color) {\n      return new Dimension(toHSL(color).l * 100, '%');\n    },\n    hsvhue: function hsvhue(color) {\n      return new Dimension(toHSV(color).h);\n    },\n    hsvsaturation: function hsvsaturation(color) {\n      return new Dimension(toHSV(color).s * 100, '%');\n    },\n    hsvvalue: function hsvvalue(color) {\n      return new Dimension(toHSV(color).v * 100, '%');\n    },\n    red: function red(color) {\n      return new Dimension(color.rgb[0]);\n    },\n    green: function green(color) {\n      return new Dimension(color.rgb[1]);\n    },\n    blue: function blue(color) {\n      return new Dimension(color.rgb[2]);\n    },\n    alpha: function alpha(color) {\n      return new Dimension(toHSL(color).a);\n    },\n    luma: function luma(color) {\n      return new Dimension(color.luma() * color.alpha * 100, '%');\n    },\n    luminance: function luminance(color) {\n      var luminance = 0.2126 * color.rgb[0] / 255 + 0.7152 * color.rgb[1] / 255 + 0.0722 * color.rgb[2] / 255;\n      return new Dimension(luminance * color.alpha * 100, '%');\n    },\n    saturate: function saturate(color, amount, method) {\n      // filter: saturate(3.2);\n      // should be kept as is, so check for color\n      if (!color.rgb) {\n        return null;\n      }\n\n      var hsl = toHSL(color);\n\n      if (typeof method !== 'undefined' && method.value === 'relative') {\n        hsl.s += hsl.s * amount.value / 100;\n      } else {\n        hsl.s += amount.value / 100;\n      }\n\n      hsl.s = clamp(hsl.s);\n      return hsla(color, hsl);\n    },\n    desaturate: function desaturate(color, amount, method) {\n      var hsl = toHSL(color);\n\n      if (typeof method !== 'undefined' && method.value === 'relative') {\n        hsl.s -= hsl.s * amount.value / 100;\n      } else {\n        hsl.s -= amount.value / 100;\n      }\n\n      hsl.s = clamp(hsl.s);\n      return hsla(color, hsl);\n    },\n    lighten: function lighten(color, amount, method) {\n      var hsl = toHSL(color);\n\n      if (typeof method !== 'undefined' && method.value === 'relative') {\n        hsl.l += hsl.l * amount.value / 100;\n      } else {\n        hsl.l += amount.value / 100;\n      }\n\n      hsl.l = clamp(hsl.l);\n      return hsla(color, hsl);\n    },\n    darken: function darken(color, amount, method) {\n      var hsl = toHSL(color);\n\n      if (typeof method !== 'undefined' && method.value === 'relative') {\n        hsl.l -= hsl.l * amount.value / 100;\n      } else {\n        hsl.l -= amount.value / 100;\n      }\n\n      hsl.l = clamp(hsl.l);\n      return hsla(color, hsl);\n    },\n    fadein: function fadein(color, amount, method) {\n      var hsl = toHSL(color);\n\n      if (typeof method !== 'undefined' && method.value === 'relative') {\n        hsl.a += hsl.a * amount.value / 100;\n      } else {\n        hsl.a += amount.value / 100;\n      }\n\n      hsl.a = clamp(hsl.a);\n      return hsla(color, hsl);\n    },\n    fadeout: function fadeout(color, amount, method) {\n      var hsl = toHSL(color);\n\n      if (typeof method !== 'undefined' && method.value === 'relative') {\n        hsl.a -= hsl.a * amount.value / 100;\n      } else {\n        hsl.a -= amount.value / 100;\n      }\n\n      hsl.a = clamp(hsl.a);\n      return hsla(color, hsl);\n    },\n    fade: function fade(color, amount) {\n      var hsl = toHSL(color);\n      hsl.a = amount.value / 100;\n      hsl.a = clamp(hsl.a);\n      return hsla(color, hsl);\n    },\n    spin: function spin(color, amount) {\n      var hsl = toHSL(color);\n      var hue = (hsl.h + amount.value) % 360;\n      hsl.h = hue < 0 ? 360 + hue : hue;\n      return hsla(color, hsl);\n    },\n    //\n    // Copyright (c) 2006-2009 Hampton Catlin, Natalie Weizenbaum, and Chris Eppstein\n    // http://sass-lang.com\n    //\n    mix: function mix(color1, color2, weight) {\n      if (!weight) {\n        weight = new Dimension(50);\n      }\n\n      var p = weight.value / 100.0;\n      var w = p * 2 - 1;\n      var a = toHSL(color1).a - toHSL(color2).a;\n      var w1 = ((w * a == -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      var rgb = [color1.rgb[0] * w1 + color2.rgb[0] * w2, color1.rgb[1] * w1 + color2.rgb[1] * w2, color1.rgb[2] * w1 + color2.rgb[2] * w2];\n      var alpha = color1.alpha * p + color2.alpha * (1 - p);\n      return new Color(rgb, alpha);\n    },\n    greyscale: function greyscale(color) {\n      return colorFunctions.desaturate(color, new Dimension(100));\n    },\n    contrast: function contrast(color, dark, light, threshold) {\n      // filter: contrast(3.2);\n      // should be kept as is, so check for color\n      if (!color.rgb) {\n        return null;\n      }\n\n      if (typeof light === 'undefined') {\n        light = colorFunctions.rgba(255, 255, 255, 1.0);\n      }\n\n      if (typeof dark === 'undefined') {\n        dark = colorFunctions.rgba(0, 0, 0, 1.0);\n      } // Figure out which is actually light and dark:\n\n\n      if (dark.luma() > light.luma()) {\n        var t = light;\n        light = dark;\n        dark = t;\n      }\n\n      if (typeof threshold === 'undefined') {\n        threshold = 0.43;\n      } else {\n        threshold = number$1(threshold);\n      }\n\n      if (color.luma() < threshold) {\n        return light;\n      } else {\n        return dark;\n      }\n    },\n    // Changes made in 2.7.0 - Reverted in 3.0.0\n    // contrast: function (color, color1, color2, threshold) {\n    //     // Return which of `color1` and `color2` has the greatest contrast with `color`\n    //     // according to the standard WCAG contrast ratio calculation.\n    //     // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n    //     // The threshold param is no longer used, in line with SASS.\n    //     // filter: contrast(3.2);\n    //     // should be kept as is, so check for color\n    //     if (!color.rgb) {\n    //         return null;\n    //     }\n    //     if (typeof color1 === 'undefined') {\n    //         color1 = colorFunctions.rgba(0, 0, 0, 1.0);\n    //     }\n    //     if (typeof color2 === 'undefined') {\n    //         color2 = colorFunctions.rgba(255, 255, 255, 1.0);\n    //     }\n    //     var contrast1, contrast2;\n    //     var luma = color.luma();\n    //     var luma1 = color1.luma();\n    //     var luma2 = color2.luma();\n    //     // Calculate contrast ratios for each color\n    //     if (luma > luma1) {\n    //         contrast1 = (luma + 0.05) / (luma1 + 0.05);\n    //     } else {\n    //         contrast1 = (luma1 + 0.05) / (luma + 0.05);\n    //     }\n    //     if (luma > luma2) {\n    //         contrast2 = (luma + 0.05) / (luma2 + 0.05);\n    //     } else {\n    //         contrast2 = (luma2 + 0.05) / (luma + 0.05);\n    //     }\n    //     if (contrast1 > contrast2) {\n    //         return color1;\n    //     } else {\n    //         return color2;\n    //     }\n    // },\n    argb: function argb(color) {\n      return new Anonymous(color.toARGB());\n    },\n    color: function color(c) {\n      if (c instanceof Quoted && /^#([A-Fa-f0-9]{8}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3,4})$/i.test(c.value)) {\n        var val = c.value.slice(1);\n        return new Color(val, undefined, \"#\" + val);\n      }\n\n      if (c instanceof Color || (c = Color.fromKeyword(c.value))) {\n        c.value = undefined;\n        return c;\n      }\n\n      throw {\n        type: 'Argument',\n        message: 'argument must be a color keyword or 3|4|6|8 digit hex e.g. #FFF'\n      };\n    },\n    tint: function tint(color, amount) {\n      return colorFunctions.mix(colorFunctions.rgb(255, 255, 255), color, amount);\n    },\n    shade: function shade(color, amount) {\n      return colorFunctions.mix(colorFunctions.rgb(0, 0, 0), color, amount);\n    }\n  };\n  var color = colorFunctions; // Color Blending\n  // ref: http://www.w3.org/TR/compositing-1\n\n  function colorBlend(mode, color1, color2) {\n    var ab = color1.alpha; // result\n\n    var // backdrop\n    cb;\n    var as = color2.alpha;\n    var // source\n    cs;\n    var ar;\n    var cr;\n    var r = [];\n    ar = as + ab * (1 - as);\n\n    for (var i = 0; i < 3; i++) {\n      cb = color1.rgb[i] / 255;\n      cs = color2.rgb[i] / 255;\n      cr = mode(cb, cs);\n\n      if (ar) {\n        cr = (as * cs + ab * (cb - as * (cb + cs - cr))) / ar;\n      }\n\n      r[i] = cr * 255;\n    }\n\n    return new Color(r, ar);\n  }\n\n  var colorBlendModeFunctions = {\n    multiply: function multiply(cb, cs) {\n      return cb * cs;\n    },\n    screen: function screen(cb, cs) {\n      return cb + cs - cb * cs;\n    },\n    overlay: function overlay(cb, cs) {\n      cb *= 2;\n      return cb <= 1 ? colorBlendModeFunctions.multiply(cb, cs) : colorBlendModeFunctions.screen(cb - 1, cs);\n    },\n    softlight: function softlight(cb, cs) {\n      var d = 1;\n      var e = cb;\n\n      if (cs > 0.5) {\n        e = 1;\n        d = cb > 0.25 ? Math.sqrt(cb) : ((16 * cb - 12) * cb + 4) * cb;\n      }\n\n      return cb - (1 - 2 * cs) * e * (d - cb);\n    },\n    hardlight: function hardlight(cb, cs) {\n      return colorBlendModeFunctions.overlay(cs, cb);\n    },\n    difference: function difference(cb, cs) {\n      return Math.abs(cb - cs);\n    },\n    exclusion: function exclusion(cb, cs) {\n      return cb + cs - 2 * cb * cs;\n    },\n    // non-w3c functions:\n    average: function average(cb, cs) {\n      return (cb + cs) / 2;\n    },\n    negation: function negation(cb, cs) {\n      return 1 - Math.abs(cb + cs - 1);\n    }\n  };\n\n  for (var f$1 in colorBlendModeFunctions) {\n    if (colorBlendModeFunctions.hasOwnProperty(f$1)) {\n      colorBlend[f$1] = colorBlend.bind(null, colorBlendModeFunctions[f$1]);\n    }\n  }\n\n  var dataUri = function dataUri(environment) {\n    var fallback = function fallback(functionThis, node) {\n      return new URL(node, functionThis.index, functionThis.currentFileInfo).eval(functionThis.context);\n    };\n\n    return {\n      'data-uri': function dataUri(mimetypeNode, filePathNode) {\n        if (!filePathNode) {\n          filePathNode = mimetypeNode;\n          mimetypeNode = null;\n        }\n\n        var mimetype = mimetypeNode && mimetypeNode.value;\n        var filePath = filePathNode.value;\n        var currentFileInfo = this.currentFileInfo;\n        var currentDirectory = currentFileInfo.rewriteUrls ? currentFileInfo.currentDirectory : currentFileInfo.entryPath;\n        var fragmentStart = filePath.indexOf('#');\n        var fragment = '';\n\n        if (fragmentStart !== -1) {\n          fragment = filePath.slice(fragmentStart);\n          filePath = filePath.slice(0, fragmentStart);\n        }\n\n        var context = clone(this.context);\n        context.rawBuffer = true;\n        var fileManager = environment.getFileManager(filePath, currentDirectory, context, environment, true);\n\n        if (!fileManager) {\n          return fallback(this, filePathNode);\n        }\n\n        var useBase64 = false; // detect the mimetype if not given\n\n        if (!mimetypeNode) {\n          mimetype = environment.mimeLookup(filePath);\n\n          if (mimetype === 'image/svg+xml') {\n            useBase64 = false;\n          } else {\n            // use base 64 unless it's an ASCII or UTF-8 format\n            var charset = environment.charsetLookup(mimetype);\n            useBase64 = ['US-ASCII', 'UTF-8'].indexOf(charset) < 0;\n          }\n\n          if (useBase64) {\n            mimetype += ';base64';\n          }\n        } else {\n          useBase64 = /;base64$/.test(mimetype);\n        }\n\n        var fileSync = fileManager.loadFileSync(filePath, currentDirectory, context, environment);\n\n        if (!fileSync.contents) {\n          logger$1.warn(\"Skipped data-uri embedding of \" + filePath + \" because file not found\");\n          return fallback(this, filePathNode || mimetypeNode);\n        }\n\n        var buf = fileSync.contents;\n\n        if (useBase64 && !environment.encodeBase64) {\n          return fallback(this, filePathNode);\n        }\n\n        buf = useBase64 ? environment.encodeBase64(buf) : encodeURIComponent(buf);\n        var uri = \"data:\" + mimetype + \",\" + buf + fragment;\n        return new URL(new Quoted(\"\\\"\" + uri + \"\\\"\", uri, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\n      }\n    };\n  };\n\n  var getItemsFromNode = function getItemsFromNode(node) {\n    // handle non-array values as an array of length 1\n    // return 'undefined' if index is invalid\n    var items = Array.isArray(node.value) ? node.value : Array(node);\n    return items;\n  };\n\n  var list = {\n    _SELF: function _SELF(n) {\n      return n;\n    },\n    '~': function _() {\n      var expr = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        expr[_i] = arguments[_i];\n      }\n\n      if (expr.length === 1) {\n        return expr[0];\n      }\n\n      return new Value(expr);\n    },\n    extract: function extract(values, index) {\n      // (1-based index)\n      index = index.value - 1;\n      return getItemsFromNode(values)[index];\n    },\n    length: function length(values) {\n      return new Dimension(getItemsFromNode(values).length);\n    },\n\n    /**\r\n     * Creates a Less list of incremental values.\r\n     * Modeled after Lodash's range function, also exists natively in PHP\r\n     *\r\n     * @param {Dimension} [start=1]\r\n     * @param {Dimension} end  - e.g. 10 or 10px - unit is added to output\r\n     * @param {Dimension} [step=1]\r\n     */\n    range: function range(start, end, step) {\n      var from;\n      var to;\n      var stepValue = 1;\n      var list = [];\n\n      if (end) {\n        to = end;\n        from = start.value;\n\n        if (step) {\n          stepValue = step.value;\n        }\n      } else {\n        from = 1;\n        to = start;\n      }\n\n      for (var i = from; i <= to.value; i += stepValue) {\n        list.push(new Dimension(i, to.unit));\n      }\n\n      return new Expression(list);\n    },\n    each: function each(list, rs) {\n      var _this = this;\n\n      var rules = [];\n      var newRules;\n      var iterator;\n\n      var tryEval = function tryEval(val) {\n        if (val instanceof Node) {\n          return val.eval(_this.context);\n        }\n\n        return val;\n      };\n\n      if (list.value && !(list instanceof Quoted)) {\n        if (Array.isArray(list.value)) {\n          iterator = list.value.map(tryEval);\n        } else {\n          iterator = [tryEval(list.value)];\n        }\n      } else if (list.ruleset) {\n        iterator = tryEval(list.ruleset).rules;\n      } else if (list.rules) {\n        iterator = list.rules.map(tryEval);\n      } else if (Array.isArray(list)) {\n        iterator = list.map(tryEval);\n      } else {\n        iterator = [tryEval(list)];\n      }\n\n      var valueName = '@value';\n      var keyName = '@key';\n      var indexName = '@index';\n\n      if (rs.params) {\n        valueName = rs.params[0] && rs.params[0].name;\n        keyName = rs.params[1] && rs.params[1].name;\n        indexName = rs.params[2] && rs.params[2].name;\n        rs = rs.rules;\n      } else {\n        rs = rs.ruleset;\n      }\n\n      for (var i = 0; i < iterator.length; i++) {\n        var key = void 0;\n        var value = void 0;\n        var item = iterator[i];\n\n        if (item instanceof Declaration) {\n          key = typeof item.name === 'string' ? item.name : item.name[0].value;\n          value = item.value;\n        } else {\n          key = new Dimension(i + 1);\n          value = item;\n        }\n\n        if (item instanceof Comment) {\n          continue;\n        }\n\n        newRules = rs.rules.slice(0);\n\n        if (valueName) {\n          newRules.push(new Declaration(valueName, value, false, false, this.index, this.currentFileInfo));\n        }\n\n        if (indexName) {\n          newRules.push(new Declaration(indexName, new Dimension(i + 1), false, false, this.index, this.currentFileInfo));\n        }\n\n        if (keyName) {\n          newRules.push(new Declaration(keyName, key, false, false, this.index, this.currentFileInfo));\n        }\n\n        rules.push(new Ruleset([new Selector([new Element(\"\", '&')])], newRules, rs.strictImports, rs.visibilityInfo()));\n      }\n\n      return new Ruleset([new Selector([new Element(\"\", '&')])], rules, rs.strictImports, rs.visibilityInfo()).eval(this.context);\n    }\n  };\n\n  var MathHelper = function MathHelper(fn, unit, n) {\n    if (!(n instanceof Dimension)) {\n      throw {\n        type: 'Argument',\n        message: 'argument must be a number'\n      };\n    }\n\n    if (unit == null) {\n      unit = n.unit;\n    } else {\n      n = n.unify();\n    }\n\n    return new Dimension(fn(parseFloat(n.value)), unit);\n  };\n\n  var mathFunctions = {\n    // name,  unit\n    ceil: null,\n    floor: null,\n    sqrt: null,\n    abs: null,\n    tan: '',\n    sin: '',\n    cos: '',\n    atan: 'rad',\n    asin: 'rad',\n    acos: 'rad'\n  };\n\n  for (var f in mathFunctions) {\n    if (mathFunctions.hasOwnProperty(f)) {\n      mathFunctions[f] = MathHelper.bind(null, Math[f], mathFunctions[f]);\n    }\n  }\n\n  mathFunctions.round = function (n, f) {\n    var fraction = typeof f === 'undefined' ? 0 : f.value;\n    return MathHelper(function (num) {\n      return num.toFixed(fraction);\n    }, null, n);\n  };\n\n  var minMax = function minMax(isMin, args) {\n    args = Array.prototype.slice.call(args);\n\n    switch (args.length) {\n      case 0:\n        throw {\n          type: 'Argument',\n          message: 'one or more arguments required'\n        };\n    }\n\n    var i; // key is the unit.toString() for unified Dimension values,\n\n    var j;\n    var current;\n    var currentUnified;\n    var referenceUnified;\n    var unit;\n    var unitStatic;\n    var unitClone;\n    var // elems only contains original argument values.\n    order = [];\n    var values = {}; // value is the index into the order array.\n\n    for (i = 0; i < args.length; i++) {\n      current = args[i];\n\n      if (!(current instanceof Dimension)) {\n        if (Array.isArray(args[i].value)) {\n          Array.prototype.push.apply(args, Array.prototype.slice.call(args[i].value));\n        }\n\n        continue;\n      }\n\n      currentUnified = current.unit.toString() === '' && unitClone !== undefined ? new Dimension(current.value, unitClone).unify() : current.unify();\n      unit = currentUnified.unit.toString() === '' && unitStatic !== undefined ? unitStatic : currentUnified.unit.toString();\n      unitStatic = unit !== '' && unitStatic === undefined || unit !== '' && order[0].unify().unit.toString() === '' ? unit : unitStatic;\n      unitClone = unit !== '' && unitClone === undefined ? current.unit.toString() : unitClone;\n      j = values[''] !== undefined && unit !== '' && unit === unitStatic ? values[''] : values[unit];\n\n      if (j === undefined) {\n        if (unitStatic !== undefined && unit !== unitStatic) {\n          throw {\n            type: 'Argument',\n            message: 'incompatible types'\n          };\n        }\n\n        values[unit] = order.length;\n        order.push(current);\n        continue;\n      }\n\n      referenceUnified = order[j].unit.toString() === '' && unitClone !== undefined ? new Dimension(order[j].value, unitClone).unify() : order[j].unify();\n\n      if (isMin && currentUnified.value < referenceUnified.value || !isMin && currentUnified.value > referenceUnified.value) {\n        order[j] = current;\n      }\n    }\n\n    if (order.length == 1) {\n      return order[0];\n    }\n\n    args = order.map(function (a) {\n      return a.toCSS(this.context);\n    }).join(this.context.compress ? ',' : ', ');\n    return new Anonymous((isMin ? 'min' : 'max') + \"(\" + args + \")\");\n  };\n\n  var number = {\n    min: function min() {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      try {\n        return minMax(true, args);\n      } catch (e) {}\n    },\n    max: function max() {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      try {\n        return minMax(false, args);\n      } catch (e) {}\n    },\n    convert: function convert(val, unit) {\n      return val.convertTo(unit.value);\n    },\n    pi: function pi() {\n      return new Dimension(Math.PI);\n    },\n    mod: function mod(a, b) {\n      return new Dimension(a.value % b.value, a.unit);\n    },\n    pow: function pow(x, y) {\n      if (typeof x === 'number' && typeof y === 'number') {\n        x = new Dimension(x);\n        y = new Dimension(y);\n      } else if (!(x instanceof Dimension) || !(y instanceof Dimension)) {\n        throw {\n          type: 'Argument',\n          message: 'arguments must be numbers'\n        };\n      }\n\n      return new Dimension(Math.pow(x.value, y.value), x.unit);\n    },\n    percentage: function percentage(n) {\n      var result = MathHelper(function (num) {\n        return num * 100;\n      }, '%', n);\n      return result;\n    }\n  };\n  var string = {\n    e: function e(str) {\n      return new Quoted('\"', str instanceof JavaScript ? str.evaluated : str.value, true);\n    },\n    escape: function escape(str) {\n      return new Anonymous(encodeURI(str.value).replace(/=/g, '%3D').replace(/:/g, '%3A').replace(/#/g, '%23').replace(/;/g, '%3B').replace(/\\(/g, '%28').replace(/\\)/g, '%29'));\n    },\n    replace: function replace(string, pattern, replacement, flags) {\n      var result = string.value;\n      replacement = replacement.type === 'Quoted' ? replacement.value : replacement.toCSS();\n      result = result.replace(new RegExp(pattern.value, flags ? flags.value : ''), replacement);\n      return new Quoted(string.quote || '', result, string.escaped);\n    },\n    '%': function _(string\n    /* arg, arg, ... */\n    ) {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var result = string.value;\n\n      var _loop_1 = function _loop_1(i) {\n        /* jshint loopfunc:true */\n        result = result.replace(/%[sda]/i, function (token) {\n          var value = args[i].type === 'Quoted' && token.match(/s/i) ? args[i].value : args[i].toCSS();\n          return token.match(/[A-Z]$/) ? encodeURIComponent(value) : value;\n        });\n      };\n\n      for (var i = 0; i < args.length; i++) {\n        _loop_1(i);\n      }\n\n      result = result.replace(/%%/g, '%');\n      return new Quoted(string.quote || '', result, string.escaped);\n    }\n  };\n\n  var svg = function svg(environment) {\n    return {\n      'svg-gradient': function svgGradient(direction) {\n        var stops;\n        var gradientDirectionSvg;\n        var gradientType = 'linear';\n        var rectangleDimension = 'x=\"0\" y=\"0\" width=\"1\" height=\"1\"';\n        var renderEnv = {\n          compress: false\n        };\n        var returner;\n        var directionValue = direction.toCSS(renderEnv);\n        var i;\n        var color;\n        var position;\n        var positionValue;\n        var alpha;\n\n        function throwArgumentDescriptor() {\n          throw {\n            type: 'Argument',\n            message: 'svg-gradient expects direction, start_color [start_position], [color position,]...,' + ' end_color [end_position] or direction, color list'\n          };\n        }\n\n        if (arguments.length == 2) {\n          if (arguments[1].value.length < 2) {\n            throwArgumentDescriptor();\n          }\n\n          stops = arguments[1].value;\n        } else if (arguments.length < 3) {\n          throwArgumentDescriptor();\n        } else {\n          stops = Array.prototype.slice.call(arguments, 1);\n        }\n\n        switch (directionValue) {\n          case 'to bottom':\n            gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\"';\n            break;\n\n          case 'to right':\n            gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"';\n            break;\n\n          case 'to bottom right':\n            gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\"';\n            break;\n\n          case 'to top right':\n            gradientDirectionSvg = 'x1=\"0%\" y1=\"100%\" x2=\"100%\" y2=\"0%\"';\n            break;\n\n          case 'ellipse':\n          case 'ellipse at center':\n            gradientType = 'radial';\n            gradientDirectionSvg = 'cx=\"50%\" cy=\"50%\" r=\"75%\"';\n            rectangleDimension = 'x=\"-50\" y=\"-50\" width=\"101\" height=\"101\"';\n            break;\n\n          default:\n            throw {\n              type: 'Argument',\n              message: 'svg-gradient direction must be \\'to bottom\\', \\'to right\\',' + ' \\'to bottom right\\', \\'to top right\\' or \\'ellipse at center\\''\n            };\n        }\n\n        returner = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 1 1\\\"><\" + gradientType + \"Gradient id=\\\"g\\\" \" + gradientDirectionSvg + \">\";\n\n        for (i = 0; i < stops.length; i += 1) {\n          if (stops[i] instanceof Expression) {\n            color = stops[i].value[0];\n            position = stops[i].value[1];\n          } else {\n            color = stops[i];\n            position = undefined;\n          }\n\n          if (!(color instanceof Color) || !((i === 0 || i + 1 === stops.length) && position === undefined) && !(position instanceof Dimension)) {\n            throwArgumentDescriptor();\n          }\n\n          positionValue = position ? position.toCSS(renderEnv) : i === 0 ? '0%' : '100%';\n          alpha = color.alpha;\n          returner += \"<stop offset=\\\"\" + positionValue + \"\\\" stop-color=\\\"\" + color.toRGB() + \"\\\"\" + (alpha < 1 ? \" stop-opacity=\\\"\" + alpha + \"\\\"\" : '') + \"/>\";\n        }\n\n        returner += \"</\" + gradientType + \"Gradient><rect \" + rectangleDimension + \" fill=\\\"url(#g)\\\" /></svg>\";\n        returner = encodeURIComponent(returner);\n        returner = \"data:image/svg+xml,\" + returner;\n        return new URL(new Quoted(\"'\" + returner + \"'\", returner, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\n      }\n    };\n  };\n\n  var isa = function isa(n, Type) {\n    return n instanceof Type ? Keyword.True : Keyword.False;\n  };\n\n  var isunit = function isunit(n, unit) {\n    if (unit === undefined) {\n      throw {\n        type: 'Argument',\n        message: 'missing the required second argument to isunit.'\n      };\n    }\n\n    unit = typeof unit.value === 'string' ? unit.value : unit;\n\n    if (typeof unit !== 'string') {\n      throw {\n        type: 'Argument',\n        message: 'Second argument to isunit should be a unit or a string.'\n      };\n    }\n\n    return n instanceof Dimension && n.unit.is(unit) ? Keyword.True : Keyword.False;\n  };\n\n  var types = {\n    isruleset: function isruleset(n) {\n      return isa(n, DetachedRuleset);\n    },\n    iscolor: function iscolor(n) {\n      return isa(n, Color);\n    },\n    isnumber: function isnumber(n) {\n      return isa(n, Dimension);\n    },\n    isstring: function isstring(n) {\n      return isa(n, Quoted);\n    },\n    iskeyword: function iskeyword(n) {\n      return isa(n, Keyword);\n    },\n    isurl: function isurl(n) {\n      return isa(n, URL);\n    },\n    ispixel: function ispixel(n) {\n      return isunit(n, 'px');\n    },\n    ispercentage: function ispercentage(n) {\n      return isunit(n, '%');\n    },\n    isem: function isem(n) {\n      return isunit(n, 'em');\n    },\n    isunit: isunit,\n    unit: function unit(val, _unit) {\n      if (!(val instanceof Dimension)) {\n        throw {\n          type: 'Argument',\n          message: \"the first argument to unit must be a number\" + (val instanceof Operation ? '. Have you forgotten parenthesis?' : '')\n        };\n      }\n\n      if (_unit) {\n        if (_unit instanceof Keyword) {\n          _unit = _unit.value;\n        } else {\n          _unit = _unit.toCSS();\n        }\n      } else {\n        _unit = '';\n      }\n\n      return new Dimension(val.value, _unit);\n    },\n    'get-unit': function getUnit(n) {\n      return new Anonymous(n.unit);\n    }\n  };\n\n  var functions = function functions(environment) {\n    var functions = {\n      functionRegistry: functionRegistry,\n      functionCaller: functionCaller\n    }; // register functions\n\n    functionRegistry.addMultiple(boolean$1);\n    functionRegistry.add('default', defaultFunc.eval.bind(defaultFunc));\n    functionRegistry.addMultiple(color);\n    functionRegistry.addMultiple(colorBlend);\n    functionRegistry.addMultiple(dataUri(environment));\n    functionRegistry.addMultiple(list);\n    functionRegistry.addMultiple(mathFunctions);\n    functionRegistry.addMultiple(number);\n    functionRegistry.addMultiple(string);\n    functionRegistry.addMultiple(svg());\n    functionRegistry.addMultiple(types);\n    return functions;\n  };\n\n  function transformTree(root, options) {\n    options = options || {};\n    var evaldRoot;\n    var variables = options.variables;\n    var evalEnv = new contexts.Eval(options); //\n    // Allows setting variables with a hash, so:\n    //\n    //   `{ color: new tree.Color('#f01') }` will become:\n    //\n    //   new tree.Declaration('@color',\n    //     new tree.Value([\n    //       new tree.Expression([\n    //         new tree.Color('#f01')\n    //       ])\n    //     ])\n    //   )\n    //\n\n    if (typeof variables === 'object' && !Array.isArray(variables)) {\n      variables = Object.keys(variables).map(function (k) {\n        var value = variables[k];\n\n        if (!(value instanceof tree.Value)) {\n          if (!(value instanceof tree.Expression)) {\n            value = new tree.Expression([value]);\n          }\n\n          value = new tree.Value([value]);\n        }\n\n        return new tree.Declaration(\"@\" + k, value, false, null, 0);\n      });\n      evalEnv.frames = [new tree.Ruleset(null, variables)];\n    }\n\n    var visitors$1 = [new visitors.JoinSelectorVisitor(), new visitors.MarkVisibleSelectorsVisitor(true), new visitors.ExtendVisitor(), new visitors.ToCSSVisitor({\n      compress: Boolean(options.compress)\n    })];\n    var preEvalVisitors = [];\n    var v;\n    var visitorIterator;\n    /**\r\n     * first() / get() allows visitors to be added while visiting\r\n     *\r\n     * @todo Add scoping for visitors just like functions for @plugin; right now they're global\r\n     */\n\n    if (options.pluginManager) {\n      visitorIterator = options.pluginManager.visitor();\n\n      for (var i = 0; i < 2; i++) {\n        visitorIterator.first();\n\n        while (v = visitorIterator.get()) {\n          if (v.isPreEvalVisitor) {\n            if (i === 0 || preEvalVisitors.indexOf(v) === -1) {\n              preEvalVisitors.push(v);\n              v.run(root);\n            }\n          } else {\n            if (i === 0 || visitors$1.indexOf(v) === -1) {\n              if (v.isPreVisitor) {\n                visitors$1.unshift(v);\n              } else {\n                visitors$1.push(v);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    evaldRoot = root.eval(evalEnv);\n\n    for (var i = 0; i < visitors$1.length; i++) {\n      visitors$1[i].run(evaldRoot);\n    } // Run any remaining visitors added after eval pass\n\n\n    if (options.pluginManager) {\n      visitorIterator.first();\n\n      while (v = visitorIterator.get()) {\n        if (visitors$1.indexOf(v) === -1 && preEvalVisitors.indexOf(v) === -1) {\n          v.run(evaldRoot);\n        }\n      }\n    }\n\n    return evaldRoot;\n  }\n  /**\r\n   * Plugin Manager\r\n   */\n\n\n  var PluginManager =\n  /** @class */\n  function () {\n    function PluginManager(less) {\n      this.less = less;\n      this.visitors = [];\n      this.preProcessors = [];\n      this.postProcessors = [];\n      this.installedPlugins = [];\n      this.fileManagers = [];\n      this.iterator = -1;\n      this.pluginCache = {};\n      this.Loader = new less.PluginLoader(less);\n    }\n    /**\r\n     * Adds all the plugins in the array\r\n     * @param {Array} plugins\r\n     */\n\n\n    PluginManager.prototype.addPlugins = function (plugins) {\n      if (plugins) {\n        for (var i = 0; i < plugins.length; i++) {\n          this.addPlugin(plugins[i]);\n        }\n      }\n    };\n    /**\r\n     *\r\n     * @param plugin\r\n     * @param {String} filename\r\n     */\n\n\n    PluginManager.prototype.addPlugin = function (plugin, filename, functionRegistry) {\n      this.installedPlugins.push(plugin);\n\n      if (filename) {\n        this.pluginCache[filename] = plugin;\n      }\n\n      if (plugin.install) {\n        plugin.install(this.less, this, functionRegistry || this.less.functions.functionRegistry);\n      }\n    };\n    /**\r\n     *\r\n     * @param filename\r\n     */\n\n\n    PluginManager.prototype.get = function (filename) {\n      return this.pluginCache[filename];\n    };\n    /**\r\n     * Adds a visitor. The visitor object has options on itself to determine\r\n     * when it should run.\r\n     * @param visitor\r\n     */\n\n\n    PluginManager.prototype.addVisitor = function (visitor) {\n      this.visitors.push(visitor);\n    };\n    /**\r\n     * Adds a pre processor object\r\n     * @param {object} preProcessor\r\n     * @param {number} priority - guidelines 1 = before import, 1000 = import, 2000 = after import\r\n     */\n\n\n    PluginManager.prototype.addPreProcessor = function (preProcessor, priority) {\n      var indexToInsertAt;\n\n      for (indexToInsertAt = 0; indexToInsertAt < this.preProcessors.length; indexToInsertAt++) {\n        if (this.preProcessors[indexToInsertAt].priority >= priority) {\n          break;\n        }\n      }\n\n      this.preProcessors.splice(indexToInsertAt, 0, {\n        preProcessor: preProcessor,\n        priority: priority\n      });\n    };\n    /**\r\n     * Adds a post processor object\r\n     * @param {object} postProcessor\r\n     * @param {number} priority - guidelines 1 = before compression, 1000 = compression, 2000 = after compression\r\n     */\n\n\n    PluginManager.prototype.addPostProcessor = function (postProcessor, priority) {\n      var indexToInsertAt;\n\n      for (indexToInsertAt = 0; indexToInsertAt < this.postProcessors.length; indexToInsertAt++) {\n        if (this.postProcessors[indexToInsertAt].priority >= priority) {\n          break;\n        }\n      }\n\n      this.postProcessors.splice(indexToInsertAt, 0, {\n        postProcessor: postProcessor,\n        priority: priority\n      });\n    };\n    /**\r\n     *\r\n     * @param manager\r\n     */\n\n\n    PluginManager.prototype.addFileManager = function (manager) {\n      this.fileManagers.push(manager);\n    };\n    /**\r\n     *\r\n     * @returns {Array}\r\n     * @private\r\n     */\n\n\n    PluginManager.prototype.getPreProcessors = function () {\n      var preProcessors = [];\n\n      for (var i = 0; i < this.preProcessors.length; i++) {\n        preProcessors.push(this.preProcessors[i].preProcessor);\n      }\n\n      return preProcessors;\n    };\n    /**\r\n     *\r\n     * @returns {Array}\r\n     * @private\r\n     */\n\n\n    PluginManager.prototype.getPostProcessors = function () {\n      var postProcessors = [];\n\n      for (var i = 0; i < this.postProcessors.length; i++) {\n        postProcessors.push(this.postProcessors[i].postProcessor);\n      }\n\n      return postProcessors;\n    };\n    /**\r\n     *\r\n     * @returns {Array}\r\n     * @private\r\n     */\n\n\n    PluginManager.prototype.getVisitors = function () {\n      return this.visitors;\n    };\n\n    PluginManager.prototype.visitor = function () {\n      var self = this;\n      return {\n        first: function first() {\n          self.iterator = -1;\n          return self.visitors[self.iterator];\n        },\n        get: function get() {\n          self.iterator += 1;\n          return self.visitors[self.iterator];\n        }\n      };\n    };\n    /**\r\n     *\r\n     * @returns {Array}\r\n     * @private\r\n     */\n\n\n    PluginManager.prototype.getFileManagers = function () {\n      return this.fileManagers;\n    };\n\n    return PluginManager;\n  }();\n\n  var pm;\n\n  var PluginManagerFactory = function PluginManagerFactory(less, newFactory) {\n    if (newFactory || !pm) {\n      pm = new PluginManager(less);\n    }\n\n    return pm;\n  };\n\n  function SourceMapOutput(environment) {\n    var SourceMapOutput =\n    /** @class */\n    function () {\n      function SourceMapOutput(options) {\n        this._css = [];\n        this._rootNode = options.rootNode;\n        this._contentsMap = options.contentsMap;\n        this._contentsIgnoredCharsMap = options.contentsIgnoredCharsMap;\n\n        if (options.sourceMapFilename) {\n          this._sourceMapFilename = options.sourceMapFilename.replace(/\\\\/g, '/');\n        }\n\n        this._outputFilename = options.outputFilename;\n        this.sourceMapURL = options.sourceMapURL;\n\n        if (options.sourceMapBasepath) {\n          this._sourceMapBasepath = options.sourceMapBasepath.replace(/\\\\/g, '/');\n        }\n\n        if (options.sourceMapRootpath) {\n          this._sourceMapRootpath = options.sourceMapRootpath.replace(/\\\\/g, '/');\n\n          if (this._sourceMapRootpath.charAt(this._sourceMapRootpath.length - 1) !== '/') {\n            this._sourceMapRootpath += '/';\n          }\n        } else {\n          this._sourceMapRootpath = '';\n        }\n\n        this._outputSourceFiles = options.outputSourceFiles;\n        this._sourceMapGeneratorConstructor = environment.getSourceMapGenerator();\n        this._lineNumber = 0;\n        this._column = 0;\n      }\n\n      SourceMapOutput.prototype.removeBasepath = function (path) {\n        if (this._sourceMapBasepath && path.indexOf(this._sourceMapBasepath) === 0) {\n          path = path.substring(this._sourceMapBasepath.length);\n\n          if (path.charAt(0) === '\\\\' || path.charAt(0) === '/') {\n            path = path.substring(1);\n          }\n        }\n\n        return path;\n      };\n\n      SourceMapOutput.prototype.normalizeFilename = function (filename) {\n        filename = filename.replace(/\\\\/g, '/');\n        filename = this.removeBasepath(filename);\n        return (this._sourceMapRootpath || '') + filename;\n      };\n\n      SourceMapOutput.prototype.add = function (chunk, fileInfo, index, mapLines) {\n        // ignore adding empty strings\n        if (!chunk) {\n          return;\n        }\n\n        var lines, sourceLines, columns, sourceColumns, i;\n\n        if (fileInfo && fileInfo.filename) {\n          var inputSource = this._contentsMap[fileInfo.filename]; // remove vars/banner added to the top of the file\n\n          if (this._contentsIgnoredCharsMap[fileInfo.filename]) {\n            // adjust the index\n            index -= this._contentsIgnoredCharsMap[fileInfo.filename];\n\n            if (index < 0) {\n              index = 0;\n            } // adjust the source\n\n\n            inputSource = inputSource.slice(this._contentsIgnoredCharsMap[fileInfo.filename]);\n          }\n          /**\r\n           * ignore empty content, or failsafe\r\n           * if contents map is incorrect\r\n           */\n\n\n          if (inputSource === undefined) {\n            this._css.push(chunk);\n\n            return;\n          }\n\n          inputSource = inputSource.substring(0, index);\n          sourceLines = inputSource.split('\\n');\n          sourceColumns = sourceLines[sourceLines.length - 1];\n        }\n\n        lines = chunk.split('\\n');\n        columns = lines[lines.length - 1];\n\n        if (fileInfo && fileInfo.filename) {\n          if (!mapLines) {\n            this._sourceMapGenerator.addMapping({\n              generated: {\n                line: this._lineNumber + 1,\n                column: this._column\n              },\n              original: {\n                line: sourceLines.length,\n                column: sourceColumns.length\n              },\n              source: this.normalizeFilename(fileInfo.filename)\n            });\n          } else {\n            for (i = 0; i < lines.length; i++) {\n              this._sourceMapGenerator.addMapping({\n                generated: {\n                  line: this._lineNumber + i + 1,\n                  column: i === 0 ? this._column : 0\n                },\n                original: {\n                  line: sourceLines.length + i,\n                  column: i === 0 ? sourceColumns.length : 0\n                },\n                source: this.normalizeFilename(fileInfo.filename)\n              });\n            }\n          }\n        }\n\n        if (lines.length === 1) {\n          this._column += columns.length;\n        } else {\n          this._lineNumber += lines.length - 1;\n          this._column = columns.length;\n        }\n\n        this._css.push(chunk);\n      };\n\n      SourceMapOutput.prototype.isEmpty = function () {\n        return this._css.length === 0;\n      };\n\n      SourceMapOutput.prototype.toCSS = function (context) {\n        this._sourceMapGenerator = new this._sourceMapGeneratorConstructor({\n          file: this._outputFilename,\n          sourceRoot: null\n        });\n\n        if (this._outputSourceFiles) {\n          for (var filename in this._contentsMap) {\n            if (this._contentsMap.hasOwnProperty(filename)) {\n              var source = this._contentsMap[filename];\n\n              if (this._contentsIgnoredCharsMap[filename]) {\n                source = source.slice(this._contentsIgnoredCharsMap[filename]);\n              }\n\n              this._sourceMapGenerator.setSourceContent(this.normalizeFilename(filename), source);\n            }\n          }\n        }\n\n        this._rootNode.genCSS(context, this);\n\n        if (this._css.length > 0) {\n          var sourceMapURL = void 0;\n          var sourceMapContent = JSON.stringify(this._sourceMapGenerator.toJSON());\n\n          if (this.sourceMapURL) {\n            sourceMapURL = this.sourceMapURL;\n          } else if (this._sourceMapFilename) {\n            sourceMapURL = this._sourceMapFilename;\n          }\n\n          this.sourceMapURL = sourceMapURL;\n          this.sourceMap = sourceMapContent;\n        }\n\n        return this._css.join('');\n      };\n\n      return SourceMapOutput;\n    }();\n\n    return SourceMapOutput;\n  }\n\n  function SourceMapBuilder(SourceMapOutput, environment) {\n    var SourceMapBuilder =\n    /** @class */\n    function () {\n      function SourceMapBuilder(options) {\n        this.options = options;\n      }\n\n      SourceMapBuilder.prototype.toCSS = function (rootNode, options, imports) {\n        var sourceMapOutput = new SourceMapOutput({\n          contentsIgnoredCharsMap: imports.contentsIgnoredChars,\n          rootNode: rootNode,\n          contentsMap: imports.contents,\n          sourceMapFilename: this.options.sourceMapFilename,\n          sourceMapURL: this.options.sourceMapURL,\n          outputFilename: this.options.sourceMapOutputFilename,\n          sourceMapBasepath: this.options.sourceMapBasepath,\n          sourceMapRootpath: this.options.sourceMapRootpath,\n          outputSourceFiles: this.options.outputSourceFiles,\n          sourceMapGenerator: this.options.sourceMapGenerator,\n          sourceMapFileInline: this.options.sourceMapFileInline,\n          disableSourcemapAnnotation: this.options.disableSourcemapAnnotation\n        });\n        var css = sourceMapOutput.toCSS(options);\n        this.sourceMap = sourceMapOutput.sourceMap;\n        this.sourceMapURL = sourceMapOutput.sourceMapURL;\n\n        if (this.options.sourceMapInputFilename) {\n          this.sourceMapInputFilename = sourceMapOutput.normalizeFilename(this.options.sourceMapInputFilename);\n        }\n\n        if (this.options.sourceMapBasepath !== undefined && this.sourceMapURL !== undefined) {\n          this.sourceMapURL = sourceMapOutput.removeBasepath(this.sourceMapURL);\n        }\n\n        return css + this.getCSSAppendage();\n      };\n\n      SourceMapBuilder.prototype.getCSSAppendage = function () {\n        var sourceMapURL = this.sourceMapURL;\n\n        if (this.options.sourceMapFileInline) {\n          if (this.sourceMap === undefined) {\n            return '';\n          }\n\n          sourceMapURL = \"data:application/json;base64,\" + environment.encodeBase64(this.sourceMap);\n        }\n\n        if (this.options.disableSourcemapAnnotation) {\n          return '';\n        }\n\n        if (sourceMapURL) {\n          return \"/*# sourceMappingURL=\" + sourceMapURL + \" */\";\n        }\n\n        return '';\n      };\n\n      SourceMapBuilder.prototype.getExternalSourceMap = function () {\n        return this.sourceMap;\n      };\n\n      SourceMapBuilder.prototype.setExternalSourceMap = function (sourceMap) {\n        this.sourceMap = sourceMap;\n      };\n\n      SourceMapBuilder.prototype.isInline = function () {\n        return this.options.sourceMapFileInline;\n      };\n\n      SourceMapBuilder.prototype.getSourceMapURL = function () {\n        return this.sourceMapURL;\n      };\n\n      SourceMapBuilder.prototype.getOutputFilename = function () {\n        return this.options.sourceMapOutputFilename;\n      };\n\n      SourceMapBuilder.prototype.getInputFilename = function () {\n        return this.sourceMapInputFilename;\n      };\n\n      return SourceMapBuilder;\n    }();\n\n    return SourceMapBuilder;\n  }\n\n  function ParseTree(SourceMapBuilder) {\n    var ParseTree =\n    /** @class */\n    function () {\n      function ParseTree(root, imports) {\n        this.root = root;\n        this.imports = imports;\n      }\n\n      ParseTree.prototype.toCSS = function (options) {\n        var evaldRoot;\n        var result = {};\n        var sourceMapBuilder;\n\n        try {\n          evaldRoot = transformTree(this.root, options);\n        } catch (e) {\n          throw new LessError(e, this.imports);\n        }\n\n        try {\n          var compress = Boolean(options.compress);\n\n          if (compress) {\n            logger$1.warn('The compress option has been deprecated. ' + 'We recommend you use a dedicated css minifier, for instance see less-plugin-clean-css.');\n          }\n\n          var toCSSOptions = {\n            compress: compress,\n            dumpLineNumbers: options.dumpLineNumbers,\n            strictUnits: Boolean(options.strictUnits),\n            numPrecision: 8\n          };\n\n          if (options.sourceMap) {\n            sourceMapBuilder = new SourceMapBuilder(options.sourceMap);\n            result.css = sourceMapBuilder.toCSS(evaldRoot, toCSSOptions, this.imports);\n          } else {\n            result.css = evaldRoot.toCSS(toCSSOptions);\n          }\n        } catch (e) {\n          throw new LessError(e, this.imports);\n        }\n\n        if (options.pluginManager) {\n          var postProcessors = options.pluginManager.getPostProcessors();\n\n          for (var i = 0; i < postProcessors.length; i++) {\n            result.css = postProcessors[i].process(result.css, {\n              sourceMap: sourceMapBuilder,\n              options: options,\n              imports: this.imports\n            });\n          }\n        }\n\n        if (options.sourceMap) {\n          result.map = sourceMapBuilder.getExternalSourceMap();\n        }\n\n        result.imports = [];\n\n        for (var file in this.imports.files) {\n          if (this.imports.files.hasOwnProperty(file) && file !== this.imports.rootFilename) {\n            result.imports.push(file);\n          }\n        }\n\n        return result;\n      };\n\n      return ParseTree;\n    }();\n\n    return ParseTree;\n  }\n\n  function ImportManager(environment) {\n    // FileInfo = {\n    //  'rewriteUrls' - option - whether to adjust URL's to be relative\n    //  'filename' - full resolved filename of current file\n    //  'rootpath' - path to append to normal URLs for this node\n    //  'currentDirectory' - path to the current file, absolute\n    //  'rootFilename' - filename of the base file\n    //  'entryPath' - absolute path to the entry file\n    //  'reference' - whether the file should not be output and only output parts that are referenced\n    var ImportManager =\n    /** @class */\n    function () {\n      function ImportManager(less, context, rootFileInfo) {\n        this.less = less;\n        this.rootFilename = rootFileInfo.filename;\n        this.paths = context.paths || []; // Search paths, when importing\n\n        this.contents = {}; // map - filename to contents of all the files\n\n        this.contentsIgnoredChars = {}; // map - filename to lines at the beginning of each file to ignore\n\n        this.mime = context.mime;\n        this.error = null;\n        this.context = context; // Deprecated? Unused outside of here, could be useful.\n\n        this.queue = []; // Files which haven't been imported yet\n\n        this.files = {}; // Holds the imported parse trees.\n      }\n      /**\r\n       * Add an import to be imported\r\n       * @param path - the raw path\r\n       * @param tryAppendExtension - whether to try appending a file extension (.less or .js if the path has no extension)\r\n       * @param currentFileInfo - the current file info (used for instance to work out relative paths)\r\n       * @param importOptions - import options\r\n       * @param callback - callback for when it is imported\r\n       */\n\n\n      ImportManager.prototype.push = function (path, tryAppendExtension, currentFileInfo, importOptions, callback) {\n        var importManager = this,\n            pluginLoader = this.context.pluginManager.Loader;\n        this.queue.push(path);\n\n        var fileParsedFunc = function fileParsedFunc(e, root, fullPath) {\n          importManager.queue.splice(importManager.queue.indexOf(path), 1); // Remove the path from the queue\n\n          var importedEqualsRoot = fullPath === importManager.rootFilename;\n\n          if (importOptions.optional && e) {\n            callback(null, {\n              rules: []\n            }, false, null);\n            logger$1.info(\"The file \" + fullPath + \" was skipped because it was not found and the import was marked optional.\");\n          } else {\n            // Inline imports aren't cached here.\n            // If we start to cache them, please make sure they won't conflict with non-inline imports of the\n            // same name as they used to do before this comment and the condition below have been added.\n            if (!importManager.files[fullPath] && !importOptions.inline) {\n              importManager.files[fullPath] = {\n                root: root,\n                options: importOptions\n              };\n            }\n\n            if (e && !importManager.error) {\n              importManager.error = e;\n            }\n\n            callback(e, root, importedEqualsRoot, fullPath);\n          }\n        };\n\n        var newFileInfo = {\n          rewriteUrls: this.context.rewriteUrls,\n          entryPath: currentFileInfo.entryPath,\n          rootpath: currentFileInfo.rootpath,\n          rootFilename: currentFileInfo.rootFilename\n        };\n        var fileManager = environment.getFileManager(path, currentFileInfo.currentDirectory, this.context, environment);\n\n        if (!fileManager) {\n          fileParsedFunc({\n            message: \"Could not find a file-manager for \" + path\n          });\n          return;\n        }\n\n        var loadFileCallback = function loadFileCallback(loadedFile) {\n          var plugin;\n          var resolvedFilename = loadedFile.filename;\n          var contents = loadedFile.contents.replace(/^\\uFEFF/, ''); // Pass on an updated rootpath if path of imported file is relative and file\n          // is in a (sub|sup) directory\n          //\n          // Examples:\n          // - If path of imported file is 'module/nav/nav.less' and rootpath is 'less/',\n          //   then rootpath should become 'less/module/nav/'\n          // - If path of imported file is '../mixins.less' and rootpath is 'less/',\n          //   then rootpath should become 'less/../'\n\n          newFileInfo.currentDirectory = fileManager.getPath(resolvedFilename);\n\n          if (newFileInfo.rewriteUrls) {\n            newFileInfo.rootpath = fileManager.join(importManager.context.rootpath || '', fileManager.pathDiff(newFileInfo.currentDirectory, newFileInfo.entryPath));\n\n            if (!fileManager.isPathAbsolute(newFileInfo.rootpath) && fileManager.alwaysMakePathsAbsolute()) {\n              newFileInfo.rootpath = fileManager.join(newFileInfo.entryPath, newFileInfo.rootpath);\n            }\n          }\n\n          newFileInfo.filename = resolvedFilename;\n          var newEnv = new contexts.Parse(importManager.context);\n          newEnv.processImports = false;\n          importManager.contents[resolvedFilename] = contents;\n\n          if (currentFileInfo.reference || importOptions.reference) {\n            newFileInfo.reference = true;\n          }\n\n          if (importOptions.isPlugin) {\n            plugin = pluginLoader.evalPlugin(contents, newEnv, importManager, importOptions.pluginArgs, newFileInfo);\n\n            if (plugin instanceof LessError) {\n              fileParsedFunc(plugin, null, resolvedFilename);\n            } else {\n              fileParsedFunc(null, plugin, resolvedFilename);\n            }\n          } else if (importOptions.inline) {\n            fileParsedFunc(null, contents, resolvedFilename);\n          } else {\n            // import (multiple) parse trees apparently get altered and can't be cached.\n            // TODO: investigate why this is\n            if (importManager.files[resolvedFilename] && !importManager.files[resolvedFilename].options.multiple && !importOptions.multiple) {\n              fileParsedFunc(null, importManager.files[resolvedFilename].root, resolvedFilename);\n            } else {\n              new Parser(newEnv, importManager, newFileInfo).parse(contents, function (e, root) {\n                fileParsedFunc(e, root, resolvedFilename);\n              });\n            }\n          }\n        };\n\n        var loadedFile;\n        var promise;\n        var context = clone(this.context);\n\n        if (tryAppendExtension) {\n          context.ext = importOptions.isPlugin ? '.js' : '.less';\n        }\n\n        if (importOptions.isPlugin) {\n          context.mime = 'application/javascript';\n\n          if (context.syncImport) {\n            loadedFile = pluginLoader.loadPluginSync(path, currentFileInfo.currentDirectory, context, environment, fileManager);\n          } else {\n            promise = pluginLoader.loadPlugin(path, currentFileInfo.currentDirectory, context, environment, fileManager);\n          }\n        } else {\n          if (context.syncImport) {\n            loadedFile = fileManager.loadFileSync(path, currentFileInfo.currentDirectory, context, environment);\n          } else {\n            promise = fileManager.loadFile(path, currentFileInfo.currentDirectory, context, environment, function (err, loadedFile) {\n              if (err) {\n                fileParsedFunc(err);\n              } else {\n                loadFileCallback(loadedFile);\n              }\n            });\n          }\n        }\n\n        if (loadedFile) {\n          if (!loadedFile.filename) {\n            fileParsedFunc(loadedFile);\n          } else {\n            loadFileCallback(loadedFile);\n          }\n        } else if (promise) {\n          promise.then(loadFileCallback, fileParsedFunc);\n        }\n      };\n\n      return ImportManager;\n    }();\n\n    return ImportManager;\n  }\n\n  function Parse(environment, ParseTree, ImportManager) {\n    var parse = function parse(input, options, callback) {\n      if (typeof options === 'function') {\n        callback = options;\n        options = copyOptions(this.options, {});\n      } else {\n        options = copyOptions(this.options, options || {});\n      }\n\n      if (!callback) {\n        var self_1 = this;\n        return new Promise(function (resolve, reject) {\n          parse.call(self_1, input, options, function (err, output) {\n            if (err) {\n              reject(err);\n            } else {\n              resolve(output);\n            }\n          });\n        });\n      } else {\n        var context_1;\n        var rootFileInfo = void 0;\n        var pluginManager_1 = new PluginManagerFactory(this, !options.reUsePluginManager);\n        options.pluginManager = pluginManager_1;\n        context_1 = new contexts.Parse(options);\n\n        if (options.rootFileInfo) {\n          rootFileInfo = options.rootFileInfo;\n        } else {\n          var filename = options.filename || 'input';\n          var entryPath = filename.replace(/[^\\/\\\\]*$/, '');\n          rootFileInfo = {\n            filename: filename,\n            rewriteUrls: context_1.rewriteUrls,\n            rootpath: context_1.rootpath || '',\n            currentDirectory: entryPath,\n            entryPath: entryPath,\n            rootFilename: filename\n          }; // add in a missing trailing slash\n\n          if (rootFileInfo.rootpath && rootFileInfo.rootpath.slice(-1) !== '/') {\n            rootFileInfo.rootpath += '/';\n          }\n        }\n\n        var imports_1 = new ImportManager(this, context_1, rootFileInfo);\n        this.importManager = imports_1; // TODO: allow the plugins to be just a list of paths or names\n        // Do an async plugin queue like lessc\n\n        if (options.plugins) {\n          options.plugins.forEach(function (plugin) {\n            var evalResult, contents;\n\n            if (plugin.fileContent) {\n              contents = plugin.fileContent.replace(/^\\uFEFF/, '');\n              evalResult = pluginManager_1.Loader.evalPlugin(contents, context_1, imports_1, plugin.options, plugin.filename);\n\n              if (evalResult instanceof LessError) {\n                return callback(evalResult);\n              }\n            } else {\n              pluginManager_1.addPlugin(plugin);\n            }\n          });\n        }\n\n        new Parser(context_1, imports_1, rootFileInfo).parse(input, function (e, root) {\n          if (e) {\n            return callback(e);\n          }\n\n          callback(null, root, imports_1, options);\n        }, options);\n      }\n    };\n\n    return parse;\n  }\n\n  function Render(environment, ParseTree, ImportManager) {\n    var render = function render(input, options, callback) {\n      if (typeof options === 'function') {\n        callback = options;\n        options = copyOptions(this.options, {});\n      } else {\n        options = copyOptions(this.options, options || {});\n      }\n\n      if (!callback) {\n        var self_1 = this;\n        return new Promise(function (resolve, reject) {\n          render.call(self_1, input, options, function (err, output) {\n            if (err) {\n              reject(err);\n            } else {\n              resolve(output);\n            }\n          });\n        });\n      } else {\n        this.parse(input, options, function (err, root, imports, options) {\n          if (err) {\n            return callback(err);\n          }\n\n          var result;\n\n          try {\n            var parseTree = new ParseTree(root, imports);\n            result = parseTree.toCSS(options);\n          } catch (err) {\n            return callback(err);\n          }\n\n          callback(null, result);\n        });\n      }\n    };\n\n    return render;\n  }\n\n  var version = \"4.1.2\";\n\n  function parseNodeVersion(version) {\n    var match = version.match(/^v(\\d{1,2})\\.(\\d{1,2})\\.(\\d{1,2})(?:-([0-9A-Za-z-.]+))?(?:\\+([0-9A-Za-z-.]+))?$/); // eslint-disable-line max-len\n\n    if (!match) {\n      throw new Error('Unable to parse: ' + version);\n    }\n\n    var res = {\n      major: parseInt(match[1], 10),\n      minor: parseInt(match[2], 10),\n      patch: parseInt(match[3], 10),\n      pre: match[4] || '',\n      build: match[5] || ''\n    };\n    return res;\n  }\n\n  var parseNodeVersion_1 = parseNodeVersion;\n\n  function lessRoot(environment, fileManagers) {\n    var sourceMapOutput, sourceMapBuilder, parseTree, importManager;\n    environment = new Environment(environment, fileManagers);\n    sourceMapOutput = SourceMapOutput(environment);\n    sourceMapBuilder = SourceMapBuilder(sourceMapOutput, environment);\n    parseTree = ParseTree(sourceMapBuilder);\n    importManager = ImportManager(environment);\n    var render = Render(environment, parseTree);\n    var parse = Parse(environment, parseTree, importManager);\n    var v = parseNodeVersion_1(\"v\" + version);\n    var initial = {\n      version: [v.major, v.minor, v.patch],\n      data: data,\n      tree: tree,\n      Environment: Environment,\n      AbstractFileManager: AbstractFileManager,\n      AbstractPluginLoader: AbstractPluginLoader,\n      environment: environment,\n      visitors: visitors,\n      Parser: Parser,\n      functions: functions(environment),\n      contexts: contexts,\n      SourceMapOutput: sourceMapOutput,\n      SourceMapBuilder: sourceMapBuilder,\n      ParseTree: parseTree,\n      ImportManager: importManager,\n      render: render,\n      parse: parse,\n      LessError: LessError,\n      transformTree: transformTree,\n      utils: utils,\n      PluginManager: PluginManagerFactory,\n      logger: logger$1\n    }; // Create a public API\n\n    var ctor = function ctor(t) {\n      return function () {\n        var obj = Object.create(t.prototype);\n        t.apply(obj, Array.prototype.slice.call(arguments, 0));\n        return obj;\n      };\n    };\n\n    var t;\n    var api = Object.create(initial);\n\n    for (var n in initial.tree) {\n      /* eslint guard-for-in: 0 */\n      t = initial.tree[n];\n\n      if (typeof t === 'function') {\n        api[n.toLowerCase()] = ctor(t);\n      } else {\n        api[n] = Object.create(null);\n\n        for (var o in t) {\n          /* eslint guard-for-in: 0 */\n          api[n][o.toLowerCase()] = ctor(t[o]);\n        }\n      }\n    }\n    /**\r\n     * Some of the functions assume a `this` context of the API object,\r\n     * which causes it to fail when wrapped for ES6 imports.\r\n     *\r\n     * An assumed `this` should be removed in the future.\r\n     */\n\n\n    initial.parse = initial.parse.bind(api);\n    initial.render = initial.render.bind(api);\n    return api;\n  }\n  /* global window, XMLHttpRequest */\n\n\n  var options$1;\n  var logger;\n  var fileCache = {}; // TODOS - move log somewhere. pathDiff and doing something similar in node. use pathDiff in the other browser file for the initial load\n\n  var FileManager = function FileManager() {};\n\n  FileManager.prototype = Object.assign(new AbstractFileManager(), {\n    alwaysMakePathsAbsolute: function alwaysMakePathsAbsolute() {\n      return true;\n    },\n    join: function join(basePath, laterPath) {\n      if (!basePath) {\n        return laterPath;\n      }\n\n      return this.extractUrlParts(laterPath, basePath).path;\n    },\n    doXHR: function doXHR(url, type, callback, errback) {\n      var xhr = new XMLHttpRequest();\n      var async = options$1.isFileProtocol ? options$1.fileAsync : true;\n\n      if (typeof xhr.overrideMimeType === 'function') {\n        xhr.overrideMimeType('text/css');\n      }\n\n      logger.debug(\"XHR: Getting '\" + url + \"'\");\n      xhr.open('GET', url, async);\n      xhr.setRequestHeader('Accept', type || 'text/x-less, text/css; q=0.9, */*; q=0.5');\n      xhr.send(null);\n\n      function handleResponse(xhr, callback, errback) {\n        if (xhr.status >= 200 && xhr.status < 300) {\n          callback(xhr.responseText, xhr.getResponseHeader('Last-Modified'));\n        } else if (typeof errback === 'function') {\n          errback(xhr.status, url);\n        }\n      }\n\n      if (options$1.isFileProtocol && !options$1.fileAsync) {\n        if (xhr.status === 0 || xhr.status >= 200 && xhr.status < 300) {\n          callback(xhr.responseText);\n        } else {\n          errback(xhr.status, url);\n        }\n      } else if (async) {\n        xhr.onreadystatechange = function () {\n          if (xhr.readyState == 4) {\n            handleResponse(xhr, callback, errback);\n          }\n        };\n      } else {\n        handleResponse(xhr, callback, errback);\n      }\n    },\n    supports: function supports() {\n      return true;\n    },\n    clearFileCache: function clearFileCache() {\n      fileCache = {};\n    },\n    loadFile: function loadFile(filename, currentDirectory, options, environment) {\n      // TODO: Add prefix support like less-node?\n      // What about multiple paths?\n      if (currentDirectory && !this.isPathAbsolute(filename)) {\n        filename = currentDirectory + filename;\n      }\n\n      filename = options.ext ? this.tryAppendExtension(filename, options.ext) : filename;\n      options = options || {}; // sheet may be set to the stylesheet for the initial load or a collection of properties including\n      // some context variables for imports\n\n      var hrefParts = this.extractUrlParts(filename, window.location.href);\n      var href = hrefParts.url;\n      var self = this;\n      return new Promise(function (resolve, reject) {\n        if (options.useFileCache && fileCache[href]) {\n          try {\n            var lessText = fileCache[href];\n            return resolve({\n              contents: lessText,\n              filename: href,\n              webInfo: {\n                lastModified: new Date()\n              }\n            });\n          } catch (e) {\n            return reject({\n              filename: href,\n              message: \"Error loading file \" + href + \" error was \" + e.message\n            });\n          }\n        }\n\n        self.doXHR(href, options.mime, function doXHRCallback(data, lastModified) {\n          // per file cache\n          fileCache[href] = data; // Use remote copy (re-parse)\n\n          resolve({\n            contents: data,\n            filename: href,\n            webInfo: {\n              lastModified: lastModified\n            }\n          });\n        }, function doXHRError(status, url) {\n          reject({\n            type: 'File',\n            message: \"'\" + url + \"' wasn't found (\" + status + \")\",\n            href: href\n          });\n        });\n      });\n    }\n  });\n\n  var FM = function FM(opts, log) {\n    options$1 = opts;\n    logger = log;\n    return FileManager;\n  }; // TODO: Add tests for browser @plugin\n\n  /**\r\n   * Browser Plugin Loader\r\n   */\n\n\n  var PluginLoader = function PluginLoader(less) {\n    this.less = less; // Should we shim this.require for browser? Probably not?\n  };\n\n  PluginLoader.prototype = Object.assign(new AbstractPluginLoader(), {\n    loadPlugin: function loadPlugin(filename, basePath, context, environment, fileManager) {\n      return new Promise(function (fulfill, reject) {\n        fileManager.loadFile(filename, basePath, context, environment).then(fulfill)[\"catch\"](reject);\n      });\n    }\n  });\n\n  var LogListener = function LogListener(less, options) {\n    var logLevel_debug = 4;\n    var logLevel_info = 3;\n    var logLevel_warn = 2;\n    var logLevel_error = 1; // The amount of logging in the javascript console.\n    // 3 - Debug, information and errors\n    // 2 - Information and errors\n    // 1 - Errors\n    // 0 - None\n    // Defaults to 2\n\n    options.logLevel = typeof options.logLevel !== 'undefined' ? options.logLevel : options.env === 'development' ? logLevel_info : logLevel_error;\n\n    if (!options.loggers) {\n      options.loggers = [{\n        debug: function debug(msg) {\n          if (options.logLevel >= logLevel_debug) {\n            console.log(msg);\n          }\n        },\n        info: function info(msg) {\n          if (options.logLevel >= logLevel_info) {\n            console.log(msg);\n          }\n        },\n        warn: function warn(msg) {\n          if (options.logLevel >= logLevel_warn) {\n            console.warn(msg);\n          }\n        },\n        error: function error(msg) {\n          if (options.logLevel >= logLevel_error) {\n            console.error(msg);\n          }\n        }\n      }];\n    }\n\n    for (var i = 0; i < options.loggers.length; i++) {\n      less.logger.addListener(options.loggers[i]);\n    }\n  };\n\n  var ErrorReporting = function ErrorReporting(window, less, options) {\n    function errorHTML(e, rootHref) {\n      var id = \"less-error-message:\" + extractId(rootHref || '');\n      var template = '<li><label>{line}</label><pre class=\"{class}\">{content}</pre></li>';\n      var elem = window.document.createElement('div');\n      var timer;\n      var content;\n      var errors = [];\n      var filename = e.filename || rootHref;\n      var filenameNoPath = filename.match(/([^\\/]+(\\?.*)?)$/)[1];\n      elem.id = id;\n      elem.className = 'less-error-message';\n      content = \"<h3>\" + (e.type || 'Syntax') + \"Error: \" + (e.message || 'There is an error in your .less file') + (\"</h3><p>in <a href=\\\"\" + filename + \"\\\">\" + filenameNoPath + \"</a> \");\n\n      var errorline = function errorline(e, i, classname) {\n        if (e.extract[i] !== undefined) {\n          errors.push(template.replace(/\\{line\\}/, (parseInt(e.line, 10) || 0) + (i - 1)).replace(/\\{class\\}/, classname).replace(/\\{content\\}/, e.extract[i]));\n        }\n      };\n\n      if (e.line) {\n        errorline(e, 0, '');\n        errorline(e, 1, 'line');\n        errorline(e, 2, '');\n        content += \"on line \" + e.line + \", column \" + (e.column + 1) + \":</p><ul>\" + errors.join('') + \"</ul>\";\n      }\n\n      if (e.stack && (e.extract || options.logLevel >= 4)) {\n        content += \"<br/>Stack Trace</br />\" + e.stack.split('\\n').slice(1).join('<br/>');\n      }\n\n      elem.innerHTML = content; // CSS for error messages\n\n      browser.createCSS(window.document, ['.less-error-message ul, .less-error-message li {', 'list-style-type: none;', 'margin-right: 15px;', 'padding: 4px 0;', 'margin: 0;', '}', '.less-error-message label {', 'font-size: 12px;', 'margin-right: 15px;', 'padding: 4px 0;', 'color: #cc7777;', '}', '.less-error-message pre {', 'color: #dd6666;', 'padding: 4px 0;', 'margin: 0;', 'display: inline-block;', '}', '.less-error-message pre.line {', 'color: #ff0000;', '}', '.less-error-message h3 {', 'font-size: 20px;', 'font-weight: bold;', 'padding: 15px 0 5px 0;', 'margin: 0;', '}', '.less-error-message a {', 'color: #10a', '}', '.less-error-message .error {', 'color: red;', 'font-weight: bold;', 'padding-bottom: 2px;', 'border-bottom: 1px dashed red;', '}'].join('\\n'), {\n        title: 'error-message'\n      });\n      elem.style.cssText = ['font-family: Arial, sans-serif', 'border: 1px solid #e00', 'background-color: #eee', 'border-radius: 5px', '-webkit-border-radius: 5px', '-moz-border-radius: 5px', 'color: #e00', 'padding: 15px', 'margin-bottom: 15px'].join(';');\n\n      if (options.env === 'development') {\n        timer = setInterval(function () {\n          var document = window.document;\n          var body = document.body;\n\n          if (body) {\n            if (document.getElementById(id)) {\n              body.replaceChild(elem, document.getElementById(id));\n            } else {\n              body.insertBefore(elem, body.firstChild);\n            }\n\n            clearInterval(timer);\n          }\n        }, 10);\n      }\n    }\n\n    function removeErrorHTML(path) {\n      var node = window.document.getElementById(\"less-error-message:\" + extractId(path));\n\n      if (node) {\n        node.parentNode.removeChild(node);\n      }\n    }\n\n    function removeError(path) {\n      if (!options.errorReporting || options.errorReporting === 'html') {\n        removeErrorHTML(path);\n      } else if (options.errorReporting === 'console') ;else if (typeof options.errorReporting === 'function') {\n        options.errorReporting('remove', path);\n      }\n    }\n\n    function errorConsole(e, rootHref) {\n      var template = '{line} {content}';\n      var filename = e.filename || rootHref;\n      var errors = [];\n      var content = (e.type || 'Syntax') + \"Error: \" + (e.message || 'There is an error in your .less file') + \" in \" + filename;\n\n      var errorline = function errorline(e, i, classname) {\n        if (e.extract[i] !== undefined) {\n          errors.push(template.replace(/\\{line\\}/, (parseInt(e.line, 10) || 0) + (i - 1)).replace(/\\{class\\}/, classname).replace(/\\{content\\}/, e.extract[i]));\n        }\n      };\n\n      if (e.line) {\n        errorline(e, 0, '');\n        errorline(e, 1, 'line');\n        errorline(e, 2, '');\n        content += \" on line \" + e.line + \", column \" + (e.column + 1) + \":\\n\" + errors.join('\\n');\n      }\n\n      if (e.stack && (e.extract || options.logLevel >= 4)) {\n        content += \"\\nStack Trace\\n\" + e.stack;\n      }\n\n      less.logger.error(content);\n    }\n\n    function error(e, rootHref) {\n      if (!options.errorReporting || options.errorReporting === 'html') {\n        errorHTML(e, rootHref);\n      } else if (options.errorReporting === 'console') {\n        errorConsole(e, rootHref);\n      } else if (typeof options.errorReporting === 'function') {\n        options.errorReporting('add', e, rootHref);\n      }\n    }\n\n    return {\n      add: error,\n      remove: removeError\n    };\n  }; // Cache system is a bit outdated and could do with work\n\n\n  var Cache = function Cache(window, options, logger) {\n    var cache = null;\n\n    if (options.env !== 'development') {\n      try {\n        cache = typeof window.localStorage === 'undefined' ? null : window.localStorage;\n      } catch (_) {}\n    }\n\n    return {\n      setCSS: function setCSS(path, lastModified, modifyVars, styles) {\n        if (cache) {\n          logger.info(\"saving \" + path + \" to cache.\");\n\n          try {\n            cache.setItem(path, styles);\n            cache.setItem(path + \":timestamp\", lastModified);\n\n            if (modifyVars) {\n              cache.setItem(path + \":vars\", JSON.stringify(modifyVars));\n            }\n          } catch (e) {\n            // TODO - could do with adding more robust error handling\n            logger.error(\"failed to save \\\"\" + path + \"\\\" to local storage for caching.\");\n          }\n        }\n      },\n      getCSS: function getCSS(path, webInfo, modifyVars) {\n        var css = cache && cache.getItem(path);\n        var timestamp = cache && cache.getItem(path + \":timestamp\");\n        var vars = cache && cache.getItem(path + \":vars\");\n        modifyVars = modifyVars || {};\n        vars = vars || \"{}\"; // if not set, treat as the JSON representation of an empty object\n\n        if (timestamp && webInfo.lastModified && new Date(webInfo.lastModified).valueOf() === new Date(timestamp).valueOf() && JSON.stringify(modifyVars) === vars) {\n          // Use local copy\n          return css;\n        }\n      }\n    };\n  };\n\n  var ImageSize = function ImageSize() {\n    function _imageSize() {\n      throw {\n        type: 'Runtime',\n        message: 'Image size functions are not supported in browser version of less'\n      };\n    }\n\n    var imageFunctions = {\n      'image-size': function imageSize(filePathNode) {\n        _imageSize();\n\n        return -1;\n      },\n      'image-width': function imageWidth(filePathNode) {\n        _imageSize();\n\n        return -1;\n      },\n      'image-height': function imageHeight(filePathNode) {\n        _imageSize();\n\n        return -1;\n      }\n    };\n    functionRegistry.addMultiple(imageFunctions);\n  }; //\n\n\n  var root = function root(window, options) {\n    var document = window.document;\n    var less = lessRoot();\n    less.options = options;\n    var environment = less.environment;\n    var FileManager = FM(options, less.logger);\n    var fileManager = new FileManager();\n    environment.addFileManager(fileManager);\n    less.FileManager = FileManager;\n    less.PluginLoader = PluginLoader;\n    LogListener(less, options);\n    var errors = ErrorReporting(window, less, options);\n    var cache = less.cache = options.cache || Cache(window, options, less.logger);\n    ImageSize(less.environment); // Setup user functions - Deprecate?\n\n    if (options.functions) {\n      less.functions.functionRegistry.addMultiple(options.functions);\n    }\n\n    var typePattern = /^text\\/(x-)?less$/;\n\n    function clone(obj) {\n      var cloned = {};\n\n      for (var prop in obj) {\n        if (obj.hasOwnProperty(prop)) {\n          cloned[prop] = obj[prop];\n        }\n      }\n\n      return cloned;\n    } // only really needed for phantom\n\n\n    function bind(func, thisArg) {\n      var curryArgs = Array.prototype.slice.call(arguments, 2);\n      return function () {\n        var args = curryArgs.concat(Array.prototype.slice.call(arguments, 0));\n        return func.apply(thisArg, args);\n      };\n    }\n\n    function loadStyles(modifyVars) {\n      var styles = document.getElementsByTagName('style');\n      var style;\n\n      for (var i = 0; i < styles.length; i++) {\n        style = styles[i];\n\n        if (style.type.match(typePattern)) {\n          var instanceOptions = clone(options);\n          instanceOptions.modifyVars = modifyVars;\n          var lessText = style.innerHTML || '';\n          instanceOptions.filename = document.location.href.replace(/#.*$/, '');\n          /* jshint loopfunc:true */\n          // use closure to store current style\n\n          less.render(lessText, instanceOptions, bind(function (style, e, result) {\n            if (e) {\n              errors.add(e, 'inline');\n            } else {\n              style.type = 'text/css';\n\n              if (style.styleSheet) {\n                style.styleSheet.cssText = result.css;\n              } else {\n                style.innerHTML = result.css;\n              }\n            }\n          }, null, style));\n        }\n      }\n    }\n\n    function loadStyleSheet(sheet, callback, reload, remaining, modifyVars) {\n      var instanceOptions = clone(options);\n      addDataAttr(instanceOptions, sheet);\n      instanceOptions.mime = sheet.type;\n\n      if (modifyVars) {\n        instanceOptions.modifyVars = modifyVars;\n      }\n\n      function loadInitialFileCallback(loadedFile) {\n        var data = loadedFile.contents;\n        var path = loadedFile.filename;\n        var webInfo = loadedFile.webInfo;\n        var newFileInfo = {\n          currentDirectory: fileManager.getPath(path),\n          filename: path,\n          rootFilename: path,\n          rewriteUrls: instanceOptions.rewriteUrls\n        };\n        newFileInfo.entryPath = newFileInfo.currentDirectory;\n        newFileInfo.rootpath = instanceOptions.rootpath || newFileInfo.currentDirectory;\n\n        if (webInfo) {\n          webInfo.remaining = remaining;\n          var css = cache.getCSS(path, webInfo, instanceOptions.modifyVars);\n\n          if (!reload && css) {\n            webInfo.local = true;\n            callback(null, css, data, sheet, webInfo, path);\n            return;\n          }\n        } // TODO add tests around how this behaves when reloading\n\n\n        errors.remove(path);\n        instanceOptions.rootFileInfo = newFileInfo;\n        less.render(data, instanceOptions, function (e, result) {\n          if (e) {\n            e.href = path;\n            callback(e);\n          } else {\n            cache.setCSS(sheet.href, webInfo.lastModified, instanceOptions.modifyVars, result.css);\n            callback(null, result.css, data, sheet, webInfo, path);\n          }\n        });\n      }\n\n      fileManager.loadFile(sheet.href, null, instanceOptions, environment).then(function (loadedFile) {\n        loadInitialFileCallback(loadedFile);\n      })[\"catch\"](function (err) {\n        console.log(err);\n        callback(err);\n      });\n    }\n\n    function loadStyleSheets(callback, reload, modifyVars) {\n      for (var i = 0; i < less.sheets.length; i++) {\n        loadStyleSheet(less.sheets[i], callback, reload, less.sheets.length - (i + 1), modifyVars);\n      }\n    }\n\n    function initRunningMode() {\n      if (less.env === 'development') {\n        less.watchTimer = setInterval(function () {\n          if (less.watchMode) {\n            fileManager.clearFileCache();\n            loadStyleSheets(function (e, css, _, sheet, webInfo) {\n              if (e) {\n                errors.add(e, e.href || sheet.href);\n              } else if (css) {\n                browser.createCSS(window.document, css, sheet);\n              }\n            });\n          }\n        }, options.poll);\n      }\n    } //\n    // Watch mode\n    //\n\n\n    less.watch = function () {\n      if (!less.watchMode) {\n        less.env = 'development';\n        initRunningMode();\n      }\n\n      this.watchMode = true;\n      return true;\n    };\n\n    less.unwatch = function () {\n      clearInterval(less.watchTimer);\n      this.watchMode = false;\n      return false;\n    }; //\n    // Synchronously get all <link> tags with the 'rel' attribute set to\n    // \"stylesheet/less\".\n    //\n\n\n    less.registerStylesheetsImmediately = function () {\n      var links = document.getElementsByTagName('link');\n      less.sheets = [];\n\n      for (var i = 0; i < links.length; i++) {\n        if (links[i].rel === 'stylesheet/less' || links[i].rel.match(/stylesheet/) && links[i].type.match(typePattern)) {\n          less.sheets.push(links[i]);\n        }\n      }\n    }; //\n    // Asynchronously get all <link> tags with the 'rel' attribute set to\n    // \"stylesheet/less\", returning a Promise.\n    //\n\n\n    less.registerStylesheets = function () {\n      return new Promise(function (resolve, reject) {\n        less.registerStylesheetsImmediately();\n        resolve();\n      });\n    }; //\n    // With this function, it's possible to alter variables and re-render\n    // CSS without reloading less-files\n    //\n\n\n    less.modifyVars = function (record) {\n      return less.refresh(true, record, false);\n    };\n\n    less.refresh = function (reload, modifyVars, clearFileCache) {\n      if ((reload || clearFileCache) && clearFileCache !== false) {\n        fileManager.clearFileCache();\n      }\n\n      return new Promise(function (resolve, reject) {\n        var startTime;\n        var endTime;\n        var totalMilliseconds;\n        var remainingSheets;\n        startTime = endTime = new Date(); // Set counter for remaining unprocessed sheets\n\n        remainingSheets = less.sheets.length;\n\n        if (remainingSheets === 0) {\n          endTime = new Date();\n          totalMilliseconds = endTime - startTime;\n          less.logger.info('Less has finished and no sheets were loaded.');\n          resolve({\n            startTime: startTime,\n            endTime: endTime,\n            totalMilliseconds: totalMilliseconds,\n            sheets: less.sheets.length\n          });\n        } else {\n          // Relies on less.sheets array, callback seems to be guaranteed to be called for every element of the array\n          loadStyleSheets(function (e, css, _, sheet, webInfo) {\n            if (e) {\n              errors.add(e, e.href || sheet.href);\n              reject(e);\n              return;\n            }\n\n            if (webInfo.local) {\n              less.logger.info(\"Loading \" + sheet.href + \" from cache.\");\n            } else {\n              less.logger.info(\"Rendered \" + sheet.href + \" successfully.\");\n            }\n\n            browser.createCSS(window.document, css, sheet);\n            less.logger.info(\"CSS for \" + sheet.href + \" generated in \" + (new Date() - endTime) + \"ms\"); // Count completed sheet\n\n            remainingSheets--; // Check if the last remaining sheet was processed and then call the promise\n\n            if (remainingSheets === 0) {\n              totalMilliseconds = new Date() - startTime;\n              less.logger.info(\"Less has finished. CSS generated in \" + totalMilliseconds + \"ms\");\n              resolve({\n                startTime: startTime,\n                endTime: endTime,\n                totalMilliseconds: totalMilliseconds,\n                sheets: less.sheets.length\n              });\n            }\n\n            endTime = new Date();\n          }, reload, modifyVars);\n        }\n\n        loadStyles(modifyVars);\n      });\n    };\n\n    less.refreshStyles = loadStyles;\n    return less;\n  };\n  /**\r\n   * Kicks off less and compiles any stylesheets\r\n   * used in the browser distributed version of less\r\n   * to kick-start less using the browser api\r\n   */\n\n\n  var options = defaultOptions();\n\n  if (window.less) {\n    for (var key in window.less) {\n      if (window.less.hasOwnProperty(key)) {\n        options[key] = window.less[key];\n      }\n    }\n  }\n\n  addDefaultOptions(window, options);\n  options.plugins = options.plugins || [];\n\n  if (window.LESS_PLUGINS) {\n    options.plugins = options.plugins.concat(window.LESS_PLUGINS);\n  }\n\n  var less = root(window, options);\n  window.less = less;\n  var css;\n  var head;\n  var style; // Always restore page visibility\n\n  function resolveOrReject(data) {\n    if (data.filename) {\n      console.warn(data);\n    }\n\n    if (!options.async) {\n      head.removeChild(style);\n    }\n  }\n\n  if (options.onReady) {\n    if (/!watch/.test(window.location.hash)) {\n      less.watch();\n    } // Simulate synchronous stylesheet loading by hiding page rendering\n\n\n    if (!options.async) {\n      css = 'body { display: none !important }';\n      head = document.head || document.getElementsByTagName('head')[0];\n      style = document.createElement('style');\n      style.type = 'text/css';\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(document.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n\n    less.registerStylesheetsImmediately();\n    less.pageLoadFinished = less.refresh(less.env === 'development').then(resolveOrReject, resolveOrReject);\n  }\n\n  return less;\n});\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/less/dist/less.js?")},"+ooz":function(module,exports,__webpack_require__){eval('var listCacheClear = __webpack_require__("8Zrg"),\n    listCacheDelete = __webpack_require__("kwr2"),\n    listCacheGet = __webpack_require__("5VYK"),\n    listCacheHas = __webpack_require__("Coc+"),\n    listCacheSet = __webpack_require__("LzM7");\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype[\'delete\'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_ListCache.js?')},"/30y":function(module,exports,__webpack_require__){eval('var baseGetTag = __webpack_require__("Dhk8"),\n    isObjectLike = __webpack_require__("tLQN");\n\n/** `Object#toString` result references. */\nvar argsTag = \'[object Arguments]\';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_baseIsArguments.js?')},"/VAb":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _unsupportedIterableToArray; });\n/* harmony import */ var _babel_runtime_helpers_esm_arrayLikeToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("Wloh");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === "string") return Object(_babel_runtime_helpers_esm_arrayLikeToArray__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === "Object" && o.constructor) n = o.constructor.name;\n  if (n === "Map" || n === "Set") return Array.from(o);\n  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Object(_babel_runtime_helpers_esm_arrayLikeToArray__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(o, minLen);\n}\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js?')},"0jbY":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@babel/runtime/helpers/esm/extends.js\nvar esm_extends = __webpack_require__("cxan");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\nvar objectSpread2 = __webpack_require__("Czhu");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 1 modules\nvar slicedToArray = __webpack_require__("zygG");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\nvar objectWithoutProperties = __webpack_require__("HbGN");\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__("q1tI");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/classnames/index.js\nvar classnames = __webpack_require__("O94r");\nvar classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/rc-resize-observer/es/index.js\nvar es = __webpack_require__("8sde");\n\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-overflow/es/Item.js\n\n\n\n\n\n // Use shared variable to save bundle size\n\nvar UNDEFINED = undefined;\n\nfunction InternalItem(props, ref) {\n  var prefixCls = props.prefixCls,\n      invalidate = props.invalidate,\n      item = props.item,\n      renderItem = props.renderItem,\n      responsive = props.responsive,\n      registerSize = props.registerSize,\n      itemKey = props.itemKey,\n      className = props.className,\n      style = props.style,\n      children = props.children,\n      display = props.display,\n      order = props.order,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? \'div\' : _props$component,\n      restProps = Object(objectWithoutProperties["a" /* default */])(props, ["prefixCls", "invalidate", "item", "renderItem", "responsive", "registerSize", "itemKey", "className", "style", "children", "display", "order", "component"]);\n\n  var mergedHidden = responsive && !display; // ================================ Effect ================================\n\n  function internalRegisterSize(width) {\n    registerSize(itemKey, width);\n  }\n\n  react["useEffect"](function () {\n    return function () {\n      internalRegisterSize(null);\n    };\n  }, []); // ================================ Render ================================\n\n  var childNode = renderItem && item !== UNDEFINED ? renderItem(item) : children;\n  var overflowStyle;\n\n  if (!invalidate) {\n    overflowStyle = {\n      opacity: mergedHidden ? 0 : 1,\n      height: mergedHidden ? 0 : UNDEFINED,\n      overflowY: mergedHidden ? \'hidden\' : UNDEFINED,\n      order: responsive ? order : UNDEFINED,\n      pointerEvents: mergedHidden ? \'none\' : UNDEFINED,\n      position: mergedHidden ? \'absolute\' : UNDEFINED\n    };\n  }\n\n  var overflowProps = {};\n\n  if (mergedHidden) {\n    overflowProps[\'aria-hidden\'] = true;\n  }\n\n  var itemNode = /*#__PURE__*/react["createElement"](Component, Object(esm_extends["a" /* default */])({\n    className: classnames_default()(!invalidate && prefixCls, className),\n    style: Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({}, overflowStyle), style)\n  }, overflowProps, restProps, {\n    ref: ref\n  }), childNode);\n\n  if (responsive) {\n    itemNode = /*#__PURE__*/react["createElement"](es["a" /* default */], {\n      onResize: function onResize(_ref) {\n        var offsetWidth = _ref.offsetWidth;\n        internalRegisterSize(offsetWidth);\n      }\n    }, itemNode);\n  }\n\n  return itemNode;\n}\n\nvar Item = /*#__PURE__*/react["forwardRef"](InternalItem);\nItem.displayName = \'Item\';\n/* harmony default export */ var es_Item = (Item);\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/rc-util/es/raf.js\nvar raf = __webpack_require__("jiyB");\n\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-overflow/es/hooks/useBatchFrameState.js\n\n\n\n/**\n * State generate. Return a `setState` but it will flush all state with one render to save perf.\n * This is not a realization of `unstable_batchedUpdates`.\n */\n\nfunction useBatchFrameState() {\n  var _useState = Object(react["useState"])({}),\n      _useState2 = Object(slicedToArray["a" /* default */])(_useState, 2),\n      forceUpdate = _useState2[1];\n\n  var statesRef = Object(react["useRef"])([]);\n  var destroyRef = Object(react["useRef"])(false);\n  var walkingIndex = 0;\n  var beforeFrameId = 0;\n  Object(react["useEffect"])(function () {\n    return function () {\n      destroyRef.current = true;\n    };\n  }, []);\n\n  function createState(defaultValue) {\n    var myIndex = walkingIndex;\n    walkingIndex += 1; // Fill value if not exist yet\n\n    if (statesRef.current.length < myIndex + 1) {\n      statesRef.current[myIndex] = defaultValue;\n    } // Return filled as `setState`\n\n\n    var value = statesRef.current[myIndex];\n\n    function setValue(val) {\n      statesRef.current[myIndex] = typeof val === \'function\' ? val(statesRef.current[myIndex]) : val;\n      raf["a" /* default */].cancel(beforeFrameId); // Flush with batch\n\n      beforeFrameId = Object(raf["a" /* default */])(function () {\n        if (!destroyRef.current) {\n          forceUpdate({});\n        }\n      });\n    }\n\n    return [value, setValue];\n  }\n\n  return createState;\n}\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-overflow/es/RawItem.js\n\n\n\n\n\n\n\nvar RawItem_InternalRawItem = function InternalRawItem(props, ref) {\n  var context = react["useContext"](OverflowContext); // Render directly when context not provided\n\n  if (!context) {\n    var _props$component = props.component,\n        Component = _props$component === void 0 ? \'div\' : _props$component,\n        _restProps = Object(objectWithoutProperties["a" /* default */])(props, ["component"]);\n\n    return /*#__PURE__*/react["createElement"](Component, Object(esm_extends["a" /* default */])({}, _restProps, {\n      ref: ref\n    }));\n  }\n\n  var contextClassName = context.className,\n      restContext = Object(objectWithoutProperties["a" /* default */])(context, ["className"]);\n\n  var className = props.className,\n      restProps = Object(objectWithoutProperties["a" /* default */])(props, ["className"]); // Do not pass context to sub item to avoid multiple measure\n\n\n  return /*#__PURE__*/react["createElement"](OverflowContext.Provider, {\n    value: null\n  }, /*#__PURE__*/react["createElement"](es_Item, Object(esm_extends["a" /* default */])({\n    ref: ref,\n    className: classnames_default()(contextClassName, className)\n  }, restContext, restProps)));\n};\n\nvar RawItem = /*#__PURE__*/react["forwardRef"](RawItem_InternalRawItem);\nRawItem.displayName = \'RawItem\';\n/* harmony default export */ var es_RawItem = (RawItem);\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-overflow/es/Overflow.js\n\n\n\n\n\n\n\n\n\n\n\nvar OverflowContext = /*#__PURE__*/react["createContext"](null);\nvar RESPONSIVE = \'responsive\';\nvar INVALIDATE = \'invalidate\';\n\nfunction defaultRenderRest(omittedItems) {\n  return "+ ".concat(omittedItems.length, " ...");\n}\n\nfunction Overflow(props, ref) {\n  var _props$prefixCls = props.prefixCls,\n      prefixCls = _props$prefixCls === void 0 ? \'rc-overflow\' : _props$prefixCls,\n      _props$data = props.data,\n      data = _props$data === void 0 ? [] : _props$data,\n      renderItem = props.renderItem,\n      renderRawItem = props.renderRawItem,\n      itemKey = props.itemKey,\n      _props$itemWidth = props.itemWidth,\n      itemWidth = _props$itemWidth === void 0 ? 10 : _props$itemWidth,\n      ssr = props.ssr,\n      style = props.style,\n      className = props.className,\n      maxCount = props.maxCount,\n      renderRest = props.renderRest,\n      renderRawRest = props.renderRawRest,\n      suffix = props.suffix,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? \'div\' : _props$component,\n      itemComponent = props.itemComponent,\n      onVisibleChange = props.onVisibleChange,\n      restProps = Object(objectWithoutProperties["a" /* default */])(props, ["prefixCls", "data", "renderItem", "renderRawItem", "itemKey", "itemWidth", "ssr", "style", "className", "maxCount", "renderRest", "renderRawRest", "suffix", "component", "itemComponent", "onVisibleChange"]);\n\n  var createUseState = useBatchFrameState();\n  var fullySSR = ssr === \'full\';\n\n  var _createUseState = createUseState(null),\n      _createUseState2 = Object(slicedToArray["a" /* default */])(_createUseState, 2),\n      containerWidth = _createUseState2[0],\n      setContainerWidth = _createUseState2[1];\n\n  var mergedContainerWidth = containerWidth || 0;\n\n  var _createUseState3 = createUseState(new Map()),\n      _createUseState4 = Object(slicedToArray["a" /* default */])(_createUseState3, 2),\n      itemWidths = _createUseState4[0],\n      setItemWidths = _createUseState4[1];\n\n  var _createUseState5 = createUseState(0),\n      _createUseState6 = Object(slicedToArray["a" /* default */])(_createUseState5, 2),\n      prevRestWidth = _createUseState6[0],\n      setPrevRestWidth = _createUseState6[1];\n\n  var _createUseState7 = createUseState(0),\n      _createUseState8 = Object(slicedToArray["a" /* default */])(_createUseState7, 2),\n      restWidth = _createUseState8[0],\n      setRestWidth = _createUseState8[1];\n\n  var _createUseState9 = createUseState(0),\n      _createUseState10 = Object(slicedToArray["a" /* default */])(_createUseState9, 2),\n      suffixWidth = _createUseState10[0],\n      setSuffixWidth = _createUseState10[1];\n\n  var _useState = Object(react["useState"])(null),\n      _useState2 = Object(slicedToArray["a" /* default */])(_useState, 2),\n      suffixFixedStart = _useState2[0],\n      setSuffixFixedStart = _useState2[1];\n\n  var _useState3 = Object(react["useState"])(null),\n      _useState4 = Object(slicedToArray["a" /* default */])(_useState3, 2),\n      displayCount = _useState4[0],\n      setDisplayCount = _useState4[1];\n\n  var mergedDisplayCount = react["useMemo"](function () {\n    if (displayCount === null && fullySSR) {\n      return Number.MAX_SAFE_INTEGER;\n    }\n\n    return displayCount || 0;\n  }, [displayCount, containerWidth]);\n\n  var _useState5 = Object(react["useState"])(false),\n      _useState6 = Object(slicedToArray["a" /* default */])(_useState5, 2),\n      restReady = _useState6[0],\n      setRestReady = _useState6[1];\n\n  var itemPrefixCls = "".concat(prefixCls, "-item"); // Always use the max width to avoid blink\n\n  var mergedRestWidth = Math.max(prevRestWidth, restWidth); // ================================= Data =================================\n\n  var isResponsive = data.length && maxCount === RESPONSIVE;\n  var invalidate = maxCount === INVALIDATE;\n  /**\n   * When is `responsive`, we will always render rest node to get the real width of it for calculation\n   */\n\n  var showRest = isResponsive || typeof maxCount === \'number\' && data.length > maxCount;\n  var mergedData = Object(react["useMemo"])(function () {\n    var items = data;\n\n    if (isResponsive) {\n      if (containerWidth === null && fullySSR) {\n        items = data;\n      } else {\n        items = data.slice(0, Math.min(data.length, mergedContainerWidth / itemWidth));\n      }\n    } else if (typeof maxCount === \'number\') {\n      items = data.slice(0, maxCount);\n    }\n\n    return items;\n  }, [data, itemWidth, containerWidth, maxCount, isResponsive]);\n  var omittedItems = Object(react["useMemo"])(function () {\n    if (isResponsive) {\n      return data.slice(mergedDisplayCount + 1);\n    }\n\n    return data.slice(mergedData.length);\n  }, [data, mergedData, isResponsive, mergedDisplayCount]); // ================================= Item =================================\n\n  var getKey = Object(react["useCallback"])(function (item, index) {\n    var _ref;\n\n    if (typeof itemKey === \'function\') {\n      return itemKey(item);\n    }\n\n    return (_ref = itemKey && (item === null || item === void 0 ? void 0 : item[itemKey])) !== null && _ref !== void 0 ? _ref : index;\n  }, [itemKey]);\n  var mergedRenderItem = Object(react["useCallback"])(renderItem || function (item) {\n    return item;\n  }, [renderItem]);\n\n  function updateDisplayCount(count, notReady) {\n    setDisplayCount(count);\n\n    if (!notReady) {\n      setRestReady(count < data.length - 1);\n      onVisibleChange === null || onVisibleChange === void 0 ? void 0 : onVisibleChange(count);\n    }\n  } // ================================= Size =================================\n\n\n  function onOverflowResize(_, element) {\n    setContainerWidth(element.clientWidth);\n  }\n\n  function registerSize(key, width) {\n    setItemWidths(function (origin) {\n      var clone = new Map(origin);\n\n      if (width === null) {\n        clone["delete"](key);\n      } else {\n        clone.set(key, width);\n      }\n\n      return clone;\n    });\n  }\n\n  function registerOverflowSize(_, width) {\n    setRestWidth(width);\n    setPrevRestWidth(restWidth);\n  }\n\n  function registerSuffixSize(_, width) {\n    setSuffixWidth(width);\n  } // ================================ Effect ================================\n\n\n  function getItemWidth(index) {\n    return itemWidths.get(getKey(mergedData[index], index));\n  }\n\n  react["useLayoutEffect"](function () {\n    if (mergedContainerWidth && mergedRestWidth && mergedData) {\n      var totalWidth = suffixWidth;\n      var len = mergedData.length;\n      var lastIndex = len - 1; // When data count change to 0, reset this since not loop will reach\n\n      if (!len) {\n        updateDisplayCount(0);\n        setSuffixFixedStart(null);\n        return;\n      }\n\n      for (var i = 0; i < len; i += 1) {\n        var currentItemWidth = getItemWidth(i); // Break since data not ready\n\n        if (currentItemWidth === undefined) {\n          updateDisplayCount(i - 1, true);\n          break;\n        } // Find best match\n\n\n        totalWidth += currentItemWidth;\n\n        if ( // Only one means `totalWidth` is the final width\n        lastIndex === 0 && totalWidth <= mergedContainerWidth || // Last two width will be the final width\n        i === lastIndex - 1 && totalWidth + getItemWidth(lastIndex) <= mergedContainerWidth) {\n          // Additional check if match the end\n          updateDisplayCount(lastIndex);\n          setSuffixFixedStart(null);\n          break;\n        } else if (totalWidth + mergedRestWidth > mergedContainerWidth) {\n          // Can not hold all the content to show rest\n          updateDisplayCount(i - 1);\n          setSuffixFixedStart(totalWidth - currentItemWidth - suffixWidth + restWidth);\n          break;\n        }\n      }\n\n      if (suffix && getItemWidth(0) + suffixWidth > mergedContainerWidth) {\n        setSuffixFixedStart(null);\n      }\n    }\n  }, [mergedContainerWidth, itemWidths, restWidth, suffixWidth, getKey, mergedData]); // ================================ Render ================================\n\n  var displayRest = restReady && !!omittedItems.length;\n  var suffixStyle = {};\n\n  if (suffixFixedStart !== null && isResponsive) {\n    suffixStyle = {\n      position: \'absolute\',\n      left: suffixFixedStart,\n      top: 0\n    };\n  }\n\n  var itemSharedProps = {\n    prefixCls: itemPrefixCls,\n    responsive: isResponsive,\n    component: itemComponent,\n    invalidate: invalidate\n  }; // >>>>> Choice render fun by `renderRawItem`\n\n  var internalRenderItemNode = renderRawItem ? function (item, index) {\n    var key = getKey(item, index);\n    return /*#__PURE__*/react["createElement"](OverflowContext.Provider, {\n      key: key,\n      value: Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({}, itemSharedProps), {}, {\n        order: index,\n        item: item,\n        itemKey: key,\n        registerSize: registerSize,\n        display: index <= mergedDisplayCount\n      })\n    }, renderRawItem(item, index));\n  } : function (item, index) {\n    var key = getKey(item, index);\n    return /*#__PURE__*/react["createElement"](es_Item, Object(esm_extends["a" /* default */])({}, itemSharedProps, {\n      order: index,\n      key: key,\n      item: item,\n      renderItem: mergedRenderItem,\n      itemKey: key,\n      registerSize: registerSize,\n      display: index <= mergedDisplayCount\n    }));\n  }; // >>>>> Rest node\n\n  var restNode;\n  var restContextProps = {\n    order: displayRest ? mergedDisplayCount : Number.MAX_SAFE_INTEGER,\n    className: "".concat(itemPrefixCls, "-rest"),\n    registerSize: registerOverflowSize,\n    display: displayRest\n  };\n\n  if (!renderRawRest) {\n    var mergedRenderRest = renderRest || defaultRenderRest;\n    restNode = /*#__PURE__*/react["createElement"](es_Item, Object(esm_extends["a" /* default */])({}, itemSharedProps, restContextProps), typeof mergedRenderRest === \'function\' ? mergedRenderRest(omittedItems) : mergedRenderRest);\n  } else if (renderRawRest) {\n    restNode = /*#__PURE__*/react["createElement"](OverflowContext.Provider, {\n      value: Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({}, itemSharedProps), restContextProps)\n    }, renderRawRest(omittedItems));\n  }\n\n  var overflowNode = /*#__PURE__*/react["createElement"](Component, Object(esm_extends["a" /* default */])({\n    className: classnames_default()(!invalidate && prefixCls, className),\n    style: style,\n    ref: ref\n  }, restProps), mergedData.map(internalRenderItemNode), showRest ? restNode : null, suffix && /*#__PURE__*/react["createElement"](es_Item, Object(esm_extends["a" /* default */])({}, itemSharedProps, {\n    order: mergedDisplayCount,\n    className: "".concat(itemPrefixCls, "-suffix"),\n    registerSize: registerSuffixSize,\n    display: true,\n    style: suffixStyle\n  }), suffix));\n\n  if (isResponsive) {\n    overflowNode = /*#__PURE__*/react["createElement"](es["a" /* default */], {\n      onResize: onOverflowResize\n    }, overflowNode);\n  }\n\n  return overflowNode;\n}\n\nvar ForwardOverflow = /*#__PURE__*/react["forwardRef"](Overflow);\nForwardOverflow.displayName = \'Overflow\';\nForwardOverflow.Item = es_RawItem;\nForwardOverflow.RESPONSIVE = RESPONSIVE;\nForwardOverflow.INVALIDATE = INVALIDATE; // Convert to generic type\n\n/* harmony default export */ var es_Overflow = (ForwardOverflow);\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-overflow/es/index.js\n\n/* harmony default export */ var rc_overflow_es = __webpack_exports__["a"] = (es_Overflow);\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/rc-overflow/es/index.js_+_4_modules?')},"2Fbm":function(module,exports,__webpack_require__){eval('var nativeCreate = __webpack_require__("5pfJ");\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_hashClear.js?')},"2ZvR":function(module,exports){eval("/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_baseTimes.js?")},"2q8g":function(module,exports,__webpack_require__){eval("var baseGetTag = __webpack_require__(\"Dhk8\"),\n    isObject = __webpack_require__(\"tQYX\");\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/isFunction.js?")},"3KBa":function(module,exports,__webpack_require__){eval("var root = __webpack_require__(\"IBsm\");\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_coreJsData.js?")},"3ajY":function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__("IBsm"),\n    stubFalse = __webpack_require__("DjCF");\n\n/** Detect free variable `exports`. */\nvar freeExports =  true && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == \'object\' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("oi7r")(module)))\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/isBuffer.js?')},"4+Vk":function(module,exports,__webpack_require__){eval('var getNative = __webpack_require__("vxC8"),\n    root = __webpack_require__("IBsm");\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, \'WeakMap\');\n\nmodule.exports = WeakMap;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_WeakMap.js?')},"4/ik":function(module,exports,__webpack_require__){eval('var ListCache = __webpack_require__("+ooz"),\n    Map = __webpack_require__("qeCs"),\n    MapCache = __webpack_require__("hyzI");\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_stackSet.js?')},"4p/L":function(module,exports){eval("/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_getValue.js?")},"4uJK":function(module,exports,__webpack_require__){eval('var isPrototype = __webpack_require__("CbIe"),\n    nativeKeys = __webpack_require__("OtNC");\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn\'t treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != \'constructor\') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_baseKeys.js?')},"5VYK":function(module,exports,__webpack_require__){eval('var assocIndexOf = __webpack_require__("6QIk");\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_listCacheGet.js?')},"5nKN":function(module,exports,__webpack_require__){eval("var isFunction = __webpack_require__(\"2q8g\"),\n    isMasked = __webpack_require__(\"9vbJ\"),\n    isObject = __webpack_require__(\"tQYX\"),\n    toSource = __webpack_require__(\"c18h\");\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_baseIsNative.js?")},"5pfJ":function(module,exports,__webpack_require__){eval("var getNative = __webpack_require__(\"vxC8\");\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_nativeCreate.js?")},"5x5+":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _iterableToArray; });\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);\n}\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/@babel/runtime/helpers/esm/iterableToArray.js?')},"6QIk":function(module,exports,__webpack_require__){eval('var eq = __webpack_require__("pPzx");\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_assocIndexOf.js?')},"6Qj0":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return toArray; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("q1tI");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_is__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("kvVz");\n/* harmony import */ var react_is__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_is__WEBPACK_IMPORTED_MODULE_1__);\n\n\nfunction toArray(children) {\n  var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var ret = [];\n  react__WEBPACK_IMPORTED_MODULE_0___default.a.Children.forEach(children, function (child) {\n    if ((child === undefined || child === null) && !option.keepEmpty) {\n      return;\n    }\n\n    if (Array.isArray(child)) {\n      ret = ret.concat(toArray(child));\n    } else if (Object(react_is__WEBPACK_IMPORTED_MODULE_1__["isFragment"])(child) && child.props) {\n      ret = ret.concat(toArray(child.props.children, option));\n    } else {\n      ret.push(child);\n    }\n  });\n  return ret;\n}\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/rc-util/es/Children/toArray.js?')},"6UKJ":function(module,exports){eval("/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_isKeyable.js?")},"7/jS":function(module,exports,__webpack_require__){eval("var baseGetTag = __webpack_require__(\"Dhk8\"),\n    isLength = __webpack_require__(\"t0L4\"),\n    isObjectLike = __webpack_require__(\"tLQN\");\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_baseIsTypedArray.js?")},"70Le":function(module,exports,__webpack_require__){eval('var arrayFilter = __webpack_require__("W0vE"),\n    stubArray = __webpack_require__("X4R2");\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nmodule.exports = getSymbols;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_getSymbols.js?')},"8Zrg":function(module,exports){eval("/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_listCacheClear.js?")},"8sde":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony import */ var _babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("Czhu");\n/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("9fIP");\n/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("MMYH");\n/* harmony import */ var _babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("8K1b");\n/* harmony import */ var _babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("AqVP");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("q1tI");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var rc_util_es_Dom_findDOMNode__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("uO0T");\n/* harmony import */ var rc_util_es_Children_toArray__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("6Qj0");\n/* harmony import */ var rc_util_es_warning__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("5qS4");\n/* harmony import */ var rc_util_es_ref__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("uwWy");\n/* harmony import */ var resize_observer_polyfill__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__("LaGA");\n\n\n\n\n\n\n\n\n\n\n\nvar INTERNAL_PREFIX_KEY = \'rc-observer-key\'; // Still need to be compatible with React 15, we use class component here\n\nvar ReactResizeObserver = /*#__PURE__*/function (_React$Component) {\n  Object(_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__[/* default */ "a"])(ReactResizeObserver, _React$Component);\n\n  var _super = Object(_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__[/* default */ "a"])(ReactResizeObserver);\n\n  function ReactResizeObserver() {\n    var _this;\n\n    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(this, ReactResizeObserver);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.resizeObserver = null;\n    _this.childNode = null;\n    _this.currentElement = null;\n    _this.state = {\n      width: 0,\n      height: 0,\n      offsetHeight: 0,\n      offsetWidth: 0\n    };\n\n    _this.onResize = function (entries) {\n      var onResize = _this.props.onResize;\n      var target = entries[0].target;\n\n      var _target$getBoundingCl = target.getBoundingClientRect(),\n          width = _target$getBoundingCl.width,\n          height = _target$getBoundingCl.height;\n\n      var offsetWidth = target.offsetWidth,\n          offsetHeight = target.offsetHeight;\n      /**\n       * Resize observer trigger when content size changed.\n       * In most case we just care about element size,\n       * let\'s use `boundary` instead of `contentRect` here to avoid shaking.\n       */\n\n      var fixedWidth = Math.floor(width);\n      var fixedHeight = Math.floor(height);\n\n      if (_this.state.width !== fixedWidth || _this.state.height !== fixedHeight || _this.state.offsetWidth !== offsetWidth || _this.state.offsetHeight !== offsetHeight) {\n        var size = {\n          width: fixedWidth,\n          height: fixedHeight,\n          offsetWidth: offsetWidth,\n          offsetHeight: offsetHeight\n        };\n\n        _this.setState(size);\n\n        if (onResize) {\n          var mergedOffsetWidth = offsetWidth === Math.round(width) ? width : offsetWidth;\n          var mergedOffsetHeight = offsetHeight === Math.round(height) ? height : offsetHeight; // defer the callback but not defer to next frame\n\n          Promise.resolve().then(function () {\n            onResize(Object(_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(Object(_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])({}, size), {}, {\n              offsetWidth: mergedOffsetWidth,\n              offsetHeight: mergedOffsetHeight\n            }), target);\n          });\n        }\n      }\n    };\n\n    _this.setChildNode = function (node) {\n      _this.childNode = node;\n    };\n\n    return _this;\n  }\n\n  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(ReactResizeObserver, [{\n    key: "componentDidMount",\n    value: function componentDidMount() {\n      this.onComponentUpdated();\n    }\n  }, {\n    key: "componentDidUpdate",\n    value: function componentDidUpdate() {\n      this.onComponentUpdated();\n    }\n  }, {\n    key: "componentWillUnmount",\n    value: function componentWillUnmount() {\n      this.destroyObserver();\n    }\n  }, {\n    key: "onComponentUpdated",\n    value: function onComponentUpdated() {\n      var disabled = this.props.disabled; // Unregister if disabled\n\n      if (disabled) {\n        this.destroyObserver();\n        return;\n      } // Unregister if element changed\n\n\n      var element = Object(rc_util_es_Dom_findDOMNode__WEBPACK_IMPORTED_MODULE_6__[/* default */ "a"])(this.childNode || this);\n      var elementChanged = element !== this.currentElement;\n\n      if (elementChanged) {\n        this.destroyObserver();\n        this.currentElement = element;\n      }\n\n      if (!this.resizeObserver && element) {\n        this.resizeObserver = new resize_observer_polyfill__WEBPACK_IMPORTED_MODULE_10__["default"](this.onResize);\n        this.resizeObserver.observe(element);\n      }\n    }\n  }, {\n    key: "destroyObserver",\n    value: function destroyObserver() {\n      if (this.resizeObserver) {\n        this.resizeObserver.disconnect();\n        this.resizeObserver = null;\n      }\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var children = this.props.children;\n      var childNodes = Object(rc_util_es_Children_toArray__WEBPACK_IMPORTED_MODULE_7__[/* default */ "a"])(children);\n\n      if (childNodes.length > 1) {\n        Object(rc_util_es_warning__WEBPACK_IMPORTED_MODULE_8__[/* default */ "a"])(false, \'Find more than one child node with `children` in ResizeObserver. Will only observe first one.\');\n      } else if (childNodes.length === 0) {\n        Object(rc_util_es_warning__WEBPACK_IMPORTED_MODULE_8__[/* default */ "a"])(false, \'`children` of ResizeObserver is empty. Nothing is in observe.\');\n        return null;\n      }\n\n      var childNode = childNodes[0];\n\n      if ( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_5__["isValidElement"](childNode) && Object(rc_util_es_ref__WEBPACK_IMPORTED_MODULE_9__[/* supportRef */ "c"])(childNode)) {\n        var ref = childNode.ref;\n        childNodes[0] = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_5__["cloneElement"](childNode, {\n          ref: Object(rc_util_es_ref__WEBPACK_IMPORTED_MODULE_9__[/* composeRef */ "a"])(ref, this.setChildNode)\n        });\n      }\n\n      return childNodes.length === 1 ? childNodes[0] : childNodes.map(function (node, index) {\n        if (! /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_5__["isValidElement"](node) || \'key\' in node && node.key !== null) {\n          return node;\n        }\n\n        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_5__["cloneElement"](node, {\n          key: "".concat(INTERNAL_PREFIX_KEY, "-").concat(index)\n        });\n      });\n    }\n  }]);\n\n  return ReactResizeObserver;\n}(react__WEBPACK_IMPORTED_MODULE_5__["Component"]);\n\nReactResizeObserver.displayName = \'ResizeObserver\';\n/* harmony default export */ __webpack_exports__["a"] = (ReactResizeObserver);\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/rc-resize-observer/es/index.js?')},"9SKQ":function(module,exports,__webpack_require__){eval('var getMapData = __webpack_require__("JNqh");\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_mapCacheHas.js?')},"9vbJ":function(module,exports,__webpack_require__){eval("var coreJsData = __webpack_require__(\"3KBa\");\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_isMasked.js?")},"9y2L":function(module,exports,__webpack_require__){eval("var isFunction = __webpack_require__(\"2q8g\"),\n    isLength = __webpack_require__(\"t0L4\");\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/isArrayLike.js?")},BSqe:function(module,exports){eval("/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_stackGet.js?")},BlJA:function(module,exports,__webpack_require__){eval("var arrayLikeKeys = __webpack_require__(\"rmhs\"),\n    baseKeys = __webpack_require__(\"4uJK\"),\n    isArrayLike = __webpack_require__(\"9y2L\");\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/keys.js?")},BoRD:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _extends; });\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/extends.js?')},BqUW:function(module,exports,__webpack_require__){eval('var Stack = __webpack_require__("HsnV"),\n    equalArrays = __webpack_require__("ZZ+W"),\n    equalByTag = __webpack_require__("R3gn"),\n    equalObjects = __webpack_require__("yZHP"),\n    getTag = __webpack_require__("kkM+"),\n    isArray = __webpack_require__("wxYD"),\n    isBuffer = __webpack_require__("3ajY"),\n    isTypedArray = __webpack_require__("Qd2C");\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = \'[object Arguments]\',\n    arrayTag = \'[object Array]\',\n    objectTag = \'[object Object]\';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, \'__wrapped__\'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, \'__wrapped__\');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_baseIsEqualDeep.js?')},CbIe:function(module,exports){eval("/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_isPrototype.js?")},"Coc+":function(module,exports,__webpack_require__){eval('var assocIndexOf = __webpack_require__("6QIk");\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_listCacheHas.js?')},Dhk8:function(module,exports,__webpack_require__){eval('var Symbol = __webpack_require__("Syyo"),\n    getRawTag = __webpack_require__("KCLV"),\n    objectToString = __webpack_require__("kHoZ");\n\n/** `Object#toString` result references. */\nvar nullTag = \'[object Null]\',\n    undefinedTag = \'[object Undefined]\';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_baseGetTag.js?')},DjCF:function(module,exports){eval("/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/stubFalse.js?")},E4ao:function(module,exports){eval("/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_stackDelete.js?")},HsnV:function(module,exports,__webpack_require__){eval('var ListCache = __webpack_require__("+ooz"),\n    stackClear = __webpack_require__("RNlM"),\n    stackDelete = __webpack_require__("E4ao"),\n    stackGet = __webpack_require__("BSqe"),\n    stackHas = __webpack_require__("L6um"),\n    stackSet = __webpack_require__("4/ik");\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype[\'delete\'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_Stack.js?')},IBsm:function(module,exports,__webpack_require__){eval("var freeGlobal = __webpack_require__(\"e93E\");\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_root.js?")},IS0S:function(module,exports,__webpack_require__){eval('var getNative = __webpack_require__("vxC8"),\n    root = __webpack_require__("IBsm");\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, \'Promise\');\n\nmodule.exports = Promise;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_Promise.js?')},IjRU:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@babel/runtime/helpers/esm/defineProperty.js\nvar defineProperty = __webpack_require__("zjfJ");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 1 modules\nvar slicedToArray = __webpack_require__("zygG");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\nvar objectWithoutProperties = __webpack_require__("HbGN");\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__("q1tI");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/rc-trigger/es/index.js + 14 modules\nvar es = __webpack_require__("h/vM");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/classnames/index.js\nvar classnames = __webpack_require__("O94r");\nvar classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);\n\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-dropdown/es/placements.js\nvar autoAdjustOverflow = {\n  adjustX: 1,\n  adjustY: 1\n};\nvar targetOffset = [0, 0];\nvar placements_placements = {\n  topLeft: {\n    points: [\'bl\', \'tl\'],\n    overflow: autoAdjustOverflow,\n    offset: [0, -4],\n    targetOffset: targetOffset\n  },\n  topCenter: {\n    points: [\'bc\', \'tc\'],\n    overflow: autoAdjustOverflow,\n    offset: [0, -4],\n    targetOffset: targetOffset\n  },\n  topRight: {\n    points: [\'br\', \'tr\'],\n    overflow: autoAdjustOverflow,\n    offset: [0, -4],\n    targetOffset: targetOffset\n  },\n  bottomLeft: {\n    points: [\'tl\', \'bl\'],\n    overflow: autoAdjustOverflow,\n    offset: [0, 4],\n    targetOffset: targetOffset\n  },\n  bottomCenter: {\n    points: [\'tc\', \'bc\'],\n    overflow: autoAdjustOverflow,\n    offset: [0, 4],\n    targetOffset: targetOffset\n  },\n  bottomRight: {\n    points: [\'tr\', \'br\'],\n    overflow: autoAdjustOverflow,\n    offset: [0, 4],\n    targetOffset: targetOffset\n  }\n};\n/* harmony default export */ var es_placements = (placements_placements);\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-dropdown/es/Dropdown.js\n\n\n\n\n\n\n\n\nfunction Dropdown(props, ref) {\n  var _props$arrow = props.arrow,\n      arrow = _props$arrow === void 0 ? false : _props$arrow,\n      _props$prefixCls = props.prefixCls,\n      prefixCls = _props$prefixCls === void 0 ? \'rc-dropdown\' : _props$prefixCls,\n      transitionName = props.transitionName,\n      animation = props.animation,\n      align = props.align,\n      _props$placement = props.placement,\n      placement = _props$placement === void 0 ? \'bottomLeft\' : _props$placement,\n      _props$placements = props.placements,\n      placements = _props$placements === void 0 ? es_placements : _props$placements,\n      getPopupContainer = props.getPopupContainer,\n      showAction = props.showAction,\n      hideAction = props.hideAction,\n      overlayClassName = props.overlayClassName,\n      overlayStyle = props.overlayStyle,\n      visible = props.visible,\n      _props$trigger = props.trigger,\n      trigger = _props$trigger === void 0 ? [\'hover\'] : _props$trigger,\n      otherProps = Object(objectWithoutProperties["a" /* default */])(props, ["arrow", "prefixCls", "transitionName", "animation", "align", "placement", "placements", "getPopupContainer", "showAction", "hideAction", "overlayClassName", "overlayStyle", "visible", "trigger"]);\n\n  var _React$useState = react["useState"](),\n      _React$useState2 = Object(slicedToArray["a" /* default */])(_React$useState, 2),\n      triggerVisible = _React$useState2[0],\n      setTriggerVisible = _React$useState2[1];\n\n  var mergedVisible = \'visible\' in props ? visible : triggerVisible;\n  var triggerRef = react["useRef"](null);\n  react["useImperativeHandle"](ref, function () {\n    return triggerRef.current;\n  });\n\n  var getOverlayElement = function getOverlayElement() {\n    var overlay = props.overlay;\n    var overlayElement;\n\n    if (typeof overlay === \'function\') {\n      overlayElement = overlay();\n    } else {\n      overlayElement = overlay;\n    }\n\n    return overlayElement;\n  };\n\n  var onClick = function onClick(e) {\n    var onOverlayClick = props.onOverlayClick;\n    var overlayProps = getOverlayElement().props;\n    setTriggerVisible(false);\n\n    if (onOverlayClick) {\n      onOverlayClick(e);\n    }\n\n    if (overlayProps.onClick) {\n      overlayProps.onClick(e);\n    }\n  };\n\n  var onVisibleChange = function onVisibleChange(visible) {\n    var onVisibleChange = props.onVisibleChange;\n    setTriggerVisible(visible);\n\n    if (typeof onVisibleChange === \'function\') {\n      onVisibleChange(visible);\n    }\n  };\n\n  var getMenuElement = function getMenuElement() {\n    var overlayElement = getOverlayElement();\n    var extraOverlayProps = {\n      prefixCls: "".concat(prefixCls, "-menu"),\n      onClick: onClick\n    };\n\n    if (typeof overlayElement.type === \'string\') {\n      delete extraOverlayProps.prefixCls;\n    }\n\n    return react["createElement"](react["Fragment"], null, arrow && react["createElement"]("div", {\n      className: "".concat(prefixCls, "-arrow")\n    }), react["cloneElement"](overlayElement, extraOverlayProps));\n  };\n\n  var getMenuElementOrLambda = function getMenuElementOrLambda() {\n    var overlay = props.overlay;\n\n    if (typeof overlay === \'function\') {\n      return getMenuElement;\n    }\n\n    return getMenuElement();\n  };\n\n  var getMinOverlayWidthMatchTrigger = function getMinOverlayWidthMatchTrigger() {\n    var minOverlayWidthMatchTrigger = props.minOverlayWidthMatchTrigger,\n        alignPoint = props.alignPoint;\n\n    if (\'minOverlayWidthMatchTrigger\' in props) {\n      return minOverlayWidthMatchTrigger;\n    }\n\n    return !alignPoint;\n  };\n\n  var getOpenClassName = function getOpenClassName() {\n    var openClassName = props.openClassName;\n\n    if (openClassName !== undefined) {\n      return openClassName;\n    }\n\n    return "".concat(prefixCls, "-open");\n  };\n\n  var renderChildren = function renderChildren() {\n    var children = props.children;\n    var childrenProps = children.props ? children.props : {};\n    var childClassName = classnames_default()(childrenProps.className, getOpenClassName());\n    return triggerVisible && children ? react["cloneElement"](children, {\n      className: childClassName\n    }) : children;\n  };\n\n  var triggerHideAction = hideAction;\n\n  if (!triggerHideAction && trigger.indexOf(\'contextMenu\') !== -1) {\n    triggerHideAction = [\'click\'];\n  }\n\n  return react["createElement"](es["a" /* default */], Object.assign({}, otherProps, {\n    prefixCls: prefixCls,\n    ref: triggerRef,\n    popupClassName: classnames_default()(overlayClassName, Object(defineProperty["a" /* default */])({}, "".concat(prefixCls, "-show-arrow"), arrow)),\n    popupStyle: overlayStyle,\n    builtinPlacements: placements,\n    action: trigger,\n    showAction: showAction,\n    hideAction: triggerHideAction || [],\n    popupPlacement: placement,\n    popupAlign: align,\n    popupTransitionName: transitionName,\n    popupAnimation: animation,\n    popupVisible: mergedVisible,\n    stretch: getMinOverlayWidthMatchTrigger() ? \'minWidth\' : \'\',\n    popup: getMenuElementOrLambda(),\n    onPopupVisibleChange: onVisibleChange,\n    getPopupContainer: getPopupContainer\n  }), renderChildren());\n}\n\n/* harmony default export */ var es_Dropdown = (react["forwardRef"](Dropdown));\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-dropdown/es/index.js\n\n/* harmony default export */ var rc_dropdown_es = __webpack_exports__["a"] = (es_Dropdown);\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/rc-dropdown/es/index.js_+_2_modules?')},"JBn+":function(module,exports,__webpack_require__){eval('var MapCache = __webpack_require__("hyzI"),\n    setCacheAdd = __webpack_require__("qjF7"),\n    setCacheHas = __webpack_require__("cEmw");\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nmodule.exports = SetCache;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_SetCache.js?')},JNqh:function(module,exports,__webpack_require__){eval("var isKeyable = __webpack_require__(\"6UKJ\");\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_getMapData.js?")},KCLV:function(module,exports,__webpack_require__){eval('var Symbol = __webpack_require__("Syyo");\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_getRawTag.js?')},L6um:function(module,exports){eval("/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_stackHas.js?")},LzM7:function(module,exports,__webpack_require__){eval('var assocIndexOf = __webpack_require__("6QIk");\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_listCacheSet.js?')},"MSM+":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return useControlledState; });\n/* harmony import */ var _babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("zygG");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("q1tI");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\nfunction useControlledState(defaultStateValue, option) {\n  var _ref = option || {},\n      defaultValue = _ref.defaultValue,\n      value = _ref.value,\n      onChange = _ref.onChange,\n      postState = _ref.postState;\n\n  var _React$useState = react__WEBPACK_IMPORTED_MODULE_1__["useState"](function () {\n    if (value !== undefined) {\n      return value;\n    }\n\n    if (defaultValue !== undefined) {\n      return typeof defaultValue === \'function\' ? defaultValue() : defaultValue;\n    }\n\n    return typeof defaultStateValue === \'function\' ? defaultStateValue() : defaultStateValue;\n  }),\n      _React$useState2 = Object(_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(_React$useState, 2),\n      innerValue = _React$useState2[0],\n      setInnerValue = _React$useState2[1];\n\n  var mergedValue = value !== undefined ? value : innerValue;\n\n  if (postState) {\n    mergedValue = postState(mergedValue);\n  }\n\n  function triggerChange(newValue) {\n    setInnerValue(newValue);\n\n    if (mergedValue !== newValue && onChange) {\n      onChange(newValue, mergedValue);\n    }\n  } // Effect of reset value to `undefined`\n\n\n  var firstRenderRef = react__WEBPACK_IMPORTED_MODULE_1__["useRef"](true);\n  react__WEBPACK_IMPORTED_MODULE_1__["useEffect"](function () {\n    if (firstRenderRef.current) {\n      firstRenderRef.current = false;\n      return;\n    }\n\n    if (value === undefined) {\n      setInnerValue(value);\n    }\n  }, [value]);\n  return [mergedValue, triggerChange];\n}\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/rc-util/es/hooks/useMergedState.js?')},NYSw:function(module,exports,__webpack_require__){eval('var baseIsEqualDeep = __webpack_require__("BqUW"),\n    isObjectLike = __webpack_require__("tLQN");\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_baseIsEqual.js?')},OBn4:function(module,exports,__webpack_require__){eval('var getNative = __webpack_require__("vxC8"),\n    root = __webpack_require__("IBsm");\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, \'Set\');\n\nmodule.exports = Set;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_Set.js?')},OtNC:function(module,exports,__webpack_require__){eval('var overArg = __webpack_require__("TAtK");\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_nativeKeys.js?')},Pu0A:function(module,exports){eval('//\nmodule.exports = function shallowEqual(objA, objB, compare, compareContext) {\n  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;\n\n  if (ret !== void 0) {\n    return !!ret;\n  }\n\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== "object" || !objA || typeof objB !== "object" || !objB) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB); // Test for A\'s keys different from B.\n\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key)) {\n      return false;\n    }\n\n    var valueA = objA[key];\n    var valueB = objB[key];\n    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;\n\n    if (ret === false || ret === void 0 && valueA !== valueB) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/shallowequal/index.js?')},QF3D:function(module,exports,__webpack_require__){eval('var getNative = __webpack_require__("vxC8"),\n    root = __webpack_require__("IBsm");\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, \'DataView\');\n\nmodule.exports = DataView;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_DataView.js?')},QMz8:function(module,exports,__webpack_require__){eval('var nativeCreate = __webpack_require__("5pfJ");\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_hashHas.js?')},Qd2C:function(module,exports,__webpack_require__){eval('var baseIsTypedArray = __webpack_require__("7/jS"),\n    baseUnary = __webpack_require__("SU8Q"),\n    nodeUtil = __webpack_require__("T6vp");\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/isTypedArray.js?')},"QsI/":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _asyncToGenerator; });\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js?')},R3gn:function(module,exports,__webpack_require__){eval("var Symbol = __webpack_require__(\"Syyo\"),\n    Uint8Array = __webpack_require__(\"mGzy\"),\n    eq = __webpack_require__(\"pPzx\"),\n    equalArrays = __webpack_require__(\"ZZ+W\"),\n    mapToArray = __webpack_require__(\"aURW\"),\n    setToArray = __webpack_require__(\"XlL0\");\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nmodule.exports = equalByTag;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_equalByTag.js?")},RNlM:function(module,exports,__webpack_require__){eval('var ListCache = __webpack_require__("+ooz");\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nmodule.exports = stackClear;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_stackClear.js?')},S0iI:function(module,exports){eval("/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_cacheHas.js?")},SU8Q:function(module,exports){eval("/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_baseUnary.js?")},SfYC:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony import */ var _Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("BoRD");\n/* harmony import */ var _Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("jem/");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("q1tI");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var prism_react_renderer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("mkj/");\n/* harmony import */ var dumi_theme__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("2tE6");\n/* harmony import */ var dumi_theme__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(dumi_theme__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var prismjs_themes_prism_css__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("U/75");\n/* harmony import */ var prismjs_themes_prism_css__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(prismjs_themes_prism_css__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _SourceCode_less__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("aiQL");\n/* harmony import */ var _SourceCode_less__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_SourceCode_less__WEBPACK_IMPORTED_MODULE_6__);\n\n\n\n\n\n\n\n/**\n * define DSL which can be highlighted as similar language\n */\n\nvar SIMILAR_DSL = {\n  acss: \'css\',\n  axml: \'xml\'\n};\n/* harmony default export */ __webpack_exports__["a"] = (_ref => {\n  var code = _ref.code,\n      lang = _ref.lang,\n      _ref$showCopy = _ref.showCopy,\n      showCopy = _ref$showCopy === void 0 ? true : _ref$showCopy;\n\n  var _useCopy = Object(dumi_theme__WEBPACK_IMPORTED_MODULE_4__["useCopy"])(),\n      _useCopy2 = Object(_Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(_useCopy, 2),\n      copyCode = _useCopy2[0],\n      copyStatus = _useCopy2[1];\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("div", {\n    className: "__dumi-default-code-block"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(prism_react_renderer__WEBPACK_IMPORTED_MODULE_3__[/* default */ "a"], Object(_Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])({}, prism_react_renderer__WEBPACK_IMPORTED_MODULE_3__[/* defaultProps */ "b"], {\n    code: code,\n    language: SIMILAR_DSL[lang] || lang,\n    theme: undefined\n  }), _ref2 => {\n    var className = _ref2.className,\n        style = _ref2.style,\n        tokens = _ref2.tokens,\n        getLineProps = _ref2.getLineProps,\n        getTokenProps = _ref2.getTokenProps;\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("pre", {\n      className: className,\n      style: style\n    }, showCopy && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("button", {\n      className: "__dumi-default-icon __dumi-default-code-block-copy-btn",\n      "data-status": copyStatus,\n      onClick: () => copyCode(code)\n    }), tokens.map((line, i) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("div", getLineProps({\n      line,\n      key: i\n    }), line.map((token, key) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("span", getTokenProps({\n      token,\n      key\n    }))))));\n  }));\n});\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/dumi-theme-default/src/builtins/SourceCode.tsx?')},Syyo:function(module,exports,__webpack_require__){eval('var root = __webpack_require__("IBsm");\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_Symbol.js?')},T6vp:function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(module) {var freeGlobal = __webpack_require__(\"e93E\");\n\n/** Detect free variable `exports`. */\nvar freeExports =  true && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(\"oi7r\")(module)))\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_nodeUtil.js?")},TAtK:function(module,exports){eval("/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_overArg.js?")},Tv3l:function(module,exports,__webpack_require__){eval('var hashClear = __webpack_require__("2Fbm"),\n    hashDelete = __webpack_require__("VPai"),\n    hashGet = __webpack_require__("+fUG"),\n    hashHas = __webpack_require__("QMz8"),\n    hashSet = __webpack_require__("mUsV");\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype[\'delete\'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_Hash.js?')},"U/75":function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/prismjs/themes/prism.css?")},V8Cu:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, "a", function() { return /* reexport */ TabPane; });\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@babel/runtime/helpers/esm/extends.js\nvar esm_extends = __webpack_require__("cxan");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@babel/runtime/helpers/esm/defineProperty.js\nvar defineProperty = __webpack_require__("zjfJ");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 1 modules\nvar slicedToArray = __webpack_require__("zygG");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@babel/runtime/helpers/esm/typeof.js\nvar esm_typeof = __webpack_require__("4wDe");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\nvar objectWithoutProperties = __webpack_require__("HbGN");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\nvar objectSpread2 = __webpack_require__("Czhu");\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__("q1tI");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/classnames/index.js\nvar classnames = __webpack_require__("O94r");\nvar classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/rc-util/es/Children/toArray.js\nvar toArray = __webpack_require__("6Qj0");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/rc-util/es/isMobile.js\nvar isMobile = __webpack_require__("gh9N");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/rc-util/es/hooks/useMergedState.js\nvar useMergedState = __webpack_require__("MSM+");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js + 2 modules\nvar toConsumableArray = __webpack_require__("fGyu");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/rc-util/es/raf.js\nvar raf = __webpack_require__("jiyB");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/rc-resize-observer/es/index.js\nvar es = __webpack_require__("8sde");\n\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-tabs/es/hooks/useRaf.js\n\n\n\nfunction useRaf(callback) {\n  var rafRef = Object(react["useRef"])();\n  var removedRef = Object(react["useRef"])(false);\n\n  function trigger() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (!removedRef.current) {\n      raf["a" /* default */].cancel(rafRef.current);\n      rafRef.current = Object(raf["a" /* default */])(function () {\n        callback.apply(void 0, args);\n      });\n    }\n  }\n\n  Object(react["useEffect"])(function () {\n    return function () {\n      removedRef.current = true;\n      raf["a" /* default */].cancel(rafRef.current);\n    };\n  }, []);\n  return trigger;\n}\nfunction useRafState(defaultState) {\n  var batchRef = Object(react["useRef"])([]);\n\n  var _useState = Object(react["useState"])({}),\n      _useState2 = Object(slicedToArray["a" /* default */])(_useState, 2),\n      forceUpdate = _useState2[1];\n\n  var state = Object(react["useRef"])(typeof defaultState === \'function\' ? defaultState() : defaultState);\n  var flushUpdate = useRaf(function () {\n    var current = state.current;\n    batchRef.current.forEach(function (callback) {\n      current = callback(current);\n    });\n    batchRef.current = [];\n    state.current = current;\n    forceUpdate({});\n  });\n\n  function updater(callback) {\n    batchRef.current.push(callback);\n    flushUpdate();\n  }\n\n  return [state.current, updater];\n}\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/rc-util/es/KeyCode.js\nvar KeyCode = __webpack_require__("tmJt");\n\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-tabs/es/TabNavList/TabNode.js\n\n\n\n\n\nfunction TabNode(_ref, ref) {\n  var _classNames;\n\n  var prefixCls = _ref.prefixCls,\n      id = _ref.id,\n      active = _ref.active,\n      _ref$tab = _ref.tab,\n      key = _ref$tab.key,\n      tab = _ref$tab.tab,\n      disabled = _ref$tab.disabled,\n      closeIcon = _ref$tab.closeIcon,\n      closable = _ref.closable,\n      renderWrapper = _ref.renderWrapper,\n      removeAriaLabel = _ref.removeAriaLabel,\n      editable = _ref.editable,\n      onClick = _ref.onClick,\n      onRemove = _ref.onRemove,\n      onFocus = _ref.onFocus,\n      style = _ref.style,\n      className = _ref.className;\n  var tabPrefix = "".concat(prefixCls, "-tab");\n  react["useEffect"](function () {\n    return onRemove;\n  }, []);\n  var removable = editable && closable !== false && !disabled;\n\n  function onInternalClick(e) {\n    if (disabled) {\n      return;\n    }\n\n    onClick(e);\n  }\n\n  function onRemoveTab(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    editable.onEdit(\'remove\', {\n      key: key,\n      event: event\n    });\n  }\n\n  var node = /*#__PURE__*/react["createElement"]("div", {\n    key: key,\n    ref: ref,\n    className: classnames_default()(tabPrefix, className, (_classNames = {}, Object(defineProperty["a" /* default */])(_classNames, "".concat(tabPrefix, "-with-remove"), removable), Object(defineProperty["a" /* default */])(_classNames, "".concat(tabPrefix, "-active"), active), Object(defineProperty["a" /* default */])(_classNames, "".concat(tabPrefix, "-disabled"), disabled), _classNames)),\n    style: style,\n    onClick: onInternalClick\n  }, /*#__PURE__*/react["createElement"]("div", {\n    role: "tab",\n    "aria-selected": active,\n    id: id && "".concat(id, "-tab-").concat(key),\n    className: "".concat(tabPrefix, "-btn"),\n    "aria-controls": id && "".concat(id, "-panel-").concat(key),\n    "aria-disabled": disabled,\n    tabIndex: disabled ? null : 0,\n    onClick: function onClick(e) {\n      e.stopPropagation();\n      onInternalClick(e);\n    },\n    onKeyDown: function onKeyDown(e) {\n      if ([KeyCode["a" /* default */].SPACE, KeyCode["a" /* default */].ENTER].includes(e.which)) {\n        e.preventDefault();\n        onInternalClick(e);\n      }\n    },\n    onFocus: onFocus\n  }, tab), removable && /*#__PURE__*/react["createElement"]("button", {\n    type: "button",\n    "aria-label": removeAriaLabel || \'remove\',\n    tabIndex: 0,\n    className: "".concat(tabPrefix, "-remove"),\n    onClick: function onClick(e) {\n      e.stopPropagation();\n      onRemoveTab(e);\n    }\n  }, closeIcon || editable.removeIcon || \'\xd7\'));\n  return renderWrapper ? renderWrapper(node) : node;\n}\n\n/* harmony default export */ var TabNavList_TabNode = (/*#__PURE__*/react["forwardRef"](TabNode));\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-tabs/es/hooks/useOffsets.js\n\n\nvar DEFAULT_SIZE = {\n  width: 0,\n  height: 0,\n  left: 0,\n  top: 0\n};\nfunction useOffsets(tabs, tabSizes, holderScrollWidth) {\n  return Object(react["useMemo"])(function () {\n    var _tabs$;\n\n    var map = new Map();\n    var lastOffset = tabSizes.get((_tabs$ = tabs[0]) === null || _tabs$ === void 0 ? void 0 : _tabs$.key) || DEFAULT_SIZE;\n    var rightOffset = lastOffset.left + lastOffset.width;\n\n    for (var i = 0; i < tabs.length; i += 1) {\n      var key = tabs[i].key;\n      var data = tabSizes.get(key); // Reuse last one when not exist yet\n\n      if (!data) {\n        var _tabs;\n\n        data = tabSizes.get((_tabs = tabs[i - 1]) === null || _tabs === void 0 ? void 0 : _tabs.key) || DEFAULT_SIZE;\n      }\n\n      var entity = map.get(key) || Object(objectSpread2["a" /* default */])({}, data); // Right\n\n\n      entity.right = rightOffset - entity.left - entity.width; // Update entity\n\n      map.set(key, entity);\n    }\n\n    return map;\n  }, [tabs.map(function (tab) {\n    return tab.key;\n  }).join(\'_\'), tabSizes, holderScrollWidth]);\n}\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-tabs/es/hooks/useVisibleRange.js\n\nvar useVisibleRange_DEFAULT_SIZE = {\n  width: 0,\n  height: 0,\n  left: 0,\n  top: 0,\n  right: 0\n};\nfunction useVisibleRange(tabOffsets, containerSize, tabContentNodeSize, addNodeSize, _ref) {\n  var tabs = _ref.tabs,\n      tabPosition = _ref.tabPosition,\n      rtl = _ref.rtl;\n  var unit;\n  var position;\n  var transformSize;\n\n  if ([\'top\', \'bottom\'].includes(tabPosition)) {\n    unit = \'width\';\n    position = rtl ? \'right\' : \'left\';\n    transformSize = Math.abs(containerSize.left);\n  } else {\n    unit = \'height\';\n    position = \'top\';\n    transformSize = -containerSize.top;\n  }\n\n  var basicSize = containerSize[unit];\n  var tabContentSize = tabContentNodeSize[unit];\n  var addSize = addNodeSize[unit];\n  var mergedBasicSize = basicSize;\n\n  if (tabContentSize + addSize > basicSize) {\n    mergedBasicSize = basicSize - addSize;\n  }\n\n  return Object(react["useMemo"])(function () {\n    if (!tabs.length) {\n      return [0, 0];\n    }\n\n    var len = tabs.length;\n    var endIndex = len;\n\n    for (var i = 0; i < len; i += 1) {\n      var offset = tabOffsets.get(tabs[i].key) || useVisibleRange_DEFAULT_SIZE;\n\n      if (offset[position] + offset[unit] > transformSize + mergedBasicSize) {\n        endIndex = i - 1;\n        break;\n      }\n    }\n\n    var startIndex = 0;\n\n    for (var _i = len - 1; _i >= 0; _i -= 1) {\n      var _offset = tabOffsets.get(tabs[_i].key) || useVisibleRange_DEFAULT_SIZE;\n\n      if (_offset[position] < transformSize) {\n        startIndex = _i + 1;\n        break;\n      }\n    }\n\n    return [startIndex, endIndex];\n  }, [tabOffsets, transformSize, mergedBasicSize, tabPosition, tabs.map(function (tab) {\n    return tab.key;\n  }).join(\'_\'), rtl]);\n}\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/rc-menu/es/index.js + 24 modules\nvar rc_menu_es = __webpack_require__("vvj1");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/rc-dropdown/es/index.js + 2 modules\nvar rc_dropdown_es = __webpack_require__("IjRU");\n\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-tabs/es/TabNavList/AddButton.js\n\n\nfunction AddButton(_ref, ref) {\n  var prefixCls = _ref.prefixCls,\n      editable = _ref.editable,\n      locale = _ref.locale,\n      style = _ref.style;\n\n  if (!editable || editable.showAdd === false) {\n    return null;\n  }\n\n  return /*#__PURE__*/react["createElement"]("button", {\n    ref: ref,\n    type: "button",\n    className: "".concat(prefixCls, "-nav-add"),\n    style: style,\n    "aria-label": (locale === null || locale === void 0 ? void 0 : locale.addAriaLabel) || \'Add tab\',\n    onClick: function onClick(event) {\n      editable.onEdit(\'add\', {\n        event: event\n      });\n    }\n  }, editable.addIcon || \'+\');\n}\n\n/* harmony default export */ var TabNavList_AddButton = (/*#__PURE__*/react["forwardRef"](AddButton));\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-tabs/es/TabNavList/OperationNode.js\n\n\n\n\n\n\n\n\n\n\nfunction OperationNode(_ref, ref) {\n  var prefixCls = _ref.prefixCls,\n      id = _ref.id,\n      tabs = _ref.tabs,\n      locale = _ref.locale,\n      mobile = _ref.mobile,\n      _ref$moreIcon = _ref.moreIcon,\n      moreIcon = _ref$moreIcon === void 0 ? \'More\' : _ref$moreIcon,\n      moreTransitionName = _ref.moreTransitionName,\n      style = _ref.style,\n      className = _ref.className,\n      editable = _ref.editable,\n      tabBarGutter = _ref.tabBarGutter,\n      rtl = _ref.rtl,\n      removeAriaLabel = _ref.removeAriaLabel,\n      onTabClick = _ref.onTabClick; // ======================== Dropdown ========================\n\n  var _useState = Object(react["useState"])(false),\n      _useState2 = Object(slicedToArray["a" /* default */])(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var _useState3 = Object(react["useState"])(null),\n      _useState4 = Object(slicedToArray["a" /* default */])(_useState3, 2),\n      selectedKey = _useState4[0],\n      setSelectedKey = _useState4[1];\n\n  var popupId = "".concat(id, "-more-popup");\n  var dropdownPrefix = "".concat(prefixCls, "-dropdown");\n  var selectedItemId = selectedKey !== null ? "".concat(popupId, "-").concat(selectedKey) : null;\n  var dropdownAriaLabel = locale === null || locale === void 0 ? void 0 : locale.dropdownAriaLabel;\n\n  function onRemoveTab(event, key) {\n    event.preventDefault();\n    event.stopPropagation();\n    editable.onEdit(\'remove\', {\n      key: key,\n      event: event\n    });\n  }\n\n  var menu = /*#__PURE__*/react["createElement"](rc_menu_es["b" /* default */], {\n    onClick: function onClick(_ref2) {\n      var key = _ref2.key,\n          domEvent = _ref2.domEvent;\n      onTabClick(key, domEvent);\n      setOpen(false);\n    },\n    id: popupId,\n    tabIndex: -1,\n    role: "listbox",\n    "aria-activedescendant": selectedItemId,\n    selectedKeys: [selectedKey],\n    "aria-label": dropdownAriaLabel !== undefined ? dropdownAriaLabel : \'expanded dropdown\'\n  }, tabs.map(function (tab) {\n    var removable = editable && tab.closable !== false && !tab.disabled;\n    return /*#__PURE__*/react["createElement"](rc_menu_es["a" /* MenuItem */], {\n      key: tab.key,\n      id: "".concat(popupId, "-").concat(tab.key),\n      role: "option",\n      "aria-controls": id && "".concat(id, "-panel-").concat(tab.key),\n      disabled: tab.disabled\n    }, /*#__PURE__*/react["createElement"]("span", null, tab.tab), removable && /*#__PURE__*/react["createElement"]("button", {\n      type: "button",\n      "aria-label": removeAriaLabel || \'remove\',\n      tabIndex: 0,\n      className: "".concat(dropdownPrefix, "-menu-item-remove"),\n      onClick: function onClick(e) {\n        e.stopPropagation();\n        onRemoveTab(e, tab.key);\n      }\n    }, tab.closeIcon || editable.removeIcon || \'\xd7\'));\n  }));\n\n  function selectOffset(offset) {\n    var enabledTabs = tabs.filter(function (tab) {\n      return !tab.disabled;\n    });\n    var selectedIndex = enabledTabs.findIndex(function (tab) {\n      return tab.key === selectedKey;\n    }) || 0;\n    var len = enabledTabs.length;\n\n    for (var i = 0; i < len; i += 1) {\n      selectedIndex = (selectedIndex + offset + len) % len;\n      var tab = enabledTabs[selectedIndex];\n\n      if (!tab.disabled) {\n        setSelectedKey(tab.key);\n        return;\n      }\n    }\n  }\n\n  function onKeyDown(e) {\n    var which = e.which;\n\n    if (!open) {\n      if ([KeyCode["a" /* default */].DOWN, KeyCode["a" /* default */].SPACE, KeyCode["a" /* default */].ENTER].includes(which)) {\n        setOpen(true);\n        e.preventDefault();\n      }\n\n      return;\n    }\n\n    switch (which) {\n      case KeyCode["a" /* default */].UP:\n        selectOffset(-1);\n        e.preventDefault();\n        break;\n\n      case KeyCode["a" /* default */].DOWN:\n        selectOffset(1);\n        e.preventDefault();\n        break;\n\n      case KeyCode["a" /* default */].ESC:\n        setOpen(false);\n        break;\n\n      case KeyCode["a" /* default */].SPACE:\n      case KeyCode["a" /* default */].ENTER:\n        if (selectedKey !== null) onTabClick(selectedKey, e);\n        break;\n    }\n  } // ========================= Effect =========================\n\n\n  Object(react["useEffect"])(function () {\n    // We use query element here to avoid React strict warning\n    var ele = document.getElementById(selectedItemId);\n\n    if (ele && ele.scrollIntoView) {\n      ele.scrollIntoView(false);\n    }\n  }, [selectedKey]);\n  Object(react["useEffect"])(function () {\n    if (!open) {\n      setSelectedKey(null);\n    }\n  }, [open]); // ========================= Render =========================\n\n  var moreStyle = Object(defineProperty["a" /* default */])({}, rtl ? \'marginRight\' : \'marginLeft\', tabBarGutter);\n\n  if (!tabs.length) {\n    moreStyle.visibility = \'hidden\';\n    moreStyle.order = 1;\n  }\n\n  var overlayClassName = classnames_default()(Object(defineProperty["a" /* default */])({}, "".concat(dropdownPrefix, "-rtl"), rtl));\n  var moreNode = mobile ? null : /*#__PURE__*/react["createElement"](rc_dropdown_es["a" /* default */], {\n    prefixCls: dropdownPrefix,\n    overlay: menu,\n    trigger: [\'hover\'],\n    visible: open,\n    transitionName: moreTransitionName,\n    onVisibleChange: setOpen,\n    overlayClassName: overlayClassName,\n    mouseEnterDelay: 0.1,\n    mouseLeaveDelay: 0.1\n  }, /*#__PURE__*/react["createElement"]("button", {\n    type: "button",\n    className: "".concat(prefixCls, "-nav-more"),\n    style: moreStyle,\n    tabIndex: -1,\n    "aria-hidden": "true",\n    "aria-haspopup": "listbox",\n    "aria-controls": popupId,\n    id: "".concat(id, "-more"),\n    "aria-expanded": open,\n    onKeyDown: onKeyDown\n  }, moreIcon));\n  return /*#__PURE__*/react["createElement"]("div", {\n    className: classnames_default()("".concat(prefixCls, "-nav-operations"), className),\n    style: style,\n    ref: ref\n  }, moreNode, /*#__PURE__*/react["createElement"](TabNavList_AddButton, {\n    prefixCls: prefixCls,\n    locale: locale,\n    editable: editable\n  }));\n}\n\n/* harmony default export */ var TabNavList_OperationNode = (/*#__PURE__*/react["memo"]( /*#__PURE__*/react["forwardRef"](OperationNode), function (_, next) {\n  return (// https://github.com/ant-design/ant-design/issues/32544\n    // We\'d better remove syntactic sugar in `rc-menu` since this has perf issue\n    next.tabMoving\n  );\n}));\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-tabs/es/TabContext.js\n\n/* harmony default export */ var TabContext = (/*#__PURE__*/Object(react["createContext"])(null));\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-tabs/es/hooks/useTouchMove.js\n\n\n\nvar MIN_SWIPE_DISTANCE = 0.1;\nvar STOP_SWIPE_DISTANCE = 0.01;\nvar REFRESH_INTERVAL = 20;\nvar SPEED_OFF_MULTIPLE = Math.pow(0.995, REFRESH_INTERVAL); // ================================= Hook =================================\n\nfunction useTouchMove(ref, onOffset) {\n  var _useState = Object(react["useState"])(),\n      _useState2 = Object(slicedToArray["a" /* default */])(_useState, 2),\n      touchPosition = _useState2[0],\n      setTouchPosition = _useState2[1];\n\n  var _useState3 = Object(react["useState"])(0),\n      _useState4 = Object(slicedToArray["a" /* default */])(_useState3, 2),\n      lastTimestamp = _useState4[0],\n      setLastTimestamp = _useState4[1];\n\n  var _useState5 = Object(react["useState"])(0),\n      _useState6 = Object(slicedToArray["a" /* default */])(_useState5, 2),\n      lastTimeDiff = _useState6[0],\n      setLastTimeDiff = _useState6[1];\n\n  var _useState7 = Object(react["useState"])(),\n      _useState8 = Object(slicedToArray["a" /* default */])(_useState7, 2),\n      lastOffset = _useState8[0],\n      setLastOffset = _useState8[1];\n\n  var motionRef = Object(react["useRef"])(); // ========================= Events =========================\n  // >>> Touch events\n\n  function onTouchStart(e) {\n    var _e$touches$ = e.touches[0],\n        screenX = _e$touches$.screenX,\n        screenY = _e$touches$.screenY;\n    setTouchPosition({\n      x: screenX,\n      y: screenY\n    });\n    window.clearInterval(motionRef.current);\n  }\n\n  function onTouchMove(e) {\n    if (!touchPosition) return;\n    e.preventDefault();\n    var _e$touches$2 = e.touches[0],\n        screenX = _e$touches$2.screenX,\n        screenY = _e$touches$2.screenY;\n    setTouchPosition({\n      x: screenX,\n      y: screenY\n    });\n    var offsetX = screenX - touchPosition.x;\n    var offsetY = screenY - touchPosition.y;\n    onOffset(offsetX, offsetY);\n    var now = Date.now();\n    setLastTimestamp(now);\n    setLastTimeDiff(now - lastTimestamp);\n    setLastOffset({\n      x: offsetX,\n      y: offsetY\n    });\n  }\n\n  function onTouchEnd() {\n    if (!touchPosition) return;\n    setTouchPosition(null);\n    setLastOffset(null); // Swipe if needed\n\n    if (lastOffset) {\n      var distanceX = lastOffset.x / lastTimeDiff;\n      var distanceY = lastOffset.y / lastTimeDiff;\n      var absX = Math.abs(distanceX);\n      var absY = Math.abs(distanceY); // Skip swipe if low distance\n\n      if (Math.max(absX, absY) < MIN_SWIPE_DISTANCE) return;\n      var currentX = distanceX;\n      var currentY = distanceY;\n      motionRef.current = window.setInterval(function () {\n        if (Math.abs(currentX) < STOP_SWIPE_DISTANCE && Math.abs(currentY) < STOP_SWIPE_DISTANCE) {\n          window.clearInterval(motionRef.current);\n          return;\n        }\n\n        currentX *= SPEED_OFF_MULTIPLE;\n        currentY *= SPEED_OFF_MULTIPLE;\n        onOffset(currentX * REFRESH_INTERVAL, currentY * REFRESH_INTERVAL);\n      }, REFRESH_INTERVAL);\n    }\n  } // >>> Wheel event\n\n\n  var lastWheelDirectionRef = Object(react["useRef"])();\n\n  function onWheel(e) {\n    var deltaX = e.deltaX,\n        deltaY = e.deltaY; // Convert both to x & y since wheel only happened on PC\n\n    var mixed = 0;\n    var absX = Math.abs(deltaX);\n    var absY = Math.abs(deltaY);\n\n    if (absX === absY) {\n      mixed = lastWheelDirectionRef.current === \'x\' ? deltaX : deltaY;\n    } else if (absX > absY) {\n      mixed = deltaX;\n      lastWheelDirectionRef.current = \'x\';\n    } else {\n      mixed = deltaY;\n      lastWheelDirectionRef.current = \'y\';\n    }\n\n    if (onOffset(-mixed, -mixed)) {\n      e.preventDefault();\n    }\n  } // ========================= Effect =========================\n\n\n  var touchEventsRef = Object(react["useRef"])(null);\n  touchEventsRef.current = {\n    onTouchStart: onTouchStart,\n    onTouchMove: onTouchMove,\n    onTouchEnd: onTouchEnd,\n    onWheel: onWheel\n  };\n  react["useEffect"](function () {\n    function onProxyTouchStart(e) {\n      touchEventsRef.current.onTouchStart(e);\n    }\n\n    function onProxyTouchMove(e) {\n      touchEventsRef.current.onTouchMove(e);\n    }\n\n    function onProxyTouchEnd(e) {\n      touchEventsRef.current.onTouchEnd(e);\n    }\n\n    function onProxyWheel(e) {\n      touchEventsRef.current.onWheel(e);\n    }\n\n    document.addEventListener(\'touchmove\', onProxyTouchMove, {\n      passive: false\n    });\n    document.addEventListener(\'touchend\', onProxyTouchEnd, {\n      passive: false\n    }); // No need to clean up since element removed\n\n    ref.current.addEventListener(\'touchstart\', onProxyTouchStart, {\n      passive: false\n    });\n    ref.current.addEventListener(\'wheel\', onProxyWheel);\n    return function () {\n      document.removeEventListener(\'touchmove\', onProxyTouchMove);\n      document.removeEventListener(\'touchend\', onProxyTouchEnd);\n    };\n  }, []);\n}\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-tabs/es/hooks/useRefs.js\n\n\nfunction useRefs() {\n  var cacheRefs = Object(react["useRef"])(new Map());\n\n  function getRef(key) {\n    if (!cacheRefs.current.has(key)) {\n      cacheRefs.current.set(key, /*#__PURE__*/react["createRef"]());\n    }\n\n    return cacheRefs.current.get(key);\n  }\n\n  function removeRef(key) {\n    cacheRefs.current["delete"](key);\n  }\n\n  return [getRef, removeRef];\n}\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-tabs/es/hooks/useSyncState.js\n\n\nfunction useSyncState(defaultState, onChange) {\n  var stateRef = react["useRef"](defaultState);\n\n  var _React$useState = react["useState"]({}),\n      _React$useState2 = Object(slicedToArray["a" /* default */])(_React$useState, 2),\n      forceUpdate = _React$useState2[1];\n\n  function setState(updater) {\n    var newValue = typeof updater === \'function\' ? updater(stateRef.current) : updater;\n\n    if (newValue !== stateRef.current) {\n      onChange(newValue, stateRef.current);\n    }\n\n    stateRef.current = newValue;\n    forceUpdate({});\n  }\n\n  return [stateRef.current, setState];\n}\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-tabs/es/TabNavList/index.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar TabNavList_ExtraContent = function ExtraContent(_ref) {\n  var position = _ref.position,\n      prefixCls = _ref.prefixCls,\n      extra = _ref.extra;\n  if (!extra) return null;\n  var content; // Parse extra\n\n  var assertExtra = {};\n\n  if (extra && Object(esm_typeof["a" /* default */])(extra) === \'object\' && ! /*#__PURE__*/react["isValidElement"](extra)) {\n    assertExtra = extra;\n  } else {\n    assertExtra.right = extra;\n  }\n\n  if (position === \'right\') {\n    content = assertExtra.right;\n  }\n\n  if (position === \'left\') {\n    content = assertExtra.left;\n  }\n\n  return content ? /*#__PURE__*/react["createElement"]("div", {\n    className: "".concat(prefixCls, "-extra-content")\n  }, content) : null;\n};\n\nfunction TabNavList(props, ref) {\n  var _classNames;\n\n  var _React$useContext = react["useContext"](TabContext),\n      prefixCls = _React$useContext.prefixCls,\n      tabs = _React$useContext.tabs;\n\n  var className = props.className,\n      style = props.style,\n      id = props.id,\n      animated = props.animated,\n      activeKey = props.activeKey,\n      rtl = props.rtl,\n      extra = props.extra,\n      editable = props.editable,\n      locale = props.locale,\n      tabPosition = props.tabPosition,\n      tabBarGutter = props.tabBarGutter,\n      children = props.children,\n      onTabClick = props.onTabClick,\n      onTabScroll = props.onTabScroll;\n  var tabsWrapperRef = Object(react["useRef"])();\n  var tabListRef = Object(react["useRef"])();\n  var operationsRef = Object(react["useRef"])();\n  var innerAddButtonRef = Object(react["useRef"])();\n\n  var _useRefs = useRefs(),\n      _useRefs2 = Object(slicedToArray["a" /* default */])(_useRefs, 2),\n      getBtnRef = _useRefs2[0],\n      removeBtnRef = _useRefs2[1];\n\n  var tabPositionTopOrBottom = tabPosition === \'top\' || tabPosition === \'bottom\';\n\n  var _useSyncState = useSyncState(0, function (next, prev) {\n    if (tabPositionTopOrBottom && onTabScroll) {\n      onTabScroll({\n        direction: next > prev ? \'left\' : \'right\'\n      });\n    }\n  }),\n      _useSyncState2 = Object(slicedToArray["a" /* default */])(_useSyncState, 2),\n      transformLeft = _useSyncState2[0],\n      setTransformLeft = _useSyncState2[1];\n\n  var _useSyncState3 = useSyncState(0, function (next, prev) {\n    if (!tabPositionTopOrBottom && onTabScroll) {\n      onTabScroll({\n        direction: next > prev ? \'top\' : \'bottom\'\n      });\n    }\n  }),\n      _useSyncState4 = Object(slicedToArray["a" /* default */])(_useSyncState3, 2),\n      transformTop = _useSyncState4[0],\n      setTransformTop = _useSyncState4[1];\n\n  var _useState = Object(react["useState"])(0),\n      _useState2 = Object(slicedToArray["a" /* default */])(_useState, 2),\n      wrapperScrollWidth = _useState2[0],\n      setWrapperScrollWidth = _useState2[1];\n\n  var _useState3 = Object(react["useState"])(0),\n      _useState4 = Object(slicedToArray["a" /* default */])(_useState3, 2),\n      wrapperScrollHeight = _useState4[0],\n      setWrapperScrollHeight = _useState4[1];\n\n  var _useState5 = Object(react["useState"])(0),\n      _useState6 = Object(slicedToArray["a" /* default */])(_useState5, 2),\n      wrapperContentWidth = _useState6[0],\n      setWrapperContentWidth = _useState6[1];\n\n  var _useState7 = Object(react["useState"])(0),\n      _useState8 = Object(slicedToArray["a" /* default */])(_useState7, 2),\n      wrapperContentHeight = _useState8[0],\n      setWrapperContentHeight = _useState8[1];\n\n  var _useState9 = Object(react["useState"])(null),\n      _useState10 = Object(slicedToArray["a" /* default */])(_useState9, 2),\n      wrapperWidth = _useState10[0],\n      setWrapperWidth = _useState10[1];\n\n  var _useState11 = Object(react["useState"])(null),\n      _useState12 = Object(slicedToArray["a" /* default */])(_useState11, 2),\n      wrapperHeight = _useState12[0],\n      setWrapperHeight = _useState12[1];\n\n  var _useState13 = Object(react["useState"])(0),\n      _useState14 = Object(slicedToArray["a" /* default */])(_useState13, 2),\n      addWidth = _useState14[0],\n      setAddWidth = _useState14[1];\n\n  var _useState15 = Object(react["useState"])(0),\n      _useState16 = Object(slicedToArray["a" /* default */])(_useState15, 2),\n      addHeight = _useState16[0],\n      setAddHeight = _useState16[1];\n\n  var _useRafState = useRafState(new Map()),\n      _useRafState2 = Object(slicedToArray["a" /* default */])(_useRafState, 2),\n      tabSizes = _useRafState2[0],\n      setTabSizes = _useRafState2[1];\n\n  var tabOffsets = useOffsets(tabs, tabSizes, wrapperScrollWidth); // ========================== Util =========================\n\n  var operationsHiddenClassName = "".concat(prefixCls, "-nav-operations-hidden");\n  var transformMin = 0;\n  var transformMax = 0;\n\n  if (!tabPositionTopOrBottom) {\n    transformMin = Math.min(0, wrapperHeight - wrapperScrollHeight);\n    transformMax = 0;\n  } else if (rtl) {\n    transformMin = 0;\n    transformMax = Math.max(0, wrapperScrollWidth - wrapperWidth);\n  } else {\n    transformMin = Math.min(0, wrapperWidth - wrapperScrollWidth);\n    transformMax = 0;\n  }\n\n  function alignInRange(value) {\n    if (value < transformMin) {\n      return transformMin;\n    }\n\n    if (value > transformMax) {\n      return transformMax;\n    }\n\n    return value;\n  } // ========================= Mobile ========================\n\n\n  var touchMovingRef = Object(react["useRef"])();\n\n  var _useState17 = Object(react["useState"])(),\n      _useState18 = Object(slicedToArray["a" /* default */])(_useState17, 2),\n      lockAnimation = _useState18[0],\n      setLockAnimation = _useState18[1];\n\n  function doLockAnimation() {\n    setLockAnimation(Date.now());\n  }\n\n  function clearTouchMoving() {\n    window.clearTimeout(touchMovingRef.current);\n  }\n\n  useTouchMove(tabsWrapperRef, function (offsetX, offsetY) {\n    function doMove(setState, offset) {\n      setState(function (value) {\n        var newValue = alignInRange(value + offset);\n        return newValue;\n      });\n    }\n\n    if (tabPositionTopOrBottom) {\n      // Skip scroll if place is enough\n      if (wrapperWidth >= wrapperScrollWidth) {\n        return false;\n      }\n\n      doMove(setTransformLeft, offsetX);\n    } else {\n      if (wrapperHeight >= wrapperScrollHeight) {\n        return false;\n      }\n\n      doMove(setTransformTop, offsetY);\n    }\n\n    clearTouchMoving();\n    doLockAnimation();\n    return true;\n  });\n  Object(react["useEffect"])(function () {\n    clearTouchMoving();\n\n    if (lockAnimation) {\n      touchMovingRef.current = window.setTimeout(function () {\n        setLockAnimation(0);\n      }, 100);\n    }\n\n    return clearTouchMoving;\n  }, [lockAnimation]); // ========================= Scroll ========================\n\n  function scrollToTab() {\n    var key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : activeKey;\n    var tabOffset = tabOffsets.get(key) || {\n      width: 0,\n      height: 0,\n      left: 0,\n      right: 0,\n      top: 0\n    };\n\n    if (tabPositionTopOrBottom) {\n      // ============ Align with top & bottom ============\n      var newTransform = transformLeft; // RTL\n\n      if (rtl) {\n        if (tabOffset.right < transformLeft) {\n          newTransform = tabOffset.right;\n        } else if (tabOffset.right + tabOffset.width > transformLeft + wrapperWidth) {\n          newTransform = tabOffset.right + tabOffset.width - wrapperWidth;\n        }\n      } // LTR\n      else if (tabOffset.left < -transformLeft) {\n          newTransform = -tabOffset.left;\n        } else if (tabOffset.left + tabOffset.width > -transformLeft + wrapperWidth) {\n          newTransform = -(tabOffset.left + tabOffset.width - wrapperWidth);\n        }\n\n      setTransformTop(0);\n      setTransformLeft(alignInRange(newTransform));\n    } else {\n      // ============ Align with left & right ============\n      var _newTransform = transformTop;\n\n      if (tabOffset.top < -transformTop) {\n        _newTransform = -tabOffset.top;\n      } else if (tabOffset.top + tabOffset.height > -transformTop + wrapperHeight) {\n        _newTransform = -(tabOffset.top + tabOffset.height - wrapperHeight);\n      }\n\n      setTransformLeft(0);\n      setTransformTop(alignInRange(_newTransform));\n    }\n  } // ========================== Tab ==========================\n  // Render tab node & collect tab offset\n\n\n  var _useVisibleRange = useVisibleRange(tabOffsets, {\n    width: wrapperWidth,\n    height: wrapperHeight,\n    left: transformLeft,\n    top: transformTop\n  }, {\n    width: wrapperContentWidth,\n    height: wrapperContentHeight\n  }, {\n    width: addWidth,\n    height: addHeight\n  }, Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({}, props), {}, {\n    tabs: tabs\n  })),\n      _useVisibleRange2 = Object(slicedToArray["a" /* default */])(_useVisibleRange, 2),\n      visibleStart = _useVisibleRange2[0],\n      visibleEnd = _useVisibleRange2[1];\n\n  var tabNodeStyle = {};\n\n  if (tabPosition === \'top\' || tabPosition === \'bottom\') {\n    tabNodeStyle[rtl ? \'marginRight\' : \'marginLeft\'] = tabBarGutter;\n  } else {\n    tabNodeStyle.marginTop = tabBarGutter;\n  }\n\n  var tabNodes = tabs.map(function (tab, i) {\n    var key = tab.key,\n        tabClassName = tab.className;\n    return /*#__PURE__*/react["createElement"](TabNavList_TabNode, {\n      id: id,\n      prefixCls: prefixCls,\n      key: key,\n      tab: tab\n      /* first node should not have margin left */\n      ,\n      style: i === 0 ? undefined : tabNodeStyle,\n      className: tabClassName,\n      closable: tab.closable,\n      editable: editable,\n      active: key === activeKey,\n      renderWrapper: children,\n      removeAriaLabel: locale === null || locale === void 0 ? void 0 : locale.removeAriaLabel,\n      ref: getBtnRef(key),\n      onClick: function onClick(e) {\n        onTabClick(key, e);\n      },\n      onRemove: function onRemove() {\n        removeBtnRef(key);\n      },\n      onFocus: function onFocus() {\n        scrollToTab(key);\n        doLockAnimation();\n\n        if (!tabsWrapperRef.current) {\n          return;\n        } // Focus element will make scrollLeft change which we should reset back\n\n\n        if (!rtl) {\n          tabsWrapperRef.current.scrollLeft = 0;\n        }\n\n        tabsWrapperRef.current.scrollTop = 0;\n      }\n    });\n  });\n  var onListHolderResize = useRaf(function () {\n    var _tabsWrapperRef$curre, _tabsWrapperRef$curre2, _innerAddButtonRef$cu, _innerAddButtonRef$cu2, _operationsRef$curren, _operationsRef$curren2, _tabListRef$current, _tabListRef$current2, _operationsRef$curren3; // Update wrapper records\n\n\n    var offsetWidth = ((_tabsWrapperRef$curre = tabsWrapperRef.current) === null || _tabsWrapperRef$curre === void 0 ? void 0 : _tabsWrapperRef$curre.offsetWidth) || 0;\n    var offsetHeight = ((_tabsWrapperRef$curre2 = tabsWrapperRef.current) === null || _tabsWrapperRef$curre2 === void 0 ? void 0 : _tabsWrapperRef$curre2.offsetHeight) || 0;\n    var newAddWidth = ((_innerAddButtonRef$cu = innerAddButtonRef.current) === null || _innerAddButtonRef$cu === void 0 ? void 0 : _innerAddButtonRef$cu.offsetWidth) || 0;\n    var newAddHeight = ((_innerAddButtonRef$cu2 = innerAddButtonRef.current) === null || _innerAddButtonRef$cu2 === void 0 ? void 0 : _innerAddButtonRef$cu2.offsetHeight) || 0;\n    var newOperationWidth = ((_operationsRef$curren = operationsRef.current) === null || _operationsRef$curren === void 0 ? void 0 : _operationsRef$curren.offsetWidth) || 0;\n    var newOperationHeight = ((_operationsRef$curren2 = operationsRef.current) === null || _operationsRef$curren2 === void 0 ? void 0 : _operationsRef$curren2.offsetHeight) || 0;\n    setWrapperWidth(offsetWidth);\n    setWrapperHeight(offsetHeight);\n    setAddWidth(newAddWidth);\n    setAddHeight(newAddHeight);\n    var newWrapperScrollWidth = (((_tabListRef$current = tabListRef.current) === null || _tabListRef$current === void 0 ? void 0 : _tabListRef$current.offsetWidth) || 0) - newAddWidth;\n    var newWrapperScrollHeight = (((_tabListRef$current2 = tabListRef.current) === null || _tabListRef$current2 === void 0 ? void 0 : _tabListRef$current2.offsetHeight) || 0) - newAddHeight;\n    setWrapperScrollWidth(newWrapperScrollWidth);\n    setWrapperScrollHeight(newWrapperScrollHeight);\n    var isOperationHidden = (_operationsRef$curren3 = operationsRef.current) === null || _operationsRef$curren3 === void 0 ? void 0 : _operationsRef$curren3.className.includes(operationsHiddenClassName);\n    setWrapperContentWidth(newWrapperScrollWidth - (isOperationHidden ? 0 : newOperationWidth));\n    setWrapperContentHeight(newWrapperScrollHeight - (isOperationHidden ? 0 : newOperationHeight)); // Update buttons records\n\n    setTabSizes(function () {\n      var newSizes = new Map();\n      tabs.forEach(function (_ref2) {\n        var key = _ref2.key;\n        var btnNode = getBtnRef(key).current;\n\n        if (btnNode) {\n          newSizes.set(key, {\n            width: btnNode.offsetWidth,\n            height: btnNode.offsetHeight,\n            left: btnNode.offsetLeft,\n            top: btnNode.offsetTop\n          });\n        }\n      });\n      return newSizes;\n    });\n  }); // ======================== Dropdown =======================\n\n  var startHiddenTabs = tabs.slice(0, visibleStart);\n  var endHiddenTabs = tabs.slice(visibleEnd + 1);\n  var hiddenTabs = [].concat(Object(toConsumableArray["a" /* default */])(startHiddenTabs), Object(toConsumableArray["a" /* default */])(endHiddenTabs)); // =================== Link & Operations ===================\n\n  var _useState19 = Object(react["useState"])(),\n      _useState20 = Object(slicedToArray["a" /* default */])(_useState19, 2),\n      inkStyle = _useState20[0],\n      setInkStyle = _useState20[1];\n\n  var activeTabOffset = tabOffsets.get(activeKey); // Delay set ink style to avoid remove tab blink\n\n  var inkBarRafRef = Object(react["useRef"])();\n\n  function cleanInkBarRaf() {\n    raf["a" /* default */].cancel(inkBarRafRef.current);\n  }\n\n  Object(react["useEffect"])(function () {\n    var newInkStyle = {};\n\n    if (activeTabOffset) {\n      if (tabPositionTopOrBottom) {\n        if (rtl) {\n          newInkStyle.right = activeTabOffset.right;\n        } else {\n          newInkStyle.left = activeTabOffset.left;\n        }\n\n        newInkStyle.width = activeTabOffset.width;\n      } else {\n        newInkStyle.top = activeTabOffset.top;\n        newInkStyle.height = activeTabOffset.height;\n      }\n    }\n\n    cleanInkBarRaf();\n    inkBarRafRef.current = Object(raf["a" /* default */])(function () {\n      setInkStyle(newInkStyle);\n    });\n    return cleanInkBarRaf;\n  }, [activeTabOffset, tabPositionTopOrBottom, rtl]); // ========================= Effect ========================\n\n  Object(react["useEffect"])(function () {\n    scrollToTab();\n  }, [activeKey, activeTabOffset, tabOffsets, tabPositionTopOrBottom]); // Should recalculate when rtl changed\n\n  Object(react["useEffect"])(function () {\n    onListHolderResize();\n  }, [rtl, tabBarGutter, activeKey, tabs.map(function (tab) {\n    return tab.key;\n  }).join(\'_\')]); // ========================= Render ========================\n\n  var hasDropdown = !!hiddenTabs.length;\n  var wrapPrefix = "".concat(prefixCls, "-nav-wrap");\n  var pingLeft;\n  var pingRight;\n  var pingTop;\n  var pingBottom;\n\n  if (tabPositionTopOrBottom) {\n    if (rtl) {\n      pingRight = transformLeft > 0;\n      pingLeft = transformLeft + wrapperWidth < wrapperScrollWidth;\n    } else {\n      pingLeft = transformLeft < 0;\n      pingRight = -transformLeft + wrapperWidth < wrapperScrollWidth;\n    }\n  } else {\n    pingTop = transformTop < 0;\n    pingBottom = -transformTop + wrapperHeight < wrapperScrollHeight;\n  }\n\n  return /*#__PURE__*/react["createElement"]("div", {\n    ref: ref,\n    role: "tablist",\n    className: classnames_default()("".concat(prefixCls, "-nav"), className),\n    style: style,\n    onKeyDown: function onKeyDown() {\n      // No need animation when use keyboard\n      doLockAnimation();\n    }\n  }, /*#__PURE__*/react["createElement"](TabNavList_ExtraContent, {\n    position: "left",\n    extra: extra,\n    prefixCls: prefixCls\n  }), /*#__PURE__*/react["createElement"](es["a" /* default */], {\n    onResize: onListHolderResize\n  }, /*#__PURE__*/react["createElement"]("div", {\n    className: classnames_default()(wrapPrefix, (_classNames = {}, Object(defineProperty["a" /* default */])(_classNames, "".concat(wrapPrefix, "-ping-left"), pingLeft), Object(defineProperty["a" /* default */])(_classNames, "".concat(wrapPrefix, "-ping-right"), pingRight), Object(defineProperty["a" /* default */])(_classNames, "".concat(wrapPrefix, "-ping-top"), pingTop), Object(defineProperty["a" /* default */])(_classNames, "".concat(wrapPrefix, "-ping-bottom"), pingBottom), _classNames)),\n    ref: tabsWrapperRef\n  }, /*#__PURE__*/react["createElement"](es["a" /* default */], {\n    onResize: onListHolderResize\n  }, /*#__PURE__*/react["createElement"]("div", {\n    ref: tabListRef,\n    className: "".concat(prefixCls, "-nav-list"),\n    style: {\n      transform: "translate(".concat(transformLeft, "px, ").concat(transformTop, "px)"),\n      transition: lockAnimation ? \'none\' : undefined\n    }\n  }, tabNodes, /*#__PURE__*/react["createElement"](TabNavList_AddButton, {\n    ref: innerAddButtonRef,\n    prefixCls: prefixCls,\n    locale: locale,\n    editable: editable,\n    style: Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({}, tabNodes.length === 0 ? undefined : tabNodeStyle), {}, {\n      visibility: hasDropdown ? \'hidden\' : null\n    })\n  }), /*#__PURE__*/react["createElement"]("div", {\n    className: classnames_default()("".concat(prefixCls, "-ink-bar"), Object(defineProperty["a" /* default */])({}, "".concat(prefixCls, "-ink-bar-animated"), animated.inkBar)),\n    style: inkStyle\n  }))))), /*#__PURE__*/react["createElement"](TabNavList_OperationNode, Object(esm_extends["a" /* default */])({}, props, {\n    removeAriaLabel: locale === null || locale === void 0 ? void 0 : locale.removeAriaLabel,\n    ref: operationsRef,\n    prefixCls: prefixCls,\n    tabs: hiddenTabs,\n    className: !hasDropdown && operationsHiddenClassName,\n    tabMoving: !!lockAnimation\n  })), /*#__PURE__*/react["createElement"](TabNavList_ExtraContent, {\n    position: "right",\n    extra: extra,\n    prefixCls: prefixCls\n  }));\n  /* eslint-enable */\n}\n\n/* harmony default export */ var es_TabNavList = (/*#__PURE__*/react["forwardRef"](TabNavList));\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-tabs/es/TabPanelList/index.js\n\n\n\n\nfunction TabPanelList(_ref) {\n  var id = _ref.id,\n      activeKey = _ref.activeKey,\n      animated = _ref.animated,\n      tabPosition = _ref.tabPosition,\n      rtl = _ref.rtl,\n      destroyInactiveTabPane = _ref.destroyInactiveTabPane;\n\n  var _React$useContext = react["useContext"](TabContext),\n      prefixCls = _React$useContext.prefixCls,\n      tabs = _React$useContext.tabs;\n\n  var tabPaneAnimated = animated.tabPane;\n  var activeIndex = tabs.findIndex(function (tab) {\n    return tab.key === activeKey;\n  });\n  return /*#__PURE__*/react["createElement"]("div", {\n    className: classnames_default()("".concat(prefixCls, "-content-holder"))\n  }, /*#__PURE__*/react["createElement"]("div", {\n    className: classnames_default()("".concat(prefixCls, "-content"), "".concat(prefixCls, "-content-").concat(tabPosition), Object(defineProperty["a" /* default */])({}, "".concat(prefixCls, "-content-animated"), tabPaneAnimated)),\n    style: activeIndex && tabPaneAnimated ? Object(defineProperty["a" /* default */])({}, rtl ? \'marginRight\' : \'marginLeft\', "-".concat(activeIndex, "00%")) : null\n  }, tabs.map(function (tab) {\n    return /*#__PURE__*/react["cloneElement"](tab.node, {\n      key: tab.key,\n      prefixCls: prefixCls,\n      tabKey: tab.key,\n      id: id,\n      animated: tabPaneAnimated,\n      active: tab.key === activeKey,\n      destroyInactiveTabPane: destroyInactiveTabPane\n    });\n  })));\n}\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-tabs/es/TabPanelList/TabPane.js\n\n\n\n\nfunction TabPane(_ref) {\n  var prefixCls = _ref.prefixCls,\n      forceRender = _ref.forceRender,\n      className = _ref.className,\n      style = _ref.style,\n      id = _ref.id,\n      active = _ref.active,\n      animated = _ref.animated,\n      destroyInactiveTabPane = _ref.destroyInactiveTabPane,\n      tabKey = _ref.tabKey,\n      children = _ref.children;\n\n  var _React$useState = react["useState"](forceRender),\n      _React$useState2 = Object(slicedToArray["a" /* default */])(_React$useState, 2),\n      visited = _React$useState2[0],\n      setVisited = _React$useState2[1];\n\n  react["useEffect"](function () {\n    if (active) {\n      setVisited(true);\n    } else if (destroyInactiveTabPane) {\n      setVisited(false);\n    }\n  }, [active, destroyInactiveTabPane]);\n  var mergedStyle = {};\n\n  if (!active) {\n    if (animated) {\n      mergedStyle.visibility = \'hidden\';\n      mergedStyle.height = 0;\n      mergedStyle.overflowY = \'hidden\';\n    } else {\n      mergedStyle.display = \'none\';\n    }\n  }\n\n  return /*#__PURE__*/react["createElement"]("div", {\n    id: id && "".concat(id, "-panel-").concat(tabKey),\n    role: "tabpanel",\n    tabIndex: active ? 0 : -1,\n    "aria-labelledby": id && "".concat(id, "-tab-").concat(tabKey),\n    "aria-hidden": !active,\n    style: Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({}, mergedStyle), style),\n    className: classnames_default()("".concat(prefixCls, "-tabpane"), active && "".concat(prefixCls, "-tabpane-active"), className)\n  }, (active || visited || forceRender) && children);\n}\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-tabs/es/Tabs.js\n\n\n\n\n\n\nvar _excluded = ["id", "prefixCls", "className", "children", "direction", "activeKey", "defaultActiveKey", "editable", "animated", "tabPosition", "tabBarGutter", "tabBarStyle", "tabBarExtraContent", "locale", "moreIcon", "moreTransitionName", "destroyInactiveTabPane", "renderTabBar", "onChange", "onTabClick", "onTabScroll"]; // Accessibility https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/Tab_Role\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Should added antd:\n * - type\n *\n * Removed:\n * - onNextClick\n * - onPrevClick\n * - keyboard\n */\n// Used for accessibility\n\nvar uuid = 0;\n\nfunction parseTabList(children) {\n  return Object(toArray["a" /* default */])(children).map(function (node) {\n    if ( /*#__PURE__*/react["isValidElement"](node)) {\n      var key = node.key !== undefined ? String(node.key) : undefined;\n      return Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({\n        key: key\n      }, node.props), {}, {\n        node: node\n      });\n    }\n\n    return null;\n  }).filter(function (tab) {\n    return tab;\n  });\n}\n\nfunction Tabs(_ref, ref) {\n  var _classNames;\n\n  var id = _ref.id,\n      _ref$prefixCls = _ref.prefixCls,\n      prefixCls = _ref$prefixCls === void 0 ? \'rc-tabs\' : _ref$prefixCls,\n      className = _ref.className,\n      children = _ref.children,\n      direction = _ref.direction,\n      activeKey = _ref.activeKey,\n      defaultActiveKey = _ref.defaultActiveKey,\n      editable = _ref.editable,\n      _ref$animated = _ref.animated,\n      animated = _ref$animated === void 0 ? {\n    inkBar: true,\n    tabPane: false\n  } : _ref$animated,\n      _ref$tabPosition = _ref.tabPosition,\n      tabPosition = _ref$tabPosition === void 0 ? \'top\' : _ref$tabPosition,\n      tabBarGutter = _ref.tabBarGutter,\n      tabBarStyle = _ref.tabBarStyle,\n      tabBarExtraContent = _ref.tabBarExtraContent,\n      locale = _ref.locale,\n      moreIcon = _ref.moreIcon,\n      moreTransitionName = _ref.moreTransitionName,\n      destroyInactiveTabPane = _ref.destroyInactiveTabPane,\n      renderTabBar = _ref.renderTabBar,\n      onChange = _ref.onChange,\n      onTabClick = _ref.onTabClick,\n      onTabScroll = _ref.onTabScroll,\n      restProps = Object(objectWithoutProperties["a" /* default */])(_ref, _excluded);\n\n  var tabs = parseTabList(children);\n  var rtl = direction === \'rtl\';\n  var mergedAnimated;\n\n  if (animated === false) {\n    mergedAnimated = {\n      inkBar: false,\n      tabPane: false\n    };\n  } else if (animated === true) {\n    mergedAnimated = {\n      inkBar: true,\n      tabPane: true\n    };\n  } else {\n    mergedAnimated = Object(objectSpread2["a" /* default */])({\n      inkBar: true,\n      tabPane: false\n    }, Object(esm_typeof["a" /* default */])(animated) === \'object\' ? animated : {});\n  } // ======================== Mobile ========================\n\n\n  var _useState = Object(react["useState"])(false),\n      _useState2 = Object(slicedToArray["a" /* default */])(_useState, 2),\n      mobile = _useState2[0],\n      setMobile = _useState2[1];\n\n  Object(react["useEffect"])(function () {\n    // Only update on the client side\n    setMobile(Object(isMobile["a" /* default */])());\n  }, []); // ====================== Active Key ======================\n\n  var _useMergedState = Object(useMergedState["a" /* default */])(function () {\n    var _tabs$;\n\n    return (_tabs$ = tabs[0]) === null || _tabs$ === void 0 ? void 0 : _tabs$.key;\n  }, {\n    value: activeKey,\n    defaultValue: defaultActiveKey\n  }),\n      _useMergedState2 = Object(slicedToArray["a" /* default */])(_useMergedState, 2),\n      mergedActiveKey = _useMergedState2[0],\n      setMergedActiveKey = _useMergedState2[1];\n\n  var _useState3 = Object(react["useState"])(function () {\n    return tabs.findIndex(function (tab) {\n      return tab.key === mergedActiveKey;\n    });\n  }),\n      _useState4 = Object(slicedToArray["a" /* default */])(_useState3, 2),\n      activeIndex = _useState4[0],\n      setActiveIndex = _useState4[1]; // Reset active key if not exist anymore\n\n\n  Object(react["useEffect"])(function () {\n    var newActiveIndex = tabs.findIndex(function (tab) {\n      return tab.key === mergedActiveKey;\n    });\n\n    if (newActiveIndex === -1) {\n      var _tabs$newActiveIndex;\n\n      newActiveIndex = Math.max(0, Math.min(activeIndex, tabs.length - 1));\n      setMergedActiveKey((_tabs$newActiveIndex = tabs[newActiveIndex]) === null || _tabs$newActiveIndex === void 0 ? void 0 : _tabs$newActiveIndex.key);\n    }\n\n    setActiveIndex(newActiveIndex);\n  }, [tabs.map(function (tab) {\n    return tab.key;\n  }).join(\'_\'), mergedActiveKey, activeIndex]); // ===================== Accessibility ====================\n\n  var _useMergedState3 = Object(useMergedState["a" /* default */])(null, {\n    value: id\n  }),\n      _useMergedState4 = Object(slicedToArray["a" /* default */])(_useMergedState3, 2),\n      mergedId = _useMergedState4[0],\n      setMergedId = _useMergedState4[1];\n\n  var mergedTabPosition = tabPosition;\n\n  if (mobile && ![\'left\', \'right\'].includes(tabPosition)) {\n    mergedTabPosition = \'top\';\n  } // Async generate id to avoid ssr mapping failed\n\n\n  Object(react["useEffect"])(function () {\n    if (!id) {\n      setMergedId("rc-tabs-".concat( false ? undefined : uuid));\n      uuid += 1;\n    }\n  }, []); // ======================== Events ========================\n\n  function onInternalTabClick(key, e) {\n    onTabClick === null || onTabClick === void 0 ? void 0 : onTabClick(key, e);\n    setMergedActiveKey(key);\n    onChange === null || onChange === void 0 ? void 0 : onChange(key);\n  } // ======================== Render ========================\n\n\n  var sharedProps = {\n    id: mergedId,\n    activeKey: mergedActiveKey,\n    animated: mergedAnimated,\n    tabPosition: mergedTabPosition,\n    rtl: rtl,\n    mobile: mobile\n  };\n  var tabNavBar;\n\n  var tabNavBarProps = Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({}, sharedProps), {}, {\n    editable: editable,\n    locale: locale,\n    moreIcon: moreIcon,\n    moreTransitionName: moreTransitionName,\n    tabBarGutter: tabBarGutter,\n    onTabClick: onInternalTabClick,\n    onTabScroll: onTabScroll,\n    extra: tabBarExtraContent,\n    style: tabBarStyle,\n    panes: children\n  });\n\n  if (renderTabBar) {\n    tabNavBar = renderTabBar(tabNavBarProps, es_TabNavList);\n  } else {\n    tabNavBar = /*#__PURE__*/react["createElement"](es_TabNavList, tabNavBarProps);\n  }\n\n  return /*#__PURE__*/react["createElement"](TabContext.Provider, {\n    value: {\n      tabs: tabs,\n      prefixCls: prefixCls\n    }\n  }, /*#__PURE__*/react["createElement"]("div", Object(esm_extends["a" /* default */])({\n    ref: ref,\n    id: id,\n    className: classnames_default()(prefixCls, "".concat(prefixCls, "-").concat(mergedTabPosition), (_classNames = {}, Object(defineProperty["a" /* default */])(_classNames, "".concat(prefixCls, "-mobile"), mobile), Object(defineProperty["a" /* default */])(_classNames, "".concat(prefixCls, "-editable"), editable), Object(defineProperty["a" /* default */])(_classNames, "".concat(prefixCls, "-rtl"), rtl), _classNames), className)\n  }, restProps), tabNavBar, /*#__PURE__*/react["createElement"](TabPanelList, Object(esm_extends["a" /* default */])({\n    destroyInactiveTabPane: destroyInactiveTabPane\n  }, sharedProps, {\n    animated: mergedAnimated\n  }))));\n}\n\nvar ForwardTabs = /*#__PURE__*/react["forwardRef"](Tabs);\nForwardTabs.TabPane = TabPane;\n/* harmony default export */ var es_Tabs = (ForwardTabs);\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-tabs/es/index.js\n\n\n\n/* harmony default export */ var rc_tabs_es = __webpack_exports__["b"] = (es_Tabs);\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/rc-tabs/es/index.js_+_14_modules?')},VPai:function(module,exports){eval("/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_hashDelete.js?")},VtSi:function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__("figL");\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/@babel/runtime/regenerator/index.js?')},W0vE:function(module,exports){eval("/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_arrayFilter.js?")},Wloh:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _arrayLikeToArray; });\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js?')},X4R2:function(module,exports){eval("/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/stubArray.js?")},XlL0:function(module,exports){eval("/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_setToArray.js?")},"Yu/1":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("q1tI");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("i8i4");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _Dom_canUseDom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("3yBb");\n\n\n\nvar Portal = /*#__PURE__*/Object(react__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])(function (props, ref) {\n  var didUpdate = props.didUpdate,\n      getContainer = props.getContainer,\n      children = props.children;\n  var containerRef = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])(); // Ref return nothing, only for wrapper check exist\n\n  Object(react__WEBPACK_IMPORTED_MODULE_0__["useImperativeHandle"])(ref, function () {\n    return {};\n  }); // Create container in client side with sync to avoid useEffect not get ref\n\n  var initRef = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])(false);\n\n  if (!initRef.current && Object(_Dom_canUseDom__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])()) {\n    containerRef.current = getContainer();\n    initRef.current = true;\n  } // [Legacy] Used by `rc-trigger`\n\n\n  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(function () {\n    didUpdate === null || didUpdate === void 0 ? void 0 : didUpdate(props);\n  });\n  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(function () {\n    return function () {\n      var _containerRef$current, _containerRef$current2; // [Legacy] This should not be handle by Portal but parent PortalWrapper instead.\n      // Since some component use `Portal` directly, we have to keep the logic here.\n\n\n      (_containerRef$current = containerRef.current) === null || _containerRef$current === void 0 ? void 0 : (_containerRef$current2 = _containerRef$current.parentNode) === null || _containerRef$current2 === void 0 ? void 0 : _containerRef$current2.removeChild(containerRef.current);\n    };\n  }, []);\n  return containerRef.current ? /*#__PURE__*/react_dom__WEBPACK_IMPORTED_MODULE_1___default.a.createPortal(children, containerRef.current) : null;\n});\n/* harmony default export */ __webpack_exports__["a"] = (Portal);\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/rc-util/es/Portal.js?')},"ZZ+W":function(module,exports,__webpack_require__){eval('var SetCache = __webpack_require__("JBn+"),\n    arraySome = __webpack_require__("myUI"),\n    cacheHas = __webpack_require__("S0iI");\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Check that cyclic values are equal.\n  var arrStacked = stack.get(array);\n  var othStacked = stack.get(other);\n  if (arrStacked && othStacked) {\n    return arrStacked == other && othStacked == array;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack[\'delete\'](array);\n  stack[\'delete\'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_equalArrays.js?')},aURW:function(module,exports){eval("/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_mapToArray.js?")},aiQL:function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/dumi-theme-default/src/builtins/SourceCode.less?")},bvyN:function(module,exports,__webpack_require__){eval("var baseIsArguments = __webpack_require__(\"/30y\"),\n    isObjectLike = __webpack_require__(\"tLQN\");\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/isArguments.js?")},c18h:function(module,exports){eval("/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_toSource.js?")},c9Qg:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony default export */ __webpack_exports__["a"] = (function (element) {\n  if (!element) {\n    return false;\n  }\n\n  if (element.offsetParent) {\n    return true;\n  }\n\n  if (element.getBBox) {\n    var box = element.getBBox();\n\n    if (box.width || box.height) {\n      return true;\n    }\n  }\n\n  if (element.getBoundingClientRect) {\n    var _box = element.getBoundingClientRect();\n\n    if (_box.width || _box.height) {\n      return true;\n    }\n  }\n\n  return false;\n});\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/rc-util/es/Dom/isVisible.js?')},cEmw:function(module,exports){eval("/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_setCacheHas.js?")},d0UJ:function(module,exports,__webpack_require__){eval("var getMapData = __webpack_require__(\"JNqh\");\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_mapCacheDelete.js?")},e63W:function(module,exports,__webpack_require__){eval('var getMapData = __webpack_require__("JNqh");\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_mapCacheSet.js?')},e93E:function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(\"y4hX\")))\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_freeGlobal.js?")},eask:function(module,exports,__webpack_require__){eval('var getMapData = __webpack_require__("JNqh");\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_mapCacheGet.js?')},fGyu:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, "a", function() { return /* binding */ _toConsumableArray; });\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js\nvar arrayLikeToArray = __webpack_require__("lEbO");\n\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return Object(arrayLikeToArray["a" /* default */])(arr);\n}\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@babel/runtime/helpers/esm/iterableToArray.js\nvar iterableToArray = __webpack_require__("5x5+");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js\nvar unsupportedIterableToArray = __webpack_require__("HO86");\n\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js\nfunction _nonIterableSpread() {\n  throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n}\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\n\n\n\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || Object(iterableToArray["a" /* default */])(arr) || Object(unsupportedIterableToArray["a" /* default */])(arr) || _nonIterableSpread();\n}\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js_+_2_modules?')},gh9N:function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony default export */ __webpack_exports__[\"a\"] = (function () {\n  if (typeof navigator === 'undefined' || typeof window === 'undefined') {\n    return false;\n  }\n\n  var agent = navigator.userAgent || navigator.vendor || window.opera;\n\n  if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(agent) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(agent === null || agent === void 0 ? void 0 : agent.substr(0, 4))) {\n    return true;\n  }\n\n  return false;\n});\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/rc-util/es/isMobile.js?")},"h/vM":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("\n// UNUSED EXPORTS: generateTrigger\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\nvar objectSpread2 = __webpack_require__(\"Czhu\");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@babel/runtime/helpers/esm/extends.js\nvar esm_extends = __webpack_require__(\"cxan\");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\nvar classCallCheck = __webpack_require__(\"9fIP\");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@babel/runtime/helpers/esm/createClass.js\nvar createClass = __webpack_require__(\"MMYH\");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\nvar assertThisInitialized = __webpack_require__(\"pWxA\");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@babel/runtime/helpers/esm/inherits.js\nvar inherits = __webpack_require__(\"8K1b\");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@babel/runtime/helpers/esm/createSuper.js + 2 modules\nvar createSuper = __webpack_require__(\"AqVP\");\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(\"q1tI\");\nvar react_default = /*#__PURE__*/__webpack_require__.n(react);\n\n// EXTERNAL MODULE: ./node_modules/react-dom/index.js\nvar react_dom = __webpack_require__(\"i8i4\");\nvar react_dom_default = /*#__PURE__*/__webpack_require__.n(react_dom);\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/rc-util/es/raf.js\nvar raf = __webpack_require__(\"jiyB\");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/rc-util/es/Dom/contains.js\nvar contains = __webpack_require__(\"ioev\");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/rc-util/es/Dom/findDOMNode.js\nvar findDOMNode = __webpack_require__(\"uO0T\");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/rc-util/es/ref.js\nvar es_ref = __webpack_require__(\"uwWy\");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/rc-util/es/Dom/addEventListener.js\nvar addEventListener = __webpack_require__(\"ty86\");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/rc-util/es/Portal.js\nvar Portal = __webpack_require__(\"Yu/1\");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/classnames/index.js\nvar classnames = __webpack_require__(\"O94r\");\nvar classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);\n\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-trigger/es/utils/alignUtil.js\n\n\nfunction isPointsEq(a1, a2, isAlignPoint) {\n  if (isAlignPoint) {\n    return a1[0] === a2[0];\n  }\n\n  return a1[0] === a2[0] && a1[1] === a2[1];\n}\n\nfunction getAlignFromPlacement(builtinPlacements, placementStr, align) {\n  var baseAlign = builtinPlacements[placementStr] || {};\n  return Object(objectSpread2[\"a\" /* default */])(Object(objectSpread2[\"a\" /* default */])({}, baseAlign), align);\n}\nfunction getAlignPopupClassName(builtinPlacements, prefixCls, align, isAlignPoint) {\n  var points = align.points;\n  var placements = Object.keys(builtinPlacements);\n\n  for (var i = 0; i < placements.length; i += 1) {\n    var placement = placements[i];\n\n    if (isPointsEq(builtinPlacements[placement].points, points, isAlignPoint)) {\n      return \"\".concat(prefixCls, \"-placement-\").concat(placement);\n    }\n  }\n\n  return '';\n}\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 1 modules\nvar slicedToArray = __webpack_require__(\"zygG\");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\nvar objectWithoutProperties = __webpack_require__(\"HbGN\");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/rc-util/es/isMobile.js\nvar isMobile = __webpack_require__(\"gh9N\");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/rc-motion/es/index.js + 12 modules\nvar es = __webpack_require__(\"B5SY\");\n\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-trigger/es/utils/legacyUtil.js\nfunction getMotion(_ref) {\n  var prefixCls = _ref.prefixCls,\n      motion = _ref.motion,\n      animation = _ref.animation,\n      transitionName = _ref.transitionName;\n\n  if (motion) {\n    return motion;\n  }\n\n  if (animation) {\n    return {\n      motionName: \"\".concat(prefixCls, \"-\").concat(animation)\n    };\n  }\n\n  if (transitionName) {\n    return {\n      motionName: transitionName\n    };\n  }\n\n  return null;\n}\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-trigger/es/Popup/Mask.js\n\n\n\n\n\n\nfunction Mask(props) {\n  var prefixCls = props.prefixCls,\n      visible = props.visible,\n      zIndex = props.zIndex,\n      mask = props.mask,\n      maskMotion = props.maskMotion,\n      maskAnimation = props.maskAnimation,\n      maskTransitionName = props.maskTransitionName;\n\n  if (!mask) {\n    return null;\n  }\n\n  var motion = {};\n\n  if (maskMotion || maskTransitionName || maskAnimation) {\n    motion = Object(objectSpread2[\"a\" /* default */])({\n      motionAppear: true\n    }, getMotion({\n      motion: maskMotion,\n      prefixCls: prefixCls,\n      transitionName: maskTransitionName,\n      animation: maskAnimation\n    }));\n  }\n\n  return /*#__PURE__*/react[\"createElement\"](es[\"b\" /* default */], Object(esm_extends[\"a\" /* default */])({}, motion, {\n    visible: visible,\n    removeOnLeave: true\n  }), function (_ref) {\n    var className = _ref.className;\n    return /*#__PURE__*/react[\"createElement\"](\"div\", {\n      style: {\n        zIndex: zIndex\n      },\n      className: classnames_default()(\"\".concat(prefixCls, \"-mask\"), className)\n    });\n  });\n}\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@babel/runtime/helpers/esm/typeof.js\nvar esm_typeof = __webpack_require__(\"4wDe\");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/rc-util/es/Dom/isVisible.js\nvar isVisible = __webpack_require__(\"c9Qg\");\n\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/dom-align/dist-web/index.js\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar vendorPrefix;\nvar jsCssMap = {\n  Webkit: '-webkit-',\n  Moz: '-moz-',\n  // IE did it wrong again ...\n  ms: '-ms-',\n  O: '-o-'\n};\n\nfunction getVendorPrefix() {\n  if (vendorPrefix !== undefined) {\n    return vendorPrefix;\n  }\n\n  vendorPrefix = '';\n  var style = document.createElement('p').style;\n  var testProp = 'Transform';\n\n  for (var key in jsCssMap) {\n    if (key + testProp in style) {\n      vendorPrefix = key;\n    }\n  }\n\n  return vendorPrefix;\n}\n\nfunction getTransitionName() {\n  return getVendorPrefix() ? \"\".concat(getVendorPrefix(), \"TransitionProperty\") : 'transitionProperty';\n}\n\nfunction getTransformName() {\n  return getVendorPrefix() ? \"\".concat(getVendorPrefix(), \"Transform\") : 'transform';\n}\n\nfunction setTransitionProperty(node, value) {\n  var name = getTransitionName();\n\n  if (name) {\n    node.style[name] = value;\n\n    if (name !== 'transitionProperty') {\n      node.style.transitionProperty = value;\n    }\n  }\n}\n\nfunction setTransform(node, value) {\n  var name = getTransformName();\n\n  if (name) {\n    node.style[name] = value;\n\n    if (name !== 'transform') {\n      node.style.transform = value;\n    }\n  }\n}\n\nfunction getTransitionProperty(node) {\n  return node.style.transitionProperty || node.style[getTransitionName()];\n}\n\nfunction getTransformXY(node) {\n  var style = window.getComputedStyle(node, null);\n  var transform = style.getPropertyValue('transform') || style.getPropertyValue(getTransformName());\n\n  if (transform && transform !== 'none') {\n    var matrix = transform.replace(/[^0-9\\-.,]/g, '').split(',');\n    return {\n      x: parseFloat(matrix[12] || matrix[4], 0),\n      y: parseFloat(matrix[13] || matrix[5], 0)\n    };\n  }\n\n  return {\n    x: 0,\n    y: 0\n  };\n}\n\nvar matrix2d = /matrix\\((.*)\\)/;\nvar matrix3d = /matrix3d\\((.*)\\)/;\n\nfunction setTransformXY(node, xy) {\n  var style = window.getComputedStyle(node, null);\n  var transform = style.getPropertyValue('transform') || style.getPropertyValue(getTransformName());\n\n  if (transform && transform !== 'none') {\n    var arr;\n    var match2d = transform.match(matrix2d);\n\n    if (match2d) {\n      match2d = match2d[1];\n      arr = match2d.split(',').map(function (item) {\n        return parseFloat(item, 10);\n      });\n      arr[4] = xy.x;\n      arr[5] = xy.y;\n      setTransform(node, \"matrix(\".concat(arr.join(','), \")\"));\n    } else {\n      var match3d = transform.match(matrix3d)[1];\n      arr = match3d.split(',').map(function (item) {\n        return parseFloat(item, 10);\n      });\n      arr[12] = xy.x;\n      arr[13] = xy.y;\n      setTransform(node, \"matrix3d(\".concat(arr.join(','), \")\"));\n    }\n  } else {\n    setTransform(node, \"translateX(\".concat(xy.x, \"px) translateY(\").concat(xy.y, \"px) translateZ(0)\"));\n  }\n}\n\nvar RE_NUM = /[\\-+]?(?:\\d*\\.|)\\d+(?:[eE][\\-+]?\\d+|)/.source;\nvar getComputedStyleX; // https://stackoverflow.com/a/3485654/3040605\n\nfunction forceRelayout(elem) {\n  var originalStyle = elem.style.display;\n  elem.style.display = 'none';\n  elem.offsetHeight; // eslint-disable-line\n\n  elem.style.display = originalStyle;\n}\n\nfunction css(el, name, v) {\n  var value = v;\n\n  if (_typeof(name) === 'object') {\n    for (var i in name) {\n      if (name.hasOwnProperty(i)) {\n        css(el, i, name[i]);\n      }\n    }\n\n    return undefined;\n  }\n\n  if (typeof value !== 'undefined') {\n    if (typeof value === 'number') {\n      value = \"\".concat(value, \"px\");\n    }\n\n    el.style[name] = value;\n    return undefined;\n  }\n\n  return getComputedStyleX(el, name);\n}\n\nfunction getClientPosition(elem) {\n  var box;\n  var x;\n  var y;\n  var doc = elem.ownerDocument;\n  var body = doc.body;\n  var docElem = doc && doc.documentElement; // \u6839\u636e GBS \u6700\u65b0\u6570\u636e\uff0cA-Grade Browsers \u90fd\u5df2\u652f\u6301 getBoundingClientRect \u65b9\u6cd5\uff0c\u4e0d\u7528\u518d\u8003\u8651\u4f20\u7edf\u7684\u5b9e\u73b0\u65b9\u5f0f\n\n  box = elem.getBoundingClientRect(); // \u6ce8\uff1ajQuery \u8fd8\u8003\u8651\u51cf\u53bb docElem.clientLeft/clientTop\n  // \u4f46\u6d4b\u8bd5\u53d1\u73b0\uff0c\u8fd9\u6837\u53cd\u800c\u4f1a\u5bfc\u81f4\u5f53 html \u548c body \u6709\u8fb9\u8ddd/\u8fb9\u6846\u6837\u5f0f\u65f6\uff0c\u83b7\u53d6\u7684\u503c\u4e0d\u6b63\u786e\n  // \u6b64\u5916\uff0cie6 \u4f1a\u5ffd\u7565 html \u7684 margin \u503c\uff0c\u5e78\u8fd0\u5730\u662f\u6ca1\u6709\u8c01\u4f1a\u53bb\u8bbe\u7f6e html \u7684 margin\n\n  x = box.left;\n  y = box.top; // In IE, most of the time, 2 extra pixels are added to the top and left\n  // due to the implicit 2-pixel inset border.  In IE6/7 quirks mode and\n  // IE6 standards mode, this border can be overridden by setting the\n  // document element's border to zero -- thus, we cannot rely on the\n  // offset always being 2 pixels.\n  // In quirks mode, the offset can be determined by querying the body's\n  // clientLeft/clientTop, but in standards mode, it is found by querying\n  // the document element's clientLeft/clientTop.  Since we already called\n  // getClientBoundingRect we have already forced a reflow, so it is not\n  // too expensive just to query them all.\n  // ie \u4e0b\u5e94\u8be5\u51cf\u53bb\u7a97\u53e3\u7684\u8fb9\u6846\u5427\uff0c\u6bd5\u7adf\u9ed8\u8ba4 absolute \u90fd\u662f\u76f8\u5bf9\u7a97\u53e3\u5b9a\u4f4d\u7684\n  // \u7a97\u53e3\u8fb9\u6846\u6807\u51c6\u662f\u8bbe documentElement ,quirks \u65f6\u8bbe\u7f6e body\n  // \u6700\u597d\u7981\u6b62\u5728 body \u548c html \u4e0a\u8fb9\u6846 \uff0c\u4f46 ie < 9 html \u9ed8\u8ba4\u6709 2px \uff0c\u51cf\u53bb\n  // \u4f46\u662f\u975e ie \u4e0d\u53ef\u80fd\u8bbe\u7f6e\u7a97\u53e3\u8fb9\u6846\uff0cbody html \u4e5f\u4e0d\u662f\u7a97\u53e3 ,ie \u53ef\u4ee5\u901a\u8fc7 html,body \u8bbe\u7f6e\n  // \u6807\u51c6 ie \u4e0b docElem.clientTop \u5c31\u662f border-top\n  // ie7 html \u5373\u7a97\u53e3\u8fb9\u6846\u6539\u53d8\u4e0d\u4e86\u3002\u6c38\u8fdc\u4e3a 2\n  // \u4f46\u6807\u51c6 firefox/chrome/ie9 \u4e0b docElem.clientTop \u662f\u7a97\u53e3\u8fb9\u6846\uff0c\u5373\u4f7f\u8bbe\u4e86 border-top \u4e5f\u4e3a 0\n\n  x -= docElem.clientLeft || body.clientLeft || 0;\n  y -= docElem.clientTop || body.clientTop || 0;\n  return {\n    left: x,\n    top: y\n  };\n}\n\nfunction getScroll(w, top) {\n  var ret = w[\"page\".concat(top ? 'Y' : 'X', \"Offset\")];\n  var method = \"scroll\".concat(top ? 'Top' : 'Left');\n\n  if (typeof ret !== 'number') {\n    var d = w.document; // ie6,7,8 standard mode\n\n    ret = d.documentElement[method];\n\n    if (typeof ret !== 'number') {\n      // quirks mode\n      ret = d.body[method];\n    }\n  }\n\n  return ret;\n}\n\nfunction getScrollLeft(w) {\n  return getScroll(w);\n}\n\nfunction getScrollTop(w) {\n  return getScroll(w, true);\n}\n\nfunction getOffset(el) {\n  var pos = getClientPosition(el);\n  var doc = el.ownerDocument;\n  var w = doc.defaultView || doc.parentWindow;\n  pos.left += getScrollLeft(w);\n  pos.top += getScrollTop(w);\n  return pos;\n}\n/**\n * A crude way of determining if an object is a window\n * @member util\n */\n\n\nfunction isWindow(obj) {\n  // must use == for ie8\n\n  /* eslint eqeqeq:0 */\n  return obj !== null && obj !== undefined && obj == obj.window;\n}\n\nfunction dist_web_getDocument(node) {\n  if (isWindow(node)) {\n    return node.document;\n  }\n\n  if (node.nodeType === 9) {\n    return node;\n  }\n\n  return node.ownerDocument;\n}\n\nfunction _getComputedStyle(elem, name, cs) {\n  var computedStyle = cs;\n  var val = '';\n  var d = dist_web_getDocument(elem);\n  computedStyle = computedStyle || d.defaultView.getComputedStyle(elem, null); // https://github.com/kissyteam/kissy/issues/61\n\n  if (computedStyle) {\n    val = computedStyle.getPropertyValue(name) || computedStyle[name];\n  }\n\n  return val;\n}\n\nvar _RE_NUM_NO_PX = new RegExp(\"^(\".concat(RE_NUM, \")(?!px)[a-z%]+$\"), 'i');\n\nvar RE_POS = /^(top|right|bottom|left)$/;\nvar CURRENT_STYLE = 'currentStyle';\nvar RUNTIME_STYLE = 'runtimeStyle';\nvar LEFT = 'left';\nvar PX = 'px';\n\nfunction _getComputedStyleIE(elem, name) {\n  // currentStyle maybe null\n  // http://msdn.microsoft.com/en-us/library/ms535231.aspx\n  var ret = elem[CURRENT_STYLE] && elem[CURRENT_STYLE][name]; // \u5f53 width/height \u8bbe\u7f6e\u4e3a\u767e\u5206\u6bd4\u65f6\uff0c\u901a\u8fc7 pixelLeft \u65b9\u5f0f\u8f6c\u6362\u7684 width/height \u503c\n  // \u4e00\u5f00\u59cb\u5c31\u5904\u7406\u4e86! CUSTOM_STYLE.height,CUSTOM_STYLE.width ,cssHook \u89e3\u51b3@2011-08-19\n  // \u5728 ie \u4e0b\u4e0d\u5bf9\uff0c\u9700\u8981\u76f4\u63a5\u7528 offset \u65b9\u5f0f\n  // borderWidth \u7b49\u503c\u4e5f\u6709\u95ee\u9898\uff0c\u4f46\u8003\u8651\u5230 borderWidth \u8bbe\u4e3a\u767e\u5206\u6bd4\u7684\u6982\u7387\u5f88\u5c0f\uff0c\u8fd9\u91cc\u5c31\u4e0d\u8003\u8651\u4e86\n  // From the awesome hack by Dean Edwards\n  // http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291\n  // If we're not dealing with a regular pixel number\n  // but a number that has a weird ending, we need to convert it to pixels\n  // exclude left right for relativity\n\n  if (_RE_NUM_NO_PX.test(ret) && !RE_POS.test(name)) {\n    // Remember the original values\n    var style = elem.style;\n    var left = style[LEFT];\n    var rsLeft = elem[RUNTIME_STYLE][LEFT]; // prevent flashing of content\n\n    elem[RUNTIME_STYLE][LEFT] = elem[CURRENT_STYLE][LEFT]; // Put in the new values to get a computed value out\n\n    style[LEFT] = name === 'fontSize' ? '1em' : ret || 0;\n    ret = style.pixelLeft + PX; // Revert the changed values\n\n    style[LEFT] = left;\n    elem[RUNTIME_STYLE][LEFT] = rsLeft;\n  }\n\n  return ret === '' ? 'auto' : ret;\n}\n\nif (typeof window !== 'undefined') {\n  getComputedStyleX = window.getComputedStyle ? _getComputedStyle : _getComputedStyleIE;\n}\n\nfunction getOffsetDirection(dir, option) {\n  if (dir === 'left') {\n    return option.useCssRight ? 'right' : dir;\n  }\n\n  return option.useCssBottom ? 'bottom' : dir;\n}\n\nfunction oppositeOffsetDirection(dir) {\n  if (dir === 'left') {\n    return 'right';\n  } else if (dir === 'right') {\n    return 'left';\n  } else if (dir === 'top') {\n    return 'bottom';\n  } else if (dir === 'bottom') {\n    return 'top';\n  }\n} // \u8bbe\u7f6e elem \u76f8\u5bf9 elem.ownerDocument \u7684\u5750\u6807\n\n\nfunction setLeftTop(elem, offset, option) {\n  // set position first, in-case top/left are set even on static elem\n  if (css(elem, 'position') === 'static') {\n    elem.style.position = 'relative';\n  }\n\n  var presetH = -999;\n  var presetV = -999;\n  var horizontalProperty = getOffsetDirection('left', option);\n  var verticalProperty = getOffsetDirection('top', option);\n  var oppositeHorizontalProperty = oppositeOffsetDirection(horizontalProperty);\n  var oppositeVerticalProperty = oppositeOffsetDirection(verticalProperty);\n\n  if (horizontalProperty !== 'left') {\n    presetH = 999;\n  }\n\n  if (verticalProperty !== 'top') {\n    presetV = 999;\n  }\n\n  var originalTransition = '';\n  var originalOffset = getOffset(elem);\n\n  if ('left' in offset || 'top' in offset) {\n    originalTransition = getTransitionProperty(elem) || '';\n    setTransitionProperty(elem, 'none');\n  }\n\n  if ('left' in offset) {\n    elem.style[oppositeHorizontalProperty] = '';\n    elem.style[horizontalProperty] = \"\".concat(presetH, \"px\");\n  }\n\n  if ('top' in offset) {\n    elem.style[oppositeVerticalProperty] = '';\n    elem.style[verticalProperty] = \"\".concat(presetV, \"px\");\n  } // force relayout\n\n\n  forceRelayout(elem);\n  var old = getOffset(elem);\n  var originalStyle = {};\n\n  for (var key in offset) {\n    if (offset.hasOwnProperty(key)) {\n      var dir = getOffsetDirection(key, option);\n      var preset = key === 'left' ? presetH : presetV;\n      var off = originalOffset[key] - old[key];\n\n      if (dir === key) {\n        originalStyle[dir] = preset + off;\n      } else {\n        originalStyle[dir] = preset - off;\n      }\n    }\n  }\n\n  css(elem, originalStyle); // force relayout\n\n  forceRelayout(elem);\n\n  if ('left' in offset || 'top' in offset) {\n    setTransitionProperty(elem, originalTransition);\n  }\n\n  var ret = {};\n\n  for (var _key in offset) {\n    if (offset.hasOwnProperty(_key)) {\n      var _dir = getOffsetDirection(_key, option);\n\n      var _off = offset[_key] - originalOffset[_key];\n\n      if (_key === _dir) {\n        ret[_dir] = originalStyle[_dir] + _off;\n      } else {\n        ret[_dir] = originalStyle[_dir] - _off;\n      }\n    }\n  }\n\n  css(elem, ret);\n}\n\nfunction setTransform$1(elem, offset) {\n  var originalOffset = getOffset(elem);\n  var originalXY = getTransformXY(elem);\n  var resultXY = {\n    x: originalXY.x,\n    y: originalXY.y\n  };\n\n  if ('left' in offset) {\n    resultXY.x = originalXY.x + offset.left - originalOffset.left;\n  }\n\n  if ('top' in offset) {\n    resultXY.y = originalXY.y + offset.top - originalOffset.top;\n  }\n\n  setTransformXY(elem, resultXY);\n}\n\nfunction setOffset(elem, offset, option) {\n  if (option.ignoreShake) {\n    var oriOffset = getOffset(elem);\n    var oLeft = oriOffset.left.toFixed(0);\n    var oTop = oriOffset.top.toFixed(0);\n    var tLeft = offset.left.toFixed(0);\n    var tTop = offset.top.toFixed(0);\n\n    if (oLeft === tLeft && oTop === tTop) {\n      return;\n    }\n  }\n\n  if (option.useCssRight || option.useCssBottom) {\n    setLeftTop(elem, offset, option);\n  } else if (option.useCssTransform && getTransformName() in document.body.style) {\n    setTransform$1(elem, offset);\n  } else {\n    setLeftTop(elem, offset, option);\n  }\n}\n\nfunction each(arr, fn) {\n  for (var i = 0; i < arr.length; i++) {\n    fn(arr[i]);\n  }\n}\n\nfunction isBorderBoxFn(elem) {\n  return getComputedStyleX(elem, 'boxSizing') === 'border-box';\n}\n\nvar BOX_MODELS = ['margin', 'border', 'padding'];\nvar CONTENT_INDEX = -1;\nvar PADDING_INDEX = 2;\nvar BORDER_INDEX = 1;\nvar MARGIN_INDEX = 0;\n\nfunction swap(elem, options, callback) {\n  var old = {};\n  var style = elem.style;\n  var name; // Remember the old values, and insert the new ones\n\n  for (name in options) {\n    if (options.hasOwnProperty(name)) {\n      old[name] = style[name];\n      style[name] = options[name];\n    }\n  }\n\n  callback.call(elem); // Revert the old values\n\n  for (name in options) {\n    if (options.hasOwnProperty(name)) {\n      style[name] = old[name];\n    }\n  }\n}\n\nfunction getPBMWidth(elem, props, which) {\n  var value = 0;\n  var prop;\n  var j;\n  var i;\n\n  for (j = 0; j < props.length; j++) {\n    prop = props[j];\n\n    if (prop) {\n      for (i = 0; i < which.length; i++) {\n        var cssProp = void 0;\n\n        if (prop === 'border') {\n          cssProp = \"\".concat(prop).concat(which[i], \"Width\");\n        } else {\n          cssProp = prop + which[i];\n        }\n\n        value += parseFloat(getComputedStyleX(elem, cssProp)) || 0;\n      }\n    }\n  }\n\n  return value;\n}\n\nvar domUtils = {\n  getParent: function getParent(element) {\n    var parent = element;\n\n    do {\n      if (parent.nodeType === 11 && parent.host) {\n        parent = parent.host;\n      } else {\n        parent = parent.parentNode;\n      }\n    } while (parent && parent.nodeType !== 1 && parent.nodeType !== 9);\n\n    return parent;\n  }\n};\neach(['Width', 'Height'], function (name) {\n  domUtils[\"doc\".concat(name)] = function (refWin) {\n    var d = refWin.document;\n    return Math.max( // firefox chrome documentElement.scrollHeight< body.scrollHeight\n    // ie standard mode : documentElement.scrollHeight> body.scrollHeight\n    d.documentElement[\"scroll\".concat(name)], // quirks : documentElement.scrollHeight \u6700\u5927\u7b49\u4e8e\u53ef\u89c6\u7a97\u53e3\u591a\u4e00\u70b9\uff1f\n    d.body[\"scroll\".concat(name)], domUtils[\"viewport\".concat(name)](d));\n  };\n\n  domUtils[\"viewport\".concat(name)] = function (win) {\n    // pc browser includes scrollbar in window.innerWidth\n    var prop = \"client\".concat(name);\n    var doc = win.document;\n    var body = doc.body;\n    var documentElement = doc.documentElement;\n    var documentElementProp = documentElement[prop]; // \u6807\u51c6\u6a21\u5f0f\u53d6 documentElement\n    // backcompat \u53d6 body\n\n    return doc.compatMode === 'CSS1Compat' && documentElementProp || body && body[prop] || documentElementProp;\n  };\n});\n/*\n \u5f97\u5230\u5143\u7d20\u7684\u5927\u5c0f\u4fe1\u606f\n @param elem\n @param name\n @param {String} [extra]  'padding' : (css width) + padding\n 'border' : (css width) + padding + border\n 'margin' : (css width) + padding + border + margin\n */\n\nfunction getWH(elem, name, ex) {\n  var extra = ex;\n\n  if (isWindow(elem)) {\n    return name === 'width' ? domUtils.viewportWidth(elem) : domUtils.viewportHeight(elem);\n  } else if (elem.nodeType === 9) {\n    return name === 'width' ? domUtils.docWidth(elem) : domUtils.docHeight(elem);\n  }\n\n  var which = name === 'width' ? ['Left', 'Right'] : ['Top', 'Bottom'];\n  var borderBoxValue = name === 'width' ? elem.getBoundingClientRect().width : elem.getBoundingClientRect().height;\n  var isBorderBox = isBorderBoxFn(elem);\n  var cssBoxValue = 0;\n\n  if (borderBoxValue === null || borderBoxValue === undefined || borderBoxValue <= 0) {\n    borderBoxValue = undefined; // Fall back to computed then un computed css if necessary\n\n    cssBoxValue = getComputedStyleX(elem, name);\n\n    if (cssBoxValue === null || cssBoxValue === undefined || Number(cssBoxValue) < 0) {\n      cssBoxValue = elem.style[name] || 0;\n    } // Normalize '', auto, and prepare for extra\n\n\n    cssBoxValue = parseFloat(cssBoxValue) || 0;\n  }\n\n  if (extra === undefined) {\n    extra = isBorderBox ? BORDER_INDEX : CONTENT_INDEX;\n  }\n\n  var borderBoxValueOrIsBorderBox = borderBoxValue !== undefined || isBorderBox;\n  var val = borderBoxValue || cssBoxValue;\n\n  if (extra === CONTENT_INDEX) {\n    if (borderBoxValueOrIsBorderBox) {\n      return val - getPBMWidth(elem, ['border', 'padding'], which);\n    }\n\n    return cssBoxValue;\n  } else if (borderBoxValueOrIsBorderBox) {\n    if (extra === BORDER_INDEX) {\n      return val;\n    }\n\n    return val + (extra === PADDING_INDEX ? -getPBMWidth(elem, ['border'], which) : getPBMWidth(elem, ['margin'], which));\n  }\n\n  return cssBoxValue + getPBMWidth(elem, BOX_MODELS.slice(extra), which);\n}\n\nvar cssShow = {\n  position: 'absolute',\n  visibility: 'hidden',\n  display: 'block'\n}; // fix #119 : https://github.com/kissyteam/kissy/issues/119\n\nfunction getWHIgnoreDisplay() {\n  for (var _len = arguments.length, args = new Array(_len), _key2 = 0; _key2 < _len; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  var val;\n  var elem = args[0]; // in case elem is window\n  // elem.offsetWidth === undefined\n\n  if (elem.offsetWidth !== 0) {\n    val = getWH.apply(undefined, args);\n  } else {\n    swap(elem, cssShow, function () {\n      val = getWH.apply(undefined, args);\n    });\n  }\n\n  return val;\n}\n\neach(['width', 'height'], function (name) {\n  var first = name.charAt(0).toUpperCase() + name.slice(1);\n\n  domUtils[\"outer\".concat(first)] = function (el, includeMargin) {\n    return el && getWHIgnoreDisplay(el, name, includeMargin ? MARGIN_INDEX : BORDER_INDEX);\n  };\n\n  var which = name === 'width' ? ['Left', 'Right'] : ['Top', 'Bottom'];\n\n  domUtils[name] = function (elem, v) {\n    var val = v;\n\n    if (val !== undefined) {\n      if (elem) {\n        var isBorderBox = isBorderBoxFn(elem);\n\n        if (isBorderBox) {\n          val += getPBMWidth(elem, ['padding', 'border'], which);\n        }\n\n        return css(elem, name, val);\n      }\n\n      return undefined;\n    }\n\n    return elem && getWHIgnoreDisplay(elem, name, CONTENT_INDEX);\n  };\n});\n\nfunction mix(to, from) {\n  for (var i in from) {\n    if (from.hasOwnProperty(i)) {\n      to[i] = from[i];\n    }\n  }\n\n  return to;\n}\n\nvar utils = {\n  getWindow: function getWindow(node) {\n    if (node && node.document && node.setTimeout) {\n      return node;\n    }\n\n    var doc = node.ownerDocument || node;\n    return doc.defaultView || doc.parentWindow;\n  },\n  getDocument: dist_web_getDocument,\n  offset: function offset(el, value, option) {\n    if (typeof value !== 'undefined') {\n      setOffset(el, value, option || {});\n    } else {\n      return getOffset(el);\n    }\n  },\n  isWindow: isWindow,\n  each: each,\n  css: css,\n  clone: function clone(obj) {\n    var i;\n    var ret = {};\n\n    for (i in obj) {\n      if (obj.hasOwnProperty(i)) {\n        ret[i] = obj[i];\n      }\n    }\n\n    var overflow = obj.overflow;\n\n    if (overflow) {\n      for (i in obj) {\n        if (obj.hasOwnProperty(i)) {\n          ret.overflow[i] = obj.overflow[i];\n        }\n      }\n    }\n\n    return ret;\n  },\n  mix: mix,\n  getWindowScrollLeft: function getWindowScrollLeft(w) {\n    return getScrollLeft(w);\n  },\n  getWindowScrollTop: function getWindowScrollTop(w) {\n    return getScrollTop(w);\n  },\n  merge: function merge() {\n    var ret = {};\n\n    for (var i = 0; i < arguments.length; i++) {\n      utils.mix(ret, i < 0 || arguments.length <= i ? undefined : arguments[i]);\n    }\n\n    return ret;\n  },\n  viewportWidth: 0,\n  viewportHeight: 0\n};\nmix(utils, domUtils);\n/**\n * \u5f97\u5230\u4f1a\u5bfc\u81f4\u5143\u7d20\u663e\u793a\u4e0d\u5168\u7684\u7956\u5148\u5143\u7d20\n */\n\nvar getParent = utils.getParent;\n\nfunction getOffsetParent(element) {\n  if (utils.isWindow(element) || element.nodeType === 9) {\n    return null;\n  } // ie \u8fd9\u4e2a\u4e5f\u4e0d\u662f\u5b8c\u5168\u53ef\u884c\n\n  /*\n   <div style=\"width: 50px;height: 100px;overflow: hidden\">\n   <div style=\"width: 50px;height: 100px;position: relative;\" id=\"d6\">\n   \u5143\u7d20 6 \u9ad8 100px \u5bbd 50px<br/>\n   </div>\n   </div>\n   */\n  // element.offsetParent does the right thing in ie7 and below. Return parent with layout!\n  //  In other browsers it only includes elements with position absolute, relative or\n  // fixed, not elements with overflow set to auto or scroll.\n  //        if (UA.ie && ieMode < 8) {\n  //            return element.offsetParent;\n  //        }\n  // \u7edf\u4e00\u7684 offsetParent \u65b9\u6cd5\n\n\n  var doc = utils.getDocument(element);\n  var body = doc.body;\n  var parent;\n  var positionStyle = utils.css(element, 'position');\n  var skipStatic = positionStyle === 'fixed' || positionStyle === 'absolute';\n\n  if (!skipStatic) {\n    return element.nodeName.toLowerCase() === 'html' ? null : getParent(element);\n  }\n\n  for (parent = getParent(element); parent && parent !== body && parent.nodeType !== 9; parent = getParent(parent)) {\n    positionStyle = utils.css(parent, 'position');\n\n    if (positionStyle !== 'static') {\n      return parent;\n    }\n  }\n\n  return null;\n}\n\nvar getParent$1 = utils.getParent;\n\nfunction isAncestorFixed(element) {\n  if (utils.isWindow(element) || element.nodeType === 9) {\n    return false;\n  }\n\n  var doc = utils.getDocument(element);\n  var body = doc.body;\n  var parent = null;\n\n  for (parent = getParent$1(element); // \u4fee\u590d\u5143\u7d20\u4f4d\u4e8e document.documentElement \u4e0b\u5bfc\u81f4\u5d29\u6e83\u95ee\u9898\n  parent && parent !== body && parent !== doc; parent = getParent$1(parent)) {\n    var positionStyle = utils.css(parent, 'position');\n\n    if (positionStyle === 'fixed') {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * \u83b7\u5f97\u5143\u7d20\u7684\u663e\u793a\u90e8\u5206\u7684\u533a\u57df\n */\n\n\nfunction getVisibleRectForElement(element, alwaysByViewport) {\n  var visibleRect = {\n    left: 0,\n    right: Infinity,\n    top: 0,\n    bottom: Infinity\n  };\n  var el = getOffsetParent(element);\n  var doc = utils.getDocument(element);\n  var win = doc.defaultView || doc.parentWindow;\n  var body = doc.body;\n  var documentElement = doc.documentElement; // Determine the size of the visible rect by climbing the dom accounting for\n  // all scrollable containers.\n\n  while (el) {\n    // clientWidth is zero for inline block elements in ie.\n    if ((navigator.userAgent.indexOf('MSIE') === -1 || el.clientWidth !== 0) && // body may have overflow set on it, yet we still get the entire\n    // viewport. In some browsers, el.offsetParent may be\n    // document.documentElement, so check for that too.\n    el !== body && el !== documentElement && utils.css(el, 'overflow') !== 'visible') {\n      var pos = utils.offset(el); // add border\n\n      pos.left += el.clientLeft;\n      pos.top += el.clientTop;\n      visibleRect.top = Math.max(visibleRect.top, pos.top);\n      visibleRect.right = Math.min(visibleRect.right, // consider area without scrollBar\n      pos.left + el.clientWidth);\n      visibleRect.bottom = Math.min(visibleRect.bottom, pos.top + el.clientHeight);\n      visibleRect.left = Math.max(visibleRect.left, pos.left);\n    } else if (el === body || el === documentElement) {\n      break;\n    }\n\n    el = getOffsetParent(el);\n  } // Set element position to fixed\n  // make sure absolute element itself don't affect it's visible area\n  // https://github.com/ant-design/ant-design/issues/7601\n\n\n  var originalPosition = null;\n\n  if (!utils.isWindow(element) && element.nodeType !== 9) {\n    originalPosition = element.style.position;\n    var position = utils.css(element, 'position');\n\n    if (position === 'absolute') {\n      element.style.position = 'fixed';\n    }\n  }\n\n  var scrollX = utils.getWindowScrollLeft(win);\n  var scrollY = utils.getWindowScrollTop(win);\n  var viewportWidth = utils.viewportWidth(win);\n  var viewportHeight = utils.viewportHeight(win);\n  var documentWidth = documentElement.scrollWidth;\n  var documentHeight = documentElement.scrollHeight; // scrollXXX on html is sync with body which means overflow: hidden on body gets wrong scrollXXX.\n  // We should cut this ourself.\n\n  var bodyStyle = window.getComputedStyle(body);\n\n  if (bodyStyle.overflowX === 'hidden') {\n    documentWidth = win.innerWidth;\n  }\n\n  if (bodyStyle.overflowY === 'hidden') {\n    documentHeight = win.innerHeight;\n  } // Reset element position after calculate the visible area\n\n\n  if (element.style) {\n    element.style.position = originalPosition;\n  }\n\n  if (alwaysByViewport || isAncestorFixed(element)) {\n    // Clip by viewport's size.\n    visibleRect.left = Math.max(visibleRect.left, scrollX);\n    visibleRect.top = Math.max(visibleRect.top, scrollY);\n    visibleRect.right = Math.min(visibleRect.right, scrollX + viewportWidth);\n    visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + viewportHeight);\n  } else {\n    // Clip by document's size.\n    var maxVisibleWidth = Math.max(documentWidth, scrollX + viewportWidth);\n    visibleRect.right = Math.min(visibleRect.right, maxVisibleWidth);\n    var maxVisibleHeight = Math.max(documentHeight, scrollY + viewportHeight);\n    visibleRect.bottom = Math.min(visibleRect.bottom, maxVisibleHeight);\n  }\n\n  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null;\n}\n\nfunction adjustForViewport(elFuturePos, elRegion, visibleRect, overflow) {\n  var pos = utils.clone(elFuturePos);\n  var size = {\n    width: elRegion.width,\n    height: elRegion.height\n  };\n\n  if (overflow.adjustX && pos.left < visibleRect.left) {\n    pos.left = visibleRect.left;\n  } // Left edge inside and right edge outside viewport, try to resize it.\n\n\n  if (overflow.resizeWidth && pos.left >= visibleRect.left && pos.left + size.width > visibleRect.right) {\n    size.width -= pos.left + size.width - visibleRect.right;\n  } // Right edge outside viewport, try to move it.\n\n\n  if (overflow.adjustX && pos.left + size.width > visibleRect.right) {\n    // \u4fdd\u8bc1\u5de6\u8fb9\u754c\u548c\u53ef\u89c6\u533a\u57df\u5de6\u8fb9\u754c\u5bf9\u9f50\n    pos.left = Math.max(visibleRect.right - size.width, visibleRect.left);\n  } // Top edge outside viewport, try to move it.\n\n\n  if (overflow.adjustY && pos.top < visibleRect.top) {\n    pos.top = visibleRect.top;\n  } // Top edge inside and bottom edge outside viewport, try to resize it.\n\n\n  if (overflow.resizeHeight && pos.top >= visibleRect.top && pos.top + size.height > visibleRect.bottom) {\n    size.height -= pos.top + size.height - visibleRect.bottom;\n  } // Bottom edge outside viewport, try to move it.\n\n\n  if (overflow.adjustY && pos.top + size.height > visibleRect.bottom) {\n    // \u4fdd\u8bc1\u4e0a\u8fb9\u754c\u548c\u53ef\u89c6\u533a\u57df\u4e0a\u8fb9\u754c\u5bf9\u9f50\n    pos.top = Math.max(visibleRect.bottom - size.height, visibleRect.top);\n  }\n\n  return utils.mix(pos, size);\n}\n\nfunction getRegion(node) {\n  var offset;\n  var w;\n  var h;\n\n  if (!utils.isWindow(node) && node.nodeType !== 9) {\n    offset = utils.offset(node);\n    w = utils.outerWidth(node);\n    h = utils.outerHeight(node);\n  } else {\n    var win = utils.getWindow(node);\n    offset = {\n      left: utils.getWindowScrollLeft(win),\n      top: utils.getWindowScrollTop(win)\n    };\n    w = utils.viewportWidth(win);\n    h = utils.viewportHeight(win);\n  }\n\n  offset.width = w;\n  offset.height = h;\n  return offset;\n}\n/**\n * \u83b7\u53d6 node \u4e0a\u7684 align \u5bf9\u9f50\u70b9 \u76f8\u5bf9\u4e8e\u9875\u9762\u7684\u5750\u6807\n */\n\n\nfunction getAlignOffset(region, align) {\n  var V = align.charAt(0);\n  var H = align.charAt(1);\n  var w = region.width;\n  var h = region.height;\n  var x = region.left;\n  var y = region.top;\n\n  if (V === 'c') {\n    y += h / 2;\n  } else if (V === 'b') {\n    y += h;\n  }\n\n  if (H === 'c') {\n    x += w / 2;\n  } else if (H === 'r') {\n    x += w;\n  }\n\n  return {\n    left: x,\n    top: y\n  };\n}\n\nfunction getElFuturePos(elRegion, refNodeRegion, points, offset, targetOffset) {\n  var p1 = getAlignOffset(refNodeRegion, points[1]);\n  var p2 = getAlignOffset(elRegion, points[0]);\n  var diff = [p2.left - p1.left, p2.top - p1.top];\n  return {\n    left: Math.round(elRegion.left - diff[0] + offset[0] - targetOffset[0]),\n    top: Math.round(elRegion.top - diff[1] + offset[1] - targetOffset[1])\n  };\n}\n/**\n * align dom node flexibly\n * @author yiminghe@gmail.com\n */\n\n\nfunction isFailX(elFuturePos, elRegion, visibleRect) {\n  return elFuturePos.left < visibleRect.left || elFuturePos.left + elRegion.width > visibleRect.right;\n}\n\nfunction isFailY(elFuturePos, elRegion, visibleRect) {\n  return elFuturePos.top < visibleRect.top || elFuturePos.top + elRegion.height > visibleRect.bottom;\n}\n\nfunction isCompleteFailX(elFuturePos, elRegion, visibleRect) {\n  return elFuturePos.left > visibleRect.right || elFuturePos.left + elRegion.width < visibleRect.left;\n}\n\nfunction isCompleteFailY(elFuturePos, elRegion, visibleRect) {\n  return elFuturePos.top > visibleRect.bottom || elFuturePos.top + elRegion.height < visibleRect.top;\n}\n\nfunction flip(points, reg, map) {\n  var ret = [];\n  utils.each(points, function (p) {\n    ret.push(p.replace(reg, function (m) {\n      return map[m];\n    }));\n  });\n  return ret;\n}\n\nfunction flipOffset(offset, index) {\n  offset[index] = -offset[index];\n  return offset;\n}\n\nfunction convertOffset(str, offsetLen) {\n  var n;\n\n  if (/%$/.test(str)) {\n    n = parseInt(str.substring(0, str.length - 1), 10) / 100 * offsetLen;\n  } else {\n    n = parseInt(str, 10);\n  }\n\n  return n || 0;\n}\n\nfunction normalizeOffset(offset, el) {\n  offset[0] = convertOffset(offset[0], el.width);\n  offset[1] = convertOffset(offset[1], el.height);\n}\n/**\n * @param el\n * @param tgtRegion \u53c2\u7167\u8282\u70b9\u6240\u5360\u7684\u533a\u57df: { left, top, width, height }\n * @param align\n */\n\n\nfunction doAlign(el, tgtRegion, align, isTgtRegionVisible) {\n  var points = align.points;\n  var offset = align.offset || [0, 0];\n  var targetOffset = align.targetOffset || [0, 0];\n  var overflow = align.overflow;\n  var source = align.source || el;\n  offset = [].concat(offset);\n  targetOffset = [].concat(targetOffset);\n  overflow = overflow || {};\n  var newOverflowCfg = {};\n  var fail = 0;\n  var alwaysByViewport = !!(overflow && overflow.alwaysByViewport); // \u5f53\u524d\u8282\u70b9\u53ef\u4ee5\u88ab\u653e\u7f6e\u7684\u663e\u793a\u533a\u57df\n\n  var visibleRect = getVisibleRectForElement(source, alwaysByViewport); // \u5f53\u524d\u8282\u70b9\u6240\u5360\u7684\u533a\u57df, left/top/width/height\n\n  var elRegion = getRegion(source); // \u5c06 offset \u8f6c\u6362\u6210\u6570\u503c\uff0c\u652f\u6301\u767e\u5206\u6bd4\n\n  normalizeOffset(offset, elRegion);\n  normalizeOffset(targetOffset, tgtRegion); // \u5f53\u524d\u8282\u70b9\u5c06\u8981\u88ab\u653e\u7f6e\u7684\u4f4d\u7f6e\n\n  var elFuturePos = getElFuturePos(elRegion, tgtRegion, points, offset, targetOffset); // \u5f53\u524d\u8282\u70b9\u5c06\u8981\u6240\u5904\u7684\u533a\u57df\n\n  var newElRegion = utils.merge(elRegion, elFuturePos); // \u5982\u679c\u53ef\u89c6\u533a\u57df\u4e0d\u80fd\u5b8c\u5168\u653e\u7f6e\u5f53\u524d\u8282\u70b9\u65f6\u5141\u8bb8\u8c03\u6574\n\n  if (visibleRect && (overflow.adjustX || overflow.adjustY) && isTgtRegionVisible) {\n    if (overflow.adjustX) {\n      // \u5982\u679c\u6a2a\u5411\u4e0d\u80fd\u653e\u4e0b\n      if (isFailX(elFuturePos, elRegion, visibleRect)) {\n        // \u5bf9\u9f50\u4f4d\u7f6e\u53cd\u4e0b\n        var newPoints = flip(points, /[lr]/gi, {\n          l: 'r',\n          r: 'l'\n        }); // \u504f\u79fb\u91cf\u4e5f\u53cd\u4e0b\n\n        var newOffset = flipOffset(offset, 0);\n        var newTargetOffset = flipOffset(targetOffset, 0);\n        var newElFuturePos = getElFuturePos(elRegion, tgtRegion, newPoints, newOffset, newTargetOffset);\n\n        if (!isCompleteFailX(newElFuturePos, elRegion, visibleRect)) {\n          fail = 1;\n          points = newPoints;\n          offset = newOffset;\n          targetOffset = newTargetOffset;\n        }\n      }\n    }\n\n    if (overflow.adjustY) {\n      // \u5982\u679c\u7eb5\u5411\u4e0d\u80fd\u653e\u4e0b\n      if (isFailY(elFuturePos, elRegion, visibleRect)) {\n        // \u5bf9\u9f50\u4f4d\u7f6e\u53cd\u4e0b\n        var _newPoints = flip(points, /[tb]/gi, {\n          t: 'b',\n          b: 't'\n        }); // \u504f\u79fb\u91cf\u4e5f\u53cd\u4e0b\n\n\n        var _newOffset = flipOffset(offset, 1);\n\n        var _newTargetOffset = flipOffset(targetOffset, 1);\n\n        var _newElFuturePos = getElFuturePos(elRegion, tgtRegion, _newPoints, _newOffset, _newTargetOffset);\n\n        if (!isCompleteFailY(_newElFuturePos, elRegion, visibleRect)) {\n          fail = 1;\n          points = _newPoints;\n          offset = _newOffset;\n          targetOffset = _newTargetOffset;\n        }\n      }\n    } // \u5982\u679c\u5931\u8d25\uff0c\u91cd\u65b0\u8ba1\u7b97\u5f53\u524d\u8282\u70b9\u5c06\u8981\u88ab\u653e\u7f6e\u7684\u4f4d\u7f6e\n\n\n    if (fail) {\n      elFuturePos = getElFuturePos(elRegion, tgtRegion, points, offset, targetOffset);\n      utils.mix(newElRegion, elFuturePos);\n    }\n\n    var isStillFailX = isFailX(elFuturePos, elRegion, visibleRect);\n    var isStillFailY = isFailY(elFuturePos, elRegion, visibleRect); // \u68c0\u67e5\u53cd\u4e0b\u540e\u7684\u4f4d\u7f6e\u662f\u5426\u53ef\u4ee5\u653e\u4e0b\u4e86\uff0c\u5982\u679c\u4ecd\u7136\u653e\u4e0d\u4e0b\uff1a\n    // 1. \u590d\u539f\u4fee\u6539\u8fc7\u7684\u5b9a\u4f4d\u53c2\u6570\n\n    if (isStillFailX || isStillFailY) {\n      var _newPoints2 = points; // \u91cd\u7f6e\u5bf9\u5e94\u90e8\u5206\u7684\u7ffb\u8f6c\u903b\u8f91\n\n      if (isStillFailX) {\n        _newPoints2 = flip(points, /[lr]/gi, {\n          l: 'r',\n          r: 'l'\n        });\n      }\n\n      if (isStillFailY) {\n        _newPoints2 = flip(points, /[tb]/gi, {\n          t: 'b',\n          b: 't'\n        });\n      }\n\n      points = _newPoints2;\n      offset = align.offset || [0, 0];\n      targetOffset = align.targetOffset || [0, 0];\n    } // 2. \u53ea\u6709\u6307\u5b9a\u4e86\u53ef\u4ee5\u8c03\u6574\u5f53\u524d\u65b9\u5411\u624d\u8c03\u6574\n\n\n    newOverflowCfg.adjustX = overflow.adjustX && isStillFailX;\n    newOverflowCfg.adjustY = overflow.adjustY && isStillFailY; // \u786e\u5b9e\u8981\u8c03\u6574\uff0c\u751a\u81f3\u53ef\u80fd\u4f1a\u8c03\u6574\u9ad8\u5ea6\u5bbd\u5ea6\n\n    if (newOverflowCfg.adjustX || newOverflowCfg.adjustY) {\n      newElRegion = adjustForViewport(elFuturePos, elRegion, visibleRect, newOverflowCfg);\n    }\n  } // need judge to in case set fixed with in css on height auto element\n\n\n  if (newElRegion.width !== elRegion.width) {\n    utils.css(source, 'width', utils.width(source) + newElRegion.width - elRegion.width);\n  }\n\n  if (newElRegion.height !== elRegion.height) {\n    utils.css(source, 'height', utils.height(source) + newElRegion.height - elRegion.height);\n  } // https://github.com/kissyteam/kissy/issues/190\n  // \u76f8\u5bf9\u4e8e\u5c4f\u5e55\u4f4d\u7f6e\u6ca1\u53d8\uff0c\u800c left/top \u53d8\u4e86\n  // \u4f8b\u5982 <div 'relative'><el absolute></div>\n\n\n  utils.offset(source, {\n    left: newElRegion.left,\n    top: newElRegion.top\n  }, {\n    useCssRight: align.useCssRight,\n    useCssBottom: align.useCssBottom,\n    useCssTransform: align.useCssTransform,\n    ignoreShake: align.ignoreShake\n  });\n  return {\n    points: points,\n    offset: offset,\n    targetOffset: targetOffset,\n    overflow: newOverflowCfg\n  };\n}\n/**\n *  2012-04-26 yiminghe@gmail.com\n *   - \u4f18\u5316\u667a\u80fd\u5bf9\u9f50\u7b97\u6cd5\n *   - \u614e\u7528 resizeXX\n *\n *  2011-07-13 yiminghe@gmail.com note:\n *   - \u589e\u52a0\u667a\u80fd\u5bf9\u9f50\uff0c\u4ee5\u53ca\u5927\u5c0f\u8c03\u6574\u9009\u9879\n **/\n\n\nfunction isOutOfVisibleRect(target, alwaysByViewport) {\n  var visibleRect = getVisibleRectForElement(target, alwaysByViewport);\n  var targetRegion = getRegion(target);\n  return !visibleRect || targetRegion.left + targetRegion.width <= visibleRect.left || targetRegion.top + targetRegion.height <= visibleRect.top || targetRegion.left >= visibleRect.right || targetRegion.top >= visibleRect.bottom;\n}\n\nfunction alignElement(el, refNode, align) {\n  var target = align.target || refNode;\n  var refNodeRegion = getRegion(target);\n  var isTargetNotOutOfVisible = !isOutOfVisibleRect(target, align.overflow && align.overflow.alwaysByViewport);\n  return doAlign(el, refNodeRegion, align, isTargetNotOutOfVisible);\n}\n\nalignElement.__getOffsetParent = getOffsetParent;\nalignElement.__getVisibleRectForElement = getVisibleRectForElement;\n/**\n * `tgtPoint`: { pageX, pageY } or { clientX, clientY }.\n * If client position provided, will internal convert to page position.\n */\n\nfunction dist_web_alignPoint(el, tgtPoint, align) {\n  var pageX;\n  var pageY;\n  var doc = utils.getDocument(el);\n  var win = doc.defaultView || doc.parentWindow;\n  var scrollX = utils.getWindowScrollLeft(win);\n  var scrollY = utils.getWindowScrollTop(win);\n  var viewportWidth = utils.viewportWidth(win);\n  var viewportHeight = utils.viewportHeight(win);\n\n  if ('pageX' in tgtPoint) {\n    pageX = tgtPoint.pageX;\n  } else {\n    pageX = scrollX + tgtPoint.clientX;\n  }\n\n  if ('pageY' in tgtPoint) {\n    pageY = tgtPoint.pageY;\n  } else {\n    pageY = scrollY + tgtPoint.clientY;\n  }\n\n  var tgtRegion = {\n    left: pageX,\n    top: pageY,\n    width: 0,\n    height: 0\n  };\n  var pointInView = pageX >= 0 && pageX <= scrollX + viewportWidth && pageY >= 0 && pageY <= scrollY + viewportHeight; // Provide default target point\n\n  var points = [align.points[0], 'cc'];\n  return doAlign(el, tgtRegion, _objectSpread2(_objectSpread2({}, align), {}, {\n    points: points\n  }), pointInView);\n}\n\n/* harmony default export */ var dist_web = (alignElement);\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/lodash/isEqual.js\nvar isEqual = __webpack_require__(\"nnRT\");\nvar isEqual_default = /*#__PURE__*/__webpack_require__.n(isEqual);\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js\nvar ResizeObserver_es = __webpack_require__(\"LaGA\");\n\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-align/es/util.js\n\n\n\nfunction isSamePoint(prev, next) {\n  if (prev === next) return true;\n  if (!prev || !next) return false;\n\n  if ('pageX' in next && 'pageY' in next) {\n    return prev.pageX === next.pageX && prev.pageY === next.pageY;\n  }\n\n  if ('clientX' in next && 'clientY' in next) {\n    return prev.clientX === next.clientX && prev.clientY === next.clientY;\n  }\n\n  return false;\n}\nfunction restoreFocus(activeElement, container) {\n  // Focus back if is in the container\n  if (activeElement !== document.activeElement && Object(contains[\"a\" /* default */])(container, activeElement) && typeof activeElement.focus === 'function') {\n    activeElement.focus();\n  }\n}\nfunction monitorResize(element, callback) {\n  var prevWidth = null;\n  var prevHeight = null;\n\n  function onResize(_ref) {\n    var _ref2 = Object(slicedToArray[\"a\" /* default */])(_ref, 1),\n        target = _ref2[0].target;\n\n    if (!document.documentElement.contains(target)) return;\n\n    var _target$getBoundingCl = target.getBoundingClientRect(),\n        width = _target$getBoundingCl.width,\n        height = _target$getBoundingCl.height;\n\n    var fixedWidth = Math.floor(width);\n    var fixedHeight = Math.floor(height);\n\n    if (prevWidth !== fixedWidth || prevHeight !== fixedHeight) {\n      // https://webkit.org/blog/9997/resizeobserver-in-webkit/\n      Promise.resolve().then(function () {\n        callback({\n          width: fixedWidth,\n          height: fixedHeight\n        });\n      });\n    }\n\n    prevWidth = fixedWidth;\n    prevHeight = fixedHeight;\n  }\n\n  var resizeObserver = new ResizeObserver_es[\"default\"](onResize);\n\n  if (element) {\n    resizeObserver.observe(element);\n  }\n\n  return function () {\n    resizeObserver.disconnect();\n  };\n}\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-align/es/hooks/useBuffer.js\n\n/* harmony default export */ var useBuffer = (function (callback, buffer) {\n  var calledRef = react_default.a.useRef(false);\n  var timeoutRef = react_default.a.useRef(null);\n\n  function cancelTrigger() {\n    window.clearTimeout(timeoutRef.current);\n  }\n\n  function trigger(force) {\n    if (!calledRef.current || force === true) {\n      if (callback() === false) {\n        // Not delay since callback cancelled self\n        return;\n      }\n\n      calledRef.current = true;\n      cancelTrigger();\n      timeoutRef.current = window.setTimeout(function () {\n        calledRef.current = false;\n      }, buffer);\n    } else {\n      cancelTrigger();\n      timeoutRef.current = window.setTimeout(function () {\n        calledRef.current = false;\n        trigger();\n      }, buffer);\n    }\n  }\n\n  return [trigger, function () {\n    calledRef.current = false;\n    cancelTrigger();\n  }];\n});\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-align/es/Align.js\n\n\n/**\n * Removed props:\n *  - childrenProps\n */\n\n\n\n\n\n\n\n\n\n\nfunction getElement(func) {\n  if (typeof func !== 'function') return null;\n  return func();\n}\n\nfunction getPoint(point) {\n  if (Object(esm_typeof[\"a\" /* default */])(point) !== 'object' || !point) return null;\n  return point;\n}\n\nvar Align_Align = function Align(_ref, ref) {\n  var children = _ref.children,\n      disabled = _ref.disabled,\n      target = _ref.target,\n      align = _ref.align,\n      onAlign = _ref.onAlign,\n      monitorWindowResize = _ref.monitorWindowResize,\n      _ref$monitorBufferTim = _ref.monitorBufferTime,\n      monitorBufferTime = _ref$monitorBufferTim === void 0 ? 0 : _ref$monitorBufferTim;\n  var cacheRef = react_default.a.useRef({});\n  var nodeRef = react_default.a.useRef();\n  var childNode = react_default.a.Children.only(children); // ===================== Align ======================\n  // We save the props here to avoid closure makes props ood\n\n  var forceAlignPropsRef = react_default.a.useRef({});\n  forceAlignPropsRef.current.disabled = disabled;\n  forceAlignPropsRef.current.target = target;\n  forceAlignPropsRef.current.align = align;\n  forceAlignPropsRef.current.onAlign = onAlign;\n\n  var _useBuffer = useBuffer(function () {\n    var _forceAlignPropsRef$c = forceAlignPropsRef.current,\n        latestDisabled = _forceAlignPropsRef$c.disabled,\n        latestTarget = _forceAlignPropsRef$c.target,\n        latestAlign = _forceAlignPropsRef$c.align,\n        latestOnAlign = _forceAlignPropsRef$c.onAlign;\n\n    if (!latestDisabled && latestTarget) {\n      var source = nodeRef.current;\n      var result;\n      var element = getElement(latestTarget);\n      var point = getPoint(latestTarget);\n      cacheRef.current.element = element;\n      cacheRef.current.point = point;\n      cacheRef.current.align = latestAlign; // IE lose focus after element realign\n      // We should record activeElement and restore later\n      // IE lose focus after element realign\n      // We should record activeElement and restore later\n\n      var _document = document,\n          activeElement = _document.activeElement; // We only align when element is visible\n      // We only align when element is visible\n\n      if (element && Object(isVisible[\"a\" /* default */])(element)) {\n        result = alignElement(source, element, latestAlign);\n      } else if (point) {\n        result = dist_web_alignPoint(source, point, latestAlign);\n      }\n\n      restoreFocus(activeElement, source);\n\n      if (latestOnAlign && result) {\n        latestOnAlign(source, result);\n      }\n\n      return true;\n    }\n\n    return false;\n  }, monitorBufferTime),\n      _useBuffer2 = Object(slicedToArray[\"a\" /* default */])(_useBuffer, 2),\n      _forceAlign = _useBuffer2[0],\n      cancelForceAlign = _useBuffer2[1]; // ===================== Effect =====================\n  // Listen for target updated\n\n\n  var resizeMonitor = react_default.a.useRef({\n    cancel: function cancel() {}\n  }); // Listen for source updated\n\n  var sourceResizeMonitor = react_default.a.useRef({\n    cancel: function cancel() {}\n  });\n  react_default.a.useEffect(function () {\n    var element = getElement(target);\n    var point = getPoint(target);\n\n    if (nodeRef.current !== sourceResizeMonitor.current.element) {\n      sourceResizeMonitor.current.cancel();\n      sourceResizeMonitor.current.element = nodeRef.current;\n      sourceResizeMonitor.current.cancel = monitorResize(nodeRef.current, _forceAlign);\n    }\n\n    if (cacheRef.current.element !== element || !isSamePoint(cacheRef.current.point, point) || !isEqual_default()(cacheRef.current.align, align)) {\n      _forceAlign(); // Add resize observer\n\n\n      if (resizeMonitor.current.element !== element) {\n        resizeMonitor.current.cancel();\n        resizeMonitor.current.element = element;\n        resizeMonitor.current.cancel = monitorResize(element, _forceAlign);\n      }\n    }\n  }); // Listen for disabled change\n\n  react_default.a.useEffect(function () {\n    if (!disabled) {\n      _forceAlign();\n    } else {\n      cancelForceAlign();\n    }\n  }, [disabled]); // Listen for window resize\n\n  var winResizeRef = react_default.a.useRef(null);\n  react_default.a.useEffect(function () {\n    if (monitorWindowResize) {\n      if (!winResizeRef.current) {\n        winResizeRef.current = Object(addEventListener[\"a\" /* default */])(window, 'resize', _forceAlign);\n      }\n    } else if (winResizeRef.current) {\n      winResizeRef.current.remove();\n      winResizeRef.current = null;\n    }\n  }, [monitorWindowResize]); // Clear all if unmount\n\n  react_default.a.useEffect(function () {\n    return function () {\n      resizeMonitor.current.cancel();\n      sourceResizeMonitor.current.cancel();\n      if (winResizeRef.current) winResizeRef.current.remove();\n      cancelForceAlign();\n    };\n  }, []); // ====================== Ref =======================\n\n  react_default.a.useImperativeHandle(ref, function () {\n    return {\n      forceAlign: function forceAlign() {\n        return _forceAlign(true);\n      }\n    };\n  }); // ===================== Render =====================\n\n  if ( /*#__PURE__*/react_default.a.isValidElement(childNode)) {\n    childNode = /*#__PURE__*/react_default.a.cloneElement(childNode, {\n      ref: Object(es_ref[\"a\" /* composeRef */])(childNode.ref, nodeRef)\n    });\n  }\n\n  return childNode;\n};\n\nvar RcAlign = /*#__PURE__*/react_default.a.forwardRef(Align_Align);\nRcAlign.displayName = 'Align';\n/* harmony default export */ var es_Align = (RcAlign);\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-align/es/index.js\n// export this package's api\n\n/* harmony default export */ var rc_align_es = (es_Align);\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@babel/runtime/regenerator/index.js\nvar regenerator = __webpack_require__(\"VtSi\");\nvar regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\nvar asyncToGenerator = __webpack_require__(\"QsI/\");\n\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-trigger/es/Popup/useVisibleStatus.js\n\n\n\n\n\nvar StatusQueue = ['measure', 'align', null, 'motion'];\n/* harmony default export */ var useVisibleStatus = (function (visible, doMeasure) {\n  var _useState = Object(react[\"useState\"])(null),\n      _useState2 = Object(slicedToArray[\"a\" /* default */])(_useState, 2),\n      status = _useState2[0],\n      setInternalStatus = _useState2[1];\n\n  var rafRef = Object(react[\"useRef\"])();\n  var destroyRef = Object(react[\"useRef\"])(false);\n\n  function setStatus(nextStatus) {\n    if (!destroyRef.current) {\n      setInternalStatus(nextStatus);\n    }\n  }\n\n  function cancelRaf() {\n    raf[\"a\" /* default */].cancel(rafRef.current);\n  }\n\n  function goNextStatus(callback) {\n    cancelRaf();\n    rafRef.current = Object(raf[\"a\" /* default */])(function () {\n      // Only align should be manually trigger\n      setStatus(function (prev) {\n        switch (status) {\n          case 'align':\n            return 'motion';\n\n          case 'motion':\n            return 'stable';\n\n          default:\n        }\n\n        return prev;\n      });\n      callback === null || callback === void 0 ? void 0 : callback();\n    });\n  } // Init status\n\n\n  Object(react[\"useEffect\"])(function () {\n    setStatus('measure');\n  }, [visible]); // Go next status\n\n  Object(react[\"useEffect\"])(function () {\n    switch (status) {\n      case 'measure':\n        doMeasure();\n        break;\n\n      default:\n    }\n\n    if (status) {\n      rafRef.current = Object(raf[\"a\" /* default */])( /*#__PURE__*/Object(asyncToGenerator[\"a\" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee() {\n        var index, nextStatus;\n        return regenerator_default.a.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                index = StatusQueue.indexOf(status);\n                nextStatus = StatusQueue[index + 1];\n\n                if (nextStatus && index !== -1) {\n                  setStatus(nextStatus);\n                }\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      })));\n    }\n  }, [status]);\n  Object(react[\"useEffect\"])(function () {\n    return function () {\n      destroyRef.current = true;\n      cancelRaf();\n    };\n  }, []);\n  return [status, goNextStatus];\n});\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-trigger/es/Popup/useStretchStyle.js\n\n\n/* harmony default export */ var useStretchStyle = (function (stretch) {\n  var _React$useState = react[\"useState\"]({\n    width: 0,\n    height: 0\n  }),\n      _React$useState2 = Object(slicedToArray[\"a\" /* default */])(_React$useState, 2),\n      targetSize = _React$useState2[0],\n      setTargetSize = _React$useState2[1];\n\n  function measureStretch(element) {\n    setTargetSize({\n      width: element.offsetWidth,\n      height: element.offsetHeight\n    });\n  } // Merge stretch style\n\n\n  var style = react[\"useMemo\"](function () {\n    var sizeStyle = {};\n\n    if (stretch) {\n      var width = targetSize.width,\n          height = targetSize.height; // Stretch with target\n\n      if (stretch.indexOf('height') !== -1 && height) {\n        sizeStyle.height = height;\n      } else if (stretch.indexOf('minHeight') !== -1 && height) {\n        sizeStyle.minHeight = height;\n      }\n\n      if (stretch.indexOf('width') !== -1 && width) {\n        sizeStyle.width = width;\n      } else if (stretch.indexOf('minWidth') !== -1 && width) {\n        sizeStyle.minWidth = width;\n      }\n    }\n\n    return sizeStyle;\n  }, [stretch, targetSize]);\n  return [style, measureStretch];\n});\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-trigger/es/Popup/PopupInner.js\n\n\n\n\n\n\n\n\n\n\n\nvar PopupInner = /*#__PURE__*/react[\"forwardRef\"](function (props, ref) {\n  var visible = props.visible,\n      prefixCls = props.prefixCls,\n      className = props.className,\n      style = props.style,\n      children = props.children,\n      zIndex = props.zIndex,\n      stretch = props.stretch,\n      destroyPopupOnHide = props.destroyPopupOnHide,\n      forceRender = props.forceRender,\n      align = props.align,\n      point = props.point,\n      getRootDomNode = props.getRootDomNode,\n      getClassNameFromAlign = props.getClassNameFromAlign,\n      onAlign = props.onAlign,\n      onMouseEnter = props.onMouseEnter,\n      onMouseLeave = props.onMouseLeave,\n      onMouseDown = props.onMouseDown,\n      onTouchStart = props.onTouchStart;\n  var alignRef = Object(react[\"useRef\"])();\n  var elementRef = Object(react[\"useRef\"])();\n\n  var _useState = Object(react[\"useState\"])(),\n      _useState2 = Object(slicedToArray[\"a\" /* default */])(_useState, 2),\n      alignedClassName = _useState2[0],\n      setAlignedClassName = _useState2[1]; // ======================= Measure ========================\n\n\n  var _useStretchStyle = useStretchStyle(stretch),\n      _useStretchStyle2 = Object(slicedToArray[\"a\" /* default */])(_useStretchStyle, 2),\n      stretchStyle = _useStretchStyle2[0],\n      measureStretchStyle = _useStretchStyle2[1];\n\n  function doMeasure() {\n    if (stretch) {\n      measureStretchStyle(getRootDomNode());\n    }\n  } // ======================== Status ========================\n\n\n  var _useVisibleStatus = useVisibleStatus(visible, doMeasure),\n      _useVisibleStatus2 = Object(slicedToArray[\"a\" /* default */])(_useVisibleStatus, 2),\n      status = _useVisibleStatus2[0],\n      goNextStatus = _useVisibleStatus2[1]; // ======================== Aligns ========================\n\n\n  var prepareResolveRef = Object(react[\"useRef\"])(); // `target` on `rc-align` can accept as a function to get the bind element or a point.\n  // ref: https://www.npmjs.com/package/rc-align\n\n  function getAlignTarget() {\n    if (point) {\n      return point;\n    }\n\n    return getRootDomNode;\n  }\n\n  function forceAlign() {\n    var _alignRef$current;\n\n    (_alignRef$current = alignRef.current) === null || _alignRef$current === void 0 ? void 0 : _alignRef$current.forceAlign();\n  }\n\n  function onInternalAlign(popupDomNode, matchAlign) {\n    var nextAlignedClassName = getClassNameFromAlign(matchAlign);\n\n    if (alignedClassName !== nextAlignedClassName) {\n      setAlignedClassName(nextAlignedClassName);\n    }\n\n    if (status === 'align') {\n      // Repeat until not more align needed\n      if (alignedClassName !== nextAlignedClassName) {\n        Promise.resolve().then(function () {\n          forceAlign();\n        });\n      } else {\n        goNextStatus(function () {\n          var _prepareResolveRef$cu;\n\n          (_prepareResolveRef$cu = prepareResolveRef.current) === null || _prepareResolveRef$cu === void 0 ? void 0 : _prepareResolveRef$cu.call(prepareResolveRef);\n        });\n      }\n\n      onAlign === null || onAlign === void 0 ? void 0 : onAlign(popupDomNode, matchAlign);\n    }\n  } // ======================== Motion ========================\n\n\n  var motion = Object(objectSpread2[\"a\" /* default */])({}, getMotion(props));\n\n  ['onAppearEnd', 'onEnterEnd', 'onLeaveEnd'].forEach(function (eventName) {\n    var originHandler = motion[eventName];\n\n    motion[eventName] = function (element, event) {\n      goNextStatus();\n      return originHandler === null || originHandler === void 0 ? void 0 : originHandler(element, event);\n    };\n  });\n\n  function onShowPrepare() {\n    return new Promise(function (resolve) {\n      prepareResolveRef.current = resolve;\n    });\n  } // Go to stable directly when motion not provided\n\n\n  react[\"useEffect\"](function () {\n    if (!motion.motionName && status === 'motion') {\n      goNextStatus();\n    }\n  }, [motion.motionName, status]); // ========================= Refs =========================\n\n  react[\"useImperativeHandle\"](ref, function () {\n    return {\n      forceAlign: forceAlign,\n      getElement: function getElement() {\n        return elementRef.current;\n      }\n    };\n  }); // ======================== Render ========================\n\n  var mergedStyle = Object(objectSpread2[\"a\" /* default */])(Object(objectSpread2[\"a\" /* default */])({}, stretchStyle), {}, {\n    zIndex: zIndex,\n    opacity: status === 'motion' || status === 'stable' || !visible ? undefined : 0,\n    pointerEvents: status === 'stable' ? undefined : 'none'\n  }, style); // Align status\n\n\n  var alignDisabled = true;\n\n  if ((align === null || align === void 0 ? void 0 : align.points) && (status === 'align' || status === 'stable')) {\n    alignDisabled = false;\n  }\n\n  var childNode = children; // Wrapper when multiple children\n\n  if (react[\"Children\"].count(children) > 1) {\n    childNode = /*#__PURE__*/react[\"createElement\"](\"div\", {\n      className: \"\".concat(prefixCls, \"-content\")\n    }, children);\n  }\n\n  return /*#__PURE__*/react[\"createElement\"](es[\"b\" /* default */], Object(esm_extends[\"a\" /* default */])({\n    visible: visible,\n    ref: elementRef,\n    leavedClassName: \"\".concat(prefixCls, \"-hidden\")\n  }, motion, {\n    onAppearPrepare: onShowPrepare,\n    onEnterPrepare: onShowPrepare,\n    removeOnLeave: destroyPopupOnHide,\n    forceRender: forceRender\n  }), function (_ref, motionRef) {\n    var motionClassName = _ref.className,\n        motionStyle = _ref.style;\n    var mergedClassName = classnames_default()(prefixCls, className, alignedClassName, motionClassName);\n    return /*#__PURE__*/react[\"createElement\"](rc_align_es, {\n      target: getAlignTarget(),\n      key: \"popup\",\n      ref: alignRef,\n      monitorWindowResize: true,\n      disabled: alignDisabled,\n      align: align,\n      onAlign: onInternalAlign\n    }, /*#__PURE__*/react[\"createElement\"](\"div\", {\n      ref: motionRef,\n      className: mergedClassName,\n      onMouseEnter: onMouseEnter,\n      onMouseLeave: onMouseLeave,\n      onMouseDownCapture: onMouseDown,\n      onTouchStartCapture: onTouchStart,\n      style: Object(objectSpread2[\"a\" /* default */])(Object(objectSpread2[\"a\" /* default */])({}, motionStyle), mergedStyle)\n    }, childNode));\n  });\n});\nPopupInner.displayName = 'PopupInner';\n/* harmony default export */ var Popup_PopupInner = (PopupInner);\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-trigger/es/Popup/MobilePopupInner.js\n\n\n\n\n\nvar MobilePopupInner = /*#__PURE__*/react[\"forwardRef\"](function (props, ref) {\n  var prefixCls = props.prefixCls,\n      visible = props.visible,\n      zIndex = props.zIndex,\n      children = props.children,\n      _props$mobile = props.mobile;\n  _props$mobile = _props$mobile === void 0 ? {} : _props$mobile;\n  var popupClassName = _props$mobile.popupClassName,\n      popupStyle = _props$mobile.popupStyle,\n      _props$mobile$popupMo = _props$mobile.popupMotion,\n      popupMotion = _props$mobile$popupMo === void 0 ? {} : _props$mobile$popupMo,\n      popupRender = _props$mobile.popupRender;\n  var elementRef = react[\"useRef\"](); // ========================= Refs =========================\n\n  react[\"useImperativeHandle\"](ref, function () {\n    return {\n      forceAlign: function forceAlign() {},\n      getElement: function getElement() {\n        return elementRef.current;\n      }\n    };\n  }); // ======================== Render ========================\n\n  var mergedStyle = Object(objectSpread2[\"a\" /* default */])({\n    zIndex: zIndex\n  }, popupStyle);\n\n  var childNode = children; // Wrapper when multiple children\n\n  if (react[\"Children\"].count(children) > 1) {\n    childNode = /*#__PURE__*/react[\"createElement\"](\"div\", {\n      className: \"\".concat(prefixCls, \"-content\")\n    }, children);\n  } // Mobile support additional render\n\n\n  if (popupRender) {\n    childNode = popupRender(childNode);\n  }\n\n  return /*#__PURE__*/react[\"createElement\"](es[\"b\" /* default */], Object(esm_extends[\"a\" /* default */])({\n    visible: visible,\n    ref: elementRef,\n    removeOnLeave: true\n  }, popupMotion), function (_ref, motionRef) {\n    var motionClassName = _ref.className,\n        motionStyle = _ref.style;\n    var mergedClassName = classnames_default()(prefixCls, popupClassName, motionClassName);\n    return /*#__PURE__*/react[\"createElement\"](\"div\", {\n      ref: motionRef,\n      className: mergedClassName,\n      style: Object(objectSpread2[\"a\" /* default */])(Object(objectSpread2[\"a\" /* default */])({}, motionStyle), mergedStyle)\n    }, childNode);\n  });\n});\nMobilePopupInner.displayName = 'MobilePopupInner';\n/* harmony default export */ var Popup_MobilePopupInner = (MobilePopupInner);\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-trigger/es/Popup/index.js\n\n\n\n\nvar _excluded = [\"visible\", \"mobile\"];\n\n\n\n\n\n\nvar Popup = /*#__PURE__*/react[\"forwardRef\"](function (_ref, ref) {\n  var visible = _ref.visible,\n      mobile = _ref.mobile,\n      props = Object(objectWithoutProperties[\"a\" /* default */])(_ref, _excluded);\n\n  var _useState = Object(react[\"useState\"])(visible),\n      _useState2 = Object(slicedToArray[\"a\" /* default */])(_useState, 2),\n      innerVisible = _useState2[0],\n      serInnerVisible = _useState2[1];\n\n  var _useState3 = Object(react[\"useState\"])(false),\n      _useState4 = Object(slicedToArray[\"a\" /* default */])(_useState3, 2),\n      inMobile = _useState4[0],\n      setInMobile = _useState4[1];\n\n  var cloneProps = Object(objectSpread2[\"a\" /* default */])(Object(objectSpread2[\"a\" /* default */])({}, props), {}, {\n    visible: innerVisible\n  }); // We check mobile in visible changed here.\n  // And this also delay set `innerVisible` to avoid popup component render flash\n\n\n  Object(react[\"useEffect\"])(function () {\n    serInnerVisible(visible);\n\n    if (visible && mobile) {\n      setInMobile(Object(isMobile[\"a\" /* default */])());\n    }\n  }, [visible, mobile]);\n  var popupNode = inMobile ? /*#__PURE__*/react[\"createElement\"](Popup_MobilePopupInner, Object(esm_extends[\"a\" /* default */])({}, cloneProps, {\n    mobile: mobile,\n    ref: ref\n  })) : /*#__PURE__*/react[\"createElement\"](Popup_PopupInner, Object(esm_extends[\"a\" /* default */])({}, cloneProps, {\n    ref: ref\n  })); // We can use fragment directly but this may failed some selector usage. Keep as origin logic\n\n  return /*#__PURE__*/react[\"createElement\"](\"div\", null, /*#__PURE__*/react[\"createElement\"](Mask, cloneProps), popupNode);\n});\nPopup.displayName = 'Popup';\n/* harmony default export */ var es_Popup = (Popup);\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-trigger/es/context.js\n\nvar TriggerContext = /*#__PURE__*/react[\"createContext\"](null);\n/* harmony default export */ var context = (TriggerContext);\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-trigger/es/index.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction noop() {}\n\nfunction returnEmptyString() {\n  return '';\n}\n\nfunction returnDocument(element) {\n  if (element) {\n    return element.ownerDocument;\n  }\n\n  return window.document;\n}\n\nvar ALL_HANDLERS = ['onClick', 'onMouseDown', 'onTouchStart', 'onMouseEnter', 'onMouseLeave', 'onFocus', 'onBlur', 'onContextMenu'];\n/**\n * Internal usage. Do not use in your code since this will be removed.\n */\n\nfunction generateTrigger(PortalComponent) {\n  var Trigger = /*#__PURE__*/function (_React$Component) {\n    Object(inherits[\"a\" /* default */])(Trigger, _React$Component);\n\n    var _super = Object(createSuper[\"a\" /* default */])(Trigger);\n\n    function Trigger(props) {\n      var _this;\n\n      Object(classCallCheck[\"a\" /* default */])(this, Trigger);\n\n      _this = _super.call(this, props);\n      _this.popupRef = /*#__PURE__*/react[\"createRef\"]();\n      _this.triggerRef = /*#__PURE__*/react[\"createRef\"]();\n      _this.attachId = void 0;\n      _this.clickOutsideHandler = void 0;\n      _this.touchOutsideHandler = void 0;\n      _this.contextMenuOutsideHandler1 = void 0;\n      _this.contextMenuOutsideHandler2 = void 0;\n      _this.mouseDownTimeout = void 0;\n      _this.focusTime = void 0;\n      _this.preClickTime = void 0;\n      _this.preTouchTime = void 0;\n      _this.delayTimer = void 0;\n      _this.hasPopupMouseDown = void 0;\n\n      _this.onMouseEnter = function (e) {\n        var mouseEnterDelay = _this.props.mouseEnterDelay;\n\n        _this.fireEvents('onMouseEnter', e);\n\n        _this.delaySetPopupVisible(true, mouseEnterDelay, mouseEnterDelay ? null : e);\n      };\n\n      _this.onMouseMove = function (e) {\n        _this.fireEvents('onMouseMove', e);\n\n        _this.setPoint(e);\n      };\n\n      _this.onMouseLeave = function (e) {\n        _this.fireEvents('onMouseLeave', e);\n\n        _this.delaySetPopupVisible(false, _this.props.mouseLeaveDelay);\n      };\n\n      _this.onPopupMouseEnter = function () {\n        _this.clearDelayTimer();\n      };\n\n      _this.onPopupMouseLeave = function (e) {\n        var _this$popupRef$curren; // https://github.com/react-component/trigger/pull/13\n        // react bug?\n\n\n        if (e.relatedTarget && !e.relatedTarget.setTimeout && Object(contains[\"a\" /* default */])((_this$popupRef$curren = _this.popupRef.current) === null || _this$popupRef$curren === void 0 ? void 0 : _this$popupRef$curren.getElement(), e.relatedTarget)) {\n          return;\n        }\n\n        _this.delaySetPopupVisible(false, _this.props.mouseLeaveDelay);\n      };\n\n      _this.onFocus = function (e) {\n        _this.fireEvents('onFocus', e); // incase focusin and focusout\n\n\n        _this.clearDelayTimer();\n\n        if (_this.isFocusToShow()) {\n          _this.focusTime = Date.now();\n\n          _this.delaySetPopupVisible(true, _this.props.focusDelay);\n        }\n      };\n\n      _this.onMouseDown = function (e) {\n        _this.fireEvents('onMouseDown', e);\n\n        _this.preClickTime = Date.now();\n      };\n\n      _this.onTouchStart = function (e) {\n        _this.fireEvents('onTouchStart', e);\n\n        _this.preTouchTime = Date.now();\n      };\n\n      _this.onBlur = function (e) {\n        _this.fireEvents('onBlur', e);\n\n        _this.clearDelayTimer();\n\n        if (_this.isBlurToHide()) {\n          _this.delaySetPopupVisible(false, _this.props.blurDelay);\n        }\n      };\n\n      _this.onContextMenu = function (e) {\n        e.preventDefault();\n\n        _this.fireEvents('onContextMenu', e);\n\n        _this.setPopupVisible(true, e);\n      };\n\n      _this.onContextMenuClose = function () {\n        if (_this.isContextMenuToShow()) {\n          _this.close();\n        }\n      };\n\n      _this.onClick = function (event) {\n        _this.fireEvents('onClick', event); // focus will trigger click\n\n\n        if (_this.focusTime) {\n          var preTime;\n\n          if (_this.preClickTime && _this.preTouchTime) {\n            preTime = Math.min(_this.preClickTime, _this.preTouchTime);\n          } else if (_this.preClickTime) {\n            preTime = _this.preClickTime;\n          } else if (_this.preTouchTime) {\n            preTime = _this.preTouchTime;\n          }\n\n          if (Math.abs(preTime - _this.focusTime) < 20) {\n            return;\n          }\n\n          _this.focusTime = 0;\n        }\n\n        _this.preClickTime = 0;\n        _this.preTouchTime = 0; // Only prevent default when all the action is click.\n        // https://github.com/ant-design/ant-design/issues/17043\n        // https://github.com/ant-design/ant-design/issues/17291\n\n        if (_this.isClickToShow() && (_this.isClickToHide() || _this.isBlurToHide()) && event && event.preventDefault) {\n          event.preventDefault();\n        }\n\n        var nextVisible = !_this.state.popupVisible;\n\n        if (_this.isClickToHide() && !nextVisible || nextVisible && _this.isClickToShow()) {\n          _this.setPopupVisible(!_this.state.popupVisible, event);\n        }\n      };\n\n      _this.onPopupMouseDown = function () {\n        _this.hasPopupMouseDown = true;\n        clearTimeout(_this.mouseDownTimeout);\n        _this.mouseDownTimeout = window.setTimeout(function () {\n          _this.hasPopupMouseDown = false;\n        }, 0);\n\n        if (_this.context) {\n          var _this$context;\n\n          (_this$context = _this.context).onPopupMouseDown.apply(_this$context, arguments);\n        }\n      };\n\n      _this.onDocumentClick = function (event) {\n        if (_this.props.mask && !_this.props.maskClosable) {\n          return;\n        }\n\n        var target = event.target;\n\n        var root = _this.getRootDomNode();\n\n        var popupNode = _this.getPopupDomNode();\n\n        if ( // mousedown on the target should also close popup when action is contextMenu.\n        // https://github.com/ant-design/ant-design/issues/29853\n        (!Object(contains[\"a\" /* default */])(root, target) || _this.isContextMenuOnly()) && !Object(contains[\"a\" /* default */])(popupNode, target) && !_this.hasPopupMouseDown) {\n          _this.close();\n        }\n      };\n\n      _this.getRootDomNode = function () {\n        var getTriggerDOMNode = _this.props.getTriggerDOMNode;\n\n        if (getTriggerDOMNode) {\n          return getTriggerDOMNode(_this.triggerRef.current);\n        }\n\n        try {\n          var domNode = Object(findDOMNode[\"a\" /* default */])(_this.triggerRef.current);\n\n          if (domNode) {\n            return domNode;\n          }\n        } catch (err) {// Do nothing\n        }\n\n        return react_dom_default.a.findDOMNode(Object(assertThisInitialized[\"a\" /* default */])(_this));\n      };\n\n      _this.getPopupClassNameFromAlign = function (align) {\n        var className = [];\n        var _this$props = _this.props,\n            popupPlacement = _this$props.popupPlacement,\n            builtinPlacements = _this$props.builtinPlacements,\n            prefixCls = _this$props.prefixCls,\n            alignPoint = _this$props.alignPoint,\n            getPopupClassNameFromAlign = _this$props.getPopupClassNameFromAlign;\n\n        if (popupPlacement && builtinPlacements) {\n          className.push(getAlignPopupClassName(builtinPlacements, prefixCls, align, alignPoint));\n        }\n\n        if (getPopupClassNameFromAlign) {\n          className.push(getPopupClassNameFromAlign(align));\n        }\n\n        return className.join(' ');\n      };\n\n      _this.getComponent = function () {\n        var _this$props2 = _this.props,\n            prefixCls = _this$props2.prefixCls,\n            destroyPopupOnHide = _this$props2.destroyPopupOnHide,\n            popupClassName = _this$props2.popupClassName,\n            onPopupAlign = _this$props2.onPopupAlign,\n            popupMotion = _this$props2.popupMotion,\n            popupAnimation = _this$props2.popupAnimation,\n            popupTransitionName = _this$props2.popupTransitionName,\n            popupStyle = _this$props2.popupStyle,\n            mask = _this$props2.mask,\n            maskAnimation = _this$props2.maskAnimation,\n            maskTransitionName = _this$props2.maskTransitionName,\n            maskMotion = _this$props2.maskMotion,\n            zIndex = _this$props2.zIndex,\n            popup = _this$props2.popup,\n            stretch = _this$props2.stretch,\n            alignPoint = _this$props2.alignPoint,\n            mobile = _this$props2.mobile,\n            forceRender = _this$props2.forceRender;\n        var _this$state = _this.state,\n            popupVisible = _this$state.popupVisible,\n            point = _this$state.point;\n\n        var align = _this.getPopupAlign();\n\n        var mouseProps = {};\n\n        if (_this.isMouseEnterToShow()) {\n          mouseProps.onMouseEnter = _this.onPopupMouseEnter;\n        }\n\n        if (_this.isMouseLeaveToHide()) {\n          mouseProps.onMouseLeave = _this.onPopupMouseLeave;\n        }\n\n        mouseProps.onMouseDown = _this.onPopupMouseDown;\n        mouseProps.onTouchStart = _this.onPopupMouseDown;\n        return /*#__PURE__*/react[\"createElement\"](es_Popup, Object(esm_extends[\"a\" /* default */])({\n          prefixCls: prefixCls,\n          destroyPopupOnHide: destroyPopupOnHide,\n          visible: popupVisible,\n          point: alignPoint && point,\n          className: popupClassName,\n          align: align,\n          onAlign: onPopupAlign,\n          animation: popupAnimation,\n          getClassNameFromAlign: _this.getPopupClassNameFromAlign\n        }, mouseProps, {\n          stretch: stretch,\n          getRootDomNode: _this.getRootDomNode,\n          style: popupStyle,\n          mask: mask,\n          zIndex: zIndex,\n          transitionName: popupTransitionName,\n          maskAnimation: maskAnimation,\n          maskTransitionName: maskTransitionName,\n          maskMotion: maskMotion,\n          ref: _this.popupRef,\n          motion: popupMotion,\n          mobile: mobile,\n          forceRender: forceRender\n        }), typeof popup === 'function' ? popup() : popup);\n      };\n\n      _this.attachParent = function (popupContainer) {\n        raf[\"a\" /* default */].cancel(_this.attachId);\n        var _this$props3 = _this.props,\n            getPopupContainer = _this$props3.getPopupContainer,\n            getDocument = _this$props3.getDocument;\n\n        var domNode = _this.getRootDomNode();\n\n        var mountNode;\n\n        if (!getPopupContainer) {\n          mountNode = getDocument(_this.getRootDomNode()).body;\n        } else if (domNode || getPopupContainer.length === 0) {\n          // Compatible for legacy getPopupContainer with domNode argument.\n          // If no need `domNode` argument, will call directly.\n          // https://codesandbox.io/s/eloquent-mclean-ss93m?file=/src/App.js\n          mountNode = getPopupContainer(domNode);\n        }\n\n        if (mountNode) {\n          mountNode.appendChild(popupContainer);\n        } else {\n          // Retry after frame render in case parent not ready\n          _this.attachId = Object(raf[\"a\" /* default */])(function () {\n            _this.attachParent(popupContainer);\n          });\n        }\n      };\n\n      _this.getContainer = function () {\n        var getDocument = _this.props.getDocument;\n        var popupContainer = getDocument(_this.getRootDomNode()).createElement('div'); // Make sure default popup container will never cause scrollbar appearing\n        // https://github.com/react-component/trigger/issues/41\n\n        popupContainer.style.position = 'absolute';\n        popupContainer.style.top = '0';\n        popupContainer.style.left = '0';\n        popupContainer.style.width = '100%';\n\n        _this.attachParent(popupContainer);\n\n        return popupContainer;\n      };\n\n      _this.setPoint = function (point) {\n        var alignPoint = _this.props.alignPoint;\n        if (!alignPoint || !point) return;\n\n        _this.setState({\n          point: {\n            pageX: point.pageX,\n            pageY: point.pageY\n          }\n        });\n      };\n\n      _this.handlePortalUpdate = function () {\n        if (_this.state.prevPopupVisible !== _this.state.popupVisible) {\n          _this.props.afterPopupVisibleChange(_this.state.popupVisible);\n        }\n      };\n\n      _this.triggerContextValue = {\n        onPopupMouseDown: _this.onPopupMouseDown\n      };\n\n      var _popupVisible;\n\n      if ('popupVisible' in props) {\n        _popupVisible = !!props.popupVisible;\n      } else {\n        _popupVisible = !!props.defaultPopupVisible;\n      }\n\n      _this.state = {\n        prevPopupVisible: _popupVisible,\n        popupVisible: _popupVisible\n      };\n      ALL_HANDLERS.forEach(function (h) {\n        _this[\"fire\".concat(h)] = function (e) {\n          _this.fireEvents(h, e);\n        };\n      });\n      return _this;\n    }\n\n    Object(createClass[\"a\" /* default */])(Trigger, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this.componentDidUpdate();\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate() {\n        var props = this.props;\n        var state = this.state; // We must listen to `mousedown` or `touchstart`, edge case:\n        // https://github.com/ant-design/ant-design/issues/5804\n        // https://github.com/react-component/calendar/issues/250\n        // https://github.com/react-component/trigger/issues/50\n\n        if (state.popupVisible) {\n          var currentDocument;\n\n          if (!this.clickOutsideHandler && (this.isClickToHide() || this.isContextMenuToShow())) {\n            currentDocument = props.getDocument(this.getRootDomNode());\n            this.clickOutsideHandler = Object(addEventListener[\"a\" /* default */])(currentDocument, 'mousedown', this.onDocumentClick);\n          } // always hide on mobile\n\n\n          if (!this.touchOutsideHandler) {\n            currentDocument = currentDocument || props.getDocument(this.getRootDomNode());\n            this.touchOutsideHandler = Object(addEventListener[\"a\" /* default */])(currentDocument, 'touchstart', this.onDocumentClick);\n          } // close popup when trigger type contains 'onContextMenu' and document is scrolling.\n\n\n          if (!this.contextMenuOutsideHandler1 && this.isContextMenuToShow()) {\n            currentDocument = currentDocument || props.getDocument(this.getRootDomNode());\n            this.contextMenuOutsideHandler1 = Object(addEventListener[\"a\" /* default */])(currentDocument, 'scroll', this.onContextMenuClose);\n          } // close popup when trigger type contains 'onContextMenu' and window is blur.\n\n\n          if (!this.contextMenuOutsideHandler2 && this.isContextMenuToShow()) {\n            this.contextMenuOutsideHandler2 = Object(addEventListener[\"a\" /* default */])(window, 'blur', this.onContextMenuClose);\n          }\n\n          return;\n        }\n\n        this.clearOutsideHandler();\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        this.clearDelayTimer();\n        this.clearOutsideHandler();\n        clearTimeout(this.mouseDownTimeout);\n        raf[\"a\" /* default */].cancel(this.attachId);\n      }\n    }, {\n      key: \"getPopupDomNode\",\n      value: function getPopupDomNode() {\n        var _this$popupRef$curren2; // for test\n\n\n        return ((_this$popupRef$curren2 = this.popupRef.current) === null || _this$popupRef$curren2 === void 0 ? void 0 : _this$popupRef$curren2.getElement()) || null;\n      }\n    }, {\n      key: \"getPopupAlign\",\n      value: function getPopupAlign() {\n        var props = this.props;\n        var popupPlacement = props.popupPlacement,\n            popupAlign = props.popupAlign,\n            builtinPlacements = props.builtinPlacements;\n\n        if (popupPlacement && builtinPlacements) {\n          return getAlignFromPlacement(builtinPlacements, popupPlacement, popupAlign);\n        }\n\n        return popupAlign;\n      }\n    }, {\n      key: \"setPopupVisible\",\n      value:\n      /**\n       * @param popupVisible    Show or not the popup element\n       * @param event           SyntheticEvent, used for `pointAlign`\n       */\n      function setPopupVisible(popupVisible, event) {\n        var alignPoint = this.props.alignPoint;\n        var prevPopupVisible = this.state.popupVisible;\n        this.clearDelayTimer();\n\n        if (prevPopupVisible !== popupVisible) {\n          if (!('popupVisible' in this.props)) {\n            this.setState({\n              popupVisible: popupVisible,\n              prevPopupVisible: prevPopupVisible\n            });\n          }\n\n          this.props.onPopupVisibleChange(popupVisible);\n        } // Always record the point position since mouseEnterDelay will delay the show\n\n\n        if (alignPoint && event && popupVisible) {\n          this.setPoint(event);\n        }\n      }\n    }, {\n      key: \"delaySetPopupVisible\",\n      value: function delaySetPopupVisible(visible, delayS, event) {\n        var _this2 = this;\n\n        var delay = delayS * 1000;\n        this.clearDelayTimer();\n\n        if (delay) {\n          var point = event ? {\n            pageX: event.pageX,\n            pageY: event.pageY\n          } : null;\n          this.delayTimer = window.setTimeout(function () {\n            _this2.setPopupVisible(visible, point);\n\n            _this2.clearDelayTimer();\n          }, delay);\n        } else {\n          this.setPopupVisible(visible, event);\n        }\n      }\n    }, {\n      key: \"clearDelayTimer\",\n      value: function clearDelayTimer() {\n        if (this.delayTimer) {\n          clearTimeout(this.delayTimer);\n          this.delayTimer = null;\n        }\n      }\n    }, {\n      key: \"clearOutsideHandler\",\n      value: function clearOutsideHandler() {\n        if (this.clickOutsideHandler) {\n          this.clickOutsideHandler.remove();\n          this.clickOutsideHandler = null;\n        }\n\n        if (this.contextMenuOutsideHandler1) {\n          this.contextMenuOutsideHandler1.remove();\n          this.contextMenuOutsideHandler1 = null;\n        }\n\n        if (this.contextMenuOutsideHandler2) {\n          this.contextMenuOutsideHandler2.remove();\n          this.contextMenuOutsideHandler2 = null;\n        }\n\n        if (this.touchOutsideHandler) {\n          this.touchOutsideHandler.remove();\n          this.touchOutsideHandler = null;\n        }\n      }\n    }, {\n      key: \"createTwoChains\",\n      value: function createTwoChains(event) {\n        var childPros = this.props.children.props;\n        var props = this.props;\n\n        if (childPros[event] && props[event]) {\n          return this[\"fire\".concat(event)];\n        }\n\n        return childPros[event] || props[event];\n      }\n    }, {\n      key: \"isClickToShow\",\n      value: function isClickToShow() {\n        var _this$props4 = this.props,\n            action = _this$props4.action,\n            showAction = _this$props4.showAction;\n        return action.indexOf('click') !== -1 || showAction.indexOf('click') !== -1;\n      }\n    }, {\n      key: \"isContextMenuOnly\",\n      value: function isContextMenuOnly() {\n        var action = this.props.action;\n        return action === 'contextMenu' || action.length === 1 && action[0] === 'contextMenu';\n      }\n    }, {\n      key: \"isContextMenuToShow\",\n      value: function isContextMenuToShow() {\n        var _this$props5 = this.props,\n            action = _this$props5.action,\n            showAction = _this$props5.showAction;\n        return action.indexOf('contextMenu') !== -1 || showAction.indexOf('contextMenu') !== -1;\n      }\n    }, {\n      key: \"isClickToHide\",\n      value: function isClickToHide() {\n        var _this$props6 = this.props,\n            action = _this$props6.action,\n            hideAction = _this$props6.hideAction;\n        return action.indexOf('click') !== -1 || hideAction.indexOf('click') !== -1;\n      }\n    }, {\n      key: \"isMouseEnterToShow\",\n      value: function isMouseEnterToShow() {\n        var _this$props7 = this.props,\n            action = _this$props7.action,\n            showAction = _this$props7.showAction;\n        return action.indexOf('hover') !== -1 || showAction.indexOf('mouseEnter') !== -1;\n      }\n    }, {\n      key: \"isMouseLeaveToHide\",\n      value: function isMouseLeaveToHide() {\n        var _this$props8 = this.props,\n            action = _this$props8.action,\n            hideAction = _this$props8.hideAction;\n        return action.indexOf('hover') !== -1 || hideAction.indexOf('mouseLeave') !== -1;\n      }\n    }, {\n      key: \"isFocusToShow\",\n      value: function isFocusToShow() {\n        var _this$props9 = this.props,\n            action = _this$props9.action,\n            showAction = _this$props9.showAction;\n        return action.indexOf('focus') !== -1 || showAction.indexOf('focus') !== -1;\n      }\n    }, {\n      key: \"isBlurToHide\",\n      value: function isBlurToHide() {\n        var _this$props10 = this.props,\n            action = _this$props10.action,\n            hideAction = _this$props10.hideAction;\n        return action.indexOf('focus') !== -1 || hideAction.indexOf('blur') !== -1;\n      }\n    }, {\n      key: \"forcePopupAlign\",\n      value: function forcePopupAlign() {\n        if (this.state.popupVisible) {\n          var _this$popupRef$curren3;\n\n          (_this$popupRef$curren3 = this.popupRef.current) === null || _this$popupRef$curren3 === void 0 ? void 0 : _this$popupRef$curren3.forceAlign();\n        }\n      }\n    }, {\n      key: \"fireEvents\",\n      value: function fireEvents(type, e) {\n        var childCallback = this.props.children.props[type];\n\n        if (childCallback) {\n          childCallback(e);\n        }\n\n        var callback = this.props[type];\n\n        if (callback) {\n          callback(e);\n        }\n      }\n    }, {\n      key: \"close\",\n      value: function close() {\n        this.setPopupVisible(false);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var popupVisible = this.state.popupVisible;\n        var _this$props11 = this.props,\n            children = _this$props11.children,\n            forceRender = _this$props11.forceRender,\n            alignPoint = _this$props11.alignPoint,\n            className = _this$props11.className,\n            autoDestroy = _this$props11.autoDestroy;\n        var child = react[\"Children\"].only(children);\n        var newChildProps = {\n          key: 'trigger'\n        }; // ============================== Visible Handlers ==============================\n        // >>> ContextMenu\n\n        if (this.isContextMenuToShow()) {\n          newChildProps.onContextMenu = this.onContextMenu;\n        } else {\n          newChildProps.onContextMenu = this.createTwoChains('onContextMenu');\n        } // >>> Click\n\n\n        if (this.isClickToHide() || this.isClickToShow()) {\n          newChildProps.onClick = this.onClick;\n          newChildProps.onMouseDown = this.onMouseDown;\n          newChildProps.onTouchStart = this.onTouchStart;\n        } else {\n          newChildProps.onClick = this.createTwoChains('onClick');\n          newChildProps.onMouseDown = this.createTwoChains('onMouseDown');\n          newChildProps.onTouchStart = this.createTwoChains('onTouchStart');\n        } // >>> Hover(enter)\n\n\n        if (this.isMouseEnterToShow()) {\n          newChildProps.onMouseEnter = this.onMouseEnter; // Point align\n\n          if (alignPoint) {\n            newChildProps.onMouseMove = this.onMouseMove;\n          }\n        } else {\n          newChildProps.onMouseEnter = this.createTwoChains('onMouseEnter');\n        } // >>> Hover(leave)\n\n\n        if (this.isMouseLeaveToHide()) {\n          newChildProps.onMouseLeave = this.onMouseLeave;\n        } else {\n          newChildProps.onMouseLeave = this.createTwoChains('onMouseLeave');\n        } // >>> Focus\n\n\n        if (this.isFocusToShow() || this.isBlurToHide()) {\n          newChildProps.onFocus = this.onFocus;\n          newChildProps.onBlur = this.onBlur;\n        } else {\n          newChildProps.onFocus = this.createTwoChains('onFocus');\n          newChildProps.onBlur = this.createTwoChains('onBlur');\n        } // =================================== Render ===================================\n\n\n        var childrenClassName = classnames_default()(child && child.props && child.props.className, className);\n\n        if (childrenClassName) {\n          newChildProps.className = childrenClassName;\n        }\n\n        var cloneProps = Object(objectSpread2[\"a\" /* default */])({}, newChildProps);\n\n        if (Object(es_ref[\"c\" /* supportRef */])(child)) {\n          cloneProps.ref = Object(es_ref[\"a\" /* composeRef */])(this.triggerRef, child.ref);\n        }\n\n        var trigger = /*#__PURE__*/react[\"cloneElement\"](child, cloneProps);\n        var portal; // prevent unmounting after it's rendered\n\n        if (popupVisible || this.popupRef.current || forceRender) {\n          portal = /*#__PURE__*/react[\"createElement\"](PortalComponent, {\n            key: \"portal\",\n            getContainer: this.getContainer,\n            didUpdate: this.handlePortalUpdate\n          }, this.getComponent());\n        }\n\n        if (!popupVisible && autoDestroy) {\n          portal = null;\n        }\n\n        return /*#__PURE__*/react[\"createElement\"](context.Provider, {\n          value: this.triggerContextValue\n        }, trigger, portal);\n      }\n    }], [{\n      key: \"getDerivedStateFromProps\",\n      value: function getDerivedStateFromProps(_ref, prevState) {\n        var popupVisible = _ref.popupVisible;\n        var newState = {};\n\n        if (popupVisible !== undefined && prevState.popupVisible !== popupVisible) {\n          newState.popupVisible = popupVisible;\n          newState.prevPopupVisible = prevState.popupVisible;\n        }\n\n        return newState;\n      }\n    }]);\n\n    return Trigger;\n  }(react[\"Component\"]);\n\n  Trigger.contextType = context;\n  Trigger.defaultProps = {\n    prefixCls: 'rc-trigger-popup',\n    getPopupClassNameFromAlign: returnEmptyString,\n    getDocument: returnDocument,\n    onPopupVisibleChange: noop,\n    afterPopupVisibleChange: noop,\n    onPopupAlign: noop,\n    popupClassName: '',\n    mouseEnterDelay: 0,\n    mouseLeaveDelay: 0.1,\n    focusDelay: 0,\n    blurDelay: 0.15,\n    popupStyle: {},\n    destroyPopupOnHide: false,\n    popupAlign: {},\n    defaultPopupVisible: false,\n    mask: false,\n    maskClosable: true,\n    action: [],\n    showAction: [],\n    hideAction: [],\n    autoDestroy: false\n  };\n  return Trigger;\n}\n/* harmony default export */ var rc_trigger_es = __webpack_exports__[\"a\"] = (generateTrigger(Portal[\"a\" /* default */]));\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/rc-trigger/es/index.js_+_14_modules?")},hyzI:function(module,exports,__webpack_require__){eval('var mapCacheClear = __webpack_require__("m5o6"),\n    mapCacheDelete = __webpack_require__("d0UJ"),\n    mapCacheGet = __webpack_require__("eask"),\n    mapCacheHas = __webpack_require__("9SKQ"),\n    mapCacheSet = __webpack_require__("e63W");\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype[\'delete\'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_MapCache.js?')},ioev:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return contains; });\nfunction contains(root, n) {\n  if (!root) {\n    return false;\n  }\n\n  return root.contains(n);\n}\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/rc-util/es/Dom/contains.js?')},"jem/":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, "a", function() { return /* binding */ _slicedToArray; });\n\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i["return"] != null) _i["return"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js\nvar unsupportedIterableToArray = __webpack_require__("/VAb");\n\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js\nfunction _nonIterableRest() {\n  throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n}\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\n\n\n\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || Object(unsupportedIterableToArray["a" /* default */])(arr, i) || _nonIterableRest();\n}\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/slicedToArray.js_+_3_modules?')},kHoZ:function(module,exports){eval("/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_objectToString.js?")},"kkM+":function(module,exports,__webpack_require__){eval("var DataView = __webpack_require__(\"QF3D\"),\n    Map = __webpack_require__(\"qeCs\"),\n    Promise = __webpack_require__(\"IS0S\"),\n    Set = __webpack_require__(\"OBn4\"),\n    WeakMap = __webpack_require__(\"4+Vk\"),\n    baseGetTag = __webpack_require__(\"Dhk8\"),\n    toSource = __webpack_require__(\"c18h\");\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_getTag.js?")},kwr2:function(module,exports,__webpack_require__){eval('var assocIndexOf = __webpack_require__("6QIk");\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_listCacheDelete.js?')},m5o6:function(module,exports,__webpack_require__){eval("var Hash = __webpack_require__(\"Tv3l\"),\n    ListCache = __webpack_require__(\"+ooz\"),\n    Map = __webpack_require__(\"qeCs\");\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_mapCacheClear.js?")},mGzy:function(module,exports,__webpack_require__){eval('var root = __webpack_require__("IBsm");\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_Uint8Array.js?')},mUsV:function(module,exports,__webpack_require__){eval("var nativeCreate = __webpack_require__(\"5pfJ\");\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_hashSet.js?")},"mkj/":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"b\", function() { return /* binding */ defaultProps; });\n\n// UNUSED EXPORTS: Prism\n\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/prism-react-renderer/prism/index.js\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n * MIT license http://www.opensource.org/licenses/mit-license.php/\n * @author Lea Verou http://lea.verou.me\n */\n\n/**\n * prism-react-renderer:\n * This file has been modified to remove:\n * - globals and window dependency\n * - worker support\n * - highlightAll and other element dependent methods\n * - _.hooks helpers\n * - UMD/node-specific hacks\n * It has also been run through prettier\n */\nvar Prism = function () {\n  var uniqueId = 0;\n  var _ = {\n    util: {\n      encode: function encode(tokens) {\n        if (tokens instanceof Token) {\n          return new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n        } else if (_.util.type(tokens) === \"Array\") {\n          return tokens.map(_.util.encode);\n        } else {\n          return tokens.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/\\u00a0/g, \" \");\n        }\n      },\n      type: function type(o) {\n        return Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];\n      },\n      objId: function objId(obj) {\n        if (!obj[\"__id\"]) {\n          Object.defineProperty(obj, \"__id\", {\n            value: ++uniqueId\n          });\n        }\n\n        return obj[\"__id\"];\n      },\n      // Deep clone a language definition (e.g. to extend it)\n      clone: function clone(o, visited) {\n        var type = _.util.type(o);\n\n        visited = visited || {};\n\n        switch (type) {\n          case \"Object\":\n            if (visited[_.util.objId(o)]) {\n              return visited[_.util.objId(o)];\n            }\n\n            var clone = {};\n            visited[_.util.objId(o)] = clone;\n\n            for (var key in o) {\n              if (o.hasOwnProperty(key)) {\n                clone[key] = _.util.clone(o[key], visited);\n              }\n            }\n\n            return clone;\n\n          case \"Array\":\n            if (visited[_.util.objId(o)]) {\n              return visited[_.util.objId(o)];\n            }\n\n            var clone = [];\n            visited[_.util.objId(o)] = clone;\n            o.forEach(function (v, i) {\n              clone[i] = _.util.clone(v, visited);\n            });\n            return clone;\n        }\n\n        return o;\n      }\n    },\n    languages: {\n      extend: function extend(id, redef) {\n        var lang = _.util.clone(_.languages[id]);\n\n        for (var key in redef) {\n          lang[key] = redef[key];\n        }\n\n        return lang;\n      },\n\n      /**\n       * Insert a token before another token in a language literal\n       * As this needs to recreate the object (we cannot actually insert before keys in object literals),\n       * we cannot just provide an object, we need anobject and a key.\n       * @param inside The key (or language id) of the parent\n       * @param before The key to insert before. If not provided, the function appends instead.\n       * @param insert Object with the key/value pairs to insert\n       * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\n       */\n      insertBefore: function insertBefore(inside, before, insert, root) {\n        root = root || _.languages;\n        var grammar = root[inside];\n\n        if (arguments.length == 2) {\n          insert = arguments[1];\n\n          for (var newToken in insert) {\n            if (insert.hasOwnProperty(newToken)) {\n              grammar[newToken] = insert[newToken];\n            }\n          }\n\n          return grammar;\n        }\n\n        var ret = {};\n\n        for (var token in grammar) {\n          if (grammar.hasOwnProperty(token)) {\n            if (token == before) {\n              for (var newToken in insert) {\n                if (insert.hasOwnProperty(newToken)) {\n                  ret[newToken] = insert[newToken];\n                }\n              }\n            }\n\n            ret[token] = grammar[token];\n          }\n        } // Update references in other language definitions\n\n\n        _.languages.DFS(_.languages, function (key, value) {\n          if (value === root[inside] && key != inside) {\n            this[key] = ret;\n          }\n        });\n\n        return root[inside] = ret;\n      },\n      // Traverse a language definition with Depth First Search\n      DFS: function DFS(o, callback, type, visited) {\n        visited = visited || {};\n\n        for (var i in o) {\n          if (o.hasOwnProperty(i)) {\n            callback.call(o, i, o[i], type || i);\n\n            if (_.util.type(o[i]) === \"Object\" && !visited[_.util.objId(o[i])]) {\n              visited[_.util.objId(o[i])] = true;\n\n              _.languages.DFS(o[i], callback, null, visited);\n            } else if (_.util.type(o[i]) === \"Array\" && !visited[_.util.objId(o[i])]) {\n              visited[_.util.objId(o[i])] = true;\n\n              _.languages.DFS(o[i], callback, i, visited);\n            }\n          }\n        }\n      }\n    },\n    plugins: {},\n    highlight: function highlight(text, grammar, language) {\n      var env = {\n        code: text,\n        grammar: grammar,\n        language: language\n      };\n\n      _.hooks.run(\"before-tokenize\", env);\n\n      env.tokens = _.tokenize(env.code, env.grammar);\n\n      _.hooks.run(\"after-tokenize\", env);\n\n      return Token.stringify(_.util.encode(env.tokens), env.language);\n    },\n    matchGrammar: function matchGrammar(text, strarr, grammar, index, startPos, oneshot, target) {\n      var Token = _.Token;\n\n      for (var token in grammar) {\n        if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n          continue;\n        }\n\n        if (token == target) {\n          return;\n        }\n\n        var patterns = grammar[token];\n        patterns = _.util.type(patterns) === \"Array\" ? patterns : [patterns];\n\n        for (var j = 0; j < patterns.length; ++j) {\n          var pattern = patterns[j],\n              inside = pattern.inside,\n              lookbehind = !!pattern.lookbehind,\n              greedy = !!pattern.greedy,\n              lookbehindLength = 0,\n              alias = pattern.alias;\n\n          if (greedy && !pattern.pattern.global) {\n            // Without the global flag, lastIndex won't work\n            var flags = pattern.pattern.toString().match(/[imuy]*$/)[0];\n            pattern.pattern = RegExp(pattern.pattern.source, flags + \"g\");\n          }\n\n          pattern = pattern.pattern || pattern; // Don\u2019t cache length as it changes during the loop\n\n          for (var i = index, pos = startPos; i < strarr.length; pos += strarr[i].length, ++i) {\n            var str = strarr[i];\n\n            if (strarr.length > text.length) {\n              // Something went terribly wrong, ABORT, ABORT!\n              return;\n            }\n\n            if (str instanceof Token) {\n              continue;\n            }\n\n            if (greedy && i != strarr.length - 1) {\n              pattern.lastIndex = pos;\n              var match = pattern.exec(text);\n\n              if (!match) {\n                break;\n              }\n\n              var from = match.index + (lookbehind ? match[1].length : 0),\n                  to = match.index + match[0].length,\n                  k = i,\n                  p = pos;\n\n              for (var len = strarr.length; k < len && (p < to || !strarr[k].type && !strarr[k - 1].greedy); ++k) {\n                p += strarr[k].length; // Move the index i to the element in strarr that is closest to from\n\n                if (from >= p) {\n                  ++i;\n                  pos = p;\n                }\n              } // If strarr[i] is a Token, then the match starts inside another Token, which is invalid\n\n\n              if (strarr[i] instanceof Token) {\n                continue;\n              } // Number of tokens to delete and replace with the new match\n\n\n              delNum = k - i;\n              str = text.slice(pos, p);\n              match.index -= pos;\n            } else {\n              pattern.lastIndex = 0;\n              var match = pattern.exec(str),\n                  delNum = 1;\n            }\n\n            if (!match) {\n              if (oneshot) {\n                break;\n              }\n\n              continue;\n            }\n\n            if (lookbehind) {\n              lookbehindLength = match[1] ? match[1].length : 0;\n            }\n\n            var from = match.index + lookbehindLength,\n                match = match[0].slice(lookbehindLength),\n                to = from + match.length,\n                before = str.slice(0, from),\n                after = str.slice(to);\n            var args = [i, delNum];\n\n            if (before) {\n              ++i;\n              pos += before.length;\n              args.push(before);\n            }\n\n            var wrapped = new Token(token, inside ? _.tokenize(match, inside) : match, alias, match, greedy);\n            args.push(wrapped);\n\n            if (after) {\n              args.push(after);\n            }\n\n            Array.prototype.splice.apply(strarr, args);\n\n            if (delNum != 1) {\n              _.matchGrammar(text, strarr, grammar, i, pos, true, token);\n            }\n\n            if (oneshot) {\n              break;\n            }\n          }\n        }\n      }\n    },\n    hooks: {\n      add: function add() {},\n      run: function run(name, env) {}\n    },\n    tokenize: function tokenize(text, grammar, language) {\n      var strarr = [text];\n      var rest = grammar.rest;\n\n      if (rest) {\n        for (var token in rest) {\n          grammar[token] = rest[token];\n        }\n\n        delete grammar.rest;\n      }\n\n      _.matchGrammar(text, strarr, grammar, 0, 0, false);\n\n      return strarr;\n    }\n  };\n\n  var Token = _.Token = function (type, content, alias, matchedStr, greedy) {\n    this.type = type;\n    this.content = content;\n    this.alias = alias; // Copy of the full string this token was created from\n\n    this.length = (matchedStr || \"\").length | 0;\n    this.greedy = !!greedy;\n  };\n\n  Token.stringify = function (o, language, parent) {\n    if (typeof o == \"string\") {\n      return o;\n    }\n\n    if (_.util.type(o) === \"Array\") {\n      return o.map(function (element) {\n        return Token.stringify(element, language, o);\n      }).join(\"\");\n    }\n\n    var env = {\n      type: o.type,\n      content: Token.stringify(o.content, language, parent),\n      tag: \"span\",\n      classes: [\"token\", o.type],\n      attributes: {},\n      language: language,\n      parent: parent\n    };\n\n    if (o.alias) {\n      var aliases = _.util.type(o.alias) === \"Array\" ? o.alias : [o.alias];\n      Array.prototype.push.apply(env.classes, aliases);\n    }\n\n    var attributes = Object.keys(env.attributes).map(function (name) {\n      return name + '=\"' + (env.attributes[name] || \"\").replace(/\"/g, \"&quot;\") + '\"';\n    }).join(\" \");\n    return \"<\" + env.tag + ' class=\"' + env.classes.join(\" \") + '\"' + (attributes ? \" \" + attributes : \"\") + \">\" + env.content + \"</\" + env.tag + \">\";\n  };\n\n  return _;\n}();\n/* This content is auto-generated to include some prismjs language components: */\n\n/* \"prismjs/components/prism-markup\" */\n\n\nPrism.languages.markup = {\n  'comment': /\x3c!--[\\s\\S]*?--\x3e/,\n  'prolog': /<\\?[\\s\\S]+?\\?>/,\n  'doctype': {\n    // https://www.w3.org/TR/xml/#NT-doctypedecl\n    pattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|\x3c!--(?:[^-]|-(?!->))*--\x3e)*\\]\\s*)?>/i,\n    greedy: true,\n    inside: {\n      'internal-subset': {\n        pattern: /(\\[)[\\s\\S]+(?=\\]>$)/,\n        lookbehind: true,\n        greedy: true,\n        inside: null // see below\n\n      },\n      'string': {\n        pattern: /\"[^\"]*\"|'[^']*'/,\n        greedy: true\n      },\n      'punctuation': /^<!|>$|[[\\]]/,\n      'doctype-tag': /^DOCTYPE/,\n      'name': /[^\\s<>'\"]+/\n    }\n  },\n  'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n  'tag': {\n    pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n    greedy: true,\n    inside: {\n      'tag': {\n        pattern: /^<\\/?[^\\s>\\/]+/,\n        inside: {\n          'punctuation': /^<\\/?/,\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      },\n      'attr-value': {\n        pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n        inside: {\n          'punctuation': [{\n            pattern: /^=/,\n            alias: 'attr-equals'\n          }, /\"|'/]\n        }\n      },\n      'punctuation': /\\/?>/,\n      'attr-name': {\n        pattern: /[^\\s>\\/]+/,\n        inside: {\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      }\n    }\n  },\n  'entity': [{\n    pattern: /&[\\da-z]{1,8};/i,\n    alias: 'named-entity'\n  }, /&#x?[\\da-f]{1,8};/i]\n};\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] = Prism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup; // Plugin to make entity title show the real entity, idea by Roman Komarov\n\nPrism.hooks.add('wrap', function (env) {\n  if (env.type === 'entity') {\n    env.attributes['title'] = env.content.replace(/&amp;/, '&');\n  }\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n  /**\n   * Adds an inlined language to markup.\n   *\n   * An example of an inlined language is CSS with `<style>` tags.\n   *\n   * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addInlined('style', 'css');\n   */\n  value: function addInlined(tagName, lang) {\n    var includedCdataInside = {};\n    includedCdataInside['language-' + lang] = {\n      pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n      lookbehind: true,\n      inside: Prism.languages[lang]\n    };\n    includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n    var inside = {\n      'included-cdata': {\n        pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n        inside: includedCdataInside\n      }\n    };\n    inside['language-' + lang] = {\n      pattern: /[\\s\\S]+/,\n      inside: Prism.languages[lang]\n    };\n    var def = {};\n    def[tagName] = {\n      pattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () {\n        return tagName;\n      }), 'i'),\n      lookbehind: true,\n      greedy: true,\n      inside: inside\n    };\n    Prism.languages.insertBefore('markup', 'cdata', def);\n  }\n});\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n/* \"prismjs/components/prism-bash\" */\n\n(function (Prism) {\n  // $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\\n' '|'\n  // + LC_ALL, RANDOM, REPLY, SECONDS.\n  // + make sure PS1..4 are here as they are not always set,\n  // - some useless things.\n  var envVars = '\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b';\n  var commandAfterHeredoc = {\n    pattern: /(^([\"']?)\\w+\\2)[ \\t]+\\S.*/,\n    lookbehind: true,\n    alias: 'punctuation',\n    // this looks reasonably well in all themes\n    inside: null // see below\n\n  };\n  var insideString = {\n    'bash': commandAfterHeredoc,\n    'environment': {\n      pattern: RegExp(\"\\\\$\" + envVars),\n      alias: 'constant'\n    },\n    'variable': [// [0]: Arithmetic Environment\n    {\n      pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n      greedy: true,\n      inside: {\n        // If there is a $ sign at the beginning highlight $(( and )) as variable\n        'variable': [{\n          pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n          lookbehind: true\n        }, /^\\$\\(\\(/],\n        'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n        // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n        'operator': /--?|-=|\\+\\+?|\\+=|!=?|~|\\*\\*?|\\*=|\\/=?|%=?|<<=?|>>=?|<=?|>=?|==?|&&?|&=|\\^=?|\\|\\|?|\\|=|\\?|:/,\n        // If there is no $ sign at the beginning highlight (( and )) as punctuation\n        'punctuation': /\\(\\(?|\\)\\)?|,|;/\n      }\n    }, // [1]: Command Substitution\n    {\n      pattern: /\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,\n      greedy: true,\n      inside: {\n        'variable': /^\\$\\(|^`|\\)$|`$/\n      }\n    }, // [2]: Brace expansion\n    {\n      pattern: /\\$\\{[^}]+\\}/,\n      greedy: true,\n      inside: {\n        'operator': /:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,\n        'punctuation': /[\\[\\]]/,\n        'environment': {\n          pattern: RegExp(\"(\\\\{)\" + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      }\n    }, /\\$(?:\\w+|[#?*!@$])/],\n    // Escape sequences from echo and printf's manuals, and escaped quotes.\n    'entity': /\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|x[0-9a-fA-F]{1,2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})/\n  };\n  Prism.languages.bash = {\n    'shebang': {\n      pattern: /^#!\\s*\\/.*/,\n      alias: 'important'\n    },\n    'comment': {\n      pattern: /(^|[^\"{\\\\$])#.*/,\n      lookbehind: true\n    },\n    'function-name': [// a) function foo {\n    // b) foo() {\n    // c) function foo() {\n    // but not \u201cfoo {\u201d\n    {\n      // a) and c)\n      pattern: /(\\bfunction\\s+)\\w+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,\n      lookbehind: true,\n      alias: 'function'\n    }, {\n      // b)\n      pattern: /\\b\\w+(?=\\s*\\(\\s*\\)\\s*\\{)/,\n      alias: 'function'\n    }],\n    // Highlight variable names as variables in for and select beginnings.\n    'for-or-select': {\n      pattern: /(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,\n      alias: 'variable',\n      lookbehind: true\n    },\n    // Highlight variable names as variables in the left-hand part\n    // of assignments (\u201c=\u201d and \u201c+=\u201d).\n    'assign-left': {\n      pattern: /(^|[\\s;|&]|[<>]\\()\\w+(?=\\+?=)/,\n      inside: {\n        'environment': {\n          pattern: RegExp(\"(^|[\\\\s;|&]|[<>]\\\\()\" + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      },\n      alias: 'variable',\n      lookbehind: true\n    },\n    'string': [// Support for Here-documents https://en.wikipedia.org/wiki/Here_document\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)(\\w+?)\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\2/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }, // Here-document with quotes around the tag\n    // \u2192 No expansion (so no \u201cinside\u201d).\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\3/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'bash': commandAfterHeredoc\n      }\n    }, // \u201cNormal\u201d string\n    {\n      pattern: /(^|[^\\\\](?:\\\\\\\\)*)([\"'])(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|(?!\\2)[^\\\\`$])*\\2/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }],\n    'environment': {\n      pattern: RegExp(\"\\\\$?\" + envVars),\n      alias: 'constant'\n    },\n    'variable': insideString.variable,\n    'function': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|aptitude|apt-cache|apt-get|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'keyword': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:if|then|else|elif|fi|for|while|in|case|esac|function|select|do|done|until)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    // https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n    'builtin': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:\\.|:|break|cd|continue|eval|exec|exit|export|getopts|hash|pwd|readonly|return|shift|test|times|trap|umask|unset|alias|bind|builtin|caller|command|declare|echo|enable|help|let|local|logout|mapfile|printf|read|readarray|source|type|typeset|ulimit|unalias|set|shopt)(?=$|[)\\s;|&])/,\n      lookbehind: true,\n      // Alias added to make those easier to distinguish from strings.\n      alias: 'class-name'\n    },\n    'boolean': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:true|false)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'file-descriptor': {\n      pattern: /\\B&\\d\\b/,\n      alias: 'important'\n    },\n    'operator': {\n      // Lots of redirections here, but not just that.\n      pattern: /\\d?<>|>\\||\\+=|==?|!=?|=~|<<[<-]?|[&\\d]?>>|\\d?[<>]&?|&[>&]?|\\|[&|]?|<=?|>=?/,\n      inside: {\n        'file-descriptor': {\n          pattern: /^\\d/,\n          alias: 'important'\n        }\n      }\n    },\n    'punctuation': /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,\n    'number': {\n      pattern: /(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,\n      lookbehind: true\n    }\n  };\n  commandAfterHeredoc.inside = Prism.languages.bash;\n  /* Patterns in command substitution. */\n\n  var toBeCopied = ['comment', 'function-name', 'for-or-select', 'assign-left', 'string', 'environment', 'function', 'keyword', 'builtin', 'boolean', 'file-descriptor', 'operator', 'punctuation', 'number'];\n  var inside = insideString.variable[1].inside;\n\n  for (var i = 0; i < toBeCopied.length; i++) {\n    inside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]];\n  }\n\n  Prism.languages.shell = Prism.languages.bash;\n})(Prism);\n/* \"prismjs/components/prism-clike\" */\n\n\nPrism.languages.clike = {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: true,\n    greedy: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true,\n    greedy: true\n  }],\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n    lookbehind: true,\n    inside: {\n      'punctuation': /[.\\\\]/\n    }\n  },\n  'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n  'boolean': /\\b(?:true|false)\\b/,\n  'function': /\\w+(?=\\()/,\n  'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\n/* \"prismjs/components/prism-c\" */\n\nPrism.languages.c = Prism.languages.extend('clike', {\n  'comment': {\n    pattern: /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+|\\b[a-z]\\w*_t\\b/,\n    lookbehind: true\n  },\n  'keyword': /\\b(?:__attribute__|_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\\b/,\n  'function': /[a-z_]\\w*(?=\\s*\\()/i,\n  'number': /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\n  'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/\n});\nPrism.languages.insertBefore('c', 'string', {\n  'macro': {\n    // allow for multiline macro definitions\n    // spaces after the # character compile fine with gcc\n    pattern: /(^\\s*)#\\s*[a-z](?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n    lookbehind: true,\n    greedy: true,\n    alias: 'property',\n    inside: {\n      'string': [{\n        // highlight the path of the include statement as a string\n        pattern: /^(#\\s*include\\s*)<[^>]+>/,\n        lookbehind: true\n      }, Prism.languages.c['string']],\n      'comment': Prism.languages.c['comment'],\n      'macro-name': [{\n        pattern: /(^#\\s*define\\s+)\\w+\\b(?!\\()/i,\n        lookbehind: true\n      }, {\n        pattern: /(^#\\s*define\\s+)\\w+\\b(?=\\()/i,\n        lookbehind: true,\n        alias: 'function'\n      }],\n      // highlight macro directives as keywords\n      'directive': {\n        pattern: /^(#\\s*)[a-z]+/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'directive-hash': /^#/,\n      'punctuation': /##|\\\\(?=[\\r\\n])/,\n      'expression': {\n        pattern: /\\S[\\s\\S]*/,\n        inside: Prism.languages.c\n      }\n    }\n  },\n  // highlight predefined macros as constants\n  'constant': /\\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\\b/\n});\ndelete Prism.languages.c['boolean'];\n/* \"prismjs/components/prism-cpp\" */\n\n(function (Prism) {\n  var keyword = /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char8_t|char16_t|char32_t|class|compl|concept|const|consteval|constexpr|constinit|const_cast|continue|co_await|co_return|co_yield|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/;\n  Prism.languages.cpp = Prism.languages.extend('c', {\n    'class-name': [{\n      pattern: RegExp(/(\\b(?:class|concept|enum|struct|typename)\\s+)(?!<keyword>)\\w+/.source.replace(/<keyword>/g, function () {\n        return keyword.source;\n      })),\n      lookbehind: true\n    }, // This is intended to capture the class name of method implementations like:\n    //   void foo::bar() const {}\n    // However! The `foo` in the above example could also be a namespace, so we only capture the class name if\n    // it starts with an uppercase letter. This approximation should give decent results.\n    /\\b[A-Z]\\w*(?=\\s*::\\s*\\w+\\s*\\()/, // This will capture the class name before destructors like:\n    //   Foo::~Foo() {}\n    /\\b[A-Z_]\\w*(?=\\s*::\\s*~\\w+\\s*\\()/i, // This also intends to capture the class name of method implementations but here the class has template\n    // parameters, so it can't be a namespace (until C++ adds generic namespaces).\n    /\\w+(?=\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\\s*::\\s*\\w+\\s*\\()/],\n    'keyword': keyword,\n    'number': {\n      pattern: /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+(?:\\.[\\da-f']*)?|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+(?:\\.[\\d']*)?|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]{0,4}/i,\n      greedy: true\n    },\n    'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|<=>|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\n    'boolean': /\\b(?:true|false)\\b/\n  });\n  Prism.languages.insertBefore('cpp', 'string', {\n    'raw-string': {\n      pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n      alias: 'string',\n      greedy: true\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'class-name', {\n    // the base clause is an optional list of parent classes\n    // https://en.cppreference.com/w/cpp/language/class\n    'base-clause': {\n      pattern: /(\\b(?:class|struct)\\s+\\w+\\s*:\\s*)[^;{}\"'\\s]+(?:\\s+[^;{}\"'\\s]+)*(?=\\s*[;{])/,\n      lookbehind: true,\n      greedy: true,\n      inside: Prism.languages.extend('cpp', {})\n    }\n  });\n  Prism.languages.insertBefore('inside', 'operator', {\n    // All untokenized words that are not namespaces should be class names\n    'class-name': /\\b[a-z_]\\w*\\b(?!\\s*::)/i\n  }, Prism.languages.cpp['base-clause']);\n})(Prism);\n/* \"prismjs/components/prism-css\" */\n\n\n(function (Prism) {\n  var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n  Prism.languages.css = {\n    'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n    'atrule': {\n      pattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\n      inside: {\n        'rule': /^@[\\w-]+/,\n        'selector-function-argument': {\n          pattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n          lookbehind: true,\n          alias: 'selector'\n        },\n        'keyword': {\n          pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n          lookbehind: true\n        } // See rest below\n\n      }\n    },\n    'url': {\n      // https://drafts.csswg.org/css-values-3/#urls\n      pattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n      greedy: true,\n      inside: {\n        'function': /^url/i,\n        'punctuation': /^\\(|\\)$/,\n        'string': {\n          pattern: RegExp('^' + string.source + '$'),\n          alias: 'url'\n        }\n      }\n    },\n    'selector': RegExp('[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n    'string': {\n      pattern: string,\n      greedy: true\n    },\n    'property': /(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n    'important': /!important\\b/i,\n    'function': /[-a-z0-9]+(?=\\()/i,\n    'punctuation': /[(){};:,]/\n  };\n  Prism.languages.css['atrule'].inside.rest = Prism.languages.css;\n  var markup = Prism.languages.markup;\n\n  if (markup) {\n    markup.tag.addInlined('style', 'css');\n    Prism.languages.insertBefore('inside', 'attr-value', {\n      'style-attr': {\n        pattern: /(^|[\"'\\s])style\\s*=\\s*(?:\"[^\"]*\"|'[^']*')/i,\n        lookbehind: true,\n        inside: {\n          'attr-value': {\n            pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n            inside: {\n              'style': {\n                pattern: /([\"'])[\\s\\S]+(?=[\"']$)/,\n                lookbehind: true,\n                alias: 'language-css',\n                inside: Prism.languages.css\n              },\n              'punctuation': [{\n                pattern: /^=/,\n                alias: 'attr-equals'\n              }, /\"|'/]\n            }\n          },\n          'attr-name': /^style/i\n        }\n      }\n    }, markup.tag);\n  }\n})(Prism);\n/* \"prismjs/components/prism-css-extras\" */\n\n\n(function (Prism) {\n  var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n  var selectorInside;\n  Prism.languages.css.selector = {\n    pattern: Prism.languages.css.selector,\n    inside: selectorInside = {\n      'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n      'pseudo-class': /:[-\\w]+/,\n      'class': /\\.[-\\w]+/,\n      'id': /#[-\\w]+/,\n      'attribute': {\n        pattern: RegExp('\\\\[(?:[^[\\\\]\"\\']|' + string.source + ')*\\\\]'),\n        greedy: true,\n        inside: {\n          'punctuation': /^\\[|\\]$/,\n          'case-sensitivity': {\n            pattern: /(\\s)[si]$/i,\n            lookbehind: true,\n            alias: 'keyword'\n          },\n          'namespace': {\n            pattern: /^(\\s*)(?:(?!\\s)[-*\\w\\xA0-\\uFFFF])*\\|(?!=)/,\n            lookbehind: true,\n            inside: {\n              'punctuation': /\\|$/\n            }\n          },\n          'attr-name': {\n            pattern: /^(\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+/,\n            lookbehind: true\n          },\n          'attr-value': [string, {\n            pattern: /(=\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+(?=\\s*$)/,\n            lookbehind: true\n          }],\n          'operator': /[|~*^$]?=/\n        }\n      },\n      'n-th': [{\n        pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n        lookbehind: true,\n        inside: {\n          'number': /[\\dn]+/,\n          'operator': /[+-]/\n        }\n      }, {\n        pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n        lookbehind: true\n      }],\n      'combinator': />|\\+|~|\\|\\|/,\n      // the `tag` token has been existed and removed.\n      // because we can't find a perfect tokenize to match it.\n      // if you want to add it, please read https://github.com/PrismJS/prism/pull/2373 first.\n      'punctuation': /[(),]/\n    }\n  };\n  Prism.languages.css['atrule'].inside['selector-function-argument'].inside = selectorInside;\n  Prism.languages.insertBefore('css', 'property', {\n    'variable': {\n      pattern: /(^|[^-\\w\\xA0-\\uFFFF])--(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*/i,\n      lookbehind: true\n    }\n  });\n  var unit = {\n    pattern: /(\\b\\d+)(?:%|[a-z]+\\b)/,\n    lookbehind: true\n  }; // 123 -123 .123 -.123 12.3 -12.3\n\n  var number = {\n    pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n    lookbehind: true\n  };\n  Prism.languages.insertBefore('css', 'function', {\n    'operator': {\n      pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n      lookbehind: true\n    },\n    // CAREFUL!\n    // Previewers and Inline color use hexcode and color.\n    'hexcode': {\n      pattern: /\\B#(?:[\\da-f]{1,2}){3,4}\\b/i,\n      alias: 'color'\n    },\n    'color': [/\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i, {\n      pattern: /\\b(?:rgb|hsl)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:rgb|hsl)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n      inside: {\n        'unit': unit,\n        'number': number,\n        'function': /[\\w-]+(?=\\()/,\n        'punctuation': /[(),]/\n      }\n    }],\n    // it's important that there is no boundary assertion after the hex digits\n    'entity': /\\\\[\\da-f]{1,8}/i,\n    'unit': unit,\n    'number': number\n  });\n})(Prism);\n/* \"prismjs/components/prism-javascript\" */\n\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n  'class-name': [Prism.languages.clike['class-name'], {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:prototype|constructor))/,\n    lookbehind: true\n  }],\n  'keyword': [{\n    pattern: /((?:^|})\\s*)(?:catch|finally)\\b/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|(?:get|set)(?=\\s*[\\[$\\w\\xA0-\\uFFFF])|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n    lookbehind: true\n  }],\n  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n  'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n  'number': /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n  'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;\nPrism.languages.insertBefore('javascript', 'keyword', {\n  'regex': {\n    pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n    lookbehind: true,\n    greedy: true,\n    inside: {\n      'regex-source': {\n        pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n        lookbehind: true,\n        alias: 'language-regex',\n        inside: Prism.languages.regex\n      },\n      'regex-flags': /[a-z]+$/,\n      'regex-delimiter': /^\\/|\\/$/\n    }\n  },\n  // This must be declared before keyword because we use \"function\" inside the look-forward\n  'function-variable': {\n    pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n    alias: 'function'\n  },\n  'parameter': [{\n    pattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }],\n  'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\nPrism.languages.insertBefore('javascript', 'string', {\n  'template-string': {\n    pattern: /`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\\${)[^\\\\`])*`/,\n    greedy: true,\n    inside: {\n      'template-punctuation': {\n        pattern: /^`|`$/,\n        alias: 'string'\n      },\n      'interpolation': {\n        pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,\n        lookbehind: true,\n        inside: {\n          'interpolation-punctuation': {\n            pattern: /^\\${|}$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.javascript\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  }\n});\n\nif (Prism.languages.markup) {\n  Prism.languages.markup.tag.addInlined('script', 'javascript');\n}\n\nPrism.languages.js = Prism.languages.javascript;\n/* \"prismjs/components/prism-jsx\" */\n\n(function (Prism) {\n  var javascript = Prism.util.clone(Prism.languages.javascript);\n  Prism.languages.jsx = Prism.languages.extend('markup', javascript);\n  Prism.languages.jsx.tag.pattern = /<\\/?(?:[\\w.:-]+(?:\\s+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[^]|[^\\\\\"])*\"|'(?:\\\\[^]|[^\\\\'])*'|[^\\s{'\">=]+|\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\}))?|\\{\\s*\\.{3}\\s*[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\s*\\}))*\\s*\\/?)?>/i;\n  Prism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/i;\n  Prism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:\"(?:\\\\[^]|[^\\\\\"])*\"|'(?:\\\\[^]|[^\\\\'])*'|[^\\s'\">]+)/i;\n  Prism.languages.jsx.tag.inside['tag'].inside['class-name'] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/;\n  Prism.languages.insertBefore('inside', 'attr-name', {\n    'spread': {\n      pattern: /\\{\\s*\\.{3}\\s*[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\s*\\}/,\n      inside: {\n        'punctuation': /\\.{3}|[{}.]/,\n        'attr-value': /\\w+/\n      }\n    }\n  }, Prism.languages.jsx.tag);\n  Prism.languages.insertBefore('inside', 'attr-value', {\n    'script': {\n      // Allow for two levels of nesting\n      pattern: /=(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\})/i,\n      inside: {\n        'script-punctuation': {\n          pattern: /^=(?={)/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.jsx\n      },\n      'alias': 'language-javascript'\n    }\n  }, Prism.languages.jsx.tag); // The following will handle plain text inside tags\n\n  var stringifyToken = function stringifyToken(token) {\n    if (!token) {\n      return '';\n    }\n\n    if (typeof token === 'string') {\n      return token;\n    }\n\n    if (typeof token.content === 'string') {\n      return token.content;\n    }\n\n    return token.content.map(stringifyToken).join('');\n  };\n\n  var walkTokens = function walkTokens(tokens) {\n    var openedTags = [];\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n      var notTagNorBrace = false;\n\n      if (typeof token !== 'string') {\n        if (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n          // We found a tag, now find its kind\n          if (token.content[0].content[0].content === '</') {\n            // Closing tag\n            if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n              // Pop matching opening tag\n              openedTags.pop();\n            }\n          } else {\n            if (token.content[token.content.length - 1].content === '/>') ;else {\n              // Opening tag\n              openedTags.push({\n                tagName: stringifyToken(token.content[0].content[1]),\n                openedBraces: 0\n              });\n            }\n          }\n        } else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\n          // Here we might have entered a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces++;\n        } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n          // Here we might have left a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces--;\n        } else {\n          notTagNorBrace = true;\n        }\n      }\n\n      if (notTagNorBrace || typeof token === 'string') {\n        if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n          // Here we are inside a tag, and not inside a JSX context.\n          // That's plain text: drop any tokens matched.\n          var plainText = stringifyToken(token); // And merge text with adjacent text\n\n          if (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n            plainText += stringifyToken(tokens[i + 1]);\n            tokens.splice(i + 1, 1);\n          }\n\n          if (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n            plainText = stringifyToken(tokens[i - 1]) + plainText;\n            tokens.splice(i - 1, 1);\n            i--;\n          }\n\n          tokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n        }\n      }\n\n      if (token.content && typeof token.content !== 'string') {\n        walkTokens(token.content);\n      }\n    }\n  };\n\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'jsx' && env.language !== 'tsx') {\n      return;\n    }\n\n    walkTokens(env.tokens);\n  });\n})(Prism);\n/* \"prismjs/components/prism-js-extras\" */\n\n\n(function (Prism) {\n  Prism.languages.insertBefore('javascript', 'function-variable', {\n    'method-variable': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function-variable'].pattern.source),\n      lookbehind: true,\n      alias: ['function-variable', 'method', 'function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'function', {\n    'method': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function'].source),\n      lookbehind: true,\n      alias: ['function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'constant', {\n    'known-class-name': [{\n      // standard built-ins\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n      pattern: /\\b(?:(?:(?:Uint|Int)(?:8|16|32)|Uint8Clamped|Float(?:32|64))?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|(?:Weak)?(?:Set|Map)|WebAssembly)\\b/,\n      alias: 'class-name'\n    }, {\n      // errors\n      pattern: /\\b(?:[A-Z]\\w*)Error\\b/,\n      alias: 'class-name'\n    }]\n  });\n  /**\n   * Replaces the `<ID>` placeholder in the given pattern with a pattern for general JS identifiers.\n   *\n   * @param {string} source\n   * @param {string} [flags]\n   * @returns {RegExp}\n   */\n\n  function withId(source, flags) {\n    return RegExp(source.replace(/<ID>/g, function () {\n      return /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/.source;\n    }), flags);\n  }\n\n  Prism.languages.insertBefore('javascript', 'keyword', {\n    'imports': {\n      // https://tc39.es/ecma262/#sec-imports\n      pattern: withId(/(\\bimport\\b\\s*)(?:<ID>(?:\\s*,\\s*(?:\\*\\s*as\\s+<ID>|\\{[^{}]*\\}))?|\\*\\s*as\\s+<ID>|\\{[^{}]*\\})(?=\\s*\\bfrom\\b)/.source),\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    },\n    'exports': {\n      // https://tc39.es/ecma262/#sec-exports\n      pattern: withId(/(\\bexport\\b\\s*)(?:\\*(?:\\s*as\\s+<ID>)?(?=\\s*\\bfrom\\b)|\\{[^{}]*\\})/.source),\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    }\n  });\n  Prism.languages.javascript['keyword'].unshift({\n    pattern: /\\b(?:as|default|export|from|import)\\b/,\n    alias: 'module'\n  }, {\n    pattern: /\\b(?:await|break|catch|continue|do|else|for|finally|if|return|switch|throw|try|while|yield)\\b/,\n    alias: 'control-flow'\n  }, {\n    pattern: /\\bnull\\b/,\n    alias: ['null', 'nil']\n  }, {\n    pattern: /\\bundefined\\b/,\n    alias: 'nil'\n  });\n  Prism.languages.insertBefore('javascript', 'operator', {\n    'spread': {\n      pattern: /\\.{3}/,\n      alias: 'operator'\n    },\n    'arrow': {\n      pattern: /=>/,\n      alias: 'operator'\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'punctuation', {\n    'property-access': {\n      pattern: withId(/(\\.\\s*)#?<ID>/.source),\n      lookbehind: true\n    },\n    'maybe-class-name': {\n      pattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\n      lookbehind: true\n    },\n    'dom': {\n      // this contains only a few commonly used DOM variables\n      pattern: /\\b(?:document|location|navigator|performance|(?:local|session)Storage|window)\\b/,\n      alias: 'variable'\n    },\n    'console': {\n      pattern: /\\bconsole(?=\\s*\\.)/,\n      alias: 'class-name'\n    }\n  }); // add 'maybe-class-name' to tokens which might be a class name\n\n  var maybeClassNameTokens = ['function', 'function-variable', 'method', 'method-variable', 'property-access'];\n\n  for (var i = 0; i < maybeClassNameTokens.length; i++) {\n    var token = maybeClassNameTokens[i];\n    var value = Prism.languages.javascript[token]; // convert regex to object\n\n    if (Prism.util.type(value) === 'RegExp') {\n      value = Prism.languages.javascript[token] = {\n        pattern: value\n      };\n    } // keep in mind that we don't support arrays\n\n\n    var inside = value.inside || {};\n    value.inside = inside;\n    inside['maybe-class-name'] = /^[A-Z][\\s\\S]*/;\n  }\n})(Prism);\n/* \"prismjs/components/prism-coffeescript\" */\n\n\n(function (Prism) {\n  // Ignore comments starting with { to privilege string interpolation highlighting\n  var comment = /#(?!\\{).+/,\n      interpolation = {\n    pattern: /#\\{[^}]+\\}/,\n    alias: 'variable'\n  };\n  Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n    'comment': comment,\n    'string': [// Strings are multiline\n    {\n      pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n      greedy: true\n    }, {\n      // Strings are multiline\n      pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }],\n    'keyword': /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n    'class-member': {\n      pattern: /@(?!\\d)\\w+/,\n      alias: 'variable'\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'comment', {\n    'multiline-comment': {\n      pattern: /###[\\s\\S]+?###/,\n      alias: 'comment'\n    },\n    // Block regexp can contain comments and interpolation\n    'block-regex': {\n      pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n      alias: 'regex',\n      inside: {\n        'comment': comment,\n        'interpolation': interpolation\n      }\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'string', {\n    'inline-javascript': {\n      pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n      inside: {\n        'delimiter': {\n          pattern: /^`|`$/,\n          alias: 'punctuation'\n        },\n        'script': {\n          pattern: /[\\s\\S]+/,\n          alias: 'language-javascript',\n          inside: Prism.languages.javascript\n        }\n      }\n    },\n    // Block strings\n    'multiline-string': [{\n      pattern: /'''[\\s\\S]*?'''/,\n      greedy: true,\n      alias: 'string'\n    }, {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        interpolation: interpolation\n      }\n    }]\n  });\n  Prism.languages.insertBefore('coffeescript', 'keyword', {\n    // Object property\n    'property': /(?!\\d)\\w+(?=\\s*:(?!:))/\n  });\n  delete Prism.languages.coffeescript['template-string'];\n  Prism.languages.coffee = Prism.languages.coffeescript;\n})(Prism);\n/* \"prismjs/components/prism-diff\" */\n\n\n(function (Prism) {\n  Prism.languages.diff = {\n    'coord': [// Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n    /^(?:\\*{3}|-{3}|\\+{3}).*$/m, // Match \"@@ ... @@\" coord lines in unified diff.\n    /^@@.*@@$/m, // Match coord lines in normal diff (starts with a number).\n    /^\\d.*$/m] // deleted, inserted, unchanged, diff\n\n  };\n  /**\n   * A map from the name of a block to its line prefix.\n   *\n   * @type {Object<string, string>}\n   */\n\n  var PREFIXES = {\n    'deleted-sign': '-',\n    'deleted-arrow': '<',\n    'inserted-sign': '+',\n    'inserted-arrow': '>',\n    'unchanged': ' ',\n    'diff': '!'\n  }; // add a token for each prefix\n\n  Object.keys(PREFIXES).forEach(function (name) {\n    var prefix = PREFIXES[name];\n    var alias = [];\n\n    if (!/^\\w+$/.test(name)) {\n      // \"deleted-sign\" -> \"deleted\"\n      alias.push(/\\w+/.exec(name)[0]);\n    }\n\n    if (name === \"diff\") {\n      alias.push(\"bold\");\n    }\n\n    Prism.languages.diff[name] = {\n      pattern: RegExp('^(?:[' + prefix + '].*(?:\\r\\n?|\\n|(?![\\\\s\\\\S])))+', 'm'),\n      alias: alias,\n      inside: {\n        'line': {\n          pattern: /(.)(?=[\\s\\S]).*(?:\\r\\n?|\\n)?/,\n          lookbehind: true\n        },\n        'prefix': {\n          pattern: /[\\s\\S]/,\n          alias: /\\w+/.exec(name)[0]\n        }\n      }\n    };\n  }); // make prefixes available to Diff plugin\n\n  Object.defineProperty(Prism.languages.diff, 'PREFIXES', {\n    value: PREFIXES\n  });\n})(Prism);\n/* \"prismjs/components/prism-git\" */\n\n\nPrism.languages.git = {\n  /*\n   * A simple one line comment like in a git status command\n   * For instance:\n   * $ git status\n   * # On branch infinite-scroll\n   * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n   * # and have 1 and 2 different commits each, respectively.\n   * nothing to commit (working directory clean)\n   */\n  'comment': /^#.*/m,\n\n  /*\n   * Regexp to match the changed lines in a git diff output. Check the example below.\n   */\n  'deleted': /^[-\u2013].*/m,\n  'inserted': /^\\+.*/m,\n\n  /*\n   * a string (double and simple quote)\n   */\n  'string': /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/m,\n\n  /*\n   * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n   * For instance:\n   * $ git add file.txt\n   */\n  'command': {\n    pattern: /^.*\\$ git .*$/m,\n    inside: {\n      /*\n       * A git command can contain a parameter starting by a single or a double dash followed by a string\n       * For instance:\n       * $ git diff --cached\n       * $ git log -p\n       */\n      'parameter': /\\s--?\\w+/m\n    }\n  },\n\n  /*\n   * Coordinates displayed in a git diff command\n   * For instance:\n   * $ git diff\n   * diff --git file.txt file.txt\n   * index 6214953..1d54a52 100644\n   * --- file.txt\n   * +++ file.txt\n   * @@ -1 +1,2 @@\n   * -Here's my tetx file\n   * +Here's my text file\n   * +And this is the second line\n   */\n  'coord': /^@@.*@@$/m,\n\n  /*\n   * Match a \"commit [SHA1]\" line in a git log output.\n   * For instance:\n   * $ git log\n   * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n   * Author: lgiraudel\n   * Date:   Mon Feb 17 11:18:34 2014 +0100\n   *\n   *     Add of a new line\n   */\n  'commit-sha1': /^commit \\w{40}$/m\n};\n/* \"prismjs/components/prism-go\" */\n\nPrism.languages.go = Prism.languages.extend('clike', {\n  'string': {\n    pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n    greedy: true\n  },\n  'keyword': /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n  'boolean': /\\b(?:_|iota|nil|true|false)\\b/,\n  'number': /(?:\\b0x[a-f\\d]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[-+]?\\d+)?)i?/i,\n  'operator': /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n  'builtin': /\\b(?:bool|byte|complex(?:64|128)|error|float(?:32|64)|rune|string|u?int(?:8|16|32|64)?|uintptr|append|cap|close|complex|copy|delete|imag|len|make|new|panic|print(?:ln)?|real|recover)\\b/\n});\ndelete Prism.languages.go['class-name'];\n/* \"prismjs/components/prism-graphql\" */\n\nPrism.languages.graphql = {\n  'comment': /#.*/,\n  'description': {\n    pattern: /(?:\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")(?=\\s*[a-z_])/i,\n    greedy: true,\n    alias: 'string',\n    inside: {\n      'language-markdown': {\n        pattern: /(^\"(?:\"\")?)(?!\\1)[\\s\\S]+(?=\\1$)/,\n        lookbehind: true,\n        inside: Prism.languages.markdown\n      }\n    }\n  },\n  'string': {\n    pattern: /\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    greedy: true\n  },\n  'number': /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'boolean': /\\b(?:true|false)\\b/,\n  'variable': /\\$[a-z_]\\w*/i,\n  'directive': {\n    pattern: /@[a-z_]\\w*/i,\n    alias: 'function'\n  },\n  'attr-name': {\n    pattern: /[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+|&\\s*)[a-zA-Z_]\\w*/,\n    lookbehind: true\n  },\n  'fragment': {\n    pattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'keyword': /\\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\\b/,\n  'operator': /[!=|&]|\\.{3}/,\n  'punctuation': /[!(){}\\[\\]:=,]/,\n  'constant': /\\b(?!ID\\b)[A-Z][A-Z_\\d]*\\b/\n};\n/* \"prismjs/components/prism-markup-templating\" */\n\n(function (Prism) {\n  /**\n   * Returns the placeholder for the given language id and index.\n   *\n   * @param {string} language\n   * @param {string|number} index\n   * @returns {string}\n   */\n  function getPlaceholder(language, index) {\n    return '___' + language.toUpperCase() + index + '___';\n  }\n\n  Object.defineProperties(Prism.languages['markup-templating'] = {}, {\n    buildPlaceholders: {\n      /**\n       * Tokenize all inline templating expressions matching `placeholderPattern`.\n       *\n       * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n       * `true` will be replaced.\n       *\n       * @param {object} env The environment of the `before-tokenize` hook.\n       * @param {string} language The language id.\n       * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n       * @param {(match: string) => boolean} [replaceFilter]\n       */\n      value: function value(env, language, placeholderPattern, replaceFilter) {\n        if (env.language !== language) {\n          return;\n        }\n\n        var tokenStack = env.tokenStack = [];\n        env.code = env.code.replace(placeholderPattern, function (match) {\n          if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n            return match;\n          }\n\n          var i = tokenStack.length;\n          var placeholder; // Check for existing strings\n\n          while (env.code.indexOf(placeholder = getPlaceholder(language, i)) !== -1) {\n            ++i;\n          } // Create a sparse array\n\n\n          tokenStack[i] = match;\n          return placeholder;\n        }); // Switch the grammar to markup\n\n        env.grammar = Prism.languages.markup;\n      }\n    },\n    tokenizePlaceholders: {\n      /**\n       * Replace placeholders with proper tokens after tokenizing.\n       *\n       * @param {object} env The environment of the `after-tokenize` hook.\n       * @param {string} language The language id.\n       */\n      value: function value(env, language) {\n        if (env.language !== language || !env.tokenStack) {\n          return;\n        } // Switch the grammar back\n\n\n        env.grammar = Prism.languages[language];\n        var j = 0;\n        var keys = Object.keys(env.tokenStack);\n\n        function walkTokens(tokens) {\n          for (var i = 0; i < tokens.length; i++) {\n            // all placeholders are replaced already\n            if (j >= keys.length) {\n              break;\n            }\n\n            var token = tokens[i];\n\n            if (typeof token === 'string' || token.content && typeof token.content === 'string') {\n              var k = keys[j];\n              var t = env.tokenStack[k];\n              var s = typeof token === 'string' ? token : token.content;\n              var placeholder = getPlaceholder(language, k);\n              var index = s.indexOf(placeholder);\n\n              if (index > -1) {\n                ++j;\n                var before = s.substring(0, index);\n                var middle = new Prism.Token(language, Prism.tokenize(t, env.grammar), 'language-' + language, t);\n                var after = s.substring(index + placeholder.length);\n                var replacement = [];\n\n                if (before) {\n                  replacement.push.apply(replacement, walkTokens([before]));\n                }\n\n                replacement.push(middle);\n\n                if (after) {\n                  replacement.push.apply(replacement, walkTokens([after]));\n                }\n\n                if (typeof token === 'string') {\n                  tokens.splice.apply(tokens, [i, 1].concat(replacement));\n                } else {\n                  token.content = replacement;\n                }\n              }\n            } else if (token.content\n            /* && typeof token.content !== 'string' */\n            ) {\n                walkTokens(token.content);\n              }\n          }\n\n          return tokens;\n        }\n\n        walkTokens(env.tokens);\n      }\n    }\n  });\n})(Prism);\n/* \"prismjs/components/prism-handlebars\" */\n\n\n(function (Prism) {\n  Prism.languages.handlebars = {\n    'comment': /\\{\\{![\\s\\S]*?\\}\\}/,\n    'delimiter': {\n      pattern: /^\\{\\{\\{?|\\}\\}\\}?$/i,\n      alias: 'punctuation'\n    },\n    'string': /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n    'boolean': /\\b(?:true|false)\\b/,\n    'block': {\n      pattern: /^(\\s*(?:~\\s*)?)[#\\/]\\S+?(?=\\s*(?:~\\s*)?$|\\s)/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    'brackets': {\n      pattern: /\\[[^\\]]+\\]/,\n      inside: {\n        punctuation: /\\[|\\]/,\n        variable: /[\\s\\S]+/\n      }\n    },\n    'punctuation': /[!\"#%&':()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n    'variable': /[^!\"#%&'()*+,\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n  };\n  Prism.hooks.add('before-tokenize', function (env) {\n    var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'handlebars', handlebarsPattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'handlebars');\n  });\n})(Prism);\n/* \"prismjs/components/prism-json\" */\n// https://www.json.org/json-en.html\n\n\nPrism.languages.json = {\n  'property': {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n    greedy: true\n  },\n  'string': {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n    greedy: true\n  },\n  'comment': {\n    pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    greedy: true\n  },\n  'number': /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'punctuation': /[{}[\\],]/,\n  'operator': /:/,\n  'boolean': /\\b(?:true|false)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  }\n};\nPrism.languages.webmanifest = Prism.languages.json;\n/* \"prismjs/components/prism-less\" */\n\n/* FIXME :\n :extend() is not handled specifically : its highlighting is buggy.\n Mixin usage must be inside a ruleset to be highlighted.\n At-rules (e.g. import) containing interpolations are buggy.\n Detached rulesets are highlighted as at-rules.\n A comment before a mixin usage prevents the latter to be properly highlighted.\n */\n\nPrism.languages.less = Prism.languages.extend('css', {\n  'comment': [/\\/\\*[\\s\\S]*?\\*\\//, {\n    pattern: /(^|[^\\\\])\\/\\/.*/,\n    lookbehind: true\n  }],\n  'atrule': {\n    pattern: /@[\\w-](?:\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n    inside: {\n      'punctuation': /[:()]/\n    }\n  },\n  // selectors and mixins are considered the same\n  'selector': {\n    pattern: /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};@\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n    inside: {\n      // mixin parameters\n      'variable': /@+[\\w-]+/\n    }\n  },\n  'property': /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/i,\n  'operator': /[+\\-*\\/]/\n});\nPrism.languages.insertBefore('less', 'property', {\n  'variable': [// Variable declaration (the colon must be consumed!)\n  {\n    pattern: /@[\\w-]+\\s*:/,\n    inside: {\n      \"punctuation\": /:/\n    }\n  }, // Variable usage\n  /@@?[\\w-]+/],\n  'mixin-usage': {\n    pattern: /([{;]\\s*)[.#](?!\\d)[\\w-].*?(?=[(;])/,\n    lookbehind: true,\n    alias: 'function'\n  }\n});\n/* \"prismjs/components/prism-makefile\" */\n\nPrism.languages.makefile = {\n  'comment': {\n    pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  // Built-in target names\n  'builtin': /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n  // Targets\n  'symbol': {\n    pattern: /^(?:[^:=\\s]|[ \\t]+(?![\\s:]))+(?=\\s*:(?!=))/m,\n    inside: {\n      'variable': /\\$+(?:(?!\\$)[^(){}:#=\\s]+|(?=[({]))/\n    }\n  },\n  'variable': /\\$+(?:(?!\\$)[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n  'keyword': [// Directives\n  /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/, // Functions\n  {\n    pattern: /(\\()(?:addsuffix|abspath|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:s|list)?)(?=[ \\t])/,\n    lookbehind: true\n  }],\n  'operator': /(?:::|[?:+!])?=|[|@]/,\n  'punctuation': /[:;(){}]/\n};\n/* \"prismjs/components/prism-markdown\" */\n\n(function (Prism) {\n  // Allow only one line break\n  var inner = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\n|\\r\\n?)(?!\\n|\\r\\n?))/.source;\n  /**\n   * This function is intended for the creation of the bold or italic pattern.\n   *\n   * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.\n   *\n   * _Note:_ Keep in mind that this adds a capturing group.\n   *\n   * @param {string} pattern\n   * @returns {RegExp}\n   */\n\n  function createInline(pattern) {\n    pattern = pattern.replace(/<inner>/g, function () {\n      return inner;\n    });\n    return RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + '(?:' + pattern + ')');\n  }\n\n  var tableCell = /(?:\\\\.|``(?:[^`\\r\\n]|`(?!`))+``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/.source;\n  var tableRow = /\\|?__(?:\\|__)+\\|?(?:(?:\\n|\\r\\n?)|(?![\\s\\S]))/.source.replace(/__/g, function () {\n    return tableCell;\n  });\n  var tableLine = /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\n|\\r\\n?)/.source;\n  Prism.languages.markdown = Prism.languages.extend('markup', {});\n  Prism.languages.insertBefore('markdown', 'prolog', {\n    'front-matter-block': {\n      pattern: /(^(?:\\s*[\\r\\n])?)---(?!.)[\\s\\S]*?[\\r\\n]---(?!.)/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'punctuation': /^---|---$/,\n        'font-matter': {\n          pattern: /\\S+(?:\\s+\\S+)*/,\n          alias: ['yaml', 'language-yaml'],\n          inside: Prism.languages.yaml\n        }\n      }\n    },\n    'blockquote': {\n      // > ...\n      pattern: /^>(?:[\\t ]*>)*/m,\n      alias: 'punctuation'\n    },\n    'table': {\n      pattern: RegExp('^' + tableRow + tableLine + '(?:' + tableRow + ')*', 'm'),\n      inside: {\n        'table-data-rows': {\n          pattern: RegExp('^(' + tableRow + tableLine + ')(?:' + tableRow + ')*$'),\n          lookbehind: true,\n          inside: {\n            'table-data': {\n              pattern: RegExp(tableCell),\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        },\n        'table-line': {\n          pattern: RegExp('^(' + tableRow + ')' + tableLine + '$'),\n          lookbehind: true,\n          inside: {\n            'punctuation': /\\||:?-{3,}:?/\n          }\n        },\n        'table-header-row': {\n          pattern: RegExp('^' + tableRow + '$'),\n          inside: {\n            'table-header': {\n              pattern: RegExp(tableCell),\n              alias: 'important',\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        }\n      }\n    },\n    'code': [{\n      // Prefixed by 4 spaces or 1 tab and preceded by an empty line\n      pattern: /((?:^|\\n)[ \\t]*\\n|(?:^|\\r\\n?)[ \\t]*\\r\\n?)(?: {4}|\\t).+(?:(?:\\n|\\r\\n?)(?: {4}|\\t).+)*/,\n      lookbehind: true,\n      alias: 'keyword'\n    }, {\n      // `code`\n      // ``code``\n      pattern: /``.+?``|`[^`\\r\\n]+`/,\n      alias: 'keyword'\n    }, {\n      // ```optional language\n      // code block\n      // ```\n      pattern: /^```[\\s\\S]*?^```$/m,\n      greedy: true,\n      inside: {\n        'code-block': {\n          pattern: /^(```.*(?:\\n|\\r\\n?))[\\s\\S]+?(?=(?:\\n|\\r\\n?)^```$)/m,\n          lookbehind: true\n        },\n        'code-language': {\n          pattern: /^(```).+/,\n          lookbehind: true\n        },\n        'punctuation': /```/\n      }\n    }],\n    'title': [{\n      // title 1\n      // =======\n      // title 2\n      // -------\n      pattern: /\\S.*(?:\\n|\\r\\n?)(?:==+|--+)(?=[ \\t]*$)/m,\n      alias: 'important',\n      inside: {\n        punctuation: /==+$|--+$/\n      }\n    }, {\n      // # title 1\n      // ###### title 6\n      pattern: /(^\\s*)#.+/m,\n      lookbehind: true,\n      alias: 'important',\n      inside: {\n        punctuation: /^#+|#+$/\n      }\n    }],\n    'hr': {\n      // ***\n      // ---\n      // * * *\n      // -----------\n      pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'list': {\n      // * item\n      // + item\n      // - item\n      // 1. item\n      pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'url-reference': {\n      // [id]: http://example.com \"Optional title\"\n      // [id]: http://example.com 'Optional title'\n      // [id]: http://example.com (Optional title)\n      // [id]: <http://example.com> \"Optional title\"\n      pattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n      inside: {\n        'variable': {\n          pattern: /^(!?\\[)[^\\]]+/,\n          lookbehind: true\n        },\n        'string': /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n        'punctuation': /^[\\[\\]!:]|[<>]/\n      },\n      alias: 'url'\n    },\n    'bold': {\n      // **strong**\n      // __strong__\n      // allow one nested instance of italic text using the same delimiter\n      pattern: createInline(/\\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\\b|\\*\\*(?:(?!\\*)<inner>|\\*(?:(?!\\*)<inner>)+\\*)+\\*\\*/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^..)[\\s\\S]+(?=..$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /\\*\\*|__/\n      }\n    },\n    'italic': {\n      // *em*\n      // _em_\n      // allow one nested instance of bold text using the same delimiter\n      pattern: createInline(/\\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\\b|\\*(?:(?!\\*)<inner>|\\*\\*(?:(?!\\*)<inner>)+\\*\\*)+\\*/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^.)[\\s\\S]+(?=.$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /[*_]/\n      }\n    },\n    'strike': {\n      // ~~strike through~~\n      // ~strike~\n      pattern: createInline(/(~~?)(?:(?!~)<inner>)+?\\2/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^~~?)[\\s\\S]+(?=\\1$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /~~?/\n      }\n    },\n    'url': {\n      // [example](http://example.com \"Optional title\")\n      // [example][id]\n      // [example] [id]\n      pattern: createInline(/!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)|[ \\t]?\\[(?:(?!\\])<inner>)+\\])/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'operator': /^!/,\n        'content': {\n          pattern: /(^\\[)[^\\]]+(?=\\])/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'variable': {\n          pattern: /(^\\][ \\t]?\\[)[^\\]]+(?=\\]$)/,\n          lookbehind: true\n        },\n        'url': {\n          pattern: /(^\\]\\()[^\\s)]+/,\n          lookbehind: true\n        },\n        'string': {\n          pattern: /(^[ \\t]+)\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/,\n          lookbehind: true\n        }\n      }\n    }\n  });\n  ['url', 'bold', 'italic', 'strike'].forEach(function (token) {\n    ['url', 'bold', 'italic', 'strike'].forEach(function (inside) {\n      if (token !== inside) {\n        Prism.languages.markdown[token].inside.content.inside[inside] = Prism.languages.markdown[inside];\n      }\n    });\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'markdown' && env.language !== 'md') {\n      return;\n    }\n\n    function walkTokens(tokens) {\n      if (!tokens || typeof tokens === 'string') {\n        return;\n      }\n\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i];\n\n        if (token.type !== 'code') {\n          walkTokens(token.content);\n          continue;\n        }\n        /*\n         * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token\n         * is optional. But the grammar is defined so that there is only one case we have to handle:\n         *\n         * token.content = [\n         *     <span class=\"punctuation\">```</span>,\n         *     <span class=\"code-language\">xxxx</span>,\n         *     '\\n', // exactly one new lines (\\r or \\n or \\r\\n)\n         *     <span class=\"code-block\">...</span>,\n         *     '\\n', // exactly one new lines again\n         *     <span class=\"punctuation\">```</span>\n         * ];\n         */\n\n\n        var codeLang = token.content[1];\n        var codeBlock = token.content[3];\n\n        if (codeLang && codeBlock && codeLang.type === 'code-language' && codeBlock.type === 'code-block' && typeof codeLang.content === 'string') {\n          // this might be a language that Prism does not support\n          // do some replacements to support C++, C#, and F#\n          var lang = codeLang.content.replace(/\\b#/g, 'sharp').replace(/\\b\\+\\+/g, 'pp'); // only use the first word\n\n          lang = (/[a-z][\\w-]*/i.exec(lang) || [''])[0].toLowerCase();\n          var alias = 'language-' + lang; // add alias\n\n          if (!codeBlock.alias) {\n            codeBlock.alias = [alias];\n          } else if (typeof codeBlock.alias === 'string') {\n            codeBlock.alias = [codeBlock.alias, alias];\n          } else {\n            codeBlock.alias.push(alias);\n          }\n        }\n      }\n    }\n\n    walkTokens(env.tokens);\n  });\n  Prism.hooks.add('wrap', function (env) {\n    if (env.type !== 'code-block') {\n      return;\n    }\n\n    var codeLang = '';\n\n    for (var i = 0, l = env.classes.length; i < l; i++) {\n      var cls = env.classes[i];\n      var match = /language-(.+)/.exec(cls);\n\n      if (match) {\n        codeLang = match[1];\n        break;\n      }\n    }\n\n    var grammar = Prism.languages[codeLang];\n\n    if (!grammar) {\n      if (codeLang && codeLang !== 'none' && Prism.plugins.autoloader) {\n        var id = 'md-' + new Date().valueOf() + '-' + Math.floor(Math.random() * 1e16);\n        env.attributes['id'] = id;\n        Prism.plugins.autoloader.loadLanguages(codeLang, function () {\n          var ele = document.getElementById(id);\n\n          if (ele) {\n            ele.innerHTML = Prism.highlight(ele.textContent, Prism.languages[codeLang], codeLang);\n          }\n        });\n      }\n    } else {\n      // reverse Prism.util.encode\n      var code = env.content.replace(/&lt;/g, '<').replace(/&amp;/g, '&');\n      env.content = Prism.highlight(code, grammar, codeLang);\n    }\n  });\n  Prism.languages.md = Prism.languages.markdown;\n})(Prism);\n/* \"prismjs/components/prism-objectivec\" */\n\n\nPrism.languages.objectivec = Prism.languages.extend('c', {\n  'string': /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|@\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n  'keyword': /\\b(?:asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while|in|self|super)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n  'operator': /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n});\ndelete Prism.languages.objectivec['class-name'];\nPrism.languages.objc = Prism.languages.objectivec;\n/* \"prismjs/components/prism-ocaml\" */\n\nPrism.languages.ocaml = {\n  'comment': /\\(\\*[\\s\\S]*?\\*\\)/,\n  'string': [{\n    pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  }, {\n    pattern: /(['`])(?:\\\\(?:\\d+|x[\\da-f]+|.)|(?!\\1)[^\\\\\\r\\n])\\1/i,\n    greedy: true\n  }],\n  'number': /\\b(?:0x[\\da-f][\\da-f_]+|(?:0[bo])?\\d[\\d_]*(?:\\.[\\d_]*)?(?:e[+-]?[\\d_]+)?)/i,\n  'directive': {\n    pattern: /\\B#\\w+/,\n    alias: 'important'\n  },\n  'label': {\n    pattern: /\\B~\\w+/,\n    alias: 'function'\n  },\n  'type-variable': {\n    pattern: /\\B'\\w+/,\n    alias: 'function'\n  },\n  'variant': {\n    pattern: /`\\w+/,\n    alias: 'variable'\n  },\n  'module': {\n    pattern: /\\b[A-Z]\\w+/,\n    alias: 'variable'\n  },\n  // For the list of keywords and operators,\n  // see: http://caml.inria.fr/pub/docs/manual-ocaml/lex.html#sec84\n  'keyword': /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  // Custom operators are allowed\n  'operator': /:=|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\\b/,\n  'punctuation': /[(){}\\[\\]|.,:;]|\\b_\\b/\n};\n/* \"prismjs/components/prism-python\" */\n\nPrism.languages.python = {\n  'comment': {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: true\n  },\n  'string-interpolation': {\n    pattern: /(?:f|rf|fr)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        // \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n        pattern: /((?:^|[^{])(?:{{)*){(?!{)(?:[^{}]|{(?!{)(?:[^{}]|{(?!{)(?:[^{}])+})+})+}/,\n        lookbehind: true,\n        inside: {\n          'format-spec': {\n            pattern: /(:)[^:(){}]+(?=}$)/,\n            lookbehind: true\n          },\n          'conversion-option': {\n            pattern: /![sra](?=[:}]$)/,\n            alias: 'punctuation'\n          },\n          rest: null\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'triple-quoted-string': {\n    pattern: /(?:[rub]|rb|br)?(\"\"\"|''')[\\s\\S]*?\\1/i,\n    greedy: true,\n    alias: 'string'\n  },\n  'string': {\n    pattern: /(?:[rub]|rb|br)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n    greedy: true\n  },\n  'function': {\n    pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n    lookbehind: true\n  },\n  'class-name': {\n    pattern: /(\\bclass\\s+)\\w+/i,\n    lookbehind: true\n  },\n  'decorator': {\n    pattern: /(^\\s*)@\\w+(?:\\.\\w+)*/im,\n    lookbehind: true,\n    alias: ['annotation', 'punctuation'],\n    inside: {\n      'punctuation': /\\./\n    }\n  },\n  'keyword': /\\b(?:and|as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n  'builtin': /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n  'boolean': /\\b(?:True|False|None)\\b/,\n  'number': /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,\n  'operator': /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\nPrism.languages.python['string-interpolation'].inside['interpolation'].inside.rest = Prism.languages.python;\nPrism.languages.py = Prism.languages.python;\n/* \"prismjs/components/prism-reason\" */\n\nPrism.languages.reason = Prism.languages.extend('clike', {\n  'string': {\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  },\n  // 'class-name' must be matched *after* 'constructor' defined below\n  'class-name': /\\b[A-Z]\\w*/,\n  'keyword': /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n  'operator': /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:mod|land|lor|lxor|lsl|lsr|asr)\\b/\n});\nPrism.languages.insertBefore('reason', 'class-name', {\n  'character': {\n    pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n    alias: 'string'\n  },\n  'constructor': {\n    // Negative look-ahead prevents from matching things like String.capitalize\n    pattern: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n    alias: 'variable'\n  },\n  'label': {\n    pattern: /\\b[a-z]\\w*(?=::)/,\n    alias: 'symbol'\n  }\n}); // We can't match functions property, so let's not even try.\n\ndelete Prism.languages.reason[\"function\"];\n/* \"prismjs/components/prism-sass\" */\n\n(function (Prism) {\n  Prism.languages.sass = Prism.languages.extend('css', {\n    // Sass comments don't need to be closed, only indented\n    'comment': {\n      pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t].+)*/m,\n      lookbehind: true\n    }\n  });\n  Prism.languages.insertBefore('sass', 'atrule', {\n    // We want to consume the whole line\n    'atrule-line': {\n      // Includes support for = and + shortcuts\n      pattern: /^(?:[ \\t]*)[@+=].+/m,\n      inside: {\n        'atrule': /(?:@[\\w-]+|[+=])/m\n      }\n    }\n  });\n  delete Prism.languages.sass.atrule;\n  var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/;\n  var operator = [/[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|or|not)\\b/, {\n    pattern: /(\\s+)-(?=\\s)/,\n    lookbehind: true\n  }];\n  Prism.languages.insertBefore('sass', 'property', {\n    // We want to consume the whole line\n    'variable-line': {\n      pattern: /^[ \\t]*\\$.+/m,\n      inside: {\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator\n      }\n    },\n    // We want to consume the whole line\n    'property-line': {\n      pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s].*)/m,\n      inside: {\n        'property': [/[^:\\s]+(?=\\s*:)/, {\n          pattern: /(:)[^:\\s]+/,\n          lookbehind: true\n        }],\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator,\n        'important': Prism.languages.sass.important\n      }\n    }\n  });\n  delete Prism.languages.sass.property;\n  delete Prism.languages.sass.important; // Now that whole lines for other patterns are consumed,\n  // what's left should be selectors\n\n  Prism.languages.insertBefore('sass', 'punctuation', {\n    'selector': {\n      pattern: /([ \\t]*)\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*)*/,\n      lookbehind: true\n    }\n  });\n})(Prism);\n/* \"prismjs/components/prism-scss\" */\n\n\nPrism.languages.scss = Prism.languages.extend('css', {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n    lookbehind: true\n  },\n  'atrule': {\n    pattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\n    inside: {\n      'rule': /@[\\w-]+/ // See rest below\n\n    }\n  },\n  // url, compassified\n  'url': /(?:[-a-z]+-)?url(?=\\()/i,\n  // CSS selector regex is not appropriate for Sass\n  // since there can be lot more things (var, @ directive, nesting..)\n  // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n  // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n  // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n  // can \"pass\" as a selector- e.g: proper#{$erty})\n  // this one was hard to do, so please be careful if you edit this one :)\n  'selector': {\n    // Initial look-ahead is used to prevent matching of blank selectors\n    pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]+))/m,\n    inside: {\n      'parent': {\n        pattern: /&/,\n        alias: 'important'\n      },\n      'placeholder': /%[-\\w]+/,\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  },\n  'property': {\n    pattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n    inside: {\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  }\n});\nPrism.languages.insertBefore('scss', 'atrule', {\n  'keyword': [/@(?:if|else(?: if)?|forward|for|each|while|import|use|extend|debug|warn|mixin|include|function|return|content)\\b/i, {\n    pattern: /( +)(?:from|through)(?= )/,\n    lookbehind: true\n  }]\n});\nPrism.languages.insertBefore('scss', 'important', {\n  // var and interpolated vars\n  'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n});\nPrism.languages.insertBefore('scss', 'function', {\n  'module-modifier': {\n    pattern: /\\b(?:as|with|show|hide)\\b/i,\n    alias: 'keyword'\n  },\n  'placeholder': {\n    pattern: /%[-\\w]+/,\n    alias: 'selector'\n  },\n  'statement': {\n    pattern: /\\B!(?:default|optional)\\b/i,\n    alias: 'keyword'\n  },\n  'boolean': /\\b(?:true|false)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  },\n  'operator': {\n    pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,\n    lookbehind: true\n  }\n});\nPrism.languages.scss['atrule'].inside.rest = Prism.languages.scss;\n/* \"prismjs/components/prism-sql\" */\n\nPrism.languages.sql = {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n    lookbehind: true\n  },\n  'variable': [{\n    pattern: /@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n    greedy: true\n  }, /@[\\w.$]+/],\n  'string': {\n    pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,\n    greedy: true,\n    lookbehind: true\n  },\n  'function': /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\n  // Should we highlight user defined functions too?\n  'keyword': /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:S|ING)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n  'boolean': /\\b(?:TRUE|FALSE|NULL)\\b/i,\n  'number': /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n  'operator': /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|IN|LIKE|NOT|OR|IS|DIV|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n  'punctuation': /[;[\\]()`,.]/\n};\n/* \"prismjs/components/prism-stylus\" */\n\n(function (Prism) {\n  var unit = {\n    pattern: /(\\b\\d+)(?:%|[a-z]+)/,\n    lookbehind: true\n  }; // 123 -123 .123 -.123 12.3 -12.3\n\n  var number = {\n    pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n    lookbehind: true\n  };\n  var inside = {\n    'comment': {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    },\n    'url': {\n      pattern: /url\\(([\"']?).*?\\1\\)/i,\n      greedy: true\n    },\n    'string': {\n      pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n      greedy: true\n    },\n    'interpolation': null,\n    // See below\n    'func': null,\n    // See below\n    'important': /\\B!(?:important|optional)\\b/i,\n    'keyword': {\n      pattern: /(^|\\s+)(?:(?:if|else|for|return|unless)(?=\\s+|$)|@[\\w-]+)/,\n      lookbehind: true\n    },\n    'hexcode': /#[\\da-f]{3,6}/i,\n    'color': [/\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i, {\n      pattern: /\\b(?:rgb|hsl)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:rgb|hsl)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n      inside: {\n        'unit': unit,\n        'number': number,\n        'function': /[\\w-]+(?=\\()/,\n        'punctuation': /[(),]/\n      }\n    }],\n    'entity': /\\\\[\\da-f]{1,8}/i,\n    'unit': unit,\n    'boolean': /\\b(?:true|false)\\b/,\n    'operator': [// We want non-word chars around \"-\" because it is\n    // accepted in property names.\n    /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.{2,3}|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],\n    'number': number,\n    'punctuation': /[{}()\\[\\];:,]/\n  };\n  inside['interpolation'] = {\n    pattern: /\\{[^\\r\\n}:]+\\}/,\n    alias: 'variable',\n    inside: {\n      'delimiter': {\n        pattern: /^{|}$/,\n        alias: 'punctuation'\n      },\n      rest: inside\n    }\n  };\n  inside['func'] = {\n    pattern: /[\\w-]+\\([^)]*\\).*/,\n    inside: {\n      'function': /^[^(]+/,\n      rest: inside\n    }\n  };\n  Prism.languages.stylus = {\n    'atrule-declaration': {\n      pattern: /(^\\s*)@.+/m,\n      lookbehind: true,\n      inside: {\n        'atrule': /^@[\\w-]+/,\n        rest: inside\n      }\n    },\n    'variable-declaration': {\n      pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:\\{[^{}]*\\}|\\S.*|$)/m,\n      lookbehind: true,\n      inside: {\n        'variable': /^\\S+/,\n        rest: inside\n      }\n    },\n    'statement': {\n      pattern: /(^[ \\t]*)(?:if|else|for|return|unless)[ \\t].+/m,\n      lookbehind: true,\n      inside: {\n        'keyword': /^\\S+/,\n        rest: inside\n      }\n    },\n    // A property/value pair cannot end with a comma or a brace\n    // It cannot have indented content unless it ended with a semicolon\n    'property-declaration': {\n      pattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)(?!\\s)[^{\\r\\n]*(?:;|[^{\\r\\n,](?=$)(?!(?:\\r?\\n|\\r)(?:\\{|\\2[ \\t]+)))/m,\n      lookbehind: true,\n      inside: {\n        'property': {\n          pattern: /^[^\\s:]+/,\n          inside: {\n            'interpolation': inside.interpolation\n          }\n        },\n        rest: inside\n      }\n    },\n    // A selector can contain parentheses only as part of a pseudo-element\n    // It can span multiple lines.\n    // It must end with a comma or an accolade or have indented content.\n    'selector': {\n      pattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t]+)))/m,\n      lookbehind: true,\n      inside: {\n        'interpolation': inside.interpolation,\n        'comment': inside.comment,\n        'punctuation': /[{},]/\n      }\n    },\n    'func': inside.func,\n    'string': inside.string,\n    'comment': {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true,\n      greedy: true\n    },\n    'interpolation': inside.interpolation,\n    'punctuation': /[{}()\\[\\];:.]/\n  };\n})(Prism);\n/* \"prismjs/components/prism-typescript\" */\n\n\n(function (Prism) {\n  Prism.languages.typescript = Prism.languages.extend('javascript', {\n    'class-name': {\n      pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n      lookbehind: true,\n      greedy: true,\n      inside: null // see below\n\n    },\n    // From JavaScript Prism keyword list and TypeScript language spec: https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md#221-reserved-words\n    'keyword': /\\b(?:abstract|as|asserts|async|await|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|is|keyof|let|module|namespace|new|null|of|package|private|protected|public|readonly|return|require|set|static|super|switch|this|throw|try|type|typeof|undefined|var|void|while|with|yield)\\b/,\n    'builtin': /\\b(?:string|Function|any|number|boolean|Array|symbol|console|Promise|unknown|never)\\b/\n  }); // doesn't work with TS because TS is too complex\n\n  delete Prism.languages.typescript['parameter']; // a version of typescript specifically for highlighting types\n\n  var typeInside = Prism.languages.extend('typescript', {});\n  delete typeInside['class-name'];\n  Prism.languages.typescript['class-name'].inside = typeInside;\n  Prism.languages.insertBefore('typescript', 'function', {\n    'generic-function': {\n      // e.g. foo<T extends \"bar\" | \"baz\">( ...\n      pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n      greedy: true,\n      inside: {\n        'function': /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n        'generic': {\n          pattern: /<[\\s\\S]+/,\n          // everything after the first <\n          alias: 'class-name',\n          inside: typeInside\n        }\n      }\n    }\n  });\n  Prism.languages.ts = Prism.languages.typescript;\n})(Prism);\n/* \"prismjs/components/prism-tsx\" */\n\n\n(function (Prism) {\n  var typescript = Prism.util.clone(Prism.languages.typescript);\n  Prism.languages.tsx = Prism.languages.extend('jsx', typescript); // This will prevent collisions between TSX tags and TS generic types.\n  // Idea by https://github.com/karlhorky\n  // Discussion: https://github.com/PrismJS/prism/issues/2594#issuecomment-710666928\n\n  var tag = Prism.languages.tsx.tag;\n  tag.pattern = RegExp(/(^|[^\\w$]|(?=<\\/))/.source + '(?:' + tag.pattern.source + ')', tag.pattern.flags);\n  tag.lookbehind = true;\n})(Prism);\n/* \"prismjs/components/prism-wasm\" */\n\n\nPrism.languages.wasm = {\n  'comment': [/\\(;[\\s\\S]*?;\\)/, {\n    pattern: /;;.*/,\n    greedy: true\n  }],\n  'string': {\n    pattern: /\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n    greedy: true\n  },\n  'keyword': [{\n    pattern: /\\b(?:align|offset)=/,\n    inside: {\n      'operator': /=/\n    }\n  }, {\n    pattern: /\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|nearest|neg?|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|store(?:8|16|32)?|sqrt|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,\n    inside: {\n      'punctuation': /\\./\n    }\n  }, /\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/],\n  'variable': /\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^_`|~]+/i,\n  'number': /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,\n  'punctuation': /[()]/\n};\n/* \"prismjs/components/prism-yaml\" */\n\n(function (Prism) {\n  // https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\n  // https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\n  var anchorOrAlias = /[*&][^\\s[\\]{},]+/; // https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\n\n  var tag = /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/; // https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\n\n  var properties = '(?:' + tag.source + '(?:[ \\t]+' + anchorOrAlias.source + ')?|' + anchorOrAlias.source + '(?:[ \\t]+' + tag.source + ')?)'; // https://yaml.org/spec/1.2/spec.html#ns-plain(n,c)\n  // This is a simplified version that doesn't support \"#\" and multiline keys\n  // All these long scarry character classes are simplified versions of YAML's characters\n\n  var plainKey = /(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(/<PLAIN>/g, function () {\n    return /[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/.source;\n  });\n  var string = /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source;\n  /**\n   *\n   * @param {string} value\n   * @param {string} [flags]\n   * @returns {RegExp}\n   */\n\n  function createValuePattern(value, flags) {\n    flags = (flags || '').replace(/m/g, '') + 'm'; // add m flag\n\n    var pattern = /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|]|}|(?:[\\r\\n]\\s*)?#))/.source.replace(/<<prop>>/g, function () {\n      return properties;\n    }).replace(/<<value>>/g, function () {\n      return value;\n    });\n    return RegExp(pattern, flags);\n  }\n\n  Prism.languages.yaml = {\n    'scalar': {\n      pattern: RegExp(/([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source.replace(/<<prop>>/g, function () {\n        return properties;\n      })),\n      lookbehind: true,\n      alias: 'string'\n    },\n    'comment': /#.*/,\n    'key': {\n      pattern: RegExp(/((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source.replace(/<<prop>>/g, function () {\n        return properties;\n      }).replace(/<<key>>/g, function () {\n        return '(?:' + plainKey + '|' + string + ')';\n      })),\n      lookbehind: true,\n      greedy: true,\n      alias: 'atrule'\n    },\n    'directive': {\n      pattern: /(^[ \\t]*)%.+/m,\n      lookbehind: true,\n      alias: 'important'\n    },\n    'datetime': {\n      pattern: createValuePattern(/\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/.source),\n      lookbehind: true,\n      alias: 'number'\n    },\n    'boolean': {\n      pattern: createValuePattern(/true|false/.source, 'i'),\n      lookbehind: true,\n      alias: 'important'\n    },\n    'null': {\n      pattern: createValuePattern(/null|~/.source, 'i'),\n      lookbehind: true,\n      alias: 'important'\n    },\n    'string': {\n      pattern: createValuePattern(string),\n      lookbehind: true,\n      greedy: true\n    },\n    'number': {\n      pattern: createValuePattern(/[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.?\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/.source, 'i'),\n      lookbehind: true\n    },\n    'tag': tag,\n    'important': anchorOrAlias,\n    'punctuation': /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n  };\n  Prism.languages.yml = Prism.languages.yaml;\n})(Prism);\n\n/* harmony default export */ var prism = (Prism);\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/prism-react-renderer/themes/duotoneDark/index.js\n// Duotone Dark\n// Author: Simurai, adapted from DuoTone themes for Atom (http://simurai.com/projects/2016/01/01/duotone-themes)\n// Conversion: Bram de Haan (http://atelierbram.github.io/Base2Tone-prism/output/prism/prism-base2tone-evening-dark.css)\n// Generated with Base16 Builder (https://github.com/base16-builder/base16-builder)\nvar theme = {\n  plain: {\n    backgroundColor: \"#2a2734\",\n    color: \"#9a86fd\"\n  },\n  styles: [{\n    types: [\"comment\", \"prolog\", \"doctype\", \"cdata\", \"punctuation\"],\n    style: {\n      color: \"#6c6783\"\n    }\n  }, {\n    types: [\"namespace\"],\n    style: {\n      opacity: 0.7\n    }\n  }, {\n    types: [\"tag\", \"operator\", \"number\"],\n    style: {\n      color: \"#e09142\"\n    }\n  }, {\n    types: [\"property\", \"function\"],\n    style: {\n      color: \"#9a86fd\"\n    }\n  }, {\n    types: [\"tag-id\", \"selector\", \"atrule-id\"],\n    style: {\n      color: \"#eeebff\"\n    }\n  }, {\n    types: [\"attr-name\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }, {\n    types: [\"boolean\", \"string\", \"entity\", \"url\", \"attr-value\", \"keyword\", \"control\", \"directive\", \"unit\", \"statement\", \"regex\", \"at-rule\", \"placeholder\", \"variable\"],\n    style: {\n      color: \"#ffcc99\"\n    }\n  }, {\n    types: [\"deleted\"],\n    style: {\n      textDecorationLine: \"line-through\"\n    }\n  }, {\n    types: [\"inserted\"],\n    style: {\n      textDecorationLine: \"underline\"\n    }\n  }, {\n    types: [\"italic\"],\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"important\", \"bold\"],\n    style: {\n      fontWeight: \"bold\"\n    }\n  }, {\n    types: [\"important\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }]\n};\n/* harmony default export */ var duotoneDark = (theme);\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(\"q1tI\");\n\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/prism-react-renderer/dist/index.js\n\n\n\n\nvar defaultProps = {\n  // $FlowFixMe\n  Prism: prism,\n  theme: duotoneDark\n};\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar newlineRe = /\\r\\n|\\r|\\n/; // Empty lines need to contain a single empty token, denoted with { empty: true }\n\nvar normalizeEmptyLines = function normalizeEmptyLines(line) {\n  if (line.length === 0) {\n    line.push({\n      types: [\"plain\"],\n      content: \"\\n\",\n      empty: true\n    });\n  } else if (line.length === 1 && line[0].content === \"\") {\n    line[0].content = \"\\n\";\n    line[0].empty = true;\n  }\n};\n\nvar appendTypes = function appendTypes(types, add) {\n  var typesSize = types.length;\n\n  if (typesSize > 0 && types[typesSize - 1] === add) {\n    return types;\n  }\n\n  return types.concat(add);\n}; // Takes an array of Prism's tokens and groups them by line, turning plain\n// strings into tokens as well. Tokens can become recursive in some cases,\n// which means that their types are concatenated. Plain-string tokens however\n// are always of type \"plain\".\n// This is not recursive to avoid exceeding the call-stack limit, since it's unclear\n// how nested Prism's tokens can become\n\n\nvar normalizeTokens = function normalizeTokens(tokens) {\n  var typeArrStack = [[]];\n  var tokenArrStack = [tokens];\n  var tokenArrIndexStack = [0];\n  var tokenArrSizeStack = [tokens.length];\n  var i = 0;\n  var stackIndex = 0;\n  var currentLine = [];\n  var acc = [currentLine];\n\n  while (stackIndex > -1) {\n    while ((i = tokenArrIndexStack[stackIndex]++) < tokenArrSizeStack[stackIndex]) {\n      var content = void 0;\n      var types = typeArrStack[stackIndex];\n      var tokenArr = tokenArrStack[stackIndex];\n      var token = tokenArr[i]; // Determine content and append type to types if necessary\n\n      if (typeof token === \"string\") {\n        types = stackIndex > 0 ? types : [\"plain\"];\n        content = token;\n      } else {\n        types = appendTypes(types, token.type);\n\n        if (token.alias) {\n          types = appendTypes(types, token.alias);\n        }\n\n        content = token.content;\n      } // If token.content is an array, increase the stack depth and repeat this while-loop\n\n\n      if (typeof content !== \"string\") {\n        stackIndex++;\n        typeArrStack.push(types);\n        tokenArrStack.push(content);\n        tokenArrIndexStack.push(0);\n        tokenArrSizeStack.push(content.length);\n        continue;\n      } // Split by newlines\n\n\n      var splitByNewlines = content.split(newlineRe);\n      var newlineCount = splitByNewlines.length;\n      currentLine.push({\n        types: types,\n        content: splitByNewlines[0]\n      }); // Create a new line for each string on a new line\n\n      for (var i$1 = 1; i$1 < newlineCount; i$1++) {\n        normalizeEmptyLines(currentLine);\n        acc.push(currentLine = []);\n        currentLine.push({\n          types: types,\n          content: splitByNewlines[i$1]\n        });\n      }\n    } // Decreate the stack depth\n\n\n    stackIndex--;\n    typeArrStack.pop();\n    tokenArrStack.pop();\n    tokenArrIndexStack.pop();\n    tokenArrSizeStack.pop();\n  }\n\n  normalizeEmptyLines(currentLine);\n  return acc;\n};\n\nvar themeToDict = function themeToDict(theme, language) {\n  var plain = theme.plain; // $FlowFixMe\n\n  var base = Object.create(null);\n  var themeDict = theme.styles.reduce(function (acc, themeEntry) {\n    var languages = themeEntry.languages;\n    var style = themeEntry.style;\n\n    if (languages && !languages.includes(language)) {\n      return acc;\n    }\n\n    themeEntry.types.forEach(function (type) {\n      // $FlowFixMe\n      var accStyle = _extends({}, acc[type], style);\n\n      acc[type] = accStyle;\n    });\n    return acc;\n  }, base); // $FlowFixMe\n\n  themeDict.root = plain; // $FlowFixMe\n\n  themeDict.plain = _extends({}, plain, {\n    backgroundColor: null\n  });\n  return themeDict;\n};\n\nfunction objectWithoutProperties(obj, exclude) {\n  var target = {};\n\n  for (var k in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k];\n  }\n\n  return target;\n}\n\nvar Highlight = /*@__PURE__*/function (Component) {\n  function Highlight() {\n    var this$1 = this;\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    Component.apply(this, args);\n\n    _defineProperty(this, \"getThemeDict\", function (props) {\n      if (this$1.themeDict !== undefined && props.theme === this$1.prevTheme && props.language === this$1.prevLanguage) {\n        return this$1.themeDict;\n      }\n\n      this$1.prevTheme = props.theme;\n      this$1.prevLanguage = props.language;\n      var themeDict = props.theme ? themeToDict(props.theme, props.language) : undefined;\n      return this$1.themeDict = themeDict;\n    });\n\n    _defineProperty(this, \"getLineProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"line\"]);\n      var rest = rest$1;\n\n      var output = _extends({}, rest, {\n        className: \"token-line\",\n        style: undefined,\n        key: undefined\n      });\n\n      var themeDict = this$1.getThemeDict(this$1.props);\n\n      if (themeDict !== undefined) {\n        output.style = themeDict.plain;\n      }\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) {\n        output.key = key;\n      }\n\n      if (className) {\n        output.className += \" \" + className;\n      }\n\n      return output;\n    });\n\n    _defineProperty(this, \"getStyleForToken\", function (ref) {\n      var types = ref.types;\n      var empty = ref.empty;\n      var typesSize = types.length;\n      var themeDict = this$1.getThemeDict(this$1.props);\n\n      if (themeDict === undefined) {\n        return undefined;\n      } else if (typesSize === 1 && types[0] === \"plain\") {\n        return empty ? {\n          display: \"inline-block\"\n        } : undefined;\n      } else if (typesSize === 1 && !empty) {\n        return themeDict[types[0]];\n      }\n\n      var baseStyle = empty ? {\n        display: \"inline-block\"\n      } : {}; // $FlowFixMe\n\n      var typeStyles = types.map(function (type) {\n        return themeDict[type];\n      });\n      return Object.assign.apply(Object, [baseStyle].concat(typeStyles));\n    });\n\n    _defineProperty(this, \"getTokenProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var token = ref.token;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"token\"]);\n      var rest = rest$1;\n\n      var output = _extends({}, rest, {\n        className: \"token \" + token.types.join(\" \"),\n        children: token.content,\n        style: this$1.getStyleForToken(token),\n        key: undefined\n      });\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) {\n        output.key = key;\n      }\n\n      if (className) {\n        output.className += \" \" + className;\n      }\n\n      return output;\n    });\n\n    _defineProperty(this, \"tokenize\", function (Prism, code, grammar, language) {\n      var env = {\n        code: code,\n        grammar: grammar,\n        language: language,\n        tokens: []\n      };\n      Prism.hooks.run(\"before-tokenize\", env);\n      var tokens = env.tokens = Prism.tokenize(env.code, env.grammar, env.language);\n      Prism.hooks.run(\"after-tokenize\", env);\n      return tokens;\n    });\n  }\n\n  if (Component) Highlight.__proto__ = Component;\n  Highlight.prototype = Object.create(Component && Component.prototype);\n  Highlight.prototype.constructor = Highlight;\n\n  Highlight.prototype.render = function render() {\n    var ref = this.props;\n    var Prism = ref.Prism;\n    var language = ref.language;\n    var code = ref.code;\n    var children = ref.children;\n    var themeDict = this.getThemeDict(this.props);\n    var grammar = Prism.languages[language];\n    var mixedTokens = grammar !== undefined ? this.tokenize(Prism, code, grammar, language) : [code];\n    var tokens = normalizeTokens(mixedTokens);\n    return children({\n      tokens: tokens,\n      className: \"prism-code language-\" + language,\n      style: themeDict !== undefined ? themeDict.root : {},\n      getLineProps: this.getLineProps,\n      getTokenProps: this.getTokenProps\n    });\n  };\n\n  return Highlight;\n}(react[\"Component\"]);\n\n/* harmony default export */ var dist = __webpack_exports__[\"a\"] = (Highlight);\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/prism-react-renderer/dist/index.js_+_2_modules?")},myUI:function(module,exports){eval("/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_arraySome.js?")},nnRT:function(module,exports,__webpack_require__){eval("var baseIsEqual = __webpack_require__(\"NYSw\");\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/isEqual.js?")},p2vu:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return useMemo; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("q1tI");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction useMemo(getValue, condition, shouldUpdate) {\n  var cacheRef = react__WEBPACK_IMPORTED_MODULE_0__["useRef"]({});\n\n  if (!(\'value\' in cacheRef.current) || shouldUpdate(cacheRef.current.condition, condition)) {\n    cacheRef.current.value = getValue();\n    cacheRef.current.condition = condition;\n  }\n\n  return cacheRef.current.value;\n}\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/rc-util/es/hooks/useMemo.js?')},pIod:function(module,exports,__webpack_require__){eval('var arrayPush = __webpack_require__("y/9h"),\n    isArray = __webpack_require__("wxYD");\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_baseGetAllKeys.js?')},pPzx:function(module,exports){eval("/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/eq.js?")},pnw1:function(module,exports){eval("/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_isIndex.js?")},qeCs:function(module,exports,__webpack_require__){eval('var getNative = __webpack_require__("vxC8"),\n    root = __webpack_require__("IBsm");\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, \'Map\');\n\nmodule.exports = Map;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_Map.js?')},qjF7:function(module,exports){eval("/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nmodule.exports = setCacheAdd;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_setCacheAdd.js?")},rmhs:function(module,exports,__webpack_require__){eval("var baseTimes = __webpack_require__(\"2ZvR\"),\n    isArguments = __webpack_require__(\"bvyN\"),\n    isArray = __webpack_require__(\"wxYD\"),\n    isBuffer = __webpack_require__(\"3ajY\"),\n    isIndex = __webpack_require__(\"pnw1\"),\n    isTypedArray = __webpack_require__(\"Qd2C\");\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_arrayLikeKeys.js?")},t0L4:function(module,exports){eval("/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/isLength.js?")},tLQN:function(module,exports){eval("/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/isObjectLike.js?")},tQYX:function(module,exports){eval("/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/isObject.js?")},tlBq:function(module,exports,__webpack_require__){eval('var baseGetAllKeys = __webpack_require__("pIod"),\n    getSymbols = __webpack_require__("70Le"),\n    keys = __webpack_require__("BlJA");\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_getAllKeys.js?')},tmJt:function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/**\n * @ignore\n * some key-codes definition and utils from closure-library\n * @author yiminghe@gmail.com\n */\nvar KeyCode = {\n  /**\n   * MAC_ENTER\n   */\n  MAC_ENTER: 3,\n\n  /**\n   * BACKSPACE\n   */\n  BACKSPACE: 8,\n\n  /**\n   * TAB\n   */\n  TAB: 9,\n\n  /**\n   * NUMLOCK on FF/Safari Mac\n   */\n  NUM_CENTER: 12,\n\n  /**\n   * ENTER\n   */\n  ENTER: 13,\n\n  /**\n   * SHIFT\n   */\n  SHIFT: 16,\n\n  /**\n   * CTRL\n   */\n  CTRL: 17,\n\n  /**\n   * ALT\n   */\n  ALT: 18,\n\n  /**\n   * PAUSE\n   */\n  PAUSE: 19,\n\n  /**\n   * CAPS_LOCK\n   */\n  CAPS_LOCK: 20,\n\n  /**\n   * ESC\n   */\n  ESC: 27,\n\n  /**\n   * SPACE\n   */\n  SPACE: 32,\n\n  /**\n   * PAGE_UP\n   */\n  PAGE_UP: 33,\n\n  /**\n   * PAGE_DOWN\n   */\n  PAGE_DOWN: 34,\n\n  /**\n   * END\n   */\n  END: 35,\n\n  /**\n   * HOME\n   */\n  HOME: 36,\n\n  /**\n   * LEFT\n   */\n  LEFT: 37,\n\n  /**\n   * UP\n   */\n  UP: 38,\n\n  /**\n   * RIGHT\n   */\n  RIGHT: 39,\n\n  /**\n   * DOWN\n   */\n  DOWN: 40,\n\n  /**\n   * PRINT_SCREEN\n   */\n  PRINT_SCREEN: 44,\n\n  /**\n   * INSERT\n   */\n  INSERT: 45,\n\n  /**\n   * DELETE\n   */\n  DELETE: 46,\n\n  /**\n   * ZERO\n   */\n  ZERO: 48,\n\n  /**\n   * ONE\n   */\n  ONE: 49,\n\n  /**\n   * TWO\n   */\n  TWO: 50,\n\n  /**\n   * THREE\n   */\n  THREE: 51,\n\n  /**\n   * FOUR\n   */\n  FOUR: 52,\n\n  /**\n   * FIVE\n   */\n  FIVE: 53,\n\n  /**\n   * SIX\n   */\n  SIX: 54,\n\n  /**\n   * SEVEN\n   */\n  SEVEN: 55,\n\n  /**\n   * EIGHT\n   */\n  EIGHT: 56,\n\n  /**\n   * NINE\n   */\n  NINE: 57,\n\n  /**\n   * QUESTION_MARK\n   */\n  QUESTION_MARK: 63,\n\n  /**\n   * A\n   */\n  A: 65,\n\n  /**\n   * B\n   */\n  B: 66,\n\n  /**\n   * C\n   */\n  C: 67,\n\n  /**\n   * D\n   */\n  D: 68,\n\n  /**\n   * E\n   */\n  E: 69,\n\n  /**\n   * F\n   */\n  F: 70,\n\n  /**\n   * G\n   */\n  G: 71,\n\n  /**\n   * H\n   */\n  H: 72,\n\n  /**\n   * I\n   */\n  I: 73,\n\n  /**\n   * J\n   */\n  J: 74,\n\n  /**\n   * K\n   */\n  K: 75,\n\n  /**\n   * L\n   */\n  L: 76,\n\n  /**\n   * M\n   */\n  M: 77,\n\n  /**\n   * N\n   */\n  N: 78,\n\n  /**\n   * O\n   */\n  O: 79,\n\n  /**\n   * P\n   */\n  P: 80,\n\n  /**\n   * Q\n   */\n  Q: 81,\n\n  /**\n   * R\n   */\n  R: 82,\n\n  /**\n   * S\n   */\n  S: 83,\n\n  /**\n   * T\n   */\n  T: 84,\n\n  /**\n   * U\n   */\n  U: 85,\n\n  /**\n   * V\n   */\n  V: 86,\n\n  /**\n   * W\n   */\n  W: 87,\n\n  /**\n   * X\n   */\n  X: 88,\n\n  /**\n   * Y\n   */\n  Y: 89,\n\n  /**\n   * Z\n   */\n  Z: 90,\n\n  /**\n   * META\n   */\n  META: 91,\n\n  /**\n   * WIN_KEY_RIGHT\n   */\n  WIN_KEY_RIGHT: 92,\n\n  /**\n   * CONTEXT_MENU\n   */\n  CONTEXT_MENU: 93,\n\n  /**\n   * NUM_ZERO\n   */\n  NUM_ZERO: 96,\n\n  /**\n   * NUM_ONE\n   */\n  NUM_ONE: 97,\n\n  /**\n   * NUM_TWO\n   */\n  NUM_TWO: 98,\n\n  /**\n   * NUM_THREE\n   */\n  NUM_THREE: 99,\n\n  /**\n   * NUM_FOUR\n   */\n  NUM_FOUR: 100,\n\n  /**\n   * NUM_FIVE\n   */\n  NUM_FIVE: 101,\n\n  /**\n   * NUM_SIX\n   */\n  NUM_SIX: 102,\n\n  /**\n   * NUM_SEVEN\n   */\n  NUM_SEVEN: 103,\n\n  /**\n   * NUM_EIGHT\n   */\n  NUM_EIGHT: 104,\n\n  /**\n   * NUM_NINE\n   */\n  NUM_NINE: 105,\n\n  /**\n   * NUM_MULTIPLY\n   */\n  NUM_MULTIPLY: 106,\n\n  /**\n   * NUM_PLUS\n   */\n  NUM_PLUS: 107,\n\n  /**\n   * NUM_MINUS\n   */\n  NUM_MINUS: 109,\n\n  /**\n   * NUM_PERIOD\n   */\n  NUM_PERIOD: 110,\n\n  /**\n   * NUM_DIVISION\n   */\n  NUM_DIVISION: 111,\n\n  /**\n   * F1\n   */\n  F1: 112,\n\n  /**\n   * F2\n   */\n  F2: 113,\n\n  /**\n   * F3\n   */\n  F3: 114,\n\n  /**\n   * F4\n   */\n  F4: 115,\n\n  /**\n   * F5\n   */\n  F5: 116,\n\n  /**\n   * F6\n   */\n  F6: 117,\n\n  /**\n   * F7\n   */\n  F7: 118,\n\n  /**\n   * F8\n   */\n  F8: 119,\n\n  /**\n   * F9\n   */\n  F9: 120,\n\n  /**\n   * F10\n   */\n  F10: 121,\n\n  /**\n   * F11\n   */\n  F11: 122,\n\n  /**\n   * F12\n   */\n  F12: 123,\n\n  /**\n   * NUMLOCK\n   */\n  NUMLOCK: 144,\n\n  /**\n   * SEMICOLON\n   */\n  SEMICOLON: 186,\n\n  /**\n   * DASH\n   */\n  DASH: 189,\n\n  /**\n   * EQUALS\n   */\n  EQUALS: 187,\n\n  /**\n   * COMMA\n   */\n  COMMA: 188,\n\n  /**\n   * PERIOD\n   */\n  PERIOD: 190,\n\n  /**\n   * SLASH\n   */\n  SLASH: 191,\n\n  /**\n   * APOSTROPHE\n   */\n  APOSTROPHE: 192,\n\n  /**\n   * SINGLE_QUOTE\n   */\n  SINGLE_QUOTE: 222,\n\n  /**\n   * OPEN_SQUARE_BRACKET\n   */\n  OPEN_SQUARE_BRACKET: 219,\n\n  /**\n   * BACKSLASH\n   */\n  BACKSLASH: 220,\n\n  /**\n   * CLOSE_SQUARE_BRACKET\n   */\n  CLOSE_SQUARE_BRACKET: 221,\n\n  /**\n   * WIN_KEY\n   */\n  WIN_KEY: 224,\n\n  /**\n   * MAC_FF_META\n   */\n  MAC_FF_META: 224,\n\n  /**\n   * WIN_IME\n   */\n  WIN_IME: 229,\n  // ======================== Function ========================\n\n  /**\n   * whether text and modified key is entered at the same time.\n   */\n  isTextModifyingKeyEvent: function isTextModifyingKeyEvent(e) {\n    var keyCode = e.keyCode;\n\n    if (e.altKey && !e.ctrlKey || e.metaKey || keyCode >= KeyCode.F1 && keyCode <= KeyCode.F12) {\n      return false;\n    } // The following keys are quite harmless, even in combination with\n    // CTRL, ALT or SHIFT.\n\n\n    switch (keyCode) {\n      case KeyCode.ALT:\n      case KeyCode.CAPS_LOCK:\n      case KeyCode.CONTEXT_MENU:\n      case KeyCode.CTRL:\n      case KeyCode.DOWN:\n      case KeyCode.END:\n      case KeyCode.ESC:\n      case KeyCode.HOME:\n      case KeyCode.INSERT:\n      case KeyCode.LEFT:\n      case KeyCode.MAC_FF_META:\n      case KeyCode.META:\n      case KeyCode.NUMLOCK:\n      case KeyCode.NUM_CENTER:\n      case KeyCode.PAGE_DOWN:\n      case KeyCode.PAGE_UP:\n      case KeyCode.PAUSE:\n      case KeyCode.PRINT_SCREEN:\n      case KeyCode.RIGHT:\n      case KeyCode.SHIFT:\n      case KeyCode.UP:\n      case KeyCode.WIN_KEY:\n      case KeyCode.WIN_KEY_RIGHT:\n        return false;\n\n      default:\n        return true;\n    }\n  },\n\n  /**\n   * whether character is entered.\n   */\n  isCharacterKey: function isCharacterKey(keyCode) {\n    if (keyCode >= KeyCode.ZERO && keyCode <= KeyCode.NINE) {\n      return true;\n    }\n\n    if (keyCode >= KeyCode.NUM_ZERO && keyCode <= KeyCode.NUM_MULTIPLY) {\n      return true;\n    }\n\n    if (keyCode >= KeyCode.A && keyCode <= KeyCode.Z) {\n      return true;\n    } // Safari sends zero key code for non-latin characters.\n\n\n    if (window.navigator.userAgent.indexOf('WebKit') !== -1 && keyCode === 0) {\n      return true;\n    }\n\n    switch (keyCode) {\n      case KeyCode.SPACE:\n      case KeyCode.QUESTION_MARK:\n      case KeyCode.NUM_PLUS:\n      case KeyCode.NUM_MINUS:\n      case KeyCode.NUM_PERIOD:\n      case KeyCode.NUM_DIVISION:\n      case KeyCode.SEMICOLON:\n      case KeyCode.DASH:\n      case KeyCode.EQUALS:\n      case KeyCode.COMMA:\n      case KeyCode.PERIOD:\n      case KeyCode.SLASH:\n      case KeyCode.APOSTROPHE:\n      case KeyCode.SINGLE_QUOTE:\n      case KeyCode.OPEN_SQUARE_BRACKET:\n      case KeyCode.BACKSLASH:\n      case KeyCode.CLOSE_SQUARE_BRACKET:\n        return true;\n\n      default:\n        return false;\n    }\n  }\n};\n/* harmony default export */ __webpack_exports__[\"a\"] = (KeyCode);\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/rc-util/es/KeyCode.js?")},ty86:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return addEventListenerWrap; });\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("i8i4");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction addEventListenerWrap(target, eventType, cb, option) {\n  /* eslint camelcase: 2 */\n  var callback = react_dom__WEBPACK_IMPORTED_MODULE_0___default.a.unstable_batchedUpdates ? function run(e) {\n    react_dom__WEBPACK_IMPORTED_MODULE_0___default.a.unstable_batchedUpdates(cb, e);\n  } : cb;\n\n  if (target.addEventListener) {\n    target.addEventListener(eventType, callback, option);\n  }\n\n  return {\n    remove: function remove() {\n      if (target.removeEventListener) {\n        target.removeEventListener(eventType, callback);\n      }\n    }\n  };\n}\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/rc-util/es/Dom/addEventListener.js?')},vvj1:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, "a", function() { return /* reexport */ es_MenuItem; });\n\n// UNUSED EXPORTS: SubMenu, Item, MenuItemGroup, ItemGroup, Divider, useFullPath\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@babel/runtime/helpers/esm/extends.js\nvar esm_extends = __webpack_require__("cxan");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@babel/runtime/helpers/esm/defineProperty.js\nvar defineProperty = __webpack_require__("zjfJ");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\nvar objectSpread2 = __webpack_require__("Czhu");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js + 2 modules\nvar toConsumableArray = __webpack_require__("fGyu");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 1 modules\nvar slicedToArray = __webpack_require__("zygG");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\nvar objectWithoutProperties = __webpack_require__("HbGN");\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__("q1tI");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/classnames/index.js\nvar classnames = __webpack_require__("O94r");\nvar classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/shallowequal/index.js\nvar shallowequal = __webpack_require__("Pu0A");\nvar shallowequal_default = /*#__PURE__*/__webpack_require__.n(shallowequal);\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/rc-util/es/hooks/useMergedState.js\nvar useMergedState = __webpack_require__("MSM+");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/rc-util/es/warning.js\nvar warning = __webpack_require__("5qS4");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/rc-overflow/es/index.js + 4 modules\nvar es = __webpack_require__("0jbY");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\nvar classCallCheck = __webpack_require__("9fIP");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@babel/runtime/helpers/esm/createClass.js\nvar createClass = __webpack_require__("MMYH");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@babel/runtime/helpers/esm/inherits.js\nvar inherits = __webpack_require__("8K1b");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@babel/runtime/helpers/esm/createSuper.js + 2 modules\nvar createSuper = __webpack_require__("AqVP");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/rc-util/es/KeyCode.js\nvar KeyCode = __webpack_require__("tmJt");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/rc-util/es/omit.js\nvar omit = __webpack_require__("WSTu");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/rc-util/es/hooks/useMemo.js\nvar useMemo = __webpack_require__("p2vu");\n\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-menu/es/context/MenuContext.js\n\n\nvar _excluded = ["children", "locked"];\n\n\n\nvar MenuContext = /*#__PURE__*/react["createContext"](null);\n\nfunction mergeProps(origin, target) {\n  var clone = Object(objectSpread2["a" /* default */])({}, origin);\n\n  Object.keys(target).forEach(function (key) {\n    var value = target[key];\n\n    if (value !== undefined) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n}\n\nfunction InheritableContextProvider(_ref) {\n  var children = _ref.children,\n      locked = _ref.locked,\n      restProps = Object(objectWithoutProperties["a" /* default */])(_ref, _excluded);\n\n  var context = react["useContext"](MenuContext);\n  var inheritableContext = Object(useMemo["a" /* default */])(function () {\n    return mergeProps(context, restProps);\n  }, [context, restProps], function (prev, next) {\n    return !locked && (prev[0] !== next[0] || !shallowequal_default()(prev[1], next[1]));\n  });\n  return /*#__PURE__*/react["createElement"](MenuContext.Provider, {\n    value: inheritableContext\n  }, children);\n}\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-menu/es/hooks/useActive.js\n\n\nfunction useActive(eventKey, disabled, onMouseEnter, onMouseLeave) {\n  var _React$useContext = react["useContext"](MenuContext),\n      activeKey = _React$useContext.activeKey,\n      onActive = _React$useContext.onActive,\n      onInactive = _React$useContext.onInactive;\n\n  var ret = {\n    active: activeKey === eventKey\n  }; // Skip when disabled\n\n  if (!disabled) {\n    ret.onMouseEnter = function (domEvent) {\n      onMouseEnter === null || onMouseEnter === void 0 ? void 0 : onMouseEnter({\n        key: eventKey,\n        domEvent: domEvent\n      });\n      onActive(eventKey);\n    };\n\n    ret.onMouseLeave = function (domEvent) {\n      onMouseLeave === null || onMouseLeave === void 0 ? void 0 : onMouseLeave({\n        key: eventKey,\n        domEvent: domEvent\n      });\n      onInactive(eventKey);\n    };\n  }\n\n  return ret;\n}\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-menu/es/utils/warnUtil.js\n\nvar warnUtil_excluded = ["item"];\n\n/**\n * `onClick` event return `info.item` which point to react node directly.\n * We should warning this since it will not work on FC.\n */\n\nfunction warnItemProp(_ref) {\n  var item = _ref.item,\n      restInfo = Object(objectWithoutProperties["a" /* default */])(_ref, warnUtil_excluded);\n\n  Object.defineProperty(restInfo, \'item\', {\n    get: function get() {\n      Object(warning["a" /* default */])(false, \'`info.item` is deprecated since we will move to function component that not provides React Node instance in future.\');\n      return item;\n    }\n  });\n  return restInfo;\n}\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-menu/es/Icon.js\n\n\nfunction Icon(_ref) {\n  var icon = _ref.icon,\n      props = _ref.props,\n      children = _ref.children;\n  var iconNode;\n\n  if (typeof icon === \'function\') {\n    iconNode = /*#__PURE__*/react["createElement"](icon, Object(objectSpread2["a" /* default */])({}, props));\n  } else {\n    // Compatible for origin definition\n    iconNode = icon;\n  }\n\n  return iconNode || children || null;\n}\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-menu/es/hooks/useDirectionStyle.js\n\n\nfunction useDirectionStyle(level) {\n  var _React$useContext = react["useContext"](MenuContext),\n      mode = _React$useContext.mode,\n      rtl = _React$useContext.rtl,\n      inlineIndent = _React$useContext.inlineIndent;\n\n  if (mode !== \'inline\') {\n    return null;\n  }\n\n  var len = level;\n  return rtl ? {\n    paddingRight: len * inlineIndent\n  } : {\n    paddingLeft: len * inlineIndent\n  };\n}\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-menu/es/context/PathContext.js\n\n\nvar EmptyList = [];\nvar PathRegisterContext = /*#__PURE__*/react["createContext"](null);\nfunction useMeasure() {\n  return react["useContext"](PathRegisterContext);\n} // ========================= Path Tracker ==========================\n\nvar PathTrackerContext = /*#__PURE__*/react["createContext"](EmptyList);\nfunction useFullPath(eventKey) {\n  var parentKeyPath = react["useContext"](PathTrackerContext);\n  return react["useMemo"](function () {\n    return eventKey !== undefined ? [].concat(Object(toConsumableArray["a" /* default */])(parentKeyPath), [eventKey]) : parentKeyPath;\n  }, [parentKeyPath, eventKey]);\n}\nvar PathUserContext = /*#__PURE__*/react["createContext"](null);\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-menu/es/context/IdContext.js\n\nvar IdContext = /*#__PURE__*/react["createContext"](null);\nfunction getMenuId(uuid, eventKey) {\n  if (uuid === undefined) {\n    return null;\n  }\n\n  return "".concat(uuid, "-").concat(eventKey);\n}\n/**\n * Get `data-menu-id`\n */\n\nfunction useMenuId(eventKey) {\n  var id = react["useContext"](IdContext);\n  return getMenuId(id, eventKey);\n}\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-menu/es/MenuItem.js\n\n\n\n\n\n\n\n\n\nvar MenuItem_excluded = ["title", "attribute", "elementRef"],\n    _excluded2 = ["style", "className", "eventKey", "warnKey", "disabled", "itemIcon", "children", "role", "onMouseEnter", "onMouseLeave", "onClick", "onKeyDown", "onFocus"],\n    _excluded3 = ["active"];\n\n\n\n\n\n\n\n\n\n\n\n\n // Since Menu event provide the `info.item` which point to the MenuItem node instance.\n// We have to use class component here.\n// This should be removed from doc & api in future.\n\nvar MenuItem_LegacyMenuItem = /*#__PURE__*/function (_React$Component) {\n  Object(inherits["a" /* default */])(LegacyMenuItem, _React$Component);\n\n  var _super = Object(createSuper["a" /* default */])(LegacyMenuItem);\n\n  function LegacyMenuItem() {\n    Object(classCallCheck["a" /* default */])(this, LegacyMenuItem);\n\n    return _super.apply(this, arguments);\n  }\n\n  Object(createClass["a" /* default */])(LegacyMenuItem, [{\n    key: "render",\n    value: function render() {\n      var _this$props = this.props,\n          title = _this$props.title,\n          attribute = _this$props.attribute,\n          elementRef = _this$props.elementRef,\n          restProps = Object(objectWithoutProperties["a" /* default */])(_this$props, MenuItem_excluded);\n\n      var passedProps = Object(omit["a" /* default */])(restProps, [\'eventKey\']);\n      Object(warning["a" /* default */])(!attribute, \'`attribute` of Menu.Item is deprecated. Please pass attribute directly.\');\n      return /*#__PURE__*/react["createElement"](es["a" /* default */].Item, Object(esm_extends["a" /* default */])({}, attribute, {\n        title: typeof title === \'string\' ? title : undefined\n      }, passedProps, {\n        ref: elementRef\n      }));\n    }\n  }]);\n\n  return LegacyMenuItem;\n}(react["Component"]);\n/**\n * Real Menu Item component\n */\n\n\nvar MenuItem_InternalMenuItem = function InternalMenuItem(props) {\n  var _classNames;\n\n  var style = props.style,\n      className = props.className,\n      eventKey = props.eventKey,\n      warnKey = props.warnKey,\n      disabled = props.disabled,\n      itemIcon = props.itemIcon,\n      children = props.children,\n      role = props.role,\n      onMouseEnter = props.onMouseEnter,\n      onMouseLeave = props.onMouseLeave,\n      onClick = props.onClick,\n      onKeyDown = props.onKeyDown,\n      onFocus = props.onFocus,\n      restProps = Object(objectWithoutProperties["a" /* default */])(props, _excluded2);\n\n  var domDataId = useMenuId(eventKey);\n\n  var _React$useContext = react["useContext"](MenuContext),\n      prefixCls = _React$useContext.prefixCls,\n      onItemClick = _React$useContext.onItemClick,\n      contextDisabled = _React$useContext.disabled,\n      overflowDisabled = _React$useContext.overflowDisabled,\n      contextItemIcon = _React$useContext.itemIcon,\n      selectedKeys = _React$useContext.selectedKeys,\n      onActive = _React$useContext.onActive;\n\n  var itemCls = "".concat(prefixCls, "-item");\n  var legacyMenuItemRef = react["useRef"]();\n  var elementRef = react["useRef"]();\n  var mergedDisabled = contextDisabled || disabled;\n  var connectedKeys = useFullPath(eventKey); // ================================ Warn ================================\n\n  if (false) {} // ============================= Info =============================\n\n\n  var getEventInfo = function getEventInfo(e) {\n    return {\n      key: eventKey,\n      // Note: For legacy code is reversed which not like other antd component\n      keyPath: Object(toConsumableArray["a" /* default */])(connectedKeys).reverse(),\n      item: legacyMenuItemRef.current,\n      domEvent: e\n    };\n  }; // ============================= Icon =============================\n\n\n  var mergedItemIcon = itemIcon || contextItemIcon; // ============================ Active ============================\n\n  var _useActive = useActive(eventKey, mergedDisabled, onMouseEnter, onMouseLeave),\n      active = _useActive.active,\n      activeProps = Object(objectWithoutProperties["a" /* default */])(_useActive, _excluded3); // ============================ Select ============================\n\n\n  var selected = selectedKeys.includes(eventKey); // ======================== DirectionStyle ========================\n\n  var directionStyle = useDirectionStyle(connectedKeys.length); // ============================ Events ============================\n\n  var onInternalClick = function onInternalClick(e) {\n    if (mergedDisabled) {\n      return;\n    }\n\n    var info = getEventInfo(e);\n    onClick === null || onClick === void 0 ? void 0 : onClick(warnItemProp(info));\n    onItemClick(info);\n  };\n\n  var onInternalKeyDown = function onInternalKeyDown(e) {\n    onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(e);\n\n    if (e.which === KeyCode["a" /* default */].ENTER) {\n      var info = getEventInfo(e); // Legacy. Key will also trigger click event\n\n      onClick === null || onClick === void 0 ? void 0 : onClick(warnItemProp(info));\n      onItemClick(info);\n    }\n  };\n  /**\n   * Used for accessibility. Helper will focus element without key board.\n   * We should manually trigger an active\n   */\n\n\n  var onInternalFocus = function onInternalFocus(e) {\n    onActive(eventKey);\n    onFocus === null || onFocus === void 0 ? void 0 : onFocus(e);\n  }; // ============================ Render ============================\n\n\n  var optionRoleProps = {};\n\n  if (props.role === \'option\') {\n    optionRoleProps[\'aria-selected\'] = selected;\n  }\n\n  return /*#__PURE__*/react["createElement"](MenuItem_LegacyMenuItem, Object(esm_extends["a" /* default */])({\n    ref: legacyMenuItemRef,\n    elementRef: elementRef,\n    role: role === null ? \'none\' : role || \'menuitem\',\n    tabIndex: disabled ? null : -1,\n    "data-menu-id": overflowDisabled && domDataId ? null : domDataId\n  }, restProps, activeProps, optionRoleProps, {\n    component: "li",\n    "aria-disabled": disabled,\n    style: Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({}, directionStyle), style),\n    className: classnames_default()(itemCls, (_classNames = {}, Object(defineProperty["a" /* default */])(_classNames, "".concat(itemCls, "-active"), active), Object(defineProperty["a" /* default */])(_classNames, "".concat(itemCls, "-selected"), selected), Object(defineProperty["a" /* default */])(_classNames, "".concat(itemCls, "-disabled"), mergedDisabled), _classNames), className),\n    onClick: onInternalClick,\n    onKeyDown: onInternalKeyDown,\n    onFocus: onInternalFocus\n  }), children, /*#__PURE__*/react["createElement"](Icon, {\n    props: Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({}, props), {}, {\n      isSelected: selected\n    }),\n    icon: mergedItemIcon\n  }));\n};\n\nfunction MenuItem(props) {\n  var eventKey = props.eventKey; // ==================== Record KeyPath ====================\n\n  var measure = useMeasure();\n  var connectedKeyPath = useFullPath(eventKey); // eslint-disable-next-line consistent-return\n\n  react["useEffect"](function () {\n    if (measure) {\n      measure.registerPath(eventKey, connectedKeyPath);\n      return function () {\n        measure.unregisterPath(eventKey, connectedKeyPath);\n      };\n    }\n  }, [connectedKeyPath]);\n\n  if (measure) {\n    return null;\n  } // ======================== Render ========================\n\n\n  return /*#__PURE__*/react["createElement"](MenuItem_InternalMenuItem, props);\n}\n\n/* harmony default export */ var es_MenuItem = (MenuItem);\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/rc-util/es/Children/toArray.js\nvar toArray = __webpack_require__("6Qj0");\n\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-menu/es/utils/nodeUtil.js\n\n\n\nfunction parseChildren(children, keyPath) {\n  return Object(toArray["a" /* default */])(children).map(function (child, index) {\n    if ( /*#__PURE__*/react["isValidElement"](child)) {\n      var _child$props$eventKey, _child$props;\n\n      var key = child.key;\n      var eventKey = (_child$props$eventKey = (_child$props = child.props) === null || _child$props === void 0 ? void 0 : _child$props.eventKey) !== null && _child$props$eventKey !== void 0 ? _child$props$eventKey : key;\n      var emptyKey = eventKey === null || eventKey === undefined;\n\n      if (emptyKey) {\n        eventKey = "tmp_key-".concat([].concat(Object(toConsumableArray["a" /* default */])(keyPath), [index]).join(\'-\'));\n      }\n\n      var cloneProps = {\n        key: eventKey,\n        eventKey: eventKey\n      };\n\n      if (false) {}\n\n      return /*#__PURE__*/react["cloneElement"](child, cloneProps);\n    }\n\n    return child;\n  });\n}\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-menu/es/hooks/useMemoCallback.js\n\n/**\n * Cache callback function that always return same ref instead.\n * This is used for context optimization.\n */\n\nfunction useMemoCallback(func) {\n  var funRef = react["useRef"](func);\n  funRef.current = func;\n  var callback = react["useCallback"](function () {\n    var _funRef$current;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return (_funRef$current = funRef.current) === null || _funRef$current === void 0 ? void 0 : _funRef$current.call.apply(_funRef$current, [funRef].concat(args));\n  }, []);\n  return func ? callback : undefined;\n}\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-menu/es/SubMenu/SubMenuList.js\n\n\nvar SubMenuList_excluded = ["className", "children"];\n\n\n\n\nvar SubMenuList_InternalSubMenuList = function InternalSubMenuList(_ref, ref) {\n  var className = _ref.className,\n      children = _ref.children,\n      restProps = Object(objectWithoutProperties["a" /* default */])(_ref, SubMenuList_excluded);\n\n  var _React$useContext = react["useContext"](MenuContext),\n      prefixCls = _React$useContext.prefixCls,\n      mode = _React$useContext.mode,\n      rtl = _React$useContext.rtl;\n\n  return /*#__PURE__*/react["createElement"]("ul", Object(esm_extends["a" /* default */])({\n    className: classnames_default()(prefixCls, rtl && "".concat(prefixCls, "-rtl"), "".concat(prefixCls, "-sub"), "".concat(prefixCls, "-").concat(mode === \'inline\' ? \'inline\' : \'vertical\'), className)\n  }, restProps, {\n    "data-menu-list": true,\n    ref: ref\n  }), children);\n};\n\nvar SubMenuList = /*#__PURE__*/react["forwardRef"](SubMenuList_InternalSubMenuList);\nSubMenuList.displayName = \'SubMenuList\';\n/* harmony default export */ var SubMenu_SubMenuList = (SubMenuList);\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/rc-trigger/es/index.js + 14 modules\nvar rc_trigger_es = __webpack_require__("h/vM");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/rc-util/es/raf.js\nvar raf = __webpack_require__("jiyB");\n\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-menu/es/placements.js\nvar autoAdjustOverflow = {\n  adjustX: 1,\n  adjustY: 1\n};\nvar placements = {\n  topLeft: {\n    points: [\'bl\', \'tl\'],\n    overflow: autoAdjustOverflow,\n    offset: [0, -7]\n  },\n  bottomLeft: {\n    points: [\'tl\', \'bl\'],\n    overflow: autoAdjustOverflow,\n    offset: [0, 7]\n  },\n  leftTop: {\n    points: [\'tr\', \'tl\'],\n    overflow: autoAdjustOverflow,\n    offset: [-4, 0]\n  },\n  rightTop: {\n    points: [\'tl\', \'tr\'],\n    overflow: autoAdjustOverflow,\n    offset: [4, 0]\n  }\n};\nvar placementsRtl = {\n  topLeft: {\n    points: [\'bl\', \'tl\'],\n    overflow: autoAdjustOverflow,\n    offset: [0, -7]\n  },\n  bottomLeft: {\n    points: [\'tl\', \'bl\'],\n    overflow: autoAdjustOverflow,\n    offset: [0, 7]\n  },\n  rightTop: {\n    points: [\'tr\', \'tl\'],\n    overflow: autoAdjustOverflow,\n    offset: [-4, 0]\n  },\n  leftTop: {\n    points: [\'tl\', \'tr\'],\n    overflow: autoAdjustOverflow,\n    offset: [4, 0]\n  }\n};\n/* harmony default export */ var es_placements = (placements);\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-menu/es/utils/motionUtil.js\nfunction getMotion(mode, motion, defaultMotions) {\n  if (motion) {\n    return motion;\n  }\n\n  if (defaultMotions) {\n    return defaultMotions[mode] || defaultMotions.other;\n  }\n\n  return undefined;\n}\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-menu/es/SubMenu/PopupTrigger.js\n\n\n\n\n\n\n\n\n\n\nvar popupPlacementMap = {\n  horizontal: \'bottomLeft\',\n  vertical: \'rightTop\',\n  \'vertical-left\': \'rightTop\',\n  \'vertical-right\': \'leftTop\'\n};\nfunction PopupTrigger(_ref) {\n  var prefixCls = _ref.prefixCls,\n      visible = _ref.visible,\n      children = _ref.children,\n      popup = _ref.popup,\n      popupClassName = _ref.popupClassName,\n      popupOffset = _ref.popupOffset,\n      disabled = _ref.disabled,\n      mode = _ref.mode,\n      onVisibleChange = _ref.onVisibleChange;\n\n  var _React$useContext = react["useContext"](MenuContext),\n      getPopupContainer = _React$useContext.getPopupContainer,\n      rtl = _React$useContext.rtl,\n      subMenuOpenDelay = _React$useContext.subMenuOpenDelay,\n      subMenuCloseDelay = _React$useContext.subMenuCloseDelay,\n      builtinPlacements = _React$useContext.builtinPlacements,\n      triggerSubMenuAction = _React$useContext.triggerSubMenuAction,\n      forceSubMenuRender = _React$useContext.forceSubMenuRender,\n      motion = _React$useContext.motion,\n      defaultMotions = _React$useContext.defaultMotions;\n\n  var _React$useState = react["useState"](false),\n      _React$useState2 = Object(slicedToArray["a" /* default */])(_React$useState, 2),\n      innerVisible = _React$useState2[0],\n      setInnerVisible = _React$useState2[1];\n\n  var placement = rtl ? Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({}, placementsRtl), builtinPlacements) : Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({}, placements), builtinPlacements);\n  var popupPlacement = popupPlacementMap[mode];\n  var targetMotion = getMotion(mode, motion, defaultMotions);\n\n  var mergedMotion = Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({}, targetMotion), {}, {\n    leavedClassName: "".concat(prefixCls, "-hidden"),\n    removeOnLeave: false,\n    motionAppear: true\n  }); // Delay to change visible\n\n\n  var visibleRef = react["useRef"]();\n  react["useEffect"](function () {\n    visibleRef.current = Object(raf["a" /* default */])(function () {\n      setInnerVisible(visible);\n    });\n    return function () {\n      raf["a" /* default */].cancel(visibleRef.current);\n    };\n  }, [visible]);\n  return /*#__PURE__*/react["createElement"](rc_trigger_es["a" /* default */], {\n    prefixCls: prefixCls,\n    popupClassName: classnames_default()("".concat(prefixCls, "-popup"), Object(defineProperty["a" /* default */])({}, "".concat(prefixCls, "-rtl"), rtl), popupClassName),\n    stretch: mode === \'horizontal\' ? \'minWidth\' : null,\n    getPopupContainer: getPopupContainer,\n    builtinPlacements: placement,\n    popupPlacement: popupPlacement,\n    popupVisible: innerVisible,\n    popup: popup,\n    popupAlign: popupOffset && {\n      offset: popupOffset\n    },\n    action: disabled ? [] : [triggerSubMenuAction],\n    mouseEnterDelay: subMenuOpenDelay,\n    mouseLeaveDelay: subMenuCloseDelay,\n    onPopupVisibleChange: onVisibleChange,\n    forceRender: forceSubMenuRender,\n    popupMotion: mergedMotion\n  }, children);\n}\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/rc-motion/es/index.js + 12 modules\nvar rc_motion_es = __webpack_require__("B5SY");\n\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-menu/es/SubMenu/InlineSubMenuList.js\n\n\n\n\n\n\n\n\nfunction InlineSubMenuList(_ref) {\n  var id = _ref.id,\n      open = _ref.open,\n      keyPath = _ref.keyPath,\n      children = _ref.children;\n  var fixedMode = \'inline\';\n\n  var _React$useContext = react["useContext"](MenuContext),\n      prefixCls = _React$useContext.prefixCls,\n      forceSubMenuRender = _React$useContext.forceSubMenuRender,\n      motion = _React$useContext.motion,\n      defaultMotions = _React$useContext.defaultMotions,\n      mode = _React$useContext.mode; // Always use latest mode check\n\n\n  var sameModeRef = react["useRef"](false);\n  sameModeRef.current = mode === fixedMode; // We record `destroy` mark here since when mode change from `inline` to others.\n  // The inline list should remove when motion end.\n\n  var _React$useState = react["useState"](!sameModeRef.current),\n      _React$useState2 = Object(slicedToArray["a" /* default */])(_React$useState, 2),\n      destroy = _React$useState2[0],\n      setDestroy = _React$useState2[1];\n\n  var mergedOpen = sameModeRef.current ? open : false; // ================================= Effect =================================\n  // Reset destroy state when mode change back\n\n  react["useEffect"](function () {\n    if (sameModeRef.current) {\n      setDestroy(false);\n    }\n  }, [mode]); // ================================= Render =================================\n\n  var mergedMotion = Object(objectSpread2["a" /* default */])({}, getMotion(fixedMode, motion, defaultMotions)); // No need appear since nest inlineCollapse changed\n\n\n  if (keyPath.length > 1) {\n    mergedMotion.motionAppear = false;\n  } // Hide inline list when mode changed and motion end\n\n\n  var originOnVisibleChanged = mergedMotion.onVisibleChanged;\n\n  mergedMotion.onVisibleChanged = function (newVisible) {\n    if (!sameModeRef.current && !newVisible) {\n      setDestroy(true);\n    }\n\n    return originOnVisibleChanged === null || originOnVisibleChanged === void 0 ? void 0 : originOnVisibleChanged(newVisible);\n  };\n\n  if (destroy) {\n    return null;\n  }\n\n  return /*#__PURE__*/react["createElement"](InheritableContextProvider, {\n    mode: fixedMode,\n    locked: !sameModeRef.current\n  }, /*#__PURE__*/react["createElement"](rc_motion_es["b" /* default */], Object(esm_extends["a" /* default */])({\n    visible: mergedOpen\n  }, mergedMotion, {\n    forceRender: forceSubMenuRender,\n    removeOnLeave: false,\n    leavedClassName: "".concat(prefixCls, "-hidden")\n  }), function (_ref2) {\n    var motionClassName = _ref2.className,\n        motionStyle = _ref2.style;\n    return /*#__PURE__*/react["createElement"](SubMenu_SubMenuList, {\n      id: id,\n      className: motionClassName,\n      style: motionStyle\n    }, children);\n  }));\n}\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-menu/es/SubMenu/index.js\n\n\n\n\n\nvar SubMenu_excluded = ["style", "className", "title", "eventKey", "warnKey", "disabled", "internalPopupClose", "children", "itemIcon", "expandIcon", "popupClassName", "popupOffset", "onClick", "onMouseEnter", "onMouseLeave", "onTitleClick", "onTitleMouseEnter", "onTitleMouseLeave"],\n    SubMenu_excluded2 = ["active"];\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar SubMenu_InternalSubMenu = function InternalSubMenu(props) {\n  var _classNames;\n\n  var style = props.style,\n      className = props.className,\n      title = props.title,\n      eventKey = props.eventKey,\n      warnKey = props.warnKey,\n      disabled = props.disabled,\n      internalPopupClose = props.internalPopupClose,\n      children = props.children,\n      itemIcon = props.itemIcon,\n      expandIcon = props.expandIcon,\n      popupClassName = props.popupClassName,\n      popupOffset = props.popupOffset,\n      onClick = props.onClick,\n      onMouseEnter = props.onMouseEnter,\n      onMouseLeave = props.onMouseLeave,\n      onTitleClick = props.onTitleClick,\n      onTitleMouseEnter = props.onTitleMouseEnter,\n      onTitleMouseLeave = props.onTitleMouseLeave,\n      restProps = Object(objectWithoutProperties["a" /* default */])(props, SubMenu_excluded);\n\n  var domDataId = useMenuId(eventKey);\n\n  var _React$useContext = react["useContext"](MenuContext),\n      prefixCls = _React$useContext.prefixCls,\n      mode = _React$useContext.mode,\n      openKeys = _React$useContext.openKeys,\n      contextDisabled = _React$useContext.disabled,\n      overflowDisabled = _React$useContext.overflowDisabled,\n      activeKey = _React$useContext.activeKey,\n      selectedKeys = _React$useContext.selectedKeys,\n      contextItemIcon = _React$useContext.itemIcon,\n      contextExpandIcon = _React$useContext.expandIcon,\n      onItemClick = _React$useContext.onItemClick,\n      onOpenChange = _React$useContext.onOpenChange,\n      onActive = _React$useContext.onActive;\n\n  var _React$useContext2 = react["useContext"](PathUserContext),\n      isSubPathKey = _React$useContext2.isSubPathKey;\n\n  var connectedPath = useFullPath();\n  var subMenuPrefixCls = "".concat(prefixCls, "-submenu");\n  var mergedDisabled = contextDisabled || disabled;\n  var elementRef = react["useRef"]();\n  var popupRef = react["useRef"](); // ================================ Warn ================================\n\n  if (false) {} // ================================ Icon ================================\n\n\n  var mergedItemIcon = itemIcon || contextItemIcon;\n  var mergedExpandIcon = expandIcon || contextExpandIcon; // ================================ Open ================================\n\n  var originOpen = openKeys.includes(eventKey);\n  var open = !overflowDisabled && originOpen; // =============================== Select ===============================\n\n  var childrenSelected = isSubPathKey(selectedKeys, eventKey); // =============================== Active ===============================\n\n  var _useActive = useActive(eventKey, mergedDisabled, onTitleMouseEnter, onTitleMouseLeave),\n      active = _useActive.active,\n      activeProps = Object(objectWithoutProperties["a" /* default */])(_useActive, SubMenu_excluded2); // Fallback of active check to avoid hover on menu title or disabled item\n\n\n  var _React$useState = react["useState"](false),\n      _React$useState2 = Object(slicedToArray["a" /* default */])(_React$useState, 2),\n      childrenActive = _React$useState2[0],\n      setChildrenActive = _React$useState2[1];\n\n  var triggerChildrenActive = function triggerChildrenActive(newActive) {\n    if (!mergedDisabled) {\n      setChildrenActive(newActive);\n    }\n  };\n\n  var onInternalMouseEnter = function onInternalMouseEnter(domEvent) {\n    triggerChildrenActive(true);\n    onMouseEnter === null || onMouseEnter === void 0 ? void 0 : onMouseEnter({\n      key: eventKey,\n      domEvent: domEvent\n    });\n  };\n\n  var onInternalMouseLeave = function onInternalMouseLeave(domEvent) {\n    triggerChildrenActive(false);\n    onMouseLeave === null || onMouseLeave === void 0 ? void 0 : onMouseLeave({\n      key: eventKey,\n      domEvent: domEvent\n    });\n  };\n\n  var mergedActive = react["useMemo"](function () {\n    if (active) {\n      return active;\n    }\n\n    if (mode !== \'inline\') {\n      return childrenActive || isSubPathKey([activeKey], eventKey);\n    }\n\n    return false;\n  }, [mode, active, activeKey, childrenActive, eventKey, isSubPathKey]); // ========================== DirectionStyle ==========================\n\n  var directionStyle = useDirectionStyle(connectedPath.length); // =============================== Events ===============================\n  // >>>> Title click\n\n  var onInternalTitleClick = function onInternalTitleClick(e) {\n    // Skip if disabled\n    if (mergedDisabled) {\n      return;\n    }\n\n    onTitleClick === null || onTitleClick === void 0 ? void 0 : onTitleClick({\n      key: eventKey,\n      domEvent: e\n    }); // Trigger open by click when mode is `inline`\n\n    if (mode === \'inline\') {\n      onOpenChange(eventKey, !originOpen);\n    }\n  }; // >>>> Context for children click\n\n\n  var onMergedItemClick = useMemoCallback(function (info) {\n    onClick === null || onClick === void 0 ? void 0 : onClick(warnItemProp(info));\n    onItemClick(info);\n  }); // >>>>> Visible change\n\n  var onPopupVisibleChange = function onPopupVisibleChange(newVisible) {\n    if (mode !== \'inline\') {\n      onOpenChange(eventKey, newVisible);\n    }\n  };\n  /**\n   * Used for accessibility. Helper will focus element without key board.\n   * We should manually trigger an active\n   */\n\n\n  var onInternalFocus = function onInternalFocus() {\n    onActive(eventKey);\n  }; // =============================== Render ===============================\n\n\n  var popupId = domDataId && "".concat(domDataId, "-popup"); // >>>>> Title\n\n  var titleNode = /*#__PURE__*/react["createElement"]("div", Object(esm_extends["a" /* default */])({\n    role: "menuitem",\n    style: directionStyle,\n    className: "".concat(subMenuPrefixCls, "-title"),\n    tabIndex: mergedDisabled ? null : -1,\n    ref: elementRef,\n    title: typeof title === \'string\' ? title : null,\n    "data-menu-id": overflowDisabled && domDataId ? null : domDataId,\n    "aria-expanded": open,\n    "aria-haspopup": true,\n    "aria-controls": popupId,\n    "aria-disabled": mergedDisabled,\n    onClick: onInternalTitleClick,\n    onFocus: onInternalFocus\n  }, activeProps), title, /*#__PURE__*/react["createElement"](Icon, {\n    icon: mode !== \'horizontal\' ? mergedExpandIcon : null,\n    props: Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({}, props), {}, {\n      isOpen: open,\n      // [Legacy] Not sure why need this mark\n      isSubMenu: true\n    })\n  }, /*#__PURE__*/react["createElement"]("i", {\n    className: "".concat(subMenuPrefixCls, "-arrow")\n  }))); // Cache mode if it change to `inline` which do not have popup motion\n\n  var triggerModeRef = react["useRef"](mode);\n\n  if (mode !== \'inline\') {\n    triggerModeRef.current = connectedPath.length > 1 ? \'vertical\' : mode;\n  }\n\n  if (!overflowDisabled) {\n    var triggerMode = triggerModeRef.current; // Still wrap with Trigger here since we need avoid react re-mount dom node\n    // Which makes motion failed\n\n    titleNode = /*#__PURE__*/react["createElement"](PopupTrigger, {\n      mode: triggerMode,\n      prefixCls: subMenuPrefixCls,\n      visible: !internalPopupClose && open && mode !== \'inline\',\n      popupClassName: popupClassName,\n      popupOffset: popupOffset,\n      popup: /*#__PURE__*/react["createElement"](InheritableContextProvider // Special handle of horizontal mode\n      , {\n        mode: triggerMode === \'horizontal\' ? \'vertical\' : triggerMode\n      }, /*#__PURE__*/react["createElement"](SubMenu_SubMenuList, {\n        id: popupId,\n        ref: popupRef\n      }, children)),\n      disabled: mergedDisabled,\n      onVisibleChange: onPopupVisibleChange\n    }, titleNode);\n  } // >>>>> Render\n\n\n  return /*#__PURE__*/react["createElement"](InheritableContextProvider, {\n    onItemClick: onMergedItemClick,\n    mode: mode === \'horizontal\' ? \'vertical\' : mode,\n    itemIcon: mergedItemIcon,\n    expandIcon: mergedExpandIcon\n  }, /*#__PURE__*/react["createElement"](es["a" /* default */].Item, Object(esm_extends["a" /* default */])({\n    role: "none"\n  }, restProps, {\n    component: "li",\n    style: style,\n    className: classnames_default()(subMenuPrefixCls, "".concat(subMenuPrefixCls, "-").concat(mode), className, (_classNames = {}, Object(defineProperty["a" /* default */])(_classNames, "".concat(subMenuPrefixCls, "-open"), open), Object(defineProperty["a" /* default */])(_classNames, "".concat(subMenuPrefixCls, "-active"), mergedActive), Object(defineProperty["a" /* default */])(_classNames, "".concat(subMenuPrefixCls, "-selected"), childrenSelected), Object(defineProperty["a" /* default */])(_classNames, "".concat(subMenuPrefixCls, "-disabled"), mergedDisabled), _classNames)),\n    onMouseEnter: onInternalMouseEnter,\n    onMouseLeave: onInternalMouseLeave\n  }), titleNode, !overflowDisabled && /*#__PURE__*/react["createElement"](InlineSubMenuList, {\n    id: popupId,\n    open: open,\n    keyPath: connectedPath\n  }, children)));\n};\n\nfunction SubMenu(props) {\n  var eventKey = props.eventKey,\n      children = props.children;\n  var connectedKeyPath = useFullPath(eventKey);\n  var childList = parseChildren(children, connectedKeyPath); // ==================== Record KeyPath ====================\n\n  var measure = useMeasure(); // eslint-disable-next-line consistent-return\n\n  react["useEffect"](function () {\n    if (measure) {\n      measure.registerPath(eventKey, connectedKeyPath);\n      return function () {\n        measure.unregisterPath(eventKey, connectedKeyPath);\n      };\n    }\n  }, [connectedKeyPath]);\n  var renderNode; // ======================== Render ========================\n\n  if (measure) {\n    renderNode = childList;\n  } else {\n    renderNode = /*#__PURE__*/react["createElement"](SubMenu_InternalSubMenu, props, childList);\n  }\n\n  return /*#__PURE__*/react["createElement"](PathTrackerContext.Provider, {\n    value: connectedKeyPath\n  }, renderNode);\n}\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/rc-util/es/Dom/isVisible.js\nvar isVisible = __webpack_require__("c9Qg");\n\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-util/es/Dom/focus.js\n\n\n\nfunction focusable(node) {\n  var includePositive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  if (Object(isVisible["a" /* default */])(node)) {\n    var nodeName = node.nodeName.toLowerCase();\n    var isFocusableElement = // Focusable element\n    [\'input\', \'select\', \'textarea\', \'button\'].includes(nodeName) || // Editable element\n    node.isContentEditable || nodeName === \'a\' && !!node.getAttribute(\'href\'); // Get tabIndex\n\n    var tabIndexAttr = node.getAttribute(\'tabindex\');\n    var tabIndexNum = Number(tabIndexAttr); // Parse as number if validate\n\n    var tabIndex = null;\n\n    if (tabIndexAttr && !Number.isNaN(tabIndexNum)) {\n      tabIndex = tabIndexNum;\n    } else if (isFocusableElement && tabIndex === null) {\n      tabIndex = 0;\n    } // Block focusable if disabled\n\n\n    if (isFocusableElement && node.disabled) {\n      tabIndex = null;\n    }\n\n    return tabIndex !== null && (tabIndex >= 0 || includePositive && tabIndex < 0);\n  }\n\n  return false;\n}\n\nfunction getFocusNodeList(node) {\n  var includePositive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var res = Object(toConsumableArray["a" /* default */])(node.querySelectorAll(\'*\')).filter(function (child) {\n    return focusable(child, includePositive);\n  });\n\n  if (focusable(node, includePositive)) {\n    res.unshift(node);\n  }\n\n  return res;\n}\nvar lastFocusElement = null;\n/** @deprecated Do not use since this may failed when used in async */\n\nfunction saveLastFocusNode() {\n  lastFocusElement = document.activeElement;\n}\n/** @deprecated Do not use since this may failed when used in async */\n\nfunction clearLastFocusNode() {\n  lastFocusElement = null;\n}\n/** @deprecated Do not use since this may failed when used in async */\n\nfunction backLastFocusNode() {\n  if (lastFocusElement) {\n    try {\n      // \u5143\u7d20\u53ef\u80fd\u5df2\u7ecf\u88ab\u79fb\u52a8\u4e86\n      lastFocusElement.focus();\n      /* eslint-disable no-empty */\n    } catch (e) {// empty\n    }\n    /* eslint-enable no-empty */\n\n  }\n}\nfunction limitTabRange(node, e) {\n  if (e.keyCode === 9) {\n    var tabNodeList = getFocusNodeList(node);\n    var lastTabNode = tabNodeList[e.shiftKey ? 0 : tabNodeList.length - 1];\n    var leavingTab = lastTabNode === document.activeElement || node === document.activeElement;\n\n    if (leavingTab) {\n      var target = tabNodeList[e.shiftKey ? tabNodeList.length - 1 : 0];\n      target.focus();\n      e.preventDefault();\n    }\n  }\n}\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-menu/es/hooks/useAccessibility.js\n\n\n\n\n\n // destruct to reduce minify size\n\nvar LEFT = KeyCode["a" /* default */].LEFT,\n    RIGHT = KeyCode["a" /* default */].RIGHT,\n    UP = KeyCode["a" /* default */].UP,\n    DOWN = KeyCode["a" /* default */].DOWN,\n    ENTER = KeyCode["a" /* default */].ENTER,\n    ESC = KeyCode["a" /* default */].ESC;\nvar ArrowKeys = [UP, DOWN, LEFT, RIGHT];\n\nfunction getOffset(mode, isRootLevel, isRtl, which) {\n  var _inline, _horizontal, _vertical, _offsets$;\n\n  var prev = \'prev\';\n  var next = \'next\';\n  var children = \'children\';\n  var parent = \'parent\'; // Inline enter is special that we use unique operation\n\n  if (mode === \'inline\' && which === ENTER) {\n    return {\n      inlineTrigger: true\n    };\n  }\n\n  var inline = (_inline = {}, Object(defineProperty["a" /* default */])(_inline, UP, prev), Object(defineProperty["a" /* default */])(_inline, DOWN, next), _inline);\n  var horizontal = (_horizontal = {}, Object(defineProperty["a" /* default */])(_horizontal, LEFT, isRtl ? next : prev), Object(defineProperty["a" /* default */])(_horizontal, RIGHT, isRtl ? prev : next), Object(defineProperty["a" /* default */])(_horizontal, DOWN, children), Object(defineProperty["a" /* default */])(_horizontal, ENTER, children), _horizontal);\n  var vertical = (_vertical = {}, Object(defineProperty["a" /* default */])(_vertical, UP, prev), Object(defineProperty["a" /* default */])(_vertical, DOWN, next), Object(defineProperty["a" /* default */])(_vertical, ENTER, children), Object(defineProperty["a" /* default */])(_vertical, ESC, parent), Object(defineProperty["a" /* default */])(_vertical, LEFT, isRtl ? children : parent), Object(defineProperty["a" /* default */])(_vertical, RIGHT, isRtl ? parent : children), _vertical);\n  var offsets = {\n    inline: inline,\n    horizontal: horizontal,\n    vertical: vertical,\n    inlineSub: inline,\n    horizontalSub: vertical,\n    verticalSub: vertical\n  };\n  var type = (_offsets$ = offsets["".concat(mode).concat(isRootLevel ? \'\' : \'Sub\')]) === null || _offsets$ === void 0 ? void 0 : _offsets$[which];\n\n  switch (type) {\n    case prev:\n      return {\n        offset: -1,\n        sibling: true\n      };\n\n    case next:\n      return {\n        offset: 1,\n        sibling: true\n      };\n\n    case parent:\n      return {\n        offset: -1,\n        sibling: false\n      };\n\n    case children:\n      return {\n        offset: 1,\n        sibling: false\n      };\n\n    default:\n      return null;\n  }\n}\n\nfunction findContainerUL(element) {\n  var current = element;\n\n  while (current) {\n    if (current.getAttribute(\'data-menu-list\')) {\n      return current;\n    }\n\n    current = current.parentElement;\n  } // Normally should not reach this line\n\n  /* istanbul ignore next */\n\n\n  return null;\n}\n/**\n * Find focused element within element set provided\n */\n\n\nfunction getFocusElement(activeElement, elements) {\n  var current = activeElement || document.activeElement;\n\n  while (current) {\n    if (elements.has(current)) {\n      return current;\n    }\n\n    current = current.parentElement;\n  }\n\n  return null;\n}\n/**\n * Get focusable elements from the element set under provided container\n */\n\n\nfunction getFocusableElements(container, elements) {\n  var list = getFocusNodeList(container, true);\n  return list.filter(function (ele) {\n    return elements.has(ele);\n  });\n}\n\nfunction getNextFocusElement(parentQueryContainer, elements, focusMenuElement) {\n  var offset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1; // Key on the menu item will not get validate parent container\n\n  if (!parentQueryContainer) {\n    return null;\n  } // List current level menu item elements\n\n\n  var sameLevelFocusableMenuElementList = getFocusableElements(parentQueryContainer, elements); // Find next focus index\n\n  var count = sameLevelFocusableMenuElementList.length;\n  var focusIndex = sameLevelFocusableMenuElementList.findIndex(function (ele) {\n    return focusMenuElement === ele;\n  });\n\n  if (offset < 0) {\n    if (focusIndex === -1) {\n      focusIndex = count - 1;\n    } else {\n      focusIndex -= 1;\n    }\n  } else if (offset > 0) {\n    focusIndex += 1;\n  }\n\n  focusIndex = (focusIndex + count) % count; // Focus menu item\n\n  return sameLevelFocusableMenuElementList[focusIndex];\n}\n\nfunction useAccessibility(mode, activeKey, isRtl, id, containerRef, getKeys, getKeyPath, triggerActiveKey, triggerAccessibilityOpen, originOnKeyDown) {\n  var rafRef = react["useRef"]();\n  var activeRef = react["useRef"]();\n  activeRef.current = activeKey;\n\n  var cleanRaf = function cleanRaf() {\n    raf["a" /* default */].cancel(rafRef.current);\n  };\n\n  react["useEffect"](function () {\n    return function () {\n      cleanRaf();\n    };\n  }, []);\n  return function (e) {\n    var which = e.which;\n\n    if ([].concat(ArrowKeys, [ENTER, ESC]).includes(which)) {\n      // Convert key to elements\n      var elements;\n      var key2element;\n      var element2key; // >>> Wrap as function since we use raf for some case\n\n      var refreshElements = function refreshElements() {\n        elements = new Set();\n        key2element = new Map();\n        element2key = new Map();\n        var keys = getKeys();\n        keys.forEach(function (key) {\n          var element = document.querySelector("[data-menu-id=\'".concat(getMenuId(id, key), "\']"));\n\n          if (element) {\n            elements.add(element);\n            element2key.set(element, key);\n            key2element.set(key, element);\n          }\n        });\n        return elements;\n      };\n\n      refreshElements(); // First we should find current focused MenuItem/SubMenu element\n\n      var activeElement = key2element.get(activeKey);\n      var focusMenuElement = getFocusElement(activeElement, elements);\n      var focusMenuKey = element2key.get(focusMenuElement);\n      var offsetObj = getOffset(mode, getKeyPath(focusMenuKey, true).length === 1, isRtl, which); // Some mode do not have fully arrow operation like inline\n\n      if (!offsetObj) {\n        return;\n      } // Arrow prevent default to avoid page scroll\n\n\n      if (ArrowKeys.includes(which)) {\n        e.preventDefault();\n      }\n\n      var tryFocus = function tryFocus(menuElement) {\n        if (menuElement) {\n          var focusTargetElement = menuElement; // Focus to link instead of menu item if possible\n\n          var link = menuElement.querySelector(\'a\');\n\n          if (link === null || link === void 0 ? void 0 : link.getAttribute(\'href\')) {\n            focusTargetElement = link;\n          }\n\n          var targetKey = element2key.get(menuElement);\n          triggerActiveKey(targetKey);\n          /**\n           * Do not `useEffect` here since `tryFocus` may trigger async\n           * which makes React sync update the `activeKey`\n           * that force render before `useRef` set the next activeKey\n           */\n\n          cleanRaf();\n          rafRef.current = Object(raf["a" /* default */])(function () {\n            if (activeRef.current === targetKey) {\n              focusTargetElement.focus();\n            }\n          });\n        }\n      };\n\n      if (offsetObj.sibling || !focusMenuElement) {\n        // ========================== Sibling ==========================\n        // Find walkable focus menu element container\n        var parentQueryContainer;\n\n        if (!focusMenuElement || mode === \'inline\') {\n          parentQueryContainer = containerRef.current;\n        } else {\n          parentQueryContainer = findContainerUL(focusMenuElement);\n        } // Get next focus element\n\n\n        var targetElement = getNextFocusElement(parentQueryContainer, elements, focusMenuElement, offsetObj.offset); // Focus menu item\n\n        tryFocus(targetElement); // ======================= InlineTrigger =======================\n      } else if (offsetObj.inlineTrigger) {\n        // Inline trigger no need switch to sub menu item\n        triggerAccessibilityOpen(focusMenuKey); // =========================== Level ===========================\n      } else if (offsetObj.offset > 0) {\n        triggerAccessibilityOpen(focusMenuKey, true);\n        cleanRaf();\n        rafRef.current = Object(raf["a" /* default */])(function () {\n          // Async should resync elements\n          refreshElements();\n          var controlId = focusMenuElement.getAttribute(\'aria-controls\');\n          var subQueryContainer = document.getElementById(controlId); // Get sub focusable menu item\n\n          var targetElement = getNextFocusElement(subQueryContainer, elements); // Focus menu item\n\n          tryFocus(targetElement);\n        }, 5);\n      } else if (offsetObj.offset < 0) {\n        var keyPath = getKeyPath(focusMenuKey, true);\n        var parentKey = keyPath[keyPath.length - 2];\n        var parentMenuElement = key2element.get(parentKey); // Focus menu item\n\n        triggerAccessibilityOpen(parentKey, false);\n        tryFocus(parentMenuElement);\n      }\n    } // Pass origin key down event\n\n\n    originOnKeyDown === null || originOnKeyDown === void 0 ? void 0 : originOnKeyDown(e);\n  };\n}\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-menu/es/hooks/useUUID.js\n\n\n\nvar uniquePrefix = Math.random().toFixed(5).toString().slice(2);\nvar internalId = 0;\nfunction useUUID(id) {\n  var _useMergedState = Object(useMergedState["a" /* default */])(id, {\n    value: id\n  }),\n      _useMergedState2 = Object(slicedToArray["a" /* default */])(_useMergedState, 2),\n      uuid = _useMergedState2[0],\n      setUUID = _useMergedState2[1];\n\n  react["useEffect"](function () {\n    internalId += 1;\n    var newId =  false ? undefined : "".concat(uniquePrefix, "-").concat(internalId);\n    setUUID("rc-menu-uuid-".concat(newId));\n  }, []);\n  return uuid;\n}\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-menu/es/utils/timeUtil.js\nfunction nextSlice(callback) {\n  /* istanbul ignore next */\n  Promise.resolve().then(callback);\n}\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-menu/es/hooks/useKeyRecords.js\n\n\n\n\n\n\nvar PATH_SPLIT = \'__RC_UTIL_PATH_SPLIT__\';\n\nvar getPathStr = function getPathStr(keyPath) {\n  return keyPath.join(PATH_SPLIT);\n};\n\nvar getPathKeys = function getPathKeys(keyPathStr) {\n  return keyPathStr.split(PATH_SPLIT);\n};\n\nvar OVERFLOW_KEY = \'rc-menu-more\';\nfunction useKeyRecords() {\n  var _React$useState = react["useState"]({}),\n      _React$useState2 = Object(slicedToArray["a" /* default */])(_React$useState, 2),\n      internalForceUpdate = _React$useState2[1];\n\n  var key2pathRef = Object(react["useRef"])(new Map());\n  var path2keyRef = Object(react["useRef"])(new Map());\n\n  var _React$useState3 = react["useState"]([]),\n      _React$useState4 = Object(slicedToArray["a" /* default */])(_React$useState3, 2),\n      overflowKeys = _React$useState4[0],\n      setOverflowKeys = _React$useState4[1];\n\n  var updateRef = Object(react["useRef"])(0);\n  var destroyRef = Object(react["useRef"])(false);\n\n  var forceUpdate = function forceUpdate() {\n    if (!destroyRef.current) {\n      internalForceUpdate({});\n    }\n  };\n\n  var registerPath = Object(react["useCallback"])(function (key, keyPath) {\n    // Warning for invalidate or duplicated `key`\n    if (false) {} // Fill map\n\n\n    var connectedPath = getPathStr(keyPath);\n    path2keyRef.current.set(connectedPath, key);\n    key2pathRef.current.set(key, connectedPath);\n    updateRef.current += 1;\n    var id = updateRef.current;\n    nextSlice(function () {\n      if (id === updateRef.current) {\n        forceUpdate();\n      }\n    });\n  }, []);\n  var unregisterPath = Object(react["useCallback"])(function (key, keyPath) {\n    var connectedPath = getPathStr(keyPath);\n    path2keyRef.current["delete"](connectedPath);\n    key2pathRef.current["delete"](key);\n  }, []);\n  var refreshOverflowKeys = Object(react["useCallback"])(function (keys) {\n    setOverflowKeys(keys);\n  }, []);\n  var getKeyPath = Object(react["useCallback"])(function (eventKey, includeOverflow) {\n    var fullPath = key2pathRef.current.get(eventKey) || \'\';\n    var keys = getPathKeys(fullPath);\n\n    if (includeOverflow && overflowKeys.includes(keys[0])) {\n      keys.unshift(OVERFLOW_KEY);\n    }\n\n    return keys;\n  }, [overflowKeys]);\n  var isSubPathKey = Object(react["useCallback"])(function (pathKeys, eventKey) {\n    return pathKeys.some(function (pathKey) {\n      var pathKeyList = getKeyPath(pathKey, true);\n      return pathKeyList.includes(eventKey);\n    });\n  }, [getKeyPath]);\n\n  var getKeys = function getKeys() {\n    var keys = Object(toConsumableArray["a" /* default */])(key2pathRef.current.keys());\n\n    if (overflowKeys.length) {\n      keys.push(OVERFLOW_KEY);\n    }\n\n    return keys;\n  };\n  /**\n   * Find current key related child path keys\n   */\n\n\n  var getSubPathKeys = Object(react["useCallback"])(function (key) {\n    var connectedPath = "".concat(key2pathRef.current.get(key)).concat(PATH_SPLIT);\n    var pathKeys = new Set();\n\n    Object(toConsumableArray["a" /* default */])(path2keyRef.current.keys()).forEach(function (pathKey) {\n      if (pathKey.startsWith(connectedPath)) {\n        pathKeys.add(path2keyRef.current.get(pathKey));\n      }\n    });\n\n    return pathKeys;\n  }, []);\n  react["useEffect"](function () {\n    return function () {\n      destroyRef.current = true;\n    };\n  }, []);\n  return {\n    // Register\n    registerPath: registerPath,\n    unregisterPath: unregisterPath,\n    refreshOverflowKeys: refreshOverflowKeys,\n    // Util\n    isSubPathKey: isSubPathKey,\n    getKeyPath: getKeyPath,\n    getKeys: getKeys,\n    getSubPathKeys: getSubPathKeys\n  };\n}\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-menu/es/Menu.js\n\n\n\n\n\n\nvar Menu_excluded = ["prefixCls", "style", "className", "tabIndex", "children", "direction", "id", "mode", "inlineCollapsed", "disabled", "disabledOverflow", "subMenuOpenDelay", "subMenuCloseDelay", "forceSubMenuRender", "defaultOpenKeys", "openKeys", "activeKey", "defaultActiveFirst", "selectable", "multiple", "defaultSelectedKeys", "selectedKeys", "onSelect", "onDeselect", "inlineIndent", "motion", "defaultMotions", "triggerSubMenuAction", "builtinPlacements", "itemIcon", "expandIcon", "overflowedIndicator", "overflowedIndicatorPopupClassName", "getPopupContainer", "onClick", "onOpenChange", "onKeyDown", "openAnimation", "openTransitionName"];\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Menu modify after refactor:\n * ## Add\n * - disabled\n *\n * ## Remove\n * - openTransitionName\n * - openAnimation\n * - onDestroy\n * - siderCollapsed: Seems antd do not use this prop (Need test in antd)\n * - collapsedWidth: Seems this logic should be handle by antd Layout.Sider\n */\n// optimize for render\n\nvar EMPTY_LIST = [];\n\nvar Menu_Menu = function Menu(props) {\n  var _childList$, _classNames;\n\n  var _props$prefixCls = props.prefixCls,\n      prefixCls = _props$prefixCls === void 0 ? \'rc-menu\' : _props$prefixCls,\n      style = props.style,\n      className = props.className,\n      _props$tabIndex = props.tabIndex,\n      tabIndex = _props$tabIndex === void 0 ? 0 : _props$tabIndex,\n      children = props.children,\n      direction = props.direction,\n      id = props.id,\n      _props$mode = props.mode,\n      mode = _props$mode === void 0 ? \'vertical\' : _props$mode,\n      inlineCollapsed = props.inlineCollapsed,\n      disabled = props.disabled,\n      disabledOverflow = props.disabledOverflow,\n      _props$subMenuOpenDel = props.subMenuOpenDelay,\n      subMenuOpenDelay = _props$subMenuOpenDel === void 0 ? 0.1 : _props$subMenuOpenDel,\n      _props$subMenuCloseDe = props.subMenuCloseDelay,\n      subMenuCloseDelay = _props$subMenuCloseDe === void 0 ? 0.1 : _props$subMenuCloseDe,\n      forceSubMenuRender = props.forceSubMenuRender,\n      defaultOpenKeys = props.defaultOpenKeys,\n      openKeys = props.openKeys,\n      activeKey = props.activeKey,\n      defaultActiveFirst = props.defaultActiveFirst,\n      _props$selectable = props.selectable,\n      selectable = _props$selectable === void 0 ? true : _props$selectable,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      defaultSelectedKeys = props.defaultSelectedKeys,\n      selectedKeys = props.selectedKeys,\n      onSelect = props.onSelect,\n      onDeselect = props.onDeselect,\n      _props$inlineIndent = props.inlineIndent,\n      inlineIndent = _props$inlineIndent === void 0 ? 24 : _props$inlineIndent,\n      motion = props.motion,\n      defaultMotions = props.defaultMotions,\n      _props$triggerSubMenu = props.triggerSubMenuAction,\n      triggerSubMenuAction = _props$triggerSubMenu === void 0 ? \'hover\' : _props$triggerSubMenu,\n      builtinPlacements = props.builtinPlacements,\n      itemIcon = props.itemIcon,\n      expandIcon = props.expandIcon,\n      _props$overflowedIndi = props.overflowedIndicator,\n      overflowedIndicator = _props$overflowedIndi === void 0 ? \'...\' : _props$overflowedIndi,\n      overflowedIndicatorPopupClassName = props.overflowedIndicatorPopupClassName,\n      getPopupContainer = props.getPopupContainer,\n      onClick = props.onClick,\n      onOpenChange = props.onOpenChange,\n      onKeyDown = props.onKeyDown,\n      openAnimation = props.openAnimation,\n      openTransitionName = props.openTransitionName,\n      restProps = Object(objectWithoutProperties["a" /* default */])(props, Menu_excluded);\n\n  var childList = parseChildren(children, EMPTY_LIST);\n\n  var _React$useState = react["useState"](false),\n      _React$useState2 = Object(slicedToArray["a" /* default */])(_React$useState, 2),\n      mounted = _React$useState2[0],\n      setMounted = _React$useState2[1];\n\n  var containerRef = react["useRef"]();\n  var uuid = useUUID(id);\n  var isRtl = direction === \'rtl\'; // ========================= Warn =========================\n\n  if (false) {} // ========================= Mode =========================\n\n\n  var _React$useMemo = react["useMemo"](function () {\n    if ((mode === \'inline\' || mode === \'vertical\') && inlineCollapsed) {\n      return [\'vertical\', inlineCollapsed];\n    }\n\n    return [mode, false];\n  }, [mode, inlineCollapsed]),\n      _React$useMemo2 = Object(slicedToArray["a" /* default */])(_React$useMemo, 2),\n      mergedMode = _React$useMemo2[0],\n      mergedInlineCollapsed = _React$useMemo2[1]; // ====================== Responsive ======================\n\n\n  var _React$useState3 = react["useState"](0),\n      _React$useState4 = Object(slicedToArray["a" /* default */])(_React$useState3, 2),\n      lastVisibleIndex = _React$useState4[0],\n      setLastVisibleIndex = _React$useState4[1];\n\n  var allVisible = lastVisibleIndex >= childList.length - 1 || mergedMode !== \'horizontal\' || disabledOverflow; // ========================= Open =========================\n\n  var _useMergedState = Object(useMergedState["a" /* default */])(defaultOpenKeys, {\n    value: openKeys,\n    postState: function postState(keys) {\n      return keys || EMPTY_LIST;\n    }\n  }),\n      _useMergedState2 = Object(slicedToArray["a" /* default */])(_useMergedState, 2),\n      mergedOpenKeys = _useMergedState2[0],\n      setMergedOpenKeys = _useMergedState2[1];\n\n  var triggerOpenKeys = function triggerOpenKeys(keys) {\n    setMergedOpenKeys(keys);\n    onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(keys);\n  }; // >>>>> Cache & Reset open keys when inlineCollapsed changed\n\n\n  var _React$useState5 = react["useState"](mergedOpenKeys),\n      _React$useState6 = Object(slicedToArray["a" /* default */])(_React$useState5, 2),\n      inlineCacheOpenKeys = _React$useState6[0],\n      setInlineCacheOpenKeys = _React$useState6[1];\n\n  var isInlineMode = mergedMode === \'inline\';\n  var mountRef = react["useRef"](false); // Cache\n\n  react["useEffect"](function () {\n    if (isInlineMode) {\n      setInlineCacheOpenKeys(mergedOpenKeys);\n    }\n  }, [mergedOpenKeys]); // Restore\n\n  react["useEffect"](function () {\n    if (!mountRef.current) {\n      mountRef.current = true;\n      return;\n    }\n\n    if (isInlineMode) {\n      setMergedOpenKeys(inlineCacheOpenKeys);\n    } else {\n      // Trigger open event in case its in control\n      triggerOpenKeys(EMPTY_LIST);\n    }\n  }, [isInlineMode]); // ========================= Path =========================\n\n  var _useKeyRecords = useKeyRecords(),\n      registerPath = _useKeyRecords.registerPath,\n      unregisterPath = _useKeyRecords.unregisterPath,\n      refreshOverflowKeys = _useKeyRecords.refreshOverflowKeys,\n      isSubPathKey = _useKeyRecords.isSubPathKey,\n      getKeyPath = _useKeyRecords.getKeyPath,\n      getKeys = _useKeyRecords.getKeys,\n      getSubPathKeys = _useKeyRecords.getSubPathKeys;\n\n  var registerPathContext = react["useMemo"](function () {\n    return {\n      registerPath: registerPath,\n      unregisterPath: unregisterPath\n    };\n  }, [registerPath, unregisterPath]);\n  var pathUserContext = react["useMemo"](function () {\n    return {\n      isSubPathKey: isSubPathKey\n    };\n  }, [isSubPathKey]);\n  react["useEffect"](function () {\n    refreshOverflowKeys(allVisible ? EMPTY_LIST : childList.slice(lastVisibleIndex + 1).map(function (child) {\n      return child.key;\n    }));\n  }, [lastVisibleIndex, allVisible]); // ======================== Active ========================\n\n  var _useMergedState3 = Object(useMergedState["a" /* default */])(activeKey || defaultActiveFirst && ((_childList$ = childList[0]) === null || _childList$ === void 0 ? void 0 : _childList$.key), {\n    value: activeKey\n  }),\n      _useMergedState4 = Object(slicedToArray["a" /* default */])(_useMergedState3, 2),\n      mergedActiveKey = _useMergedState4[0],\n      setMergedActiveKey = _useMergedState4[1];\n\n  var onActive = useMemoCallback(function (key) {\n    setMergedActiveKey(key);\n  });\n  var onInactive = useMemoCallback(function () {\n    setMergedActiveKey(undefined);\n  }); // ======================== Select ========================\n  // >>>>> Select keys\n\n  var _useMergedState5 = Object(useMergedState["a" /* default */])(defaultSelectedKeys || [], {\n    value: selectedKeys,\n    // Legacy convert key to array\n    postState: function postState(keys) {\n      if (Array.isArray(keys)) {\n        return keys;\n      }\n\n      if (keys === null || keys === undefined) {\n        return EMPTY_LIST;\n      }\n\n      return [keys];\n    }\n  }),\n      _useMergedState6 = Object(slicedToArray["a" /* default */])(_useMergedState5, 2),\n      mergedSelectKeys = _useMergedState6[0],\n      setMergedSelectKeys = _useMergedState6[1]; // >>>>> Trigger select\n\n\n  var triggerSelection = function triggerSelection(info) {\n    if (selectable) {\n      // Insert or Remove\n      var targetKey = info.key;\n      var exist = mergedSelectKeys.includes(targetKey);\n      var newSelectKeys;\n\n      if (multiple) {\n        if (exist) {\n          newSelectKeys = mergedSelectKeys.filter(function (key) {\n            return key !== targetKey;\n          });\n        } else {\n          newSelectKeys = [].concat(Object(toConsumableArray["a" /* default */])(mergedSelectKeys), [targetKey]);\n        }\n      } else {\n        newSelectKeys = [targetKey];\n      }\n\n      setMergedSelectKeys(newSelectKeys); // Trigger event\n\n      var selectInfo = Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({}, info), {}, {\n        selectedKeys: newSelectKeys\n      });\n\n      if (exist) {\n        onDeselect === null || onDeselect === void 0 ? void 0 : onDeselect(selectInfo);\n      } else {\n        onSelect === null || onSelect === void 0 ? void 0 : onSelect(selectInfo);\n      }\n    } // Whatever selectable, always close it\n\n\n    if (!multiple && mergedOpenKeys.length && mergedMode !== \'inline\') {\n      triggerOpenKeys(EMPTY_LIST);\n    }\n  }; // ========================= Open =========================\n\n  /**\n   * Click for item. SubMenu do not have selection status\n   */\n\n\n  var onInternalClick = useMemoCallback(function (info) {\n    onClick === null || onClick === void 0 ? void 0 : onClick(warnItemProp(info));\n    triggerSelection(info);\n  });\n  var onInternalOpenChange = useMemoCallback(function (key, open) {\n    var newOpenKeys = mergedOpenKeys.filter(function (k) {\n      return k !== key;\n    });\n\n    if (open) {\n      newOpenKeys.push(key);\n    } else if (mergedMode !== \'inline\') {\n      // We need find all related popup to close\n      var subPathKeys = getSubPathKeys(key);\n      newOpenKeys = newOpenKeys.filter(function (k) {\n        return !subPathKeys.has(k);\n      });\n    }\n\n    if (!shallowequal_default()(mergedOpenKeys, newOpenKeys)) {\n      triggerOpenKeys(newOpenKeys);\n    }\n  });\n  var getInternalPopupContainer = useMemoCallback(getPopupContainer); // ==================== Accessibility =====================\n\n  var triggerAccessibilityOpen = function triggerAccessibilityOpen(key, open) {\n    var nextOpen = open !== null && open !== void 0 ? open : !mergedOpenKeys.includes(key);\n    onInternalOpenChange(key, nextOpen);\n  };\n\n  var onInternalKeyDown = useAccessibility(mergedMode, mergedActiveKey, isRtl, uuid, containerRef, getKeys, getKeyPath, setMergedActiveKey, triggerAccessibilityOpen, onKeyDown); // ======================== Effect ========================\n\n  react["useEffect"](function () {\n    setMounted(true);\n  }, []); // ======================== Render ========================\n  // >>>>> Children\n\n  var wrappedChildList = mergedMode !== \'horizontal\' || disabledOverflow ? childList : // Need wrap for overflow dropdown that do not response for open\n  childList.map(function (child, index) {\n    return (\n      /*#__PURE__*/\n      // Always wrap provider to avoid sub node re-mount\n      react["createElement"](InheritableContextProvider, {\n        key: child.key,\n        overflowDisabled: index > lastVisibleIndex\n      }, child)\n    );\n  }); // >>>>> Container\n\n  var container = /*#__PURE__*/react["createElement"](es["a" /* default */], Object(esm_extends["a" /* default */])({\n    id: id,\n    ref: containerRef,\n    prefixCls: "".concat(prefixCls, "-overflow"),\n    component: "ul",\n    itemComponent: es_MenuItem,\n    className: classnames_default()(prefixCls, "".concat(prefixCls, "-root"), "".concat(prefixCls, "-").concat(mergedMode), className, (_classNames = {}, Object(defineProperty["a" /* default */])(_classNames, "".concat(prefixCls, "-inline-collapsed"), mergedInlineCollapsed), Object(defineProperty["a" /* default */])(_classNames, "".concat(prefixCls, "-rtl"), isRtl), _classNames)),\n    dir: direction,\n    style: style,\n    role: "menu",\n    tabIndex: tabIndex,\n    data: wrappedChildList,\n    renderRawItem: function renderRawItem(node) {\n      return node;\n    },\n    renderRawRest: function renderRawRest(omitItems) {\n      // We use origin list since wrapped list use context to prevent open\n      var len = omitItems.length;\n      var originOmitItems = len ? childList.slice(-len) : null;\n      return /*#__PURE__*/react["createElement"](SubMenu, {\n        eventKey: OVERFLOW_KEY,\n        title: overflowedIndicator,\n        disabled: allVisible,\n        internalPopupClose: len === 0,\n        popupClassName: overflowedIndicatorPopupClassName\n      }, originOmitItems);\n    },\n    maxCount: mergedMode !== \'horizontal\' || disabledOverflow ? es["a" /* default */].INVALIDATE : es["a" /* default */].RESPONSIVE,\n    ssr: "full",\n    "data-menu-list": true,\n    onVisibleChange: function onVisibleChange(newLastIndex) {\n      setLastVisibleIndex(newLastIndex);\n    },\n    onKeyDown: onInternalKeyDown\n  }, restProps)); // >>>>> Render\n\n  return /*#__PURE__*/react["createElement"](IdContext.Provider, {\n    value: uuid\n  }, /*#__PURE__*/react["createElement"](InheritableContextProvider, {\n    prefixCls: prefixCls,\n    mode: mergedMode,\n    openKeys: mergedOpenKeys,\n    rtl: isRtl // Disabled\n    ,\n    disabled: disabled // Motion\n    ,\n    motion: mounted ? motion : null,\n    defaultMotions: mounted ? defaultMotions : null // Active\n    ,\n    activeKey: mergedActiveKey,\n    onActive: onActive,\n    onInactive: onInactive // Selection\n    ,\n    selectedKeys: mergedSelectKeys // Level\n    ,\n    inlineIndent: inlineIndent // Popup\n    ,\n    subMenuOpenDelay: subMenuOpenDelay,\n    subMenuCloseDelay: subMenuCloseDelay,\n    forceSubMenuRender: forceSubMenuRender,\n    builtinPlacements: builtinPlacements,\n    triggerSubMenuAction: triggerSubMenuAction,\n    getPopupContainer: getInternalPopupContainer // Icon\n    ,\n    itemIcon: itemIcon,\n    expandIcon: expandIcon // Events\n    ,\n    onItemClick: onInternalClick,\n    onOpenChange: onInternalOpenChange\n  }, /*#__PURE__*/react["createElement"](PathUserContext.Provider, {\n    value: pathUserContext\n  }, container), /*#__PURE__*/react["createElement"]("div", {\n    style: {\n      display: \'none\'\n    },\n    "aria-hidden": true\n  }, /*#__PURE__*/react["createElement"](PathRegisterContext.Provider, {\n    value: registerPathContext\n  }, childList))));\n};\n\n/* harmony default export */ var es_Menu = (Menu_Menu);\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-menu/es/MenuItemGroup.js\n\n\nvar MenuItemGroup_excluded = ["className", "title", "eventKey", "children"],\n    MenuItemGroup_excluded2 = ["children"];\n\n\n\n\n\n\n\nvar MenuItemGroup_InternalMenuItemGroup = function InternalMenuItemGroup(_ref) {\n  var className = _ref.className,\n      title = _ref.title,\n      eventKey = _ref.eventKey,\n      children = _ref.children,\n      restProps = Object(objectWithoutProperties["a" /* default */])(_ref, MenuItemGroup_excluded);\n\n  var _React$useContext = react["useContext"](MenuContext),\n      prefixCls = _React$useContext.prefixCls;\n\n  var groupPrefixCls = "".concat(prefixCls, "-item-group");\n  return /*#__PURE__*/react["createElement"]("li", Object(esm_extends["a" /* default */])({}, restProps, {\n    onClick: function onClick(e) {\n      return e.stopPropagation();\n    },\n    className: classnames_default()(groupPrefixCls, className)\n  }), /*#__PURE__*/react["createElement"]("div", {\n    className: "".concat(groupPrefixCls, "-title"),\n    title: typeof title === \'string\' ? title : undefined\n  }, title), /*#__PURE__*/react["createElement"]("ul", {\n    className: "".concat(groupPrefixCls, "-list")\n  }, children));\n};\n\nfunction MenuItemGroup(_ref2) {\n  var children = _ref2.children,\n      props = Object(objectWithoutProperties["a" /* default */])(_ref2, MenuItemGroup_excluded2);\n\n  var connectedKeyPath = useFullPath(props.eventKey);\n  var childList = parseChildren(children, connectedKeyPath);\n  var measure = useMeasure();\n\n  if (measure) {\n    return childList;\n  }\n\n  return /*#__PURE__*/react["createElement"](MenuItemGroup_InternalMenuItemGroup, Object(omit["a" /* default */])(props, [\'warnKey\']), childList);\n}\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-menu/es/Divider.js\n\n\n\n\nfunction Divider(_ref) {\n  var className = _ref.className,\n      style = _ref.style;\n\n  var _React$useContext = react["useContext"](MenuContext),\n      prefixCls = _React$useContext.prefixCls;\n\n  var measure = useMeasure();\n\n  if (measure) {\n    return null;\n  }\n\n  return /*#__PURE__*/react["createElement"]("li", {\n    className: classnames_default()("".concat(prefixCls, "-item-divider"), className),\n    style: style\n  });\n}\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/rc-menu/es/index.js\n\n\n\n\n\n\n/** @private Only used for antd internal. Do not use in your production. */\n\nvar es_useFullPath = useFullPath;\n\nvar ExportMenu = es_Menu;\nExportMenu.Item = es_MenuItem;\nExportMenu.SubMenu = SubMenu;\nExportMenu.ItemGroup = MenuItemGroup;\nExportMenu.Divider = Divider;\n/* harmony default export */ var rc_menu_es = __webpack_exports__["b"] = (ExportMenu);\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/rc-menu/es/index.js_+_24_modules?')},vxC8:function(module,exports,__webpack_require__){eval('var baseIsNative = __webpack_require__("5nKN"),\n    getValue = __webpack_require__("4p/L");\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it\'s native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_getNative.js?')},wxYD:function(module,exports){eval("/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/isArray.js?")},"y/9h":function(module,exports){eval("/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_arrayPush.js?")},yZHP:function(module,exports,__webpack_require__){eval("var getAllKeys = __webpack_require__(\"tlBq\");\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Check that cyclic values are equal.\n  var objStacked = stack.get(object);\n  var othStacked = stack.get(other);\n  if (objStacked && othStacked) {\n    return objStacked == other && othStacked == object;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;\n\n\n//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/lodash/_equalObjects.js?")}}]);