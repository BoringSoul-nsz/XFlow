(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[1],{"9kvl":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, "a", function() { return /* reexport */ core_history["b" /* history */]; });\n\n// UNUSED EXPORTS: plugin, isBrowser\n\n// EXTERNAL MODULE: ./src/.umi-production/core/history.ts\nvar core_history = __webpack_require__("FfOG");\n\n// EXTERNAL MODULE: ./src/.umi-production/core/plugin.ts\nvar core_plugin = __webpack_require__("bCY9");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/utils/lib/ssr.js\nvar ssr = __webpack_require__("2nRa");\n\n// CONCATENATED MODULE: ./src/.umi-production/core/ssr/clientExports.ts\n// @ts-nocheck\n// only export isBrowser for user\n\n// CONCATENATED MODULE: ./src/.umi-production/core/umiExports.ts\n// @ts-nocheck\n\n\n\n\n//# sourceURL=webpack:///./src/.umi-production/core/umiExports.ts_+_1_modules?')},BlwA:function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return useCodeSandbox; });\n/* harmony import */ var _Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"jem/\");\n/* harmony import */ var _Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"KOBo\");\n/* harmony import */ var _Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"RY7m\");\n/* harmony import */ var _Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"q1tI\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var less__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"+kuV\");\n/* harmony import */ var less__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(less__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var lz_string__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"O2W8\");\n/* harmony import */ var lz_string__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(lz_string__WEBPACK_IMPORTED_MODULE_5__);\n\n\n\n\n\n\nvar CSB_API_ENDPOINT = 'https://codesandbox.io/api/v1/sandboxes/define'; // ref: https://github.com/codesandbox/codesandbox-importers/blob/master/packages/import-utils/src/api/define.ts\n\nfunction serialize(data) {\n  return lz_string__WEBPACK_IMPORTED_MODULE_5___default.a.compressToBase64(JSON.stringify(data)).replace(/\\+/g, '-') // Convert '+' to '-'\n  .replace(/\\//g, '_') // Convert '/' to '_'\n  .replace(/=+$/, ''); // Remove ending '='\n}\n\nfunction getTextContent(raw) {\n  var elm = document.createElement('span');\n  elm.innerHTML = raw;\n  var text = elm.textContent;\n  elm.remove();\n  return text;\n}\n\nfunction cbsHook(_x, _x2) {\n  return _cbsHook.apply(this, arguments);\n}\n\nfunction _cbsHook() {\n  _cbsHook = Object(_Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[/* default */ \"a\"])( /*#__PURE__*/_Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee2(data, props) {\n    var _props$className, className, cssList, mainCss;\n\n    return _Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _props$className = props.className, className = _props$className === void 0 ? [] : _props$className;\n            _context2.prev = 1;\n            _context2.next = 4;\n            return Promise.all(Object.entries(data).filter(_ref2 => {\n              var _ref3 = Object(_Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])(_ref2, 2),\n                  filename = _ref3[0],\n                  value = _ref3[1];\n\n              return filename.includes('.less');\n            }).map(_ref4 => {\n              var _ref5 = Object(_Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])(_ref4, 2),\n                  filename = _ref5[0],\n                  content = _ref5[1];\n\n              var options = {\n                javascriptEnabled: true\n              };\n              return less__WEBPACK_IMPORTED_MODULE_4___default.a.render(content, options);\n            }));\n\n          case 4:\n            cssList = _context2.sent;\n            mainCss = cssList.reduce((acc, output) => acc + '\\n' + output.css, '');\n            data['index.html'] = \"\\n    <style type=\\\"text/css\\\">\\n    \".concat(mainCss, \"\\n    </style>\\n    <div style=\\\"height:100%\\\" id=\\\"root\\\" class=\\\"\").concat(className.join(' '), \"\\\"></div>\\n    \");\n            _context2.next = 12;\n            break;\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](1);\n            data['index.html'] = \"\\n    <style type=\\\"text/css\\\">\\n     less compile error\\n    </style>\\n    <div style=\\\"height:100%\\\" id=\\\"root\\\" class=\\\"\".concat(className.join(' '), \"\\\"></div>\\n    \");\n\n          case 12:\n            return _context2.abrupt(\"return\", data);\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 9]]);\n  }));\n  return _cbsHook.apply(this, arguments);\n}\n\nfunction addXFlowDeps(deps) {\n  deps['@ant-design/icons-svg'] = '4.2.1';\n}\n/**\n * get serialized data that use to submit to codesandbox.io\n * @param opts  previewer props\n */\n\n\nfunction getCSBData(_x3) {\n  return _getCSBData.apply(this, arguments);\n}\n/**\n * use CodeSandbox.io\n * @param opts  previewer opts\n * @note  return a open function for open demo on codesandbox.io\n */\n\n\nfunction _getCSBData() {\n  _getCSBData = Object(_Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[/* default */ \"a\"])( /*#__PURE__*/_Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee3(opts) {\n    var isTSX, ext, files, deps, CSSDeps, appFileName, entryFileName, cbsRawData, cbsData;\n    return _Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            isTSX = Boolean(opts.sources._.tsx);\n            ext = isTSX ? '.tsx' : '.jsx';\n            files = {};\n            deps = {};\n            CSSDeps = Object.values(opts.dependencies).filter(dep => dep.css);\n            appFileName = \"App\".concat(ext);\n            entryFileName = \"index\".concat(ext);\n            console.log(opts); // generate dependencies\n\n            Object.entries(opts.dependencies).forEach(_ref6 => {\n              var _ref7 = Object(_Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])(_ref6, 2),\n                  dep = _ref7[0],\n                  version = _ref7[1].version;\n\n              deps[dep] = version;\n            }); // add extra codesandbox dependencies\n\n            addXFlowDeps(deps); // add react-dom dependency\n\n            if (!deps['react-dom']) {\n              deps['react-dom'] = deps.react || 'latest';\n            } // generate dependencies\n\n\n            Object.entries(opts.dependencies).forEach(_ref8 => {\n              var _ref9 = Object(_Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])(_ref8, 2),\n                  dep = _ref9[0],\n                  version = _ref9[1].version;\n\n              deps[dep] = version;\n            }); // add react-dom dependency\n\n            if (!deps['react-dom']) {\n              deps['react-dom'] = deps.react || 'latest';\n            }\n\n            cbsRawData = {\n              'sandbox.config.json': {\n                template: 'parcel' //isTSX ? 'create-react-app-typescript' : 'create-react-app',\n\n              },\n              'package.json': {\n                name: opts.title,\n                description: getTextContent(opts.description) || 'An auto-generated demo by dumi',\n                main: entryFileName,\n                dependencies: deps,\n                // add TypeScript dependency if required, must in devDeps to avoid csb compile error\n                devDependencies: isTSX ? {\n                  typescript: '^4'\n                } : {}\n              },\n              // app.tsx\n              [entryFileName]: \"\\n    /**\\n    * This is an auto-generated demo by dumi\\n    * if you think it is not working as expected,\\n    * please report the issue at\\n    * https://github.com/umijs/dumi/issues\\n    **/\\n    \\nimport React from 'react';\\nimport ReactDOM from 'react-dom';\\n\".concat(CSSDeps.map(_ref10 => {\n                var css = _ref10.css;\n                return \"import '\".concat(css, \"';\");\n              }).join('\\n'), \"\\nimport App from './App';\\n    \\nReactDOM.render(\\n <App />,\\ndocument.getElementById('root'),\\n);\"),\n              // index.html\n              'index.html': \"\\n      <div style=\\\"height:100%\\\" id=\\\"root\\\"></div>\\n    \"\n            }; // append other imported local files\n\n            Object.entries(opts.sources).forEach(_ref11 => {\n              var _ref12 = Object(_Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])(_ref11, 2),\n                  filename = _ref12[0],\n                  _ref12$ = _ref12[1],\n                  tsx = _ref12$.tsx,\n                  jsx = _ref12$.jsx,\n                  content = _ref12$.content;\n\n              var key = filename === '_' ? appFileName : filename;\n              cbsRawData[key] = tsx || jsx || content;\n            });\n            console.log(opts);\n\n            if (!cbsHook) {\n              _context3.next = 22;\n              break;\n            }\n\n            _context3.next = 19;\n            return cbsHook(cbsRawData, opts);\n\n          case 19:\n            _context3.t0 = _context3.sent;\n            _context3.next = 23;\n            break;\n\n          case 22:\n            _context3.t0 = cbsRawData;\n\n          case 23:\n            cbsData = _context3.t0;\n            // append other imported local files\n            Object.entries(cbsData).forEach(_ref13 => {\n              var _ref14 = Object(_Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])(_ref13, 2),\n                  filename = _ref14[0],\n                  value = _ref14[1];\n\n              // handle primary content\n              files[filename] = {\n                content: typeof value === 'string' ? value : JSON.stringify(value, null, 2)\n              };\n            });\n            console.log(cbsData);\n            return _context3.abrupt(\"return\", serialize({\n              files\n            }));\n\n          case 27:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _getCSBData.apply(this, arguments);\n}\n\nvar useCodeSandbox = function useCodeSandbox(opts) {\n  var api = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : CSB_API_ENDPOINT;\n\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(),\n      _useState2 = Object(_Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])(_useState, 2),\n      handler = _useState2[0],\n      setHandler = _useState2[1];\n\n  Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useEffect\"])(() => {\n    var form = document.createElement('form');\n    var input = document.createElement('input');\n    form.method = 'POST';\n    form.target = '_blank';\n    form.style.display = 'none';\n    form.action = api;\n    form.appendChild(input);\n    form.setAttribute('data-demo', opts.title || '');\n\n    var compile = /*#__PURE__*/function () {\n      var _ref = Object(_Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[/* default */ \"a\"])( /*#__PURE__*/_Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee() {\n        var data;\n        return _Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getCSBData(opts);\n\n              case 2:\n                data = _context.sent;\n                input.name = 'parameters';\n                input.value = data;\n                document.body.appendChild(form);\n                setHandler(() => () => form.submit());\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function compile() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    if (opts) {\n      compile();\n    }\n\n    return () => form.remove();\n  }, [opts]);\n  return handler;\n};\n\n//# sourceURL=webpack:///./.dumi/theme/builtins/useCodeSandbox.ts?")},Rsk4:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\nvar asyncToGenerator = __webpack_require__("KOBo");\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/regenerator/index.js\nvar regenerator = __webpack_require__("RY7m");\nvar regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);\n\n// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/runtime/dist/index.esm.js\nvar index_esm = __webpack_require__("Fj4f");\n\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/edges/edge-add/demos/index.tsx?dumi-raw-code\n/* harmony default export */ var demosdumi_raw_code = ("import React from \'react\'\\nimport type { IAppLoad, NsNodeCmd } from \'@antv/xflow\'\\nimport { XFlow, createGraphConfig, XFlowCanvas, XFlowNodeCommands } from \'@antv/xflow\'\\nimport { FormPanel, width, height } from \'./form\'\\nimport \'./index.less\'\\n\\n/**  graphConfig hook  */\\nexport const useGraphConfig = createGraphConfig(graphConfig => {\\n  graphConfig.setX6Config({ grid: true })\\n  graphConfig.setDefaultNodeRender(props => {\\n    return <div className=\\"react-node\\"> {props.data.label} </div>\\n  })\\n})\\n\\nconst NodeAddDemo: React.FC<{}> = () => {\\n  const graphConfig = useGraphConfig()\\n  const onLoad: IAppLoad = async app => {\\n    // \u5728appReadyCallback\u4e2d\u53ef\u4ee5\u901a\u8fc7app\u6267\u884ccommand\\n    app.executeCommand<NsNodeCmd.AddNode.IArgs>(XFlowNodeCommands.ADD_NODE.id, {\\n      nodeConfig: {\\n        id: \'node1\',\\n        x: 100,\\n        y: 30,\\n        label: \'Hello World\',\\n        width,\\n        height,\\n      },\\n    })\\n    return app\\n  }\\n\\n  return (\\n    <XFlow meta={{ flowId: \'add-node-demo\' }} onLoad={onLoad} className=\\"xflow-workspace\\">\\n      <FormPanel />\\n      <XFlowCanvas\\n        className=\\"app-main-content\\"\\n        config={graphConfig}\\n        position={{ top: 0, left: 230, right: 0, bottom: 0 }}\\n      />\\n    </XFlow>\\n  )\\n}\\n\\nexport default NodeAddDemo");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/edges/edge-add/demos/form.tsx?dumi-raw-code\n/* harmony default export */ var formdumi_raw_code = ("import React from \'react\'\\nimport { Card, Form, Input, message } from \'antd\'\\nimport type { IFormSchema } from \'@antv/xflow\'\\nimport { usePanelContext, WorkspacePanel, randomInt, FormBuilder } from \'@antv/xflow\'\\nimport type { NsGraph, NsNodeCmd } from \'@antv/xflow\'\\nimport { XFlowNodeCommands } from \'@antv/xflow\'\\n\\nexport const width = 100\\nexport const height = 40\\n\\ntype IFormValues = NsGraph.INodeConfig\\n\\nconst formItems: IFormSchema[] = [\\n  {\\n    name: \'id\',\\n    label: \'id\',\\n    rules: [{ required: true }],\\n    render: Input,\\n  },\\n  {\\n    name: \'label\',\\n    label: \'label\',\\n    rules: [{ required: true }],\\n    render: Input,\\n  },\\n  {\\n    name: \'x\',\\n    label: \'x\',\\n    render: Input,\\n  },\\n  {\\n    name: \'y\',\\n    label: \'y\',\\n    render: Input,\\n  },\\n  {\\n    name: \'width\',\\n    label: \'width\',\\n    render: Input,\\n  },\\n  {\\n    name: \'height\',\\n    label: \'height\',\\n    render: Input,\\n  },\\n]\\n\\nlet nodeId = 1\\n\\nexport const CmdForm = () => {\\n  const { commandService } = usePanelContext()\\n  const [form] = Form.useForm<IFormValues>()\\n\\n  React.useEffect(() => {\\n    nodeId = 1\\n  }, [])\\n\\n  const onFinish = async (values: IFormValues) => {\\n    commandService.executeCommand<NsNodeCmd.AddNode.IArgs>(XFlowNodeCommands.ADD_NODE.id, {\\n      nodeConfig: values,\\n    })\\n    nodeId += 1\\n    form.setFieldsValue({\\n      id: \'node_\' + nodeId,\\n      x: randomInt(20, 600),\\n      y: randomInt(50, 270),\\n      width,\\n      height,\\n      label: \'Node_\' + nodeId,\\n    })\\n    message.success(`${XFlowNodeCommands.ADD_NODE.label}: \u547d\u4ee4\u6267\u884c\u6210\u529f`)\\n  }\\n\\n  return (\\n    <FormBuilder<IFormValues>\\n      form={form}\\n      formItems={formItems}\\n      onFinish={onFinish}\\n      initialValues={{\\n        id: \'node_\' + nodeId,\\n        x: randomInt(20, 100),\\n        y: randomInt(50, 150),\\n        width,\\n        height,\\n        label: \'Node_\' + nodeId,\\n      }}\\n    />\\n  )\\n}\\n\\nexport const FormPanel = () => {\\n  return (\\n    <WorkspacePanel position={{ top: 0, left: 0, bottom: 0, width: 230 }} className=\\"panel\\">\\n      <Card title=\\"NodeConfig Options\\" size=\\"small\\" bordered={false}>\\n        <CmdForm />\\n      </Card>\\n    </WorkspacePanel>\\n  )\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/edges/edge-add/demos/index.less?dumi-raw-code\n/* harmony default export */ var edge_add_demosdumi_raw_code = ("@import \'~antd/dist/antd.less\';\\n\\n@border-color: #d9d9d9;\\n@text-color: rgba(0, 0, 0, 0.65);\\n\\n.cmd-demo {\\n  .__dumi-default-previewer-demo {\\n    position: relative;\\n    padding: 16px 8px;\\n  }\\n\\n  .xflow-workspace {\\n    position: relative;\\n    height: 290px;\\n\\n    .ant-card {\\n      height: 100%;\\n      box-shadow: 0 0 10px 1px #e9e9e9;\\n    }\\n\\n    .ant-card-head-title {\\n      text-align: center;\\n    }\\n\\n    .ant-form-item {\\n      margin-bottom: 8px;\\n    }\\n\\n    .ant-form-item-label > label {\\n      color: @text-color;\\n    }\\n\\n    .panel {\\n      padding: 0px 8px;\\n    }\\n\\n    .xflow-canvas-root {\\n      margin: 0px 8px;\\n      box-shadow: 0 0 10px 1px #e9e9e9;\\n    }\\n  }\\n\\n  .react-node {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 100%;\\n    height: 100%;\\n    font-weight: 600;\\n    background-color: #fff;\\n    border: 1px solid #873bf4;\\n    border-radius: 4px;\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/edges/edge-back/demos/index.tsx?dumi-raw-code\n/* harmony default export */ var edge_back_demosdumi_raw_code = ("import React from \'react\'\\nimport type { IAppLoad, NsNodeCmd } from \'@antv/xflow\'\\nimport { XFlow, createGraphConfig, XFlowCanvas, XFlowNodeCommands } from \'@antv/xflow\'\\nimport { FormPanel, width, height } from \'./form\'\\nimport \'./index.less\'\\n\\n/**  graphConfig hook  */\\nexport const useGraphConfig = createGraphConfig(graphConfig => {\\n  graphConfig.setX6Config({ grid: true })\\n  graphConfig.setDefaultNodeRender(props => {\\n    return <div className=\\"react-node\\"> {props.data.label} </div>\\n  })\\n})\\n\\nconst NodeAddDemo: React.FC<{}> = () => {\\n  const graphConfig = useGraphConfig()\\n  const onLoad: IAppLoad = async app => {\\n    // \u5728appReadyCallback\u4e2d\u53ef\u4ee5\u901a\u8fc7app\u6267\u884ccommand\\n    app.executeCommand<NsNodeCmd.AddNode.IArgs>(XFlowNodeCommands.ADD_NODE.id, {\\n      nodeConfig: {\\n        id: \'node1\',\\n        x: 100,\\n        y: 30,\\n        label: \'Hello World\',\\n        width,\\n        height,\\n      },\\n    })\\n    return app\\n  }\\n\\n  return (\\n    <XFlow meta={{ flowId: \'add-node-demo\' }} onLoad={onLoad} className=\\"xflow-workspace\\">\\n      <FormPanel />\\n      <XFlowCanvas\\n        className=\\"app-main-content\\"\\n        config={graphConfig}\\n        position={{ top: 0, left: 230, right: 0, bottom: 0 }}\\n      />\\n    </XFlow>\\n  )\\n}\\n\\nexport default NodeAddDemo");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/edges/edge-back/demos/form.tsx?dumi-raw-code\n/* harmony default export */ var demos_formdumi_raw_code = ("import type { IFormSchema } from \'@antv/xflow\'\\nimport type { NsGraph, NsNodeCmd } from \'@antv/xflow\'\\nimport React from \'react\'\\nimport { Card, Form, Input, message } from \'antd\'\\nimport { usePanelContext, WorkspacePanel, randomInt, FormBuilder } from \'@antv/xflow\'\\nimport { XFlowNodeCommands } from \'@antv/xflow\'\\n\\nexport const width = 100\\nexport const height = 40\\n\\ntype IFormValues = NsGraph.INodeConfig\\n\\nconst formItems: IFormSchema[] = [\\n  {\\n    name: \'id\',\\n    label: \'id\',\\n    rules: [{ required: true }],\\n    render: Input,\\n  },\\n  {\\n    name: \'label\',\\n    label: \'label\',\\n    rules: [{ required: true }],\\n    render: Input,\\n  },\\n  {\\n    name: \'x\',\\n    label: \'x\',\\n    render: Input,\\n  },\\n  {\\n    name: \'y\',\\n    label: \'y\',\\n    render: Input,\\n  },\\n  {\\n    name: \'width\',\\n    label: \'width\',\\n    render: Input,\\n  },\\n  {\\n    name: \'height\',\\n    label: \'height\',\\n    render: Input,\\n  },\\n]\\n\\nlet nodeId = 1\\n\\nexport const CmdForm = () => {\\n  const { commandService } = usePanelContext()\\n  const [form] = Form.useForm<IFormValues>()\\n\\n  React.useEffect(() => {\\n    nodeId = 1\\n  }, [])\\n\\n  const onFinish = async (values: IFormValues) => {\\n    commandService.executeCommand<NsNodeCmd.AddNode.IArgs>(XFlowNodeCommands.ADD_NODE.id, {\\n      nodeConfig: values,\\n    })\\n    nodeId += 1\\n    form.setFieldsValue({\\n      id: \'node_\' + nodeId,\\n      x: randomInt(20, 600),\\n      y: randomInt(50, 270),\\n      width,\\n      height,\\n      label: \'Node_\' + nodeId,\\n    })\\n    message.success(`${XFlowNodeCommands.ADD_NODE.label}: \u547d\u4ee4\u6267\u884c\u6210\u529f`)\\n  }\\n\\n  return (\\n    <FormBuilder<IFormValues>\\n      form={form}\\n      formItems={formItems}\\n      onFinish={onFinish}\\n      initialValues={{\\n        id: \'node_\' + nodeId,\\n        x: randomInt(20, 100),\\n        y: randomInt(50, 150),\\n        width,\\n        height,\\n        label: \'Node_\' + nodeId,\\n      }}\\n    />\\n  )\\n}\\n\\nexport const FormPanel = () => {\\n  return (\\n    <WorkspacePanel position={{ top: 0, left: 0, bottom: 0, width: 230 }} className=\\"panel\\">\\n      <Card title=\\"NodeConfig Options\\" size=\\"small\\" bordered={false}>\\n        <CmdForm />\\n      </Card>\\n    </WorkspacePanel>\\n  )\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/edges/edge-back/demos/index.less?dumi-raw-code\n/* harmony default export */ var edges_edge_back_demosdumi_raw_code = ("@import \'~antd/dist/antd.less\';\\n\\n@border-color: #d9d9d9;\\n@text-color: rgba(0, 0, 0, 0.65);\\n\\n.cmd-demo {\\n  .__dumi-default-previewer-demo {\\n    position: relative;\\n    padding: 16px 8px;\\n  }\\n\\n  .xflow-workspace {\\n    position: relative;\\n    height: 290px;\\n\\n    .ant-card {\\n      height: 100%;\\n      box-shadow: 0 0 10px 1px #e9e9e9;\\n    }\\n\\n    .ant-card-head-title {\\n      text-align: center;\\n    }\\n\\n    .ant-form-item {\\n      margin-bottom: 8px;\\n    }\\n\\n    .ant-form-item-label > label {\\n      color: @text-color;\\n    }\\n\\n    .panel {\\n      padding: 0px 8px;\\n    }\\n\\n    .xflow-canvas-root {\\n      margin: 0px 8px;\\n      box-shadow: 0 0 10px 1px #e9e9e9;\\n    }\\n  }\\n\\n  .react-node {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 100%;\\n    height: 100%;\\n    font-weight: 600;\\n    background-color: #fff;\\n    border: 1px solid #873bf4;\\n    border-radius: 4px;\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/edges/edge-delete/demos/index.tsx?dumi-raw-code\n/* harmony default export */ var edge_delete_demosdumi_raw_code = ("import React from \'react\'\\nimport type { IAppLoad, NsNodeCmd } from \'@antv/xflow\'\\nimport { XFlow, createGraphConfig, XFlowCanvas, XFlowNodeCommands } from \'@antv/xflow\'\\nimport { FormPanel, width, height } from \'./form\'\\nimport \'./index.less\'\\n\\n/**  graphConfig hook  */\\nexport const useGraphConfig = createGraphConfig(graphConfig => {\\n  graphConfig.setX6Config({ grid: true })\\n  graphConfig.setDefaultNodeRender(props => {\\n    return <div className=\\"react-node\\"> {props.data.label} </div>\\n  })\\n})\\n\\nconst NodeAddDemo: React.FC<{}> = () => {\\n  const graphConfig = useGraphConfig()\\n  const onLoad: IAppLoad = async app => {\\n    // \u5728appReadyCallback\u4e2d\u53ef\u4ee5\u901a\u8fc7app\u6267\u884ccommand\\n    app.executeCommand<NsNodeCmd.AddNode.IArgs>(XFlowNodeCommands.ADD_NODE.id, {\\n      nodeConfig: {\\n        id: \'node1\',\\n        x: 100,\\n        y: 30,\\n        label: \'Hello World\',\\n        width,\\n        height,\\n      },\\n    })\\n    return app\\n  }\\n\\n  return (\\n    <XFlow meta={{ flowId: \'add-node-demo\' }} onLoad={onLoad} className=\\"xflow-workspace\\">\\n      <FormPanel />\\n      <XFlowCanvas\\n        className=\\"app-main-content\\"\\n        config={graphConfig}\\n        position={{ top: 0, left: 230, right: 0, bottom: 0 }}\\n      />\\n    </XFlow>\\n  )\\n}\\n\\nexport default NodeAddDemo");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/edges/edge-delete/demos/form.tsx?dumi-raw-code\n/* harmony default export */ var edge_delete_demos_formdumi_raw_code = ("import React from \'react\'\\nimport type { NsGraph, NsNodeCmd } from \'@antv/xflow\'\\nimport type { IFormSchema } from \'@antv/xflow\'\\nimport { Card, Form, Input, message } from \'antd\'\\nimport { usePanelContext, WorkspacePanel, randomInt, FormBuilder } from \'@antv/xflow\'\\nimport { XFlowNodeCommands } from \'@antv/xflow\'\\n\\nexport const width = 100\\nexport const height = 40\\n\\ntype IFormValues = NsGraph.INodeConfig\\n\\nconst formItems: IFormSchema[] = [\\n  {\\n    name: \'id\',\\n    label: \'id\',\\n    rules: [{ required: true }],\\n    render: Input,\\n  },\\n  {\\n    name: \'label\',\\n    label: \'label\',\\n    rules: [{ required: true }],\\n    render: Input,\\n  },\\n  {\\n    name: \'x\',\\n    label: \'x\',\\n    render: Input,\\n  },\\n  {\\n    name: \'y\',\\n    label: \'y\',\\n    render: Input,\\n  },\\n  {\\n    name: \'width\',\\n    label: \'width\',\\n    render: Input,\\n  },\\n  {\\n    name: \'height\',\\n    label: \'height\',\\n    render: Input,\\n  },\\n]\\n\\nlet nodeId = 1\\n\\nexport const CmdForm = () => {\\n  const { commandService } = usePanelContext()\\n  const [form] = Form.useForm<IFormValues>()\\n\\n  React.useEffect(() => {\\n    nodeId = 1\\n  }, [])\\n\\n  const onFinish = async (values: IFormValues) => {\\n    commandService.executeCommand<NsNodeCmd.AddNode.IArgs>(XFlowNodeCommands.ADD_NODE.id, {\\n      nodeConfig: values,\\n    })\\n    nodeId += 1\\n    form.setFieldsValue({\\n      id: \'node_\' + nodeId,\\n      x: randomInt(20, 600),\\n      y: randomInt(50, 270),\\n      width,\\n      height,\\n      label: \'Node_\' + nodeId,\\n    })\\n    message.success(`${XFlowNodeCommands.ADD_NODE.label}: \u547d\u4ee4\u6267\u884c\u6210\u529f`)\\n  }\\n\\n  return (\\n    <FormBuilder<IFormValues>\\n      form={form}\\n      formItems={formItems}\\n      onFinish={onFinish}\\n      initialValues={{\\n        id: \'node_\' + nodeId,\\n        x: randomInt(20, 100),\\n        y: randomInt(50, 150),\\n        width,\\n        height,\\n        label: \'Node_\' + nodeId,\\n      }}\\n    />\\n  )\\n}\\n\\nexport const FormPanel = () => {\\n  return (\\n    <WorkspacePanel position={{ top: 0, left: 0, bottom: 0, width: 230 }} className=\\"panel\\">\\n      <Card title=\\"NodeConfig Options\\" size=\\"small\\" bordered={false}>\\n        <CmdForm />\\n      </Card>\\n    </WorkspacePanel>\\n  )\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/edges/edge-delete/demos/index.less?dumi-raw-code\n/* harmony default export */ var edges_edge_delete_demosdumi_raw_code = ("@import \'~antd/dist/antd.less\';\\n\\n@border-color: #d9d9d9;\\n@text-color: rgba(0, 0, 0, 0.65);\\n\\n.cmd-demo {\\n  .__dumi-default-previewer-demo {\\n    position: relative;\\n    padding: 16px 8px;\\n  }\\n\\n  .xflow-workspace {\\n    position: relative;\\n    height: 290px;\\n\\n    .ant-card {\\n      height: 100%;\\n      box-shadow: 0 0 10px 1px #e9e9e9;\\n    }\\n\\n    .ant-card-head-title {\\n      text-align: center;\\n    }\\n\\n    .ant-form-item {\\n      margin-bottom: 8px;\\n    }\\n\\n    .ant-form-item-label > label {\\n      color: @text-color;\\n    }\\n\\n    .panel {\\n      padding: 0px 8px;\\n    }\\n\\n    .xflow-canvas-root {\\n      margin: 0px 8px;\\n      box-shadow: 0 0 10px 1px #e9e9e9;\\n    }\\n  }\\n\\n  .react-node {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 100%;\\n    height: 100%;\\n    font-weight: 600;\\n    background-color: #fff;\\n    border: 1px solid #873bf4;\\n    border-radius: 4px;\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/edges/edge-front/demos/index.tsx?dumi-raw-code\n/* harmony default export */ var edge_front_demosdumi_raw_code = ("import React from \'react\'\\nimport type { IAppLoad, NsNodeCmd } from \'@antv/xflow\'\\nimport { XFlow, createGraphConfig, XFlowCanvas, XFlowNodeCommands } from \'@antv/xflow\'\\nimport { FormPanel, width, height } from \'./form\'\\nimport \'./index.less\'\\n\\n/**  graphConfig hook  */\\nexport const useGraphConfig = createGraphConfig(graphConfig => {\\n  graphConfig.setX6Config({ grid: true })\\n  graphConfig.setDefaultNodeRender(props => {\\n    return <div className=\\"react-node\\"> {props.data.label} </div>\\n  })\\n})\\n\\nconst NodeAddDemo: React.FC<{}> = () => {\\n  const graphConfig = useGraphConfig()\\n  const onLoad: IAppLoad = async app => {\\n    // \u5728appReadyCallback\u4e2d\u53ef\u4ee5\u901a\u8fc7app\u6267\u884ccommand\\n    app.executeCommand<NsNodeCmd.AddNode.IArgs>(XFlowNodeCommands.ADD_NODE.id, {\\n      nodeConfig: {\\n        id: \'node1\',\\n        x: 100,\\n        y: 30,\\n        label: \'Hello World\',\\n        width,\\n        height,\\n      },\\n    })\\n    return app\\n  }\\n\\n  return (\\n    <XFlow meta={{ flowId: \'add-node-demo\' }} onLoad={onLoad} className=\\"xflow-workspace\\">\\n      <FormPanel />\\n      <XFlowCanvas\\n        className=\\"app-main-content\\"\\n        config={graphConfig}\\n        position={{ top: 0, left: 230, right: 0, bottom: 0 }}\\n      />\\n    </XFlow>\\n  )\\n}\\n\\nexport default NodeAddDemo");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/edges/edge-front/demos/form.tsx?dumi-raw-code\n/* harmony default export */ var edge_front_demos_formdumi_raw_code = ("import type { NsGraph, NsNodeCmd } from \'@antv/xflow\'\\nimport type { IFormSchema } from \'@antv/xflow\'\\nimport React from \'react\'\\nimport { Card, Form, Input, message } from \'antd\'\\nimport { usePanelContext, WorkspacePanel, randomInt, FormBuilder } from \'@antv/xflow\'\\nimport { XFlowNodeCommands } from \'@antv/xflow\'\\n\\nexport const width = 100\\nexport const height = 40\\n\\ntype IFormValues = NsGraph.INodeConfig\\n\\nconst formItems: IFormSchema[] = [\\n  {\\n    name: \'id\',\\n    label: \'id\',\\n    rules: [{ required: true }],\\n    render: Input,\\n  },\\n  {\\n    name: \'label\',\\n    label: \'label\',\\n    rules: [{ required: true }],\\n    render: Input,\\n  },\\n  {\\n    name: \'x\',\\n    label: \'x\',\\n    render: Input,\\n  },\\n  {\\n    name: \'y\',\\n    label: \'y\',\\n    render: Input,\\n  },\\n  {\\n    name: \'width\',\\n    label: \'width\',\\n    render: Input,\\n  },\\n  {\\n    name: \'height\',\\n    label: \'height\',\\n    render: Input,\\n  },\\n]\\n\\nlet nodeId = 1\\n\\nexport const CmdForm = () => {\\n  const { commandService } = usePanelContext()\\n  const [form] = Form.useForm<IFormValues>()\\n\\n  React.useEffect(() => {\\n    nodeId = 1\\n  }, [])\\n\\n  const onFinish = async (values: IFormValues) => {\\n    commandService.executeCommand<NsNodeCmd.AddNode.IArgs>(XFlowNodeCommands.ADD_NODE.id, {\\n      nodeConfig: values,\\n    })\\n    nodeId += 1\\n    form.setFieldsValue({\\n      id: \'node_\' + nodeId,\\n      x: randomInt(20, 600),\\n      y: randomInt(50, 270),\\n      width,\\n      height,\\n      label: \'Node_\' + nodeId,\\n    })\\n    message.success(`${XFlowNodeCommands.ADD_NODE.label}: \u547d\u4ee4\u6267\u884c\u6210\u529f`)\\n  }\\n\\n  return (\\n    <FormBuilder<IFormValues>\\n      form={form}\\n      formItems={formItems}\\n      onFinish={onFinish}\\n      initialValues={{\\n        id: \'node_\' + nodeId,\\n        x: randomInt(20, 100),\\n        y: randomInt(50, 150),\\n        width,\\n        height,\\n        label: \'Node_\' + nodeId,\\n      }}\\n    />\\n  )\\n}\\n\\nexport const FormPanel = () => {\\n  return (\\n    <WorkspacePanel position={{ top: 0, left: 0, bottom: 0, width: 230 }} className=\\"panel\\">\\n      <Card title=\\"NodeConfig Options\\" size=\\"small\\" bordered={false}>\\n        <CmdForm />\\n      </Card>\\n    </WorkspacePanel>\\n  )\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/edges/edge-front/demos/index.less?dumi-raw-code\n/* harmony default export */ var edges_edge_front_demosdumi_raw_code = ("@import \'~antd/dist/antd.less\';\\n\\n@border-color: #d9d9d9;\\n@text-color: rgba(0, 0, 0, 0.65);\\n\\n.cmd-demo {\\n  .__dumi-default-previewer-demo {\\n    position: relative;\\n    padding: 16px 8px;\\n  }\\n\\n  .xflow-workspace {\\n    position: relative;\\n    height: 290px;\\n\\n    .ant-card {\\n      height: 100%;\\n      box-shadow: 0 0 10px 1px #e9e9e9;\\n    }\\n\\n    .ant-card-head-title {\\n      text-align: center;\\n    }\\n\\n    .ant-form-item {\\n      margin-bottom: 8px;\\n    }\\n\\n    .ant-form-item-label > label {\\n      color: @text-color;\\n    }\\n\\n    .panel {\\n      padding: 0px 8px;\\n    }\\n\\n    .xflow-canvas-root {\\n      margin: 0px 8px;\\n      box-shadow: 0 0 10px 1px #e9e9e9;\\n    }\\n  }\\n\\n  .react-node {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 100%;\\n    height: 100%;\\n    font-weight: 600;\\n    background-color: #fff;\\n    border: 1px solid #873bf4;\\n    border-radius: 4px;\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/edges/edge-highlight/demos/index.tsx?dumi-raw-code\n/* harmony default export */ var edge_highlight_demosdumi_raw_code = ("import React from \'react\'\\nimport type { IAppLoad, NsNodeCmd } from \'@antv/xflow\'\\nimport { XFlow, createGraphConfig, XFlowCanvas, XFlowNodeCommands } from \'@antv/xflow\'\\nimport { FormPanel, width, height } from \'./form\'\\nimport \'./index.less\'\\n\\n/**  graphConfig hook  */\\nexport const useGraphConfig = createGraphConfig(graphConfig => {\\n  graphConfig.setX6Config({ grid: true })\\n  graphConfig.setDefaultNodeRender(props => {\\n    return <div className=\\"react-node\\"> {props.data.label} </div>\\n  })\\n})\\n\\nconst NodeAddDemo: React.FC<{}> = () => {\\n  const graphConfig = useGraphConfig()\\n  const onLoad: IAppLoad = async app => {\\n    // \u5728appReadyCallback\u4e2d\u53ef\u4ee5\u901a\u8fc7app\u6267\u884ccommand\\n    app.executeCommand<NsNodeCmd.AddNode.IArgs>(XFlowNodeCommands.ADD_NODE.id, {\\n      nodeConfig: {\\n        id: \'node1\',\\n        x: 100,\\n        y: 30,\\n        label: \'Hello World\',\\n        width,\\n        height,\\n      },\\n    })\\n    return app\\n  }\\n\\n  return (\\n    <XFlow meta={{ flowId: \'add-node-demo\' }} onLoad={onLoad} className=\\"xflow-workspace\\">\\n      <FormPanel />\\n      <XFlowCanvas\\n        className=\\"app-main-content\\"\\n        config={graphConfig}\\n        position={{ top: 0, left: 230, right: 0, bottom: 0 }}\\n      />\\n    </XFlow>\\n  )\\n}\\n\\nexport default NodeAddDemo");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/edges/edge-highlight/demos/form.tsx?dumi-raw-code\n/* harmony default export */ var edge_highlight_demos_formdumi_raw_code = ("import type { IFormSchema } from \'@antv/xflow\'\\nimport type { NsGraph, NsNodeCmd } from \'@antv/xflow\'\\nimport React from \'react\'\\nimport { Card, Form, Input, message } from \'antd\'\\nimport { usePanelContext, WorkspacePanel, randomInt, FormBuilder } from \'@antv/xflow\'\\nimport { XFlowNodeCommands } from \'@antv/xflow\'\\n\\nexport const width = 100\\nexport const height = 40\\n\\ntype IFormValues = NsGraph.INodeConfig\\n\\nconst formItems: IFormSchema[] = [\\n  {\\n    name: \'id\',\\n    label: \'id\',\\n    rules: [{ required: true }],\\n    render: Input,\\n  },\\n  {\\n    name: \'label\',\\n    label: \'label\',\\n    rules: [{ required: true }],\\n    render: Input,\\n  },\\n  {\\n    name: \'x\',\\n    label: \'x\',\\n    render: Input,\\n  },\\n  {\\n    name: \'y\',\\n    label: \'y\',\\n    render: Input,\\n  },\\n  {\\n    name: \'width\',\\n    label: \'width\',\\n    render: Input,\\n  },\\n  {\\n    name: \'height\',\\n    label: \'height\',\\n    render: Input,\\n  },\\n]\\n\\nlet nodeId = 1\\n\\nexport const CmdForm = () => {\\n  const { commandService } = usePanelContext()\\n  const [form] = Form.useForm<IFormValues>()\\n\\n  React.useEffect(() => {\\n    nodeId = 1\\n  }, [])\\n\\n  const onFinish = async (values: IFormValues) => {\\n    commandService.executeCommand<NsNodeCmd.AddNode.IArgs>(XFlowNodeCommands.ADD_NODE.id, {\\n      nodeConfig: values,\\n    })\\n    nodeId += 1\\n    form.setFieldsValue({\\n      id: \'node_\' + nodeId,\\n      x: randomInt(20, 600),\\n      y: randomInt(50, 270),\\n      width,\\n      height,\\n      label: \'Node_\' + nodeId,\\n    })\\n    message.success(`${XFlowNodeCommands.ADD_NODE.label}: \u547d\u4ee4\u6267\u884c\u6210\u529f`)\\n  }\\n\\n  return (\\n    <FormBuilder<IFormValues>\\n      form={form}\\n      formItems={formItems}\\n      onFinish={onFinish}\\n      initialValues={{\\n        id: \'node_\' + nodeId,\\n        x: randomInt(20, 100),\\n        y: randomInt(50, 150),\\n        width,\\n        height,\\n        label: \'Node_\' + nodeId,\\n      }}\\n    />\\n  )\\n}\\n\\nexport const FormPanel = () => {\\n  return (\\n    <WorkspacePanel position={{ top: 0, left: 0, bottom: 0, width: 230 }} className=\\"panel\\">\\n      <Card title=\\"NodeConfig Options\\" size=\\"small\\" bordered={false}>\\n        <CmdForm />\\n      </Card>\\n    </WorkspacePanel>\\n  )\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/edges/edge-highlight/demos/index.less?dumi-raw-code\n/* harmony default export */ var edges_edge_highlight_demosdumi_raw_code = ("@import \'~antd/dist/antd.less\';\\n\\n@border-color: #d9d9d9;\\n@text-color: rgba(0, 0, 0, 0.65);\\n\\n.cmd-demo {\\n  .__dumi-default-previewer-demo {\\n    position: relative;\\n    padding: 16px 8px;\\n  }\\n\\n  .xflow-workspace {\\n    position: relative;\\n    height: 290px;\\n\\n    .ant-card {\\n      height: 100%;\\n      box-shadow: 0 0 10px 1px #e9e9e9;\\n    }\\n\\n    .ant-card-head-title {\\n      text-align: center;\\n    }\\n\\n    .ant-form-item {\\n      margin-bottom: 8px;\\n    }\\n\\n    .ant-form-item-label > label {\\n      color: @text-color;\\n    }\\n\\n    .panel {\\n      padding: 0px 8px;\\n    }\\n\\n    .xflow-canvas-root {\\n      margin: 0px 8px;\\n      box-shadow: 0 0 10px 1px #e9e9e9;\\n    }\\n  }\\n\\n  .react-node {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 100%;\\n    height: 100%;\\n    font-weight: 600;\\n    background-color: #fff;\\n    border: 1px solid #873bf4;\\n    border-radius: 4px;\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/edges/edge-update/demos/index.tsx?dumi-raw-code\n/* harmony default export */ var edge_update_demosdumi_raw_code = ("import React from \'react\'\\nimport type { IAppLoad, NsNodeCmd } from \'@antv/xflow\'\\nimport { XFlow, createGraphConfig, XFlowCanvas, XFlowNodeCommands } from \'@antv/xflow\'\\nimport { FormPanel, width, height } from \'./form\'\\nimport \'./index.less\'\\n\\n/**  graphConfig hook  */\\nexport const useGraphConfig = createGraphConfig(graphConfig => {\\n  graphConfig.setX6Config({ grid: true })\\n  graphConfig.setDefaultNodeRender(props => {\\n    return <div className=\\"react-node\\"> {props.data.label} </div>\\n  })\\n})\\n\\nconst NodeAddDemo: React.FC<{}> = () => {\\n  const graphConfig = useGraphConfig()\\n  const onLoad: IAppLoad = async app => {\\n    // \u5728appReadyCallback\u4e2d\u53ef\u4ee5\u901a\u8fc7app\u6267\u884ccommand\\n    app.executeCommand<NsNodeCmd.AddNode.IArgs>(XFlowNodeCommands.ADD_NODE.id, {\\n      nodeConfig: {\\n        id: \'node1\',\\n        x: 100,\\n        y: 30,\\n        label: \'Hello World\',\\n        width,\\n        height,\\n      },\\n    })\\n    return app\\n  }\\n\\n  return (\\n    <XFlow meta={{ flowId: \'add-node-demo\' }} onLoad={onLoad} className=\\"xflow-workspace\\">\\n      <FormPanel />\\n      <XFlowCanvas\\n        className=\\"app-main-content\\"\\n        config={graphConfig}\\n        position={{ top: 0, left: 230, right: 0, bottom: 0 }}\\n      />\\n    </XFlow>\\n  )\\n}\\n\\nexport default NodeAddDemo");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/edges/edge-update/demos/form.tsx?dumi-raw-code\n/* harmony default export */ var edge_update_demos_formdumi_raw_code = ("import type { IFormSchema } from \'@antv/xflow\'\\nimport type { NsGraph, NsNodeCmd } from \'@antv/xflow\'\\nimport React from \'react\'\\nimport { Card, Form, Input, message } from \'antd\'\\nimport { usePanelContext, WorkspacePanel, randomInt, FormBuilder } from \'@antv/xflow\'\\nimport { XFlowNodeCommands } from \'@antv/xflow\'\\n\\nexport const width = 100\\nexport const height = 40\\n\\ntype IFormValues = NsGraph.INodeConfig\\n\\nconst formItems: IFormSchema[] = [\\n  {\\n    name: \'id\',\\n    label: \'id\',\\n    rules: [{ required: true }],\\n    render: Input,\\n  },\\n  {\\n    name: \'label\',\\n    label: \'label\',\\n    rules: [{ required: true }],\\n    render: Input,\\n  },\\n  {\\n    name: \'x\',\\n    label: \'x\',\\n    render: Input,\\n  },\\n  {\\n    name: \'y\',\\n    label: \'y\',\\n    render: Input,\\n  },\\n  {\\n    name: \'width\',\\n    label: \'width\',\\n    render: Input,\\n  },\\n  {\\n    name: \'height\',\\n    label: \'height\',\\n    render: Input,\\n  },\\n]\\n\\nlet nodeId = 1\\n\\nexport const CmdForm = () => {\\n  const { commandService } = usePanelContext()\\n  const [form] = Form.useForm<IFormValues>()\\n\\n  React.useEffect(() => {\\n    nodeId = 1\\n  }, [])\\n\\n  const onFinish = async (values: IFormValues) => {\\n    commandService.executeCommand<NsNodeCmd.AddNode.IArgs>(XFlowNodeCommands.ADD_NODE.id, {\\n      nodeConfig: values,\\n    })\\n    nodeId += 1\\n    form.setFieldsValue({\\n      id: \'node_\' + nodeId,\\n      x: randomInt(20, 600),\\n      y: randomInt(50, 270),\\n      width,\\n      height,\\n      label: \'Node_\' + nodeId,\\n    })\\n    message.success(`${XFlowNodeCommands.ADD_NODE.label}: \u547d\u4ee4\u6267\u884c\u6210\u529f`)\\n  }\\n\\n  return (\\n    <FormBuilder<IFormValues>\\n      form={form}\\n      formItems={formItems}\\n      onFinish={onFinish}\\n      initialValues={{\\n        id: \'node_\' + nodeId,\\n        x: randomInt(20, 100),\\n        y: randomInt(50, 150),\\n        width,\\n        height,\\n        label: \'Node_\' + nodeId,\\n      }}\\n    />\\n  )\\n}\\n\\nexport const FormPanel = () => {\\n  return (\\n    <WorkspacePanel position={{ top: 0, left: 0, bottom: 0, width: 230 }} className=\\"panel\\">\\n      <Card title=\\"NodeConfig Options\\" size=\\"small\\" bordered={false}>\\n        <CmdForm />\\n      </Card>\\n    </WorkspacePanel>\\n  )\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/edges/edge-update/demos/index.less?dumi-raw-code\n/* harmony default export */ var edges_edge_update_demosdumi_raw_code = ("@import \'~antd/dist/antd.less\';\\n\\n@border-color: #d9d9d9;\\n@text-color: rgba(0, 0, 0, 0.65);\\n\\n.cmd-demo {\\n  .__dumi-default-previewer-demo {\\n    position: relative;\\n    padding: 16px 8px;\\n  }\\n\\n  .xflow-workspace {\\n    position: relative;\\n    height: 290px;\\n\\n    .ant-card {\\n      height: 100%;\\n      box-shadow: 0 0 10px 1px #e9e9e9;\\n    }\\n\\n    .ant-card-head-title {\\n      text-align: center;\\n    }\\n\\n    .ant-form-item {\\n      margin-bottom: 8px;\\n    }\\n\\n    .ant-form-item-label > label {\\n      color: @text-color;\\n    }\\n\\n    .panel {\\n      padding: 0px 8px;\\n    }\\n\\n    .xflow-canvas-root {\\n      margin: 0px 8px;\\n      box-shadow: 0 0 10px 1px #e9e9e9;\\n    }\\n  }\\n\\n  .react-node {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 100%;\\n    height: 100%;\\n    font-weight: 600;\\n    background-color: #fff;\\n    border: 1px solid #873bf4;\\n    border-radius: 4px;\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/graph/graph-layout/demos/index.tsx?dumi-raw-code\n/* harmony default export */ var graph_layout_demosdumi_raw_code = ("import type { IAppLoad } from \'@antv/xflow\'\\nimport type { NsGraph, IGraphPipelineCommand, NsGraphCmd } from \'@antv/xflow\'\\nimport React from \'react\'\\nimport { XFlow, XFlowCanvas, createGraphConfig, XFlowGraphCommands } from \'@antv/xflow\'\\nimport \'./index.less\'\\n\\n/** graphConfig hook */\\nexport const useGraphConfig = createGraphConfig(config => {\\n  config.setX6Config({ grid: true })\\n  config.setNodeRender(\'NODE1\', props => <div className=\\"react-node\\">{props.data?.info?.text}</div>)\\n  config.setNodeTypeParser(node => node?.renderKey)\\n})\\n\\nconst Demo: React.FC<{}> = () => {\\n  const onLoad: IAppLoad = async app => {\\n    app.executeCommandPipeline([\\n      /** \u4ece\u670d\u52a1\u7aef\u83b7\u53d6\u6570\u636e */\\n      {\\n        commandId: XFlowGraphCommands.LOAD_DATA.id,\\n        getCommandOption: async ctx => {\\n          return {\\n            args: {\\n              loadDataService: async () => {\\n                const nodes: NsGraph.INodeConfig[] = [\\n                  {\\n                    id: \'root1\',\\n                    width: 150,\\n                    height: 40,\\n                    renderKey: \'NODE1\',\\n                    info: { text: \'root1\' },\\n                  },\\n                  {\\n                    id: \'down1\',\\n                    width: 150,\\n                    height: 40,\\n                    renderKey: \'NODE1\',\\n                    info: { text: \'down1\' },\\n                  },\\n                  {\\n                    id: \'down2\',\\n                    width: 150,\\n                    height: 40,\\n                    renderKey: \'NODE1\',\\n                    info: { text: \'down2\' },\\n                  },\\n                  {\\n                    id: \'down3\',\\n                    width: 150,\\n                    height: 40,\\n                    renderKey: \'NODE1\',\\n                    info: { text: \'down3\' },\\n                  },\\n                ]\\n                const edges: NsGraph.IEdgeConfig[] = [\\n                  { id: \'root1-down1\', source: \'root1\', target: \'down1\', label: \'text1\' },\\n                  { id: \'root1-down2\', source: \'root1\', target: \'down2\', label: \'text2\' },\\n                  { id: \'root1-down3\', source: \'root1\', target: \'down3\', label: \'text3\' },\\n                ]\\n                return { nodes, edges }\\n              },\\n            },\\n          }\\n        },\\n      } as IGraphPipelineCommand<NsGraphCmd.GraphLoadData.IArgs>,\\n      /** \u6267\u884c\u5e03\u5c40\u7b97\u6cd5 */\\n      {\\n        commandId: XFlowGraphCommands.GRAPH_LAYOUT.id,\\n        getCommandOption: async ctx => {\\n          const { graphData } = ctx.getResult()\\n          return {\\n            args: {\\n              layoutType: \'dagre\',\\n              layoutOptions: {\\n                type: \'dagre\',\\n                rankdir: \'LR\',\\n                nodesep: 10,\\n                ranksep: 80,\\n              },\\n              graphData,\\n            },\\n          }\\n        },\\n      } as IGraphPipelineCommand<NsGraphCmd.GraphLayout.IArgs>,\\n      /** \u753b\u5e03\u5185\u5bb9\u6e32\u67d3 */\\n      {\\n        commandId: XFlowGraphCommands.GRAPH_RENDER.id,\\n        getCommandOption: async ctx => {\\n          const { graphData } = ctx.getResult()\\n          return {\\n            args: {\\n              graphData,\\n            },\\n          }\\n        },\\n      } as IGraphPipelineCommand<NsGraphCmd.GraphRender.IArgs>,\\n    ])\\n    return app\\n  }\\n  return (\\n    <XFlow\\n      onLoad={onLoad}\\n      className=\\"xflow-graph-layout-demo\\"\\n      meta={{ flowId: \'xflow-graph-layout-demo-id\' }}\\n    >\\n      <XFlowCanvas config={useGraphConfig()} />\\n    </XFlow>\\n  )\\n}\\nexport default Demo");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/graph/graph-layout/demos/index.less?dumi-raw-code\n/* harmony default export */ var graph_graph_layout_demosdumi_raw_code = (".xflow-graph-layout-demo {\\n  position: relative;\\n  height: 260px;\\n\\n  .react-node {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 100%;\\n    height: 100%;\\n    border: 1px solid #873bf4;\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/graph/graph-render/demos/index.tsx?dumi-raw-code\n/* harmony default export */ var graph_render_demosdumi_raw_code = ("import React from \'react\'\\nimport type { NsGraph, NsGraphCmd, IAppLoad } from \'@antv/xflow\'\\nimport { XFlow, XFlowCanvas, createGraphConfig, XFlowGraphCommands } from \'@antv/xflow\'\\nimport \'./index.less\'\\n\\n/** graphConfig hook */\\nexport const useGraphConfig = createGraphConfig(config => {\\n  config.setX6Config({ grid: true })\\n  config.setNodeRender(\'NODE1\', props => <div className=\\"react-node\\">{props.data?.info}</div>)\\n  config.setNodeTypeParser(node => node?.renderKey)\\n})\\n\\nconst GraphRenderDemo: React.FC<{}> = () => {\\n  const onLoad: IAppLoad = async app => {\\n    const graphData: NsGraph.IGraphData = {\\n      nodes: [\\n        {\\n          id: \'root1\',\\n          x: 200,\\n          y: 50,\\n          width: 120,\\n          height: 40,\\n          renderKey: \'NODE1\',\\n          info: \'React\u8282\u70b91\',\\n        },\\n        {\\n          id: \'down1\',\\n          x: 550,\\n          y: 50,\\n          width: 120,\\n          height: 40,\\n          renderKey: \'NODE1\',\\n          info: \'React\u8282\u70b92\',\\n        },\\n      ],\\n      edges: [{ id: \'root1-down1\', source: \'root1\', target: \'down1\', label: \'text\' }],\\n    }\\n    /** \u6267\u884c\u753b\u5e03\u6e32\u67d3\u547d\u4ee4 */\\n    app.executeCommand(XFlowGraphCommands.GRAPH_RENDER.id, {\\n      graphData,\\n    } as NsGraphCmd.GraphRender.IArgs)\\n\\n    return app\\n  }\\n  return (\\n    <XFlow\\n      onLoad={onLoad}\\n      className=\\"xflow-render-graph-demo\\"\\n      meta={{ flowId: \'graph-render-demo-id\' }}\\n    >\\n      <XFlowCanvas config={useGraphConfig()} />\\n    </XFlow>\\n  )\\n}\\nexport default GraphRenderDemo");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/graph/graph-render/demos/index.less?dumi-raw-code\n/* harmony default export */ var graph_graph_render_demosdumi_raw_code = (".xflow-render-graph-demo {\\n  position: relative;\\n  height: 150px;\\n\\n  .react-node {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 100%;\\n    height: 100%;\\n    border: 1px solid #873bf4;\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/group/group-add/basic/index.tsx?dumi-raw-code\n/* harmony default export */ var basicdumi_raw_code = ("import React from \'react\'\\nimport { XFlow, XFlowCanvas } from \'@antv/xflow\'\\nimport { FormPanel } from \'./form\'\\nimport { useGraphConfig, onLoad } from \'./config-graph\'\\nimport \'./index.less\'\\n\\n/**  Demo Props  */\\nexport interface IDemoProps {\\n  anything: string\\n}\\n\\nconst XFlowDemo: React.FC<IDemoProps> = props => {\\n  const graphConfig = useGraphConfig(props)\\n\\n  return (\\n    <XFlow onLoad={onLoad} className=\\"xflow-workspace\\">\\n      <FormPanel />\\n      <XFlowCanvas config={graphConfig} position={{ top: 0, left: 230, right: 0, bottom: 0 }} />\\n    </XFlow>\\n  )\\n}\\n\\nexport default XFlowDemo");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/group/group-add/basic/form.tsx?dumi-raw-code\n/* harmony default export */ var basic_formdumi_raw_code = ("import type { IFormSchema } from \'@antv/xflow\'\\nimport type { NsGraph, NsGroupCmd } from \'@antv/xflow\'\\nimport React from \'react\'\\nimport { Card, Form, Input, message, Button } from \'antd\'\\nimport { usePanelContext, WorkspacePanel, FormBuilder, uuidv4 } from \'@antv/xflow\'\\nimport { XFlowGroupCommands } from \'@antv/xflow\'\\nimport { GROUP_NODE_RENDER_ID, GROUP_COLLAPSED_SIZE } from \'./constant\'\\nexport const width = 100\\nexport const height = 40\\n\\ninterface IFormValues extends NsGraph.IGroupConfig {\\n  id: string\\n  label: string\\n  renderKey: string\\n}\\n\\n/**\\n  // \u5b50\u8282\u70b9\u5143\u7d20\u96c6\u5408  \\n  groupChildren?: string[]\\n  // group Header \\n  groupHeaderHeight?: number\\n  // group \u5185\u8fb9\u8ddd  \\n  groupPadding?: number\\n */\\nconst formItems: IFormSchema[] = [\\n  {\\n    name: \'id\',\\n    label: \'id\',\\n    rules: [{ required: true }],\\n    renderProps: { disabled: true },\\n    render: Input,\\n  },\\n  {\\n    name: \'groupChildren\',\\n    label: \'groupChildren\',\\n    rules: [{ required: true }],\\n    renderProps: { disabled: true },\\n    render: Input,\\n  },\\n  {\\n    name: \'renderKey\',\\n    label: \'renderKey\',\\n    rules: [{ required: true }],\\n    renderProps: { disabled: true },\\n    render: Input,\\n  },\\n  {\\n    name: \'groupHeaderHeight\',\\n    label: \'groupHeaderHeight\',\\n    rules: [{ required: true }],\\n    render: Input,\\n  },\\n  {\\n    name: \'groupPadding\',\\n    label: \'groupPadding\',\\n    render: Input,\\n  },\\n  {\\n    name: \'label\',\\n    label: \'label\',\\n    render: Input,\\n  },\\n]\\n\\nexport const CmdForm = () => {\\n  const { commandService } = usePanelContext()\\n  const [form] = Form.useForm<IFormValues>()\\n  const [hasGroup, setGroup] = React.useState(false)\\n  const onFinish = async (values: IFormValues) => {\\n    const nodeConfig = {\\n      ...values,\\n      groupHeaderHeight: parseInt(values.groupHeaderHeight as any, 10),\\n      groupPadding: parseInt(values.groupPadding as any, 10),\\n      groupCollapsedSize: GROUP_COLLAPSED_SIZE,\\n    }\\n    setGroup(true)\\n    console.log(nodeConfig)\\n    await commandService.executeCommand<NsGroupCmd.AddGroup.IArgs>(\\n      XFlowGroupCommands.ADD_GROUP.id,\\n      {\\n        nodeConfig: nodeConfig,\\n      },\\n    )\\n\\n    message.success(`${XFlowGroupCommands.ADD_GROUP.label}: \u547d\u4ee4\u6267\u884c\u6210\u529f`)\\n  }\\n\\n  return (\\n    <FormBuilder<IFormValues>\\n      form={form}\\n      formItems={formItems}\\n      onFinish={onFinish}\\n      initialValues={{\\n        id: uuidv4(),\\n        groupChildren: [\'node1\', \'node2\', \'node3\', \'node4\'],\\n        label: \'Group_1\',\\n        groupHeaderHeight: 40,\\n        groupPadding: 12,\\n        renderKey: GROUP_NODE_RENDER_ID,\\n      }}\\n      submitButton={\\n        <Button type=\\"primary\\" htmlType=\\"submit\\" style={{ width: \'100%\' }} disabled={hasGroup}>\\n          \u6267\u884c\u547d\u4ee4\\n        </Button>\\n      }\\n    />\\n  )\\n}\\n\\nexport const FormPanel = () => {\\n  return (\\n    <WorkspacePanel position={{ top: 0, left: 0, bottom: 0, width: 230 }} className=\\"panel\\">\\n      <Card title=\\"Group Options\\" size=\\"small\\" bordered={false}>\\n        <CmdForm />\\n      </Card>\\n    </WorkspacePanel>\\n  )\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/group/group-add/basic/constant.ts?dumi-raw-code\n/* harmony default export */ var constantdumi_raw_code = ("export const DND_NODE_RENDER_ID = \'DND_NDOE\'\\nexport const GROUP_NODE_RENDER_ID = \'GROUP_NODE_RENDER_ID\'\\nexport const GROUP_COLLAPSED_SIZE = { width: 160, height: 40 }");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/group/group-add/basic/config-graph.tsx?dumi-raw-code\n/* harmony default export */ var config_graphdumi_raw_code = ("import type { IAppLoad, NsGraphCmd } from \'@antv/xflow\'\\nimport { createGraphConfig } from \'@antv/xflow\'\\nimport { XFlowGraphCommands } from \'@antv/xflow\'\\nimport { DND_NODE_RENDER_ID, GROUP_NODE_RENDER_ID } from \'./constant\'\\nimport { DndNode } from \'./react-node\'\\nimport { GroupNode } from \'./react-group-node\'\\nimport { getGraphData } from \'./mock\'\\n\\nexport const onLoad: IAppLoad = async app => {\\n  // \u8ba1\u7b97\u5e03\u5c40\\n  const res = await app.executeCommand<\\n    NsGraphCmd.GraphLayout.IArgs,\\n    NsGraphCmd.GraphLayout.IResult\\n  >(XFlowGraphCommands.GRAPH_LAYOUT.id, {\\n    layoutType: \'dagre\',\\n    layoutOptions: {\\n      type: \'dagre\',\\n      /** \u5e03\u5c40\u65b9\u5411 */\\n      rankdir: \'TB\',\\n      /** \u8282\u70b9\u95f4\u8ddd */\\n      nodesep: 60,\\n      /** \u5c42\u95f4\u8ddd */\\n      ranksep: 30,\\n    },\\n    graphData: getGraphData(),\\n  })\\n  const { graphData } = res.contextProvider().getResult()\\n  // render\\n  await app.executeCommand<NsGraphCmd.GraphRender.IArgs>(XFlowGraphCommands.GRAPH_RENDER.id, {\\n    graphData: graphData,\\n  })\\n  // \u5c45\u4e2d\\n  await app.executeCommand<NsGraphCmd.GraphZoom.IArgs>(XFlowGraphCommands.GRAPH_ZOOM.id, {\\n    factor: \'real\',\\n  })\\n}\\n\\n/**  graphConfig\uff1a\u914d\u7f6eGraph  */\\nexport const useGraphConfig = createGraphConfig<any>(graphConfig => {\\n  /**  graphConfig\uff1a\u914d\u7f6eNode\u8282\u70b9\u7ec4\u4ef6  */\\n  graphConfig.setNodeRender(DND_NODE_RENDER_ID, DndNode)\\n  /**  graphConfig\uff1a\u914d\u7f6eGroup\u8282\u70b9\u7ec4\u4ef6 h  */\\n  graphConfig.setNodeRender(GROUP_NODE_RENDER_ID, GroupNode)\\n})");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/group/group-add/basic/react-node/index.tsx?dumi-raw-code\n/* harmony default export */ var react_nodedumi_raw_code = ("import React from \'react\'\\nimport type { NsGraph } from \'@antv/xflow\'\\nimport \'./index.less\'\\n\\nexport const DndNode: NsGraph.INodeRender = props => {\\n  return <div className=\\"xflow-dnd-node\\">{props.data.label}</div>\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/group/group-add/basic/index.less?dumi-raw-code\n/* harmony default export */ var group_add_basicdumi_raw_code = ("@body-bg: #f9f9f9;\\n@primaryColor: #1890ff;\\n@light-border: 1px solid #d9d9d9;\\n\\n.add-group-demo {\\n  position: relative;\\n  border: @light-border;\\n  .__dumi-default-previewer-demo {\\n    padding: 16px 12px;\\n  }\\n\\n  .card-wrap {\\n    display: flex;\\n    flex-direction: column;\\n    gap: 8px;\\n    justify-content: space-evenly;\\n    height: 100%;\\n  }\\n\\n  .xflow-workspace {\\n    height: 300px;\\n    box-shadow: 0 0 10px 1px #e9e9e9;\\n  }\\n\\n  .xflow-x6-canvas {\\n    background: @body-bg;\\n  }\\n\\n  .xflow-canvas-root {\\n    margin: 0;\\n  }\\n\\n  .react-node {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 100%;\\n    height: 100%;\\n    padding: 0 16px;\\n    overflow: hidden;\\n    font-weight: 600;\\n    white-space: nowrap;\\n    text-overflow: ellipsis;\\n    background-color: #fff;\\n    border: 1px solid #873bf4;\\n    border-radius: 4px;\\n    &:hover {\\n      background-color: rgb(234, 219, 255) !important;\\n    }\\n  }\\n  .x6-node-selected {\\n    .react-node {\\n      background-color: rgb(254, 254, 255);\\n      border: 3px solid rgb(135, 59, 244);\\n      box-shadow: 0 0 3px 3px rgba(135, 59, 244, 0.2);\\n      &:hover {\\n        background-color: rgba(227, 244, 255, 0.45);\\n      }\\n    }\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/group/group-add/basic/react-group-node/index.tsx?dumi-raw-code\n/* harmony default export */ var react_group_nodedumi_raw_code = ("import React from \'react\'\\nimport { PlusSquareOutlined, MinusSquareOutlined } from \'@ant-design/icons\'\\nimport type { NsGraph } from \'@antv/xflow\'\\nimport { useXFlowApp, XFlowGroupCommands } from \'@antv/xflow\'\\n\\nimport \'./index.less\'\\n\\nexport const GroupNode: NsGraph.INodeRender = props => {\\n  const { cell } = props\\n  const app = useXFlowApp()\\n  const isCollapsed = props.data.isCollapsed || false\\n  const onExpand = e => {\\n    app.executeCommand(XFlowGroupCommands.COLLAPSE_GROUP.id, {\\n      nodeId: cell.id,\\n      isCollapsed: false,\\n    })\\n  }\\n  const onCollapse = e => {\\n    app.executeCommand(XFlowGroupCommands.COLLAPSE_GROUP.id, {\\n      nodeId: cell.id,\\n      isCollapsed: true,\\n\\n      gap: 3,\\n    })\\n  }\\n\\n  return (\\n    <div className=\\"xflow-group-node\\">\\n      <div className=\\"xflow-group-header\\">\\n        <div className=\\"header-left\\">{props.data.label}</div>\\n        <div className=\\"header-right\\">\\n          {isCollapsed && <PlusSquareOutlined onClick={onExpand} />}\\n          {!isCollapsed && <MinusSquareOutlined onClick={onCollapse} />}\\n        </div>\\n      </div>\\n    </div>\\n  )\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/group/group-add/basic/mock.ts?dumi-raw-code\n/* harmony default export */ var mockdumi_raw_code = ("import type { NsGraph } from \'@antv/xflow\'\\nimport { uuidv4 } from \'@antv/xflow\'\\nimport { DND_NODE_RENDER_ID } from \'./constant\'\\n\\n// NodeConfig\\nconst NODE_COMMON_PROPS = {\\n  width: 160,\\n  height: 40,\\n  renderKey: DND_NODE_RENDER_ID,\\n} as const\\n\\n// NodeConfig\\nconst EDGE_COMMON_PROPS = {\\n  attrs: {\\n    line: {\\n      targetMarker: {\\n        name: \'block\',\\n        width: 4,\\n        height: 8,\\n      },\\n      strokeDasharray: \'\',\\n      stroke: \'#A2B1C3\',\\n      strokeWidth: 1,\\n    },\\n  },\\n} as const\\n\\n// mock data\\nexport const getGraphData = () => {\\n  const nodes: NsGraph.INodeConfig[] = [\\n    {\\n      id: \'node1\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-1\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node2\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-2\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node3\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-3\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node4\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-4\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n  ]\\n  const edges: NsGraph.IEdgeConfig[] = [\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node2\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node2-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node3\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node3-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node4\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node4-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n  ]\\n  return {\\n    nodes: nodes,\\n    edges: edges,\\n  } as NsGraph.IGraphData\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/group/group-collapse/basic/index.tsx?dumi-raw-code\n/* harmony default export */ var group_collapse_basicdumi_raw_code = ("import React from \'react\'\\nimport { XFlow, XFlowCanvas } from \'@antv/xflow\'\\nimport { FormPanel } from \'./form\'\\nimport { useGraphConfig, onLoad } from \'./config-graph\'\\nimport \'./index.less\'\\n\\n/**  Demo Props  */\\nexport interface IDemoProps {\\n  anything: string\\n}\\n\\nconst XFlowDemo: React.FC<IDemoProps> = props => {\\n  const graphConfig = useGraphConfig(props)\\n\\n  return (\\n    <XFlow onLoad={onLoad} className=\\"xflow-workspace\\">\\n      <FormPanel />\\n      <XFlowCanvas config={graphConfig} position={{ top: 0, left: 230, right: 0, bottom: 0 }} />\\n    </XFlow>\\n  )\\n}\\n\\nexport default XFlowDemo");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/group/group-collapse/basic/form.tsx?dumi-raw-code\n/* harmony default export */ var group_collapse_basic_formdumi_raw_code = ("import React from \'react\'\\nimport { Card, Form, Input, message, Button } from \'antd\'\\nimport type { IFormSchema } from \'@antv/xflow\'\\nimport { useXFlowApp, WorkspacePanel, FormBuilder, uuidv4, delay } from \'@antv/xflow\'\\nimport type { NsGroupCmd } from \'@antv/xflow\'\\nimport { XFlowGroupCommands } from \'@antv/xflow\'\\n\\ninterface IFormValues {\\n  nodeId: string\\n  isCollapsed: boolean\\n}\\n\\nconst formItems: IFormSchema[] = [\\n  {\\n    name: \'nodeId\',\\n    label: \'nodeId\',\\n    rules: [{ required: true }],\\n    renderProps: { disabled: true },\\n    render: Input,\\n  },\\n  {\\n    name: \'isCollapsed\',\\n    label: \'isCollapsed\',\\n    rules: [{ required: true }],\\n    renderProps: { disabled: true },\\n    render: Input,\\n  },\\n]\\n\\nexport const CmdForm = () => {\\n  const app = useXFlowApp()\\n  const [form] = Form.useForm<IFormValues>()\\n  const [isCollpase, setCollapsed] = React.useState(false)\\n  React.useEffect(() => {\\n    const setFormValue = async () => {\\n      await delay(1000)\\n      const graph = await app.getGraphInstance()\\n      const nodes = graph.getCells().filter(c => c.getProp(\'isGroup\'))\\n      if (nodes[0]) {\\n        form.setFieldsValue({ nodeId: nodes[0].id })\\n      }\\n    }\\n    setFormValue()\\n  }, [app, form])\\n  const onFinish = async (values: IFormValues) => {\\n    console.log(values)\\n    setCollapsed(values.isCollapsed === true)\\n    await app.commandService.executeCommand<NsGroupCmd.CollapseGroup.IArgs>(\\n      XFlowGroupCommands.COLLAPSE_GROUP.id,\\n      {\\n        nodeId: values.nodeId,\\n        isCollapsed: values.isCollapsed,\\n      },\\n    )\\n    form.setFieldsValue({ isCollapsed: !values.isCollapsed })\\n    message.success(`${XFlowGroupCommands.COLLAPSE_GROUP.label}: \u547d\u4ee4\u6267\u884c\u6210\u529f`)\\n  }\\n\\n  return (\\n    <FormBuilder<IFormValues>\\n      form={form}\\n      formItems={formItems}\\n      onFinish={onFinish}\\n      initialValues={{\\n        nodeId: null,\\n        isCollapsed: true,\\n      }}\\n      submitButton={\\n        <Button type=\\"primary\\" htmlType=\\"submit\\" style={{ width: \'100%\' }}>\\n          \u6267\u884c{isCollpase ? \'\u5c55\u5f00\' : \'\u6298\u53e0\'}\u547d\u4ee4\\n        </Button>\\n      }\\n    />\\n  )\\n}\\n\\nexport const FormPanel = () => {\\n  return (\\n    <WorkspacePanel position={{ top: 0, left: 0, bottom: 0, width: 230 }} className=\\"panel\\">\\n      <Card title=\\"Group Options\\" size=\\"small\\" bordered={false}>\\n        <CmdForm />\\n      </Card>\\n    </WorkspacePanel>\\n  )\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/group/group-collapse/basic/config-graph.tsx?dumi-raw-code\n/* harmony default export */ var basic_config_graphdumi_raw_code = ("import type { IAppLoad, NsGraphCmd, NsGroupCmd } from \'@antv/xflow\'\\nimport { createGraphConfig } from \'@antv/xflow\'\\nimport { XFlowGraphCommands, XFlowGroupCommands } from \'@antv/xflow\'\\nimport { DND_NODE_RENDER_ID, GROUP_COLLAPSED_SIZE, GROUP_NODE_RENDER_ID } from \'./constant\'\\nimport { DndNode } from \'./react-node\'\\nimport { GroupNode } from \'./react-group-node\'\\nimport { getGraphData } from \'./mock\'\\n\\nexport const onLoad: IAppLoad = async app => {\\n  // \u8ba1\u7b97\u5e03\u5c40\\n  const res = await app.executeCommand<\\n    NsGraphCmd.GraphLayout.IArgs,\\n    NsGraphCmd.GraphLayout.IResult\\n  >(XFlowGraphCommands.GRAPH_LAYOUT.id, {\\n    layoutType: \'dagre\',\\n    layoutOptions: {\\n      type: \'dagre\',\\n      /** \u5e03\u5c40\u65b9\u5411 */\\n      rankdir: \'TB\',\\n      /** \u8282\u70b9\u95f4\u8ddd */\\n      nodesep: 60,\\n      /** \u5c42\u95f4\u8ddd */\\n      ranksep: 30,\\n    },\\n    graphData: getGraphData(),\\n  })\\n  const { graphData } = res.contextProvider().getResult()\\n  // render\\n  await app.executeCommand<NsGraphCmd.GraphRender.IArgs>(XFlowGraphCommands.GRAPH_RENDER.id, {\\n    graphData: graphData,\\n  })\\n  // addGroup\\n  await app.executeCommand<NsGroupCmd.AddGroup.IArgs>(XFlowGroupCommands.ADD_GROUP.id, {\\n    nodeConfig: {\\n      id: \'group1\',\\n      label: \'Group1\',\\n      groupChildren: [\'node1\', \'node2\', \'node3\', \'node4\'],\\n      isCollapsed: false,\\n      renderKey: GROUP_NODE_RENDER_ID,\\n      groupCollapsedSize: GROUP_COLLAPSED_SIZE,\\n    },\\n  })\\n  // \u5c45\u4e2d\\n  await app.executeCommand<NsGraphCmd.GraphZoom.IArgs>(XFlowGraphCommands.GRAPH_ZOOM.id, {\\n    factor: \'real\',\\n  })\\n}\\n\\n/**  graphConfig\uff1a\u914d\u7f6eGraph  */\\nexport const useGraphConfig = createGraphConfig<any>(graphConfig => {\\n  /**  graphConfig\uff1a\u914d\u7f6eNode\u8282\u70b9\u7ec4\u4ef6  */\\n  graphConfig.setNodeRender(DND_NODE_RENDER_ID, DndNode)\\n  /**  graphConfig\uff1a\u914d\u7f6eGroup\u8282\u70b9\u7ec4\u4ef6 h  */\\n  graphConfig.setNodeRender(GROUP_NODE_RENDER_ID, GroupNode)\\n})");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/group/group-collapse/basic/constant.ts?dumi-raw-code\n/* harmony default export */ var basic_constantdumi_raw_code = ("export const DND_NODE_RENDER_ID = \'DND_NDOE\'\\nexport const GROUP_NODE_RENDER_ID = \'GROUP_NODE_RENDER_ID\'\\nexport const GROUP_COLLAPSED_SIZE = { width: 160, height: 40 }");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/group/group-collapse/basic/react-node/index.tsx?dumi-raw-code\n/* harmony default export */ var basic_react_nodedumi_raw_code = ("import React from \'react\'\\nimport type { NsGraph } from \'@antv/xflow\'\\nimport \'./index.less\'\\n\\nexport const DndNode: NsGraph.INodeRender = props => {\\n  return <div className=\\"xflow-dnd-node\\">{props.data.label}</div>\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/group/group-collapse/basic/index.less?dumi-raw-code\n/* harmony default export */ var group_group_collapse_basicdumi_raw_code = ("@body-bg: #f9f9f9;\\n@primaryColor: #1890ff;\\n@light-border: 1px solid #d9d9d9;\\n\\n.add-group-demo {\\n  position: relative;\\n  border: @light-border;\\n  .__dumi-default-previewer-demo {\\n    padding: 16px 12px;\\n  }\\n\\n  .card-wrap {\\n    display: flex;\\n    flex-direction: column;\\n    gap: 8px;\\n    justify-content: space-evenly;\\n    height: 100%;\\n  }\\n\\n  .xflow-workspace {\\n    height: 300px;\\n    box-shadow: 0 0 10px 1px #e9e9e9;\\n  }\\n\\n  .xflow-x6-canvas {\\n    background: @body-bg;\\n  }\\n\\n  .xflow-canvas-root {\\n    margin: 0;\\n  }\\n\\n  .react-node {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 100%;\\n    height: 100%;\\n    padding: 0 16px;\\n    overflow: hidden;\\n    font-weight: 600;\\n    white-space: nowrap;\\n    text-overflow: ellipsis;\\n    background-color: #fff;\\n    border: 1px solid #873bf4;\\n    border-radius: 4px;\\n    &:hover {\\n      background-color: rgb(234, 219, 255) !important;\\n    }\\n  }\\n  .x6-node-selected {\\n    .react-node {\\n      background-color: rgb(254, 254, 255);\\n      border: 3px solid rgb(135, 59, 244);\\n      box-shadow: 0 0 3px 3px rgba(135, 59, 244, 0.2);\\n      &:hover {\\n        background-color: rgba(227, 244, 255, 0.45);\\n      }\\n    }\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/group/group-collapse/basic/react-group-node/index.tsx?dumi-raw-code\n/* harmony default export */ var basic_react_group_nodedumi_raw_code = ("import React from \'react\'\\nimport { PlusSquareOutlined, MinusSquareOutlined } from \'@ant-design/icons\'\\nimport type { NsGraph } from \'@antv/xflow\'\\nimport { useXFlowApp, XFlowGroupCommands } from \'@antv/xflow\'\\n\\nimport \'./index.less\'\\n\\nexport const GroupNode: NsGraph.INodeRender = props => {\\n  const { cell } = props\\n  const app = useXFlowApp()\\n  const isCollapse = cell.getProp(\'isCollapsed\') || false\\n  const onExpand = e => {\\n    app.executeCommand(XFlowGroupCommands.COLLAPSE_GROUP.id, {\\n      nodeId: cell.id,\\n      isCollapsed: false,\\n    })\\n  }\\n  const onCollapse = e => {\\n    app.executeCommand(XFlowGroupCommands.COLLAPSE_GROUP.id, {\\n      nodeId: cell.id,\\n      isCollapsed: true,\\n\\n      gap: 3,\\n    })\\n  }\\n\\n  return (\\n    <div className=\\"xflow-group-node\\">\\n      <div className=\\"xflow-group-header\\">\\n        <div className=\\"header-left\\">{props.data.label}</div>\\n        <div className=\\"header-right\\">\\n          {isCollapse && <PlusSquareOutlined onClick={onExpand} />}\\n          {!isCollapse && <MinusSquareOutlined onClick={onCollapse} />}\\n        </div>\\n      </div>\\n    </div>\\n  )\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/group/group-collapse/basic/mock.ts?dumi-raw-code\n/* harmony default export */ var basic_mockdumi_raw_code = ("import type { NsGraph } from \'@antv/xflow\'\\nimport { uuidv4 } from \'@antv/xflow\'\\nimport { DND_NODE_RENDER_ID, GROUP_NODE_RENDER_ID, GROUP_COLLAPSED_SIZE } from \'./constant\'\\n\\n// NodeConfig\\nconst NODE_COMMON_PROPS = {\\n  width: 160,\\n  height: 40,\\n  renderKey: DND_NODE_RENDER_ID,\\n} as const\\n\\n// NodeConfig\\nconst EDGE_COMMON_PROPS = {\\n  attrs: {\\n    line: {\\n      targetMarker: {\\n        name: \'block\',\\n        width: 4,\\n        height: 8,\\n      },\\n      strokeDasharray: \'\',\\n      stroke: \'#A2B1C3\',\\n      strokeWidth: 1,\\n    },\\n  },\\n} as const\\n\\n// mock data\\nexport const getGraphData = () => {\\n  const nodes: NsGraph.INodeConfig[] = [\\n    {\\n      id: \'node1\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-1\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node2\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-2\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node3\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-3\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node4\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-4\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n  ]\\n  const edges: NsGraph.IEdgeConfig[] = [\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node2\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node2-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node3\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node3-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node4\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node4-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n  ]\\n  return {\\n    nodes: [...nodes],\\n    edges: edges,\\n  } as NsGraph.IGraphData\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/group/group-del/demos/index.tsx?dumi-raw-code\n/* harmony default export */ var group_del_demosdumi_raw_code = ("import React from \'react\'\\nimport { XFlow, XFlowCanvas } from \'@antv/xflow\'\\nimport { FormPanel } from \'./form\'\\nimport { useGraphConfig, onLoad } from \'./config-graph\'\\nimport \'@antv/xflow/dist/index.css\'\\nimport \'./index.less\'\\n\\n/**  Demo Props  */\\nexport interface IDemoProps {\\n  anything: string\\n}\\n\\nconst XFlowDemo: React.FC<IDemoProps> = props => {\\n  const graphConfig = useGraphConfig(props)\\n\\n  return (\\n    <XFlow onLoad={onLoad} className=\\"xflow-workspace\\">\\n      <FormPanel />\\n      <XFlowCanvas config={graphConfig} position={{ top: 0, left: 230, right: 0, bottom: 0 }} />\\n    </XFlow>\\n  )\\n}\\n\\nexport default XFlowDemo");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/group/group-del/demos/form.tsx?dumi-raw-code\n/* harmony default export */ var group_del_demos_formdumi_raw_code = ("import React from \'react\'\\nimport { Card, Form, Input, message, Button } from \'antd\'\\nimport type { IFormSchema } from \'@antv/xflow\'\\nimport { useXFlowApp, WorkspacePanel, FormBuilder, uuidv4, delay } from \'@antv/xflow\'\\nimport type { NsGroupCmd } from \'@antv/xflow\'\\nimport { XFlowGroupCommands } from \'@antv/xflow\'\\n\\ninterface IFormValues {\\n  id: string\\n}\\n\\nconst formItems: IFormSchema[] = [\\n  {\\n    name: \'id\',\\n    label: \'id\',\\n    rules: [{ required: true }],\\n    renderProps: { disabled: true },\\n    render: Input,\\n  },\\n]\\n\\nexport const CmdForm = () => {\\n  const app = useXFlowApp()\\n  const [form] = Form.useForm<IFormValues>()\\n  const [hasGroup, setGroup] = React.useState(false)\\n  React.useEffect(() => {\\n    const setFormValue = async () => {\\n      await delay(1000)\\n      const graph = await app.getGraphInstance()\\n      const nodes = graph.getCells().filter(c => c.getProp(\'isGroup\'))\\n      console.log(nodes, graph.getCells())\\n      if (nodes[0]) {\\n        form.setFieldsValue({ id: nodes[0].id })\\n      }\\n    }\\n    setFormValue()\\n  }, [app, form])\\n  const onFinish = async (values: IFormValues) => {\\n    const nodeConfig = {\\n      ...values,\\n    }\\n    setGroup(true)\\n    console.log(nodeConfig)\\n    await app.commandService.executeCommand<NsGroupCmd.DelGroup.IArgs>(\\n      XFlowGroupCommands.DEL_GROUP.id,\\n      {\\n        nodeConfig: nodeConfig,\\n      },\\n    )\\n\\n    message.success(`${XFlowGroupCommands.DEL_GROUP.label}: \u547d\u4ee4\u6267\u884c\u6210\u529f`)\\n  }\\n\\n  return (\\n    <FormBuilder<IFormValues>\\n      form={form}\\n      formItems={formItems}\\n      onFinish={onFinish}\\n      initialValues={{\\n        id: null,\\n      }}\\n      submitButton={\\n        <Button type=\\"primary\\" htmlType=\\"submit\\" style={{ width: \'100%\' }} disabled={hasGroup}>\\n          \u6267\u884c\u547d\u4ee4\\n        </Button>\\n      }\\n    />\\n  )\\n}\\n\\nexport const FormPanel = () => {\\n  return (\\n    <WorkspacePanel position={{ top: 0, left: 0, bottom: 0, width: 230 }} className=\\"panel\\">\\n      <Card title=\\"Group Options\\" size=\\"small\\" bordered={false}>\\n        <CmdForm />\\n      </Card>\\n    </WorkspacePanel>\\n  )\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/group/group-del/demos/config-graph.tsx?dumi-raw-code\n/* harmony default export */ var demos_config_graphdumi_raw_code = ("import type { IAppLoad, NsGraphCmd, NsGroupCmd } from \'@antv/xflow\'\\nimport { createGraphConfig } from \'@antv/xflow\'\\nimport { XFlowGraphCommands, XFlowGroupCommands } from \'@antv/xflow\'\\nimport { DND_NODE_RENDER_ID, GROUP_COLLAPSED_SIZE, GROUP_NODE_RENDER_ID } from \'./constant\'\\nimport { DndNode } from \'./react-node\'\\nimport { GroupNode } from \'./react-group-node\'\\nimport { getGraphData } from \'./mock\'\\n\\nexport const onLoad: IAppLoad = async app => {\\n  // \u8ba1\u7b97\u5e03\u5c40\\n  const res = await app.executeCommand<\\n    NsGraphCmd.GraphLayout.IArgs,\\n    NsGraphCmd.GraphLayout.IResult\\n  >(XFlowGraphCommands.GRAPH_LAYOUT.id, {\\n    layoutType: \'dagre\',\\n    layoutOptions: {\\n      type: \'dagre\',\\n      /** \u5e03\u5c40\u65b9\u5411 */\\n      rankdir: \'TB\',\\n      /** \u8282\u70b9\u95f4\u8ddd */\\n      nodesep: 60,\\n      /** \u5c42\u95f4\u8ddd */\\n      ranksep: 30,\\n    },\\n    graphData: getGraphData(),\\n  })\\n  const { graphData } = res.contextProvider().getResult()\\n  // render\\n  await app.executeCommand<NsGraphCmd.GraphRender.IArgs>(XFlowGraphCommands.GRAPH_RENDER.id, {\\n    graphData: graphData,\\n  })\\n  // addGroup\\n  await app.executeCommand<NsGroupCmd.AddGroup.IArgs>(XFlowGroupCommands.ADD_GROUP.id, {\\n    nodeConfig: {\\n      id: \'group1\',\\n      label: \'Group1\',\\n      groupChildren: [\'node1\', \'node2\', \'node3\', \'node4\'],\\n      isCollapsed: false,\\n      renderKey: GROUP_NODE_RENDER_ID,\\n      groupCollapsedSize: GROUP_COLLAPSED_SIZE,\\n    },\\n  })\\n  // \u5c45\u4e2d\\n  await app.executeCommand<NsGraphCmd.GraphZoom.IArgs>(XFlowGraphCommands.GRAPH_ZOOM.id, {\\n    factor: \'real\',\\n  })\\n}\\n\\n/**  graphConfig\uff1a\u914d\u7f6eGraph  */\\nexport const useGraphConfig = createGraphConfig<any>(graphConfig => {\\n  /**  graphConfig\uff1a\u914d\u7f6eNode\u8282\u70b9\u7ec4\u4ef6  */\\n  graphConfig.setNodeRender(DND_NODE_RENDER_ID, DndNode)\\n  /**  graphConfig\uff1a\u914d\u7f6eGroup\u8282\u70b9\u7ec4\u4ef6 h  */\\n  graphConfig.setNodeRender(GROUP_NODE_RENDER_ID, GroupNode)\\n})");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/group/group-del/demos/constant.ts?dumi-raw-code\n/* harmony default export */ var demos_constantdumi_raw_code = ("export const DND_NODE_RENDER_ID = \'DND_NDOE\'\\nexport const GROUP_NODE_RENDER_ID = \'GROUP_NODE_RENDER_ID\'\\nexport const GROUP_COLLAPSED_SIZE = { width: 160, height: 40 }");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/group/group-del/demos/react-node/index.tsx?dumi-raw-code\n/* harmony default export */ var demos_react_nodedumi_raw_code = ("import React from \'react\'\\nimport type { NsGraph } from \'@antv/xflow\'\\nimport \'./index.less\'\\n\\nexport const DndNode: NsGraph.INodeRender = props => {\\n  return <div className=\\"xflow-dnd-node\\">{props.data.label}</div>\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/group/group-del/demos/index.less?dumi-raw-code\n/* harmony default export */ var group_group_del_demosdumi_raw_code = ("@body-bg: #f9f9f9;\\n@primaryColor: #1890ff;\\n@light-border: 1px solid #d9d9d9;\\n\\n.add-group-demo {\\n  position: relative;\\n  border: @light-border;\\n  .__dumi-default-previewer-demo {\\n    padding: 16px 12px;\\n  }\\n\\n  .card-wrap {\\n    display: flex;\\n    flex-direction: column;\\n    gap: 8px;\\n    justify-content: space-evenly;\\n    height: 100%;\\n  }\\n\\n  .xflow-workspace {\\n    height: 300px;\\n    box-shadow: 0 0 10px 1px #e9e9e9;\\n  }\\n\\n  .xflow-x6-canvas {\\n    background: @body-bg;\\n  }\\n\\n  .xflow-canvas-root {\\n    margin: 0;\\n  }\\n\\n  .react-node {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 100%;\\n    height: 100%;\\n    padding: 0 16px;\\n    overflow: hidden;\\n    font-weight: 600;\\n    white-space: nowrap;\\n    text-overflow: ellipsis;\\n    background-color: #fff;\\n    border: 1px solid #873bf4;\\n    border-radius: 4px;\\n    &:hover {\\n      background-color: rgb(234, 219, 255) !important;\\n    }\\n  }\\n  .x6-node-selected {\\n    .react-node {\\n      background-color: rgb(254, 254, 255);\\n      border: 3px solid rgb(135, 59, 244);\\n      box-shadow: 0 0 3px 3px rgba(135, 59, 244, 0.2);\\n      &:hover {\\n        background-color: rgba(227, 244, 255, 0.45);\\n      }\\n    }\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/group/group-del/demos/react-group-node/index.tsx?dumi-raw-code\n/* harmony default export */ var demos_react_group_nodedumi_raw_code = ("import React from \'react\'\\nimport { PlusSquareOutlined, MinusSquareOutlined } from \'@ant-design/icons\'\\nimport type { NsGraph } from \'@antv/xflow\'\\nimport { useXFlowApp, XFlowGroupCommands } from \'@antv/xflow\'\\n\\nimport \'./index.less\'\\n\\nexport const GroupNode: NsGraph.INodeRender = props => {\\n  const { cell } = props\\n  const app = useXFlowApp()\\n  const isCollapse = cell.getProp(\'isCollapsed\') || false\\n  const onExpand = e => {\\n    app.executeCommand(XFlowGroupCommands.COLLAPSE_GROUP.id, {\\n      nodeId: cell.id,\\n      isCollapsed: false,\\n    })\\n  }\\n  const onCollapse = e => {\\n    app.executeCommand(XFlowGroupCommands.COLLAPSE_GROUP.id, {\\n      nodeId: cell.id,\\n      isCollapsed: true,\\n\\n      gap: 3,\\n    })\\n  }\\n\\n  return (\\n    <div className=\\"xflow-group-node\\">\\n      <div className=\\"xflow-group-header\\">\\n        <div className=\\"header-left\\">{props.data.label}</div>\\n        <div className=\\"header-right\\">\\n          {isCollapse && <PlusSquareOutlined onClick={onExpand} />}\\n          {!isCollapse && <MinusSquareOutlined onClick={onCollapse} />}\\n        </div>\\n      </div>\\n    </div>\\n  )\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/group/group-del/demos/mock.ts?dumi-raw-code\n/* harmony default export */ var demos_mockdumi_raw_code = ("import type { NsGraph } from \'@antv/xflow\'\\nimport { uuidv4 } from \'@antv/xflow\'\\nimport { DND_NODE_RENDER_ID, GROUP_NODE_RENDER_ID, GROUP_COLLAPSED_SIZE } from \'./constant\'\\n\\n// NodeConfig\\nconst NODE_COMMON_PROPS = {\\n  width: 160,\\n  height: 40,\\n  renderKey: DND_NODE_RENDER_ID,\\n} as const\\n\\n// NodeConfig\\nconst EDGE_COMMON_PROPS = {\\n  attrs: {\\n    line: {\\n      targetMarker: {\\n        name: \'block\',\\n        width: 4,\\n        height: 8,\\n      },\\n      strokeDasharray: \'\',\\n      stroke: \'#A2B1C3\',\\n      strokeWidth: 1,\\n    },\\n  },\\n} as const\\n\\n// mock data\\nexport const getGraphData = () => {\\n  const nodes: NsGraph.INodeConfig[] = [\\n    {\\n      id: \'node1\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-1\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node2\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-2\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node3\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-3\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node4\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-4\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n  ]\\n  const edges: NsGraph.IEdgeConfig[] = [\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node2\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node2-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node3\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node3-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node4\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node4-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n  ]\\n  return {\\n    nodes: [...nodes],\\n    edges: edges,\\n  } as NsGraph.IGraphData\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/nodes/node-add/demos/index.tsx?dumi-raw-code\n/* harmony default export */ var node_add_demosdumi_raw_code = ("import React from \'react\'\\nimport type { IAppLoad, NsNodeCmd } from \'@antv/xflow\'\\nimport { XFlow, createGraphConfig, XFlowCanvas, XFlowNodeCommands } from \'@antv/xflow\'\\nimport { FormPanel, width, height } from \'./form\'\\nimport \'./index.less\'\\n\\n/**  graphConfig hook  */\\nexport const useGraphConfig = createGraphConfig(graphConfig => {\\n  graphConfig.setX6Config({ grid: true })\\n  graphConfig.setDefaultNodeRender(props => {\\n    return <div className=\\"react-node\\"> {props.data.label} </div>\\n  })\\n})\\n\\nconst NodeAddDemo: React.FC<{}> = () => {\\n  const graphConfig = useGraphConfig()\\n  const onLoad: IAppLoad = async app => {\\n    // \u5728appReadyCallback\u4e2d\u53ef\u4ee5\u901a\u8fc7app\u6267\u884ccommand\\n    app.executeCommand<NsNodeCmd.AddNode.IArgs>(XFlowNodeCommands.ADD_NODE.id, {\\n      nodeConfig: {\\n        id: \'node1\',\\n        x: 100,\\n        y: 30,\\n        label: \'Hello World\',\\n        width,\\n        height,\\n      },\\n    })\\n    return app\\n  }\\n\\n  return (\\n    <XFlow meta={{ flowId: \'add-node-demo\' }} onLoad={onLoad} className=\\"xflow-workspace\\">\\n      <FormPanel />\\n      <XFlowCanvas\\n        className=\\"app-main-content\\"\\n        config={graphConfig}\\n        position={{ top: 0, left: 230, right: 0, bottom: 0 }}\\n      />\\n    </XFlow>\\n  )\\n}\\n\\nexport default NodeAddDemo");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/nodes/node-add/demos/form.tsx?dumi-raw-code\n/* harmony default export */ var node_add_demos_formdumi_raw_code = ("import React from \'react\'\\nimport { Card, Form, Input, message } from \'antd\'\\nimport type { IFormSchema } from \'@antv/xflow\'\\nimport { usePanelContext, WorkspacePanel, randomInt, FormBuilder } from \'@antv/xflow\'\\nimport type { NsGraph, NsNodeCmd } from \'@antv/xflow\'\\nimport { XFlowNodeCommands } from \'@antv/xflow\'\\n\\nexport const width = 100\\nexport const height = 40\\n\\ntype IFormValues = NsGraph.INodeConfig\\n\\nconst formItems: IFormSchema[] = [\\n  {\\n    name: \'id\',\\n    label: \'id\',\\n    rules: [{ required: true }],\\n    render: Input,\\n  },\\n  {\\n    name: \'label\',\\n    label: \'label\',\\n    rules: [{ required: true }],\\n    render: Input,\\n  },\\n  {\\n    name: \'x\',\\n    label: \'x\',\\n    render: Input,\\n  },\\n  {\\n    name: \'y\',\\n    label: \'y\',\\n    render: Input,\\n  },\\n  {\\n    name: \'width\',\\n    label: \'width\',\\n    render: Input,\\n  },\\n  {\\n    name: \'height\',\\n    label: \'height\',\\n    render: Input,\\n  },\\n]\\n\\nlet nodeId = 1\\n\\nexport const CmdForm = () => {\\n  const { commandService } = usePanelContext()\\n  const [form] = Form.useForm<IFormValues>()\\n\\n  React.useEffect(() => {\\n    nodeId = 1\\n  }, [])\\n\\n  const onFinish = async (values: IFormValues) => {\\n    commandService.executeCommand<NsNodeCmd.AddNode.IArgs>(XFlowNodeCommands.ADD_NODE.id, {\\n      nodeConfig: values,\\n    })\\n    nodeId += 1\\n    form.setFieldsValue({\\n      id: \'node_\' + nodeId,\\n      x: randomInt(20, 600),\\n      y: randomInt(50, 270),\\n      width,\\n      height,\\n      label: \'Node_\' + nodeId,\\n    })\\n    message.success(`${XFlowNodeCommands.ADD_NODE.label}: \u547d\u4ee4\u6267\u884c\u6210\u529f`)\\n  }\\n\\n  return (\\n    <FormBuilder<IFormValues>\\n      form={form}\\n      formItems={formItems}\\n      onFinish={onFinish}\\n      initialValues={{\\n        id: \'node_\' + nodeId,\\n        x: randomInt(20, 100),\\n        y: randomInt(50, 150),\\n        width,\\n        height,\\n        label: \'Node_\' + nodeId,\\n      }}\\n    />\\n  )\\n}\\n\\nexport const FormPanel = () => {\\n  return (\\n    <WorkspacePanel position={{ top: 0, left: 0, bottom: 0, width: 230 }} className=\\"panel\\">\\n      <Card title=\\"NodeConfig Options\\" size=\\"small\\" bordered={false}>\\n        <CmdForm />\\n      </Card>\\n    </WorkspacePanel>\\n  )\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/nodes/node-add/demos/index.less?dumi-raw-code\n/* harmony default export */ var nodes_node_add_demosdumi_raw_code = ("@import \'~antd/dist/antd.less\';\\n\\n@border-color: #d9d9d9;\\n@text-color: rgba(0, 0, 0, 0.65);\\n\\n.cmd-demo {\\n  .__dumi-default-previewer-demo {\\n    position: relative;\\n    padding: 16px 8px;\\n  }\\n\\n  .xflow-workspace {\\n    position: relative;\\n    height: 290px;\\n\\n    .ant-card {\\n      height: 100%;\\n      box-shadow: 0 0 10px 1px #e9e9e9;\\n    }\\n\\n    .ant-card-head-title {\\n      text-align: center;\\n    }\\n\\n    .ant-form-item {\\n      margin-bottom: 8px;\\n    }\\n\\n    .ant-form-item-label > label {\\n      color: @text-color;\\n    }\\n\\n    .panel {\\n      padding: 0px 8px;\\n    }\\n\\n    .xflow-canvas-root {\\n      margin: 0px 8px;\\n      box-shadow: 0 0 10px 1px #e9e9e9;\\n    }\\n  }\\n\\n  .react-node {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 100%;\\n    height: 100%;\\n    font-weight: 600;\\n    background-color: #fff;\\n    border: 1px solid #873bf4;\\n    border-radius: 4px;\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/nodes/node-back/demos/index.tsx?dumi-raw-code\n/* harmony default export */ var node_back_demosdumi_raw_code = ("import React from \'react\'\\nimport type { IAppLoad, NsNodeCmd } from \'@antv/xflow\'\\nimport { XFlow, createGraphConfig, XFlowCanvas, XFlowNodeCommands } from \'@antv/xflow\'\\nimport { FormPanel } from \'./form\'\\nimport \'./index.less\'\\n\\nexport const width = 100\\nexport const height = 40\\n\\n/**  graphConfig hook  */\\nexport const useGraphConfig = createGraphConfig(graphConfig => {\\n  graphConfig.setX6Config({ grid: true })\\n  graphConfig.setDefaultNodeRender(props => {\\n    return <div className=\\"react-node\\"> {props.data.label} </div>\\n  })\\n})\\n\\nconst NodeAddDemo: React.FC<{}> = () => {\\n  const graphConfig = useGraphConfig()\\n  const onLoad: IAppLoad = async app => {\\n    app.executeCommand<NsNodeCmd.AddNode.IArgs>(XFlowNodeCommands.ADD_NODE.id, {\\n      nodeConfig: {\\n        id: \'node1\',\\n        x: 100,\\n        y: 30,\\n        label: \'NODENODE1\',\\n        width,\\n        height,\\n      },\\n    })\\n    app.executeCommand<NsNodeCmd.AddNode.IArgs>(XFlowNodeCommands.ADD_NODE.id, {\\n      nodeConfig: {\\n        id: \'node2\',\\n        x: 120,\\n        y: 50,\\n        label: \'NODENODE2\',\\n        width,\\n        height,\\n      },\\n    })\\n    return app\\n  }\\n\\n  return (\\n    <XFlow meta={{ flowId: \'add-node-demo\' }} onLoad={onLoad} className=\\"xflow-workspace\\">\\n      <FormPanel />\\n      <XFlowCanvas\\n        className=\\"app-main-content\\"\\n        config={graphConfig}\\n        position={{ top: 0, left: 230, right: 0, bottom: 0 }}\\n      />\\n    </XFlow>\\n  )\\n}\\n\\nexport default NodeAddDemo");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/nodes/node-back/demos/form.tsx?dumi-raw-code\n/* harmony default export */ var node_back_demos_formdumi_raw_code = ("import React from \'react\'\\nimport { Card, Form, Input, message } from \'antd\'\\nimport type { IFormSchema } from \'@antv/xflow\'\\nimport { usePanelContext, WorkspacePanel, FormBuilder } from \'@antv/xflow\'\\nimport type { NsNodeCmd } from \'@antv/xflow\'\\nimport { XFlowNodeCommands } from \'@antv/xflow\'\\n\\ninterface IFormValues {\\n  nodeId: string\\n}\\n\\nconst formItems: IFormSchema[] = [\\n  {\\n    name: \'nodeId\',\\n    label: \'nodeId\',\\n    rules: [{ required: true }],\\n    render: Input,\\n    renderProps: { disabled: true },\\n  },\\n]\\n\\nexport const CmdForm = () => {\\n  const { commandService } = usePanelContext()\\n  const [form] = Form.useForm<IFormValues>()\\n\\n  const onFinish = async (values: IFormValues) => {\\n    commandService.executeCommand<NsNodeCmd.BackNode.IArgs>(XFlowNodeCommands.BACK_NODE.id, values)\\n    console.log(\'executeCommand with args\', values)\\n    message.success(`${XFlowNodeCommands.BACK_NODE.label}: \u547d\u4ee4\u6267\u884c\u6210\u529f`)\\n    form.setFieldsValue({\\n      nodeId: values.nodeId === \'node1\' ? \'node2\' : \'node1\',\\n    })\\n  }\\n\\n  return (\\n    <FormBuilder<IFormValues>\\n      form={form}\\n      formItems={formItems}\\n      onFinish={onFinish}\\n      initialValues={{\\n        nodeId: \'node1\',\\n      }}\\n    />\\n  )\\n}\\n\\nexport const FormPanel = () => {\\n  return (\\n    <WorkspacePanel position={{ top: 0, left: 0, bottom: 0, width: 230 }} className=\\"panel\\">\\n      <Card title=\\"NodeConfig Options\\" size=\\"small\\" bordered={false}>\\n        <CmdForm />\\n      </Card>\\n    </WorkspacePanel>\\n  )\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/nodes/node-back/demos/index.less?dumi-raw-code\n/* harmony default export */ var nodes_node_back_demosdumi_raw_code = ("@import \'~antd/dist/antd.less\';\\n\\n@border-color: #d9d9d9;\\n@text-color: rgba(0, 0, 0, 0.65);\\n\\n.cmd-demo {\\n  .__dumi-default-previewer-demo {\\n    position: relative;\\n    padding: 16px 8px;\\n  }\\n\\n  .xflow-workspace {\\n    position: relative;\\n    height: 290px;\\n\\n    .ant-card {\\n      height: 100%;\\n      box-shadow: 0 0 10px 1px #e9e9e9;\\n    }\\n\\n    .ant-card-head-title {\\n      text-align: center;\\n    }\\n\\n    .ant-form-item {\\n      margin-bottom: 8px;\\n    }\\n\\n    .ant-form-item-label > label {\\n      color: @text-color;\\n    }\\n\\n    .panel {\\n      padding: 0px 8px;\\n    }\\n\\n    .xflow-canvas-root {\\n      margin: 0px 8px;\\n      box-shadow: 0 0 10px 1px #e9e9e9;\\n    }\\n  }\\n\\n  .react-node {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 100%;\\n    height: 100%;\\n    font-weight: 600;\\n    background-color: #fff;\\n    border: 1px solid #873bf4;\\n    border-radius: 4px;\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/nodes/node-center/demos/index.tsx?dumi-raw-code\n/* harmony default export */ var node_center_demosdumi_raw_code = ("import React from \'react\'\\nimport type { IAppLoad, NsNodeCmd } from \'@antv/xflow\'\\nimport { XFlow, createGraphConfig, XFlowCanvas, XFlowNodeCommands } from \'@antv/xflow\'\\nimport { FormPanel, width, height } from \'./form\'\\nimport \'./index.less\'\\n\\n/**  graphConfig hook  */\\nexport const useGraphConfig = createGraphConfig(graphConfig => {\\n  graphConfig.setX6Config({ grid: true })\\n  graphConfig.setDefaultNodeRender(props => {\\n    return <div className=\\"react-node\\"> {props.data.label} </div>\\n  })\\n})\\n\\nconst NodeAddDemo: React.FC<{}> = () => {\\n  const graphConfig = useGraphConfig()\\n  const onLoad: IAppLoad = async app => {\\n    app.executeCommand<NsNodeCmd.AddNode.IArgs>(XFlowNodeCommands.ADD_NODE.id, {\\n      nodeConfig: {\\n        id: \'node1\',\\n        x: 100,\\n        y: 30,\\n        label: \'Hello World 1\',\\n        width,\\n        height,\\n      },\\n    })\\n    app.executeCommand<NsNodeCmd.AddNode.IArgs>(XFlowNodeCommands.ADD_NODE.id, {\\n      nodeConfig: {\\n        id: \'node2\',\\n        x: 50,\\n        y: 150,\\n        label: \'Hello World 2\',\\n        width,\\n        height,\\n      },\\n    })\\n    app.executeCommand<NsNodeCmd.AddNode.IArgs>(XFlowNodeCommands.ADD_NODE.id, {\\n      nodeConfig: {\\n        id: \'node3\',\\n        x: 200,\\n        y: 150,\\n        label: \'Hello World 3\',\\n        width,\\n        height,\\n      },\\n    })\\n    return app\\n  }\\n\\n  return (\\n    <XFlow onLoad={onLoad} className=\\"xflow-workspace\\">\\n      <FormPanel />\\n      <XFlowCanvas\\n        className=\\"app-main-content\\"\\n        config={graphConfig}\\n        position={{ top: 0, left: 230, right: 0, bottom: 0 }}\\n      />\\n    </XFlow>\\n  )\\n}\\n\\nexport default NodeAddDemo");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/nodes/node-center/demos/form.tsx?dumi-raw-code\n/* harmony default export */ var node_center_demos_formdumi_raw_code = ("import React from \'react\'\\nimport { Button, Card, Form, Input, message } from \'antd\'\\nimport type { IFormSchema } from \'@antv/xflow\'\\nimport { useXFlowApp, WorkspacePanel, MODELS, useModelAsync, FormBuilder } from \'@antv/xflow\'\\nimport type { NsNodeCmd } from \'@antv/xflow\'\\nimport { XFlowNodeCommands } from \'@antv/xflow\'\\n\\nexport const width = 100\\nexport const height = 40\\n\\ninterface IFormValues {\\n  id: string\\n  nodeConfig: string\\n}\\n\\nconst formItems: IFormSchema[] = [\\n  {\\n    name: \'id\',\\n    label: \'id\',\\n    rules: [{ required: true }],\\n    render: Input,\\n  },\\n  {\\n    name: \'nodeConfig\',\\n    label: \'nodeConfig\',\\n    rules: [{ required: true }],\\n    render: Input.TextArea,\\n    renderProps: { rows: 5 },\\n  },\\n]\\n\\nexport const CmdForm = () => {\\n  const app = useXFlowApp()\\n  const [form] = Form.useForm<IFormValues>()\\n\\n  const [selectNode] = useModelAsync<MODELS.SELECTED_NODE.IState>({\\n    getModel: async () => MODELS.SELECTED_NODE.getModel(app.modelService),\\n    initialState: null,\\n  })\\n\\n  React.useEffect(() => {\\n    if (selectNode) {\\n      const node = selectNode.getData()\\n      form.setFieldsValue({\\n        id: node.id,\\n        nodeConfig: JSON.stringify(node),\\n      })\\n    }\\n  }, [form, selectNode])\\n\\n  const onFinish = async (values: IFormValues) => {\\n    app.commandService.executeCommand<NsNodeCmd.CenterNode.IArgs>(\\n      XFlowNodeCommands.CENTER_NODE.id,\\n      {\\n        nodeConfig: JSON.parse(values.nodeConfig),\\n      },\\n    )\\n\\n    message.success(`${XFlowNodeCommands.CENTER_NODE.label}: \u547d\u4ee4\u6267\u884c\u6210\u529f`)\\n  }\\n\\n  return (\\n    <FormBuilder<IFormValues>\\n      form={form}\\n      formItems={formItems}\\n      onFinish={onFinish}\\n      initialValues={{\\n        id: null,\\n        nodeConfig: null,\\n      }}\\n      submitButton={\\n        <Button type=\\"primary\\" htmlType=\\"submit\\" style={{ width: \'100%\' }} disabled={!selectNode}>\\n          \u9009\u4e2d\u8282\u70b9\u6267\u884c\u547d\u4ee4\\n        </Button>\\n      }\\n    />\\n  )\\n}\\n\\nexport const FormPanel = () => {\\n  return (\\n    <WorkspacePanel position={{ top: 0, left: 0, bottom: 0, width: 230 }} className=\\"panel\\">\\n      <Card title=\\"NodeConfig Options\\" size=\\"small\\" bordered={false}>\\n        <CmdForm />\\n      </Card>\\n    </WorkspacePanel>\\n  )\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/nodes/node-center/demos/index.less?dumi-raw-code\n/* harmony default export */ var nodes_node_center_demosdumi_raw_code = ("@import \'~antd/dist/antd.less\';\\n\\n@border-color: #d9d9d9;\\n@text-color: rgba(0, 0, 0, 0.65);\\n\\n.cmd-demo {\\n  .__dumi-default-previewer-demo {\\n    position: relative;\\n    padding: 16px 8px;\\n  }\\n}\\n\\n.xflow-workspace {\\n  position: relative;\\n  height: 290px;\\n\\n  .ant-card {\\n    height: 100%;\\n    box-shadow: 0 0 10px 1px #e9e9e9;\\n  }\\n\\n  .ant-card-head-title {\\n    text-align: center;\\n  }\\n\\n  .ant-form-item {\\n    margin-bottom: 8px;\\n  }\\n\\n  .ant-form-item-label > label {\\n    color: @text-color;\\n  }\\n\\n  .panel {\\n    padding: 0 8px;\\n  }\\n\\n  .xflow-canvas-root {\\n    margin: 0 8px;\\n    box-shadow: 0 0 10px 1px #e9e9e9;\\n  }\\n}\\n\\n.react-node {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  width: 100%;\\n  height: 100%;\\n  font-weight: 600;\\n  background-color: #fff;\\n  border: 1px solid #873bf4;\\n  border-radius: 4px;\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/nodes/node-delete/demos/index.tsx?dumi-raw-code\n/* harmony default export */ var node_delete_demosdumi_raw_code = ("import React from \'react\'\\nimport type { IAppLoad, NsNodeCmd } from \'@antv/xflow\'\\nimport { XFlow, createGraphConfig, XFlowCanvas, XFlowNodeCommands } from \'@antv/xflow\'\\nimport { FormPanel, width, height } from \'./form\'\\nimport \'./index.less\'\\n\\n/**  graphConfig hook  */\\nexport const useGraphConfig = createGraphConfig(graphConfig => {\\n  graphConfig.setX6Config({ grid: true })\\n  graphConfig.setDefaultNodeRender(props => {\\n    return <div className=\\"react-node\\"> {props.data.label} </div>\\n  })\\n})\\n\\nconst NodeAddDemo: React.FC<{}> = () => {\\n  const graphConfig = useGraphConfig()\\n  const onLoad: IAppLoad = async app => {\\n    app.executeCommand<NsNodeCmd.AddNode.IArgs>(XFlowNodeCommands.ADD_NODE.id, {\\n      nodeConfig: {\\n        id: \'node1\',\\n        x: 100,\\n        y: 30,\\n        label: \'Hello World 1\',\\n        width,\\n        height,\\n      },\\n    })\\n    app.executeCommand<NsNodeCmd.AddNode.IArgs>(XFlowNodeCommands.ADD_NODE.id, {\\n      nodeConfig: {\\n        id: \'node2\',\\n        x: 50,\\n        y: 150,\\n        label: \'Hello World 2\',\\n        width,\\n        height,\\n      },\\n    })\\n    app.executeCommand<NsNodeCmd.AddNode.IArgs>(XFlowNodeCommands.ADD_NODE.id, {\\n      nodeConfig: {\\n        id: \'node3\',\\n        x: 200,\\n        y: 150,\\n        label: \'Hello World 3\',\\n        width,\\n        height,\\n      },\\n    })\\n    return app\\n  }\\n\\n  return (\\n    <XFlow onLoad={onLoad} className=\\"xflow-workspace\\">\\n      <FormPanel />\\n      <XFlowCanvas\\n        className=\\"app-main-content\\"\\n        config={graphConfig}\\n        position={{ top: 0, left: 230, right: 0, bottom: 0 }}\\n      />\\n    </XFlow>\\n  )\\n}\\n\\nexport default NodeAddDemo");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/nodes/node-delete/demos/form.tsx?dumi-raw-code\n/* harmony default export */ var node_delete_demos_formdumi_raw_code = ("import React from \'react\'\\nimport { Button, Card, Form, Input, message } from \'antd\'\\nimport type { IFormSchema } from \'@antv/xflow\'\\nimport { useXFlowApp, WorkspacePanel, MODELS, useModelAsync, FormBuilder } from \'@antv/xflow\'\\nimport type { NsNodeCmd } from \'@antv/xflow\'\\nimport { XFlowNodeCommands } from \'@antv/xflow\'\\n\\nexport const width = 100\\nexport const height = 40\\n\\ninterface IFormValues {\\n  id: string\\n  nodeConfig: string\\n}\\n\\nconst formItems: IFormSchema[] = [\\n  {\\n    name: \'id\',\\n    label: \'node id\',\\n    rules: [{ required: true }],\\n    render: Input,\\n    renderProps: { disabled: true },\\n  },\\n  {\\n    name: \'nodeConfig\',\\n    label: \'nodeConfig\',\\n    rules: [{ required: true }],\\n    render: Input.TextArea,\\n    renderProps: { rows: 5, disabled: true },\\n  },\\n]\\n\\nexport const CmdForm = () => {\\n  const app = useXFlowApp()\\n  const [form] = Form.useForm<IFormValues>()\\n\\n  const [selectNode] = useModelAsync<MODELS.SELECTED_NODE.IState>({\\n    getModel: async () => MODELS.SELECTED_NODE.getModel(app.modelService),\\n    initialState: null,\\n  })\\n\\n  React.useEffect(() => {\\n    if (selectNode) {\\n      const node = selectNode.getData()\\n      form.setFieldsValue({\\n        id: node.id,\\n        nodeConfig: JSON.stringify(node),\\n      })\\n    }\\n  }, [form, selectNode])\\n\\n  const onFinish = async (values: IFormValues) => {\\n    app.commandService.executeCommand<NsNodeCmd.DelNode.IArgs>(XFlowNodeCommands.DEL_NODE.id, {\\n      nodeConfig: JSON.parse(values.nodeConfig),\\n    })\\n\\n    form.setFieldsValue({\\n      id: null,\\n      nodeConfig: null,\\n    })\\n    message.success(`${XFlowNodeCommands.DEL_NODE.label}: \u547d\u4ee4\u6267\u884c\u6210\u529f`)\\n  }\\n\\n  return (\\n    <FormBuilder<IFormValues>\\n      layout=\\"vertical\\"\\n      form={form}\\n      formItems={formItems}\\n      onFinish={onFinish}\\n      initialValues={{\\n        id: null,\\n        nodeConfig: null,\\n      }}\\n      submitButton={\\n        <Button type=\\"primary\\" htmlType=\\"submit\\" style={{ width: \'100%\' }} disabled={!selectNode}>\\n          \u9009\u4e2d\u8282\u70b9\u6267\u884c\u547d\u4ee4\\n        </Button>\\n      }\\n    />\\n  )\\n}\\n\\nexport const FormPanel = () => {\\n  return (\\n    <WorkspacePanel position={{ top: 0, left: 0, bottom: 0, width: 230 }} className=\\"panel\\">\\n      <Card title=\\"NodeConfig Options\\" size=\\"small\\" bordered={false}>\\n        <CmdForm />\\n      </Card>\\n    </WorkspacePanel>\\n  )\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/nodes/node-delete/demos/index.less?dumi-raw-code\n/* harmony default export */ var nodes_node_delete_demosdumi_raw_code = ("@import \'~antd/dist/antd.less\';\\n\\n@border-color: #d9d9d9;\\n@text-color: rgba(0, 0, 0, 0.65);\\n\\n.cmd-demo {\\n  .__dumi-default-previewer-demo {\\n    position: relative;\\n    padding: 16px 8px;\\n  }\\n}\\n\\n.xflow-workspace {\\n  position: relative;\\n  height: 290px;\\n\\n  .ant-card {\\n    height: 100%;\\n    box-shadow: 0 0 10px 1px #e9e9e9;\\n    .ant-col.ant-col-24.ant-form-item-label {\\n      padding: 0;\\n    }\\n  }\\n\\n  .ant-card-head-title {\\n    text-align: center;\\n  }\\n\\n  .ant-form-item {\\n    margin-bottom: 8px;\\n  }\\n\\n  .ant-form-item-label > label {\\n    color: @text-color;\\n  }\\n\\n  .panel {\\n    padding: 0 8px;\\n  }\\n\\n  .xflow-canvas-root {\\n    margin: 0 8px;\\n    box-shadow: 0 0 10px 1px #e9e9e9;\\n  }\\n}\\n\\n.react-node {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  width: 100%;\\n  height: 100%;\\n  font-weight: 600;\\n  background-color: #fff;\\n  border: 1px solid #873bf4;\\n  border-radius: 4px;\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/nodes/node-front/demos/index.tsx?dumi-raw-code\n/* harmony default export */ var node_front_demosdumi_raw_code = ("import React from \'react\'\\nimport type { IAppLoad, NsNodeCmd } from \'@antv/xflow\'\\nimport { XFlow, createGraphConfig, XFlowCanvas, XFlowNodeCommands } from \'@antv/xflow\'\\nimport { FormPanel } from \'./form\'\\nimport \'./index.less\'\\n\\nexport const width = 100\\nexport const height = 40\\n\\n/**  graphConfig hook  */\\nexport const useGraphConfig = createGraphConfig(graphConfig => {\\n  graphConfig.setX6Config({ grid: true })\\n  graphConfig.setDefaultNodeRender(props => {\\n    return <div className=\\"react-node\\"> {props.data.label} </div>\\n  })\\n})\\n\\nconst NodeAddDemo: React.FC<{}> = () => {\\n  const graphConfig = useGraphConfig()\\n  const onLoad: IAppLoad = async app => {\\n    app.executeCommand<NsNodeCmd.AddNode.IArgs>(XFlowNodeCommands.ADD_NODE.id, {\\n      nodeConfig: {\\n        id: \'node1\',\\n        x: 100,\\n        y: 30,\\n        label: \'NODENODE1\',\\n        width,\\n        height,\\n      },\\n    })\\n    app.executeCommand<NsNodeCmd.AddNode.IArgs>(XFlowNodeCommands.ADD_NODE.id, {\\n      nodeConfig: {\\n        id: \'node2\',\\n        x: 120,\\n        y: 50,\\n        label: \'NODENODE2\',\\n        width,\\n        height,\\n      },\\n    })\\n    return app\\n  }\\n\\n  return (\\n    <XFlow meta={{ flowId: \'add-node-demo\' }} onLoad={onLoad} className=\\"xflow-workspace\\">\\n      <FormPanel />\\n      <XFlowCanvas\\n        className=\\"app-main-content\\"\\n        config={graphConfig}\\n        position={{ top: 0, left: 230, right: 0, bottom: 0 }}\\n      />\\n    </XFlow>\\n  )\\n}\\n\\nexport default NodeAddDemo");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/nodes/node-front/demos/form.tsx?dumi-raw-code\n/* harmony default export */ var node_front_demos_formdumi_raw_code = ("import React from \'react\'\\nimport { Card, Form, Input, message } from \'antd\'\\nimport type { IFormSchema } from \'@antv/xflow\'\\nimport { usePanelContext, WorkspacePanel, FormBuilder } from \'@antv/xflow\'\\nimport type { NsNodeCmd } from \'@antv/xflow\'\\nimport { XFlowNodeCommands } from \'@antv/xflow\'\\n\\ninterface IFormValues {\\n  nodeId: string\\n}\\n\\nconst formItems: IFormSchema[] = [\\n  {\\n    name: \'nodeId\',\\n    label: \'nodeId\',\\n    rules: [{ required: true }],\\n    render: Input,\\n    renderProps: { disabled: true },\\n  },\\n]\\n\\nexport const CmdForm = () => {\\n  const { commandService } = usePanelContext()\\n  const [form] = Form.useForm<IFormValues>()\\n\\n  const onFinish = async (values: IFormValues) => {\\n    commandService.executeCommand<NsNodeCmd.FrontNode.IArgs>(\\n      XFlowNodeCommands.FRONT_NODE.id,\\n      values,\\n    )\\n    console.log(\'executeCommand with args\', values)\\n    message.success(`${XFlowNodeCommands.FRONT_NODE.label}: \u547d\u4ee4\u6267\u884c\u6210\u529f`)\\n    form.setFieldsValue({\\n      nodeId: values.nodeId === \'node1\' ? \'node2\' : \'node1\',\\n    })\\n  }\\n\\n  return (\\n    <FormBuilder<IFormValues>\\n      form={form}\\n      formItems={formItems}\\n      onFinish={onFinish}\\n      initialValues={{\\n        nodeId: \'node1\',\\n      }}\\n    />\\n  )\\n}\\n\\nexport const FormPanel = () => {\\n  return (\\n    <WorkspacePanel position={{ top: 0, left: 0, bottom: 0, width: 230 }} className=\\"panel\\">\\n      <Card title=\\"NodeConfig Options\\" size=\\"small\\" bordered={false}>\\n        <CmdForm />\\n      </Card>\\n    </WorkspacePanel>\\n  )\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/nodes/node-front/demos/index.less?dumi-raw-code\n/* harmony default export */ var nodes_node_front_demosdumi_raw_code = ("@import \'~antd/dist/antd.less\';\\n\\n@border-color: #d9d9d9;\\n@text-color: rgba(0, 0, 0, 0.65);\\n\\n.cmd-demo {\\n  .__dumi-default-previewer-demo {\\n    position: relative;\\n    padding: 16px 8px;\\n  }\\n\\n  .xflow-workspace {\\n    position: relative;\\n    height: 290px;\\n\\n    .ant-card {\\n      height: 100%;\\n      box-shadow: 0 0 10px 1px #e9e9e9;\\n    }\\n\\n    .ant-card-head-title {\\n      text-align: center;\\n    }\\n\\n    .ant-form-item {\\n      margin-bottom: 8px;\\n    }\\n\\n    .ant-form-item-label > label {\\n      color: @text-color;\\n    }\\n\\n    .panel {\\n      padding: 0px 8px;\\n    }\\n\\n    .xflow-canvas-root {\\n      margin: 0px 8px;\\n      box-shadow: 0 0 10px 1px #e9e9e9;\\n    }\\n  }\\n\\n  .react-node {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 100%;\\n    height: 100%;\\n    font-weight: 600;\\n    background-color: #fff;\\n    border: 1px solid #873bf4;\\n    border-radius: 4px;\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/nodes/node-highlight/demos/index.tsx?dumi-raw-code\n/* harmony default export */ var node_highlight_demosdumi_raw_code = ("import React from \'react\'\\nimport type { IAppLoad, NsNodeCmd } from \'@antv/xflow\'\\nimport { XFlow, createGraphConfig, XFlowCanvas, XFlowNodeCommands } from \'@antv/xflow\'\\nimport { FormPanel, width, height } from \'./form\'\\nimport \'./index.less\'\\n\\n/**  graphConfig hook  */\\nexport const useGraphConfig = createGraphConfig(graphConfig => {\\n  graphConfig.setX6Config({ grid: true })\\n  graphConfig.setDefaultNodeRender(props => {\\n    return <div className=\\"react-node\\"> {props.data.label} </div>\\n  })\\n})\\n\\nconst NodeAddDemo: React.FC<{}> = () => {\\n  const graphConfig = useGraphConfig()\\n  const onLoad: IAppLoad = async app => {\\n    // \u5728appReadyCallback\u4e2d\u53ef\u4ee5\u901a\u8fc7app\u6267\u884ccommand\\n    app.executeCommand<NsNodeCmd.AddNode.IArgs>(XFlowNodeCommands.ADD_NODE.id, {\\n      nodeConfig: {\\n        id: \'node1\',\\n        x: 100,\\n        y: 30,\\n        shape: \'rect\',\\n        label: \'Hello World\',\\n        width,\\n        height,\\n      },\\n    })\\n    return app\\n  }\\n\\n  return (\\n    <XFlow meta={{ flowId: \'add-node-demo\' }} onLoad={onLoad} className=\\"xflow-workspace\\">\\n      <FormPanel />\\n      <XFlowCanvas\\n        className=\\"app-main-content\\"\\n        config={graphConfig}\\n        position={{ top: 0, left: 230, right: 0, bottom: 0 }}\\n      />\\n    </XFlow>\\n  )\\n}\\n\\nexport default NodeAddDemo");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/nodes/node-highlight/demos/form.tsx?dumi-raw-code\n/* harmony default export */ var node_highlight_demos_formdumi_raw_code = ("import React from \'react\'\\nimport { Card, Form, Input, InputNumber, message } from \'antd\'\\nimport type { IFormSchema } from \'@antv/xflow\'\\nimport { usePanelContext, WorkspacePanel, FormBuilder } from \'@antv/xflow\'\\nimport type { NsNodeCmd } from \'@antv/xflow\'\\nimport { XFlowNodeCommands } from \'@antv/xflow\'\\n\\nexport const width = 100\\nexport const height = 40\\n\\ninterface IFormValues {\\n  nodeId: string\\n  stroke: string\\n  strokeWidth: number\\n}\\n\\nconst formItems: IFormSchema[] = [\\n  {\\n    name: \'nodeId\',\\n    label: \'nodeId\',\\n    rules: [{ required: true }],\\n    render: Input,\\n  },\\n  {\\n    name: \'stroke\',\\n    label: \'stroke\',\\n    rules: [{ required: true }],\\n    render: Input,\\n  },\\n  {\\n    name: \'strokeWidth\',\\n    label: \'strokeWidth\',\\n    render: InputNumber,\\n    renderProps: {\\n      min: 1,\\n      max: 7,\\n    },\\n  },\\n]\\n\\nexport const CmdForm = () => {\\n  const { commandService } = usePanelContext()\\n  const [form] = Form.useForm<IFormValues>()\\n  const onFinish = async (values: IFormValues) => {\\n    commandService.executeCommand<NsNodeCmd.HighlightNode.IArgs>(\\n      XFlowNodeCommands.HIGHLIGHT_NODE.id,\\n      {\\n        ...values,\\n      },\\n    )\\n    console.log(\'XFlowNodeCommands.HIGHLIGHT_NODE.id\', values)\\n    message.success(`${XFlowNodeCommands.HIGHLIGHT_NODE.label}: \u547d\u4ee4\u6267\u884c\u6210\u529f`)\\n  }\\n\\n  return (\\n    <FormBuilder<IFormValues>\\n      form={form}\\n      formItems={formItems}\\n      onFinish={onFinish}\\n      initialValues={{\\n        nodeId: \'node1\',\\n        stroke: \'#873bf4\',\\n        strokeWidth: 3,\\n      }}\\n    />\\n  )\\n}\\n\\nexport const FormPanel = () => {\\n  return (\\n    <WorkspacePanel position={{ top: 0, left: 0, bottom: 0, width: 230 }} className=\\"panel\\">\\n      <Card title=\\"NodeConfig Options\\" size=\\"small\\" bordered={false}>\\n        <CmdForm />\\n      </Card>\\n    </WorkspacePanel>\\n  )\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/nodes/node-highlight/demos/index.less?dumi-raw-code\n/* harmony default export */ var nodes_node_highlight_demosdumi_raw_code = ("@import \'~antd/dist/antd.less\';\\n\\n@border-color: #d9d9d9;\\n@text-color: rgba(0, 0, 0, 0.65);\\n\\n.cmd-demo {\\n  .__dumi-default-previewer-demo {\\n    position: relative;\\n    padding: 16px 8px;\\n  }\\n\\n  .xflow-workspace {\\n    position: relative;\\n    height: 290px;\\n\\n    .ant-card {\\n      height: 100%;\\n      box-shadow: 0 0 10px 1px #e9e9e9;\\n    }\\n\\n    .ant-card-head-title {\\n      text-align: center;\\n    }\\n\\n    .ant-form-item {\\n      margin-bottom: 8px;\\n    }\\n\\n    .ant-form-item-label > label {\\n      color: @text-color;\\n    }\\n\\n    .panel {\\n      padding: 0 8px;\\n    }\\n\\n    .xflow-canvas-root {\\n      margin: 0 8px;\\n      box-shadow: 0 0 10px 1px #e9e9e9;\\n    }\\n  }\\n\\n  .react-node {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 100%;\\n    height: 100%;\\n    font-weight: 600;\\n    background-color: #fff;\\n    border: 1px solid #873bf4;\\n    border-radius: 4px;\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/nodes/node-move/demos/index.tsx?dumi-raw-code\n/* harmony default export */ var node_move_demosdumi_raw_code = ("import React from \'react\'\\nimport type { IAppLoad, NsNodeCmd } from \'@antv/xflow\'\\nimport { XFlow, createGraphConfig, XFlowCanvas, XFlowNodeCommands } from \'@antv/xflow\'\\nimport { FormPanel } from \'./form\'\\nimport \'./index.less\'\\n\\n/**  graphConfig hook  */\\nexport const useGraphConfig = createGraphConfig(graphConfig => {\\n  graphConfig.setX6Config({ grid: true })\\n  graphConfig.setDefaultNodeRender(props => {\\n    return <div className=\\"react-node\\"> {props.data.label} </div>\\n  })\\n})\\n\\nconst NodeAddDemo: React.FC<{}> = () => {\\n  const graphConfig = useGraphConfig()\\n  const onLoad: IAppLoad = async app => {\\n    app.executeCommand<NsNodeCmd.AddNode.IArgs>(XFlowNodeCommands.ADD_NODE.id, {\\n      nodeConfig: {\\n        id: \'node1\',\\n        x: 100,\\n        y: 30,\\n        label: \'Hello World 1\',\\n        width: 160,\\n        height: 32,\\n      },\\n    })\\n    return app\\n  }\\n\\n  return (\\n    <XFlow onLoad={onLoad} className=\\"xflow-workspace\\">\\n      <FormPanel />\\n      <XFlowCanvas\\n        className=\\"app-main-content\\"\\n        config={graphConfig}\\n        position={{ top: 0, left: 230, right: 0, bottom: 0 }}\\n      />\\n    </XFlow>\\n  )\\n}\\n\\nexport default NodeAddDemo");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/nodes/node-move/demos/form.tsx?dumi-raw-code\n/* harmony default export */ var node_move_demos_formdumi_raw_code = ("import React from \'react\'\\nimport { Button, Card, Form, Input, message } from \'antd\'\\nimport type { IFormSchema } from \'@antv/xflow\'\\nimport { useXFlowApp, WorkspacePanel, MODELS, useModelAsync, FormBuilder } from \'@antv/xflow\'\\nimport type { NsNodeCmd } from \'@antv/xflow\'\\nimport { XFlowNodeCommands } from \'@antv/xflow\'\\n\\ninterface IFormValues {\\n  id: string\\n  dx: string\\n  dy: string\\n}\\n\\nconst formItems: IFormSchema[] = [\\n  {\\n    name: \'id\',\\n    label: \'id\',\\n    rules: [{ required: true }],\\n    render: Input,\\n    renderProps: { disabled: true },\\n  },\\n  {\\n    name: \'dx\',\\n    label: \'position.dx\',\\n    rules: [{ required: true }],\\n    render: Input,\\n  },\\n  {\\n    name: \'dy\',\\n    label: \'position.dy\',\\n    rules: [{ required: true }],\\n    render: Input,\\n  },\\n]\\n\\nexport const CmdForm = () => {\\n  const app = useXFlowApp()\\n  const [form] = Form.useForm<IFormValues>()\\n\\n  const [selectNode] = useModelAsync<MODELS.SELECTED_NODE.IState>({\\n    getModel: async () => MODELS.SELECTED_NODE.getModel(app.modelService),\\n    initialState: null,\\n  })\\n\\n  React.useEffect(() => {\\n    if (selectNode) {\\n      const node = selectNode.getData()\\n      form.setFieldsValue({\\n        id: node.id,\\n        dx: \'20\',\\n        dy: \'20\',\\n      })\\n    }\\n  }, [form, selectNode])\\n\\n  const onFinish = async (values: IFormValues) => {\\n    app.commandService.executeCommand<NsNodeCmd.MoveNode.IArgs>(XFlowNodeCommands.MOVE_NODE.id, {\\n      id: values.id,\\n      position: {\\n        dx: parseInt(values.dx, 10),\\n        dy: parseInt(values.dy, 10),\\n      },\\n    })\\n\\n    message.success(`${XFlowNodeCommands.CENTER_NODE.label}: \u547d\u4ee4\u6267\u884c\u6210\u529f`)\\n  }\\n\\n  return (\\n    <FormBuilder<IFormValues>\\n      form={form}\\n      formItems={formItems}\\n      onFinish={onFinish}\\n      initialValues={{\\n        id: null,\\n        dx: \'10\',\\n        dy: \'10\',\\n      }}\\n      submitButton={\\n        <Button type=\\"primary\\" htmlType=\\"submit\\" style={{ width: \'100%\' }} disabled={!selectNode}>\\n          \u9009\u4e2d\u8282\u70b9\u6267\u884c\u547d\u4ee4\\n        </Button>\\n      }\\n    />\\n  )\\n}\\n\\nexport const FormPanel = () => {\\n  return (\\n    <WorkspacePanel position={{ top: 0, left: 0, bottom: 0, width: 230 }} className=\\"panel\\">\\n      <Card title=\\"NodeConfig Options\\" size=\\"small\\" bordered={false}>\\n        <CmdForm />\\n      </Card>\\n    </WorkspacePanel>\\n  )\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/nodes/node-move/demos/index.less?dumi-raw-code\n/* harmony default export */ var nodes_node_move_demosdumi_raw_code = ("@import \'~antd/dist/antd.less\';\\n\\n@border-color: #d9d9d9;\\n@text-color: rgba(0, 0, 0, 0.65);\\n\\n.cmd-demo {\\n  .__dumi-default-previewer-demo {\\n    position: relative;\\n    padding: 16px 8px;\\n  }\\n}\\n\\n.xflow-workspace {\\n  position: relative;\\n  height: 290px;\\n\\n  .ant-card {\\n    height: 100%;\\n    box-shadow: 0 0 10px 1px #e9e9e9;\\n  }\\n\\n  .ant-card-head-title {\\n    text-align: center;\\n  }\\n\\n  .ant-form-item {\\n    margin-bottom: 8px;\\n  }\\n\\n  .ant-form-item-label > label {\\n    color: @text-color;\\n  }\\n\\n  .panel {\\n    padding: 0 8px;\\n  }\\n\\n  .xflow-canvas-root {\\n    margin: 0 8px;\\n    box-shadow: 0 0 10px 1px #e9e9e9;\\n  }\\n}\\n\\n.react-node {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  width: 100%;\\n  height: 100%;\\n  font-weight: 600;\\n  background-color: #fff;\\n  border: 1px solid #873bf4;\\n  border-radius: 4px;\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/nodes/node-select/demos/index.tsx?dumi-raw-code\n/* harmony default export */ var node_select_demosdumi_raw_code = ("import React from \'react\'\\nimport type { IAppLoad, NsNodeCmd } from \'@antv/xflow\'\\nimport { XFlow, createGraphConfig, XFlowCanvas, XFlowNodeCommands } from \'@antv/xflow\'\\nimport { FormPanel } from \'./form\'\\nimport \'./index.less\'\\nexport const width = 120\\nexport const height = 40\\n/**  graphConfig hook  */\\nexport const useGraphConfig = createGraphConfig(graphConfig => {\\n  graphConfig.setX6Config({ grid: true })\\n  graphConfig.setDefaultNodeRender(props => {\\n    return <div className=\\"react-node\\"> {props.data.label} </div>\\n  })\\n})\\n\\nconst NodeAddDemo: React.FC<{}> = () => {\\n  const graphConfig = useGraphConfig()\\n  const onLoad: IAppLoad = async app => {\\n    app.executeCommand<NsNodeCmd.AddNode.IArgs>(XFlowNodeCommands.ADD_NODE.id, {\\n      nodeConfig: {\\n        id: \'node1\',\\n        x: 100,\\n        y: 30,\\n        label: \'Hello World 1\',\\n        width,\\n        height,\\n      },\\n    })\\n    app.executeCommand<NsNodeCmd.AddNode.IArgs>(XFlowNodeCommands.ADD_NODE.id, {\\n      nodeConfig: {\\n        id: \'node2\',\\n        x: 50,\\n        y: 150,\\n        label: \'Hello World 2\',\\n        width,\\n        height,\\n      },\\n    })\\n    app.executeCommand<NsNodeCmd.AddNode.IArgs>(XFlowNodeCommands.ADD_NODE.id, {\\n      nodeConfig: {\\n        id: \'node3\',\\n        x: 200,\\n        y: 150,\\n        label: \'Hello World 3\',\\n        width,\\n        height,\\n      },\\n    })\\n    return app\\n  }\\n\\n  return (\\n    <XFlow onLoad={onLoad} className=\\"xflow-workspace\\">\\n      <FormPanel />\\n      <XFlowCanvas\\n        className=\\"app-main-content\\"\\n        config={graphConfig}\\n        position={{ top: 0, left: 230, right: 0, bottom: 0 }}\\n      />\\n    </XFlow>\\n  )\\n}\\n\\nexport default NodeAddDemo");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/nodes/node-select/demos/form.tsx?dumi-raw-code\n/* harmony default export */ var node_select_demos_formdumi_raw_code = ("import React from \'react\'\\nimport { Card, Form, Input, Switch, message } from \'antd\'\\nimport type { IFormSchema } from \'@antv/xflow\'\\nimport { useXFlowApp, WorkspacePanel, FormBuilder } from \'@antv/xflow\'\\nimport type { NsNodeCmd } from \'@antv/xflow\'\\nimport { XFlowNodeCommands } from \'@antv/xflow\'\\n\\ninterface IFormValues {\\n  nodeIds: string\\n  resetSelection: boolean\\n}\\n\\nconst formItems: IFormSchema[] = [\\n  {\\n    name: \'nodeIds\',\\n    label: \'nodeIds\',\\n    rules: [{ required: true }],\\n    render: Input,\\n    renderProps: { disabled: true },\\n  },\\n  {\\n    name: \'resetSelection\',\\n    label: \'resetSelection\',\\n    rules: [{ required: true }],\\n    render: Switch,\\n    itemProps: {\\n      valuePropName: \'checked\',\\n    },\\n  },\\n]\\n\\nlet nodeIdx = 1\\nexport const CmdForm = () => {\\n  const app = useXFlowApp()\\n  const [form] = Form.useForm<IFormValues>()\\n\\n  const onFinish = async (values: IFormValues) => {\\n    const args: NsNodeCmd.SelectNode.IArgs = {\\n      nodeIds: [values.nodeIds],\\n      resetSelection: values.resetSelection,\\n    }\\n    app.commandService.executeCommand<NsNodeCmd.SelectNode.IArgs>(\\n      XFlowNodeCommands.SELECT_NODE.id,\\n      args,\\n    )\\n    console.log(\'executeCommand with args :\', args)\\n    message.success(`${XFlowNodeCommands.DEL_NODE.label}: \u547d\u4ee4\u6267\u884c\u6210\u529f`)\\n    // \u8f6e\u6d41\u9009\u4e2d\\n    if (nodeIdx < 3) {\\n      nodeIdx += 1\\n    } else {\\n      nodeIdx = 1\\n    }\\n    form.setFieldsValue({\\n      nodeIds: `node${nodeIdx}`,\\n    })\\n  }\\n\\n  return (\\n    <FormBuilder<IFormValues>\\n      layout=\\"vertical\\"\\n      form={form}\\n      formItems={formItems}\\n      onFinish={onFinish}\\n      initialValues={{\\n        nodeIds: `node${nodeIdx}`,\\n        resetSelection: true,\\n      }}\\n    />\\n  )\\n}\\n\\nexport const FormPanel = () => {\\n  return (\\n    <WorkspacePanel position={{ top: 0, left: 0, bottom: 0, width: 230 }} className=\\"panel\\">\\n      <Card title=\\"NodeConfig Options\\" size=\\"small\\" bordered={false}>\\n        <CmdForm />\\n      </Card>\\n    </WorkspacePanel>\\n  )\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/nodes/node-select/demos/index.less?dumi-raw-code\n/* harmony default export */ var nodes_node_select_demosdumi_raw_code = ("@import \'~antd/dist/antd.less\';\\n\\n@border-color: #d9d9d9;\\n@text-color: rgba(0, 0, 0, 0.65);\\n\\n.node-select-demo {\\n  .__dumi-default-previewer-demo {\\n    position: relative;\\n    padding: 16px 8px;\\n  }\\n\\n  .xflow-workspace {\\n    position: relative;\\n    height: 290px;\\n\\n    .ant-card {\\n      height: 100%;\\n      box-shadow: 0 0 10px 1px #e9e9e9;\\n      .ant-col.ant-col-24.ant-form-item-label {\\n        padding: 0;\\n      }\\n    }\\n\\n    .ant-card-head-title {\\n      text-align: center;\\n    }\\n\\n    .ant-form-item {\\n      margin-bottom: 8px;\\n    }\\n\\n    .ant-form-item-label > label {\\n      color: @text-color;\\n    }\\n\\n    .panel {\\n      padding: 0 8px;\\n    }\\n\\n    .xflow-canvas-root {\\n      margin: 0 8px;\\n      box-shadow: 0 0 10px 1px #e9e9e9;\\n    }\\n\\n    .react-node {\\n      display: flex;\\n      align-items: center;\\n      justify-content: center;\\n      width: 100%;\\n      height: 100%;\\n      font-weight: 600;\\n      background-color: #fff;\\n      border: 1px solid #873bf4;\\n      border-radius: 4px;\\n    }\\n\\n    .x6-node-selected {\\n      .react-node {\\n        background-color: rgb(254, 254, 255);\\n        border: 3px solid rgb(135, 59, 244);\\n        box-shadow: 0 0 3px 3px rgba(135, 59, 244, 0.2);\\n        &:hover {\\n          background-color: rgba(227, 244, 255, 0.45);\\n        }\\n      }\\n    }\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/nodes/node-update/demos/index.tsx?dumi-raw-code\n/* harmony default export */ var node_update_demosdumi_raw_code = ("import React from \'react\'\\nimport type { IAppLoad, NsNodeCmd } from \'@antv/xflow\'\\nimport { XFlow, XFlowCanvas, createGraphConfig, XFlowNodeCommands } from \'@antv/xflow\'\\nimport { FormPanel } from \'./form\'\\nimport \'./index.less\'\\n\\nexport const useGraphConfig = createGraphConfig(graphConfig => {\\n  graphConfig.setX6Config({ grid: true })\\n  graphConfig.setDefaultNodeRender(props => {\\n    return <div className=\\"react-node\\"> {props.data.label} </div>\\n  })\\n})\\n\\nconst Demo: React.FC<{}> = () => {\\n  const onLoad: IAppLoad = async app => {\\n    app.executeCommand(XFlowNodeCommands.ADD_NODE.id, {\\n      nodeConfig: { id: \'node1\', x: 280, y: 130, width: 120, height: 40, label: \'Hello World\' },\\n    } as NsNodeCmd.AddNode.IArgs)\\n  }\\n\\n  return (\\n    <XFlow onLoad={onLoad} className=\\"xflow-node-update-demo\\" meta={{ flowId: \'node-update-demo\' }}>\\n      <FormPanel />\\n      <XFlowCanvas\\n        config={useGraphConfig()}\\n        position={{ top: 0, left: 230, right: 0, bottom: 0 }}\\n      />\\n    </XFlow>\\n  )\\n}\\n\\nexport default Demo");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/nodes/node-update/demos/form.tsx?dumi-raw-code\n/* harmony default export */ var node_update_demos_formdumi_raw_code = ("import React from \'react\'\\nimport { Button, Card, Form, Input, message } from \'antd\'\\nimport type { IFormSchema } from \'@antv/xflow\'\\nimport { useXFlowApp, WorkspacePanel, MODELS, useModelAsync, FormBuilder } from \'@antv/xflow\'\\nimport type { NsNodeCmd } from \'@antv/xflow\'\\nimport { XFlowNodeCommands } from \'@antv/xflow\'\\n\\ninterface IFormValues {\\n  id: string\\n  label: string\\n  x: string\\n  y: string\\n}\\n\\nconst formItems: IFormSchema[] = [\\n  {\\n    name: \'id\',\\n    label: \'id\',\\n    rules: [{ required: true }],\\n    render: Input,\\n    renderProps: { disabled: true },\\n  },\\n  {\\n    name: \'label\',\\n    label: \'label\',\\n    rules: [{ required: true }],\\n    render: Input,\\n  },\\n  {\\n    name: \'x\',\\n    label: \'x\',\\n    rules: [{ required: true }],\\n    render: Input,\\n  },\\n  {\\n    name: \'y\',\\n    label: \'y\',\\n    rules: [{ required: true }],\\n    render: Input,\\n  },\\n]\\n\\nexport const CmdForm = () => {\\n  const app = useXFlowApp()\\n  const [form] = Form.useForm<IFormValues>()\\n  const [selectNode] = useModelAsync<MODELS.SELECTED_NODE.IState>({\\n    getModel: async () => MODELS.SELECTED_NODE.getModel(app.modelService),\\n    initialState: null,\\n  })\\n\\n  React.useEffect(() => {\\n    if (selectNode) {\\n      const nodeConfig = selectNode.getData()\\n      form.setFieldsValue({\\n        id: nodeConfig.id,\\n        label: nodeConfig.label,\\n        x: nodeConfig.x,\\n        y: nodeConfig.y,\\n      })\\n    }\\n  }, [form, selectNode])\\n\\n  const onFinish = async (values: IFormValues) => {\\n    const nodeConfig = selectNode.getData()\\n    app.commandService.executeCommand<NsNodeCmd.UpdateNode.IArgs>(\\n      XFlowNodeCommands.UPDATE_NODE.id,\\n      {\\n        nodeConfig: { ...nodeConfig, ...values },\\n      },\\n    )\\n\\n    message.success(`${XFlowNodeCommands.DEL_NODE.label}: \u547d\u4ee4\u6267\u884c\u6210\u529f`)\\n  }\\n\\n  return (\\n    <FormBuilder<IFormValues>\\n      form={form}\\n      formItems={formItems}\\n      onFinish={onFinish}\\n      initialValues={{\\n        id: null,\\n        label: null,\\n        x: null,\\n        y: null,\\n      }}\\n      submitButton={\\n        <Button type=\\"primary\\" htmlType=\\"submit\\" style={{ width: \'100%\' }} disabled={!selectNode}>\\n          \u9009\u4e2d\u8282\u70b9\u6267\u884c\u547d\u4ee4\\n        </Button>\\n      }\\n    />\\n  )\\n}\\n\\nexport const FormPanel = () => {\\n  return (\\n    <WorkspacePanel position={{ top: 0, left: 0, bottom: 0, width: 230 }} className=\\"panel\\">\\n      <Card title=\\"NodeConfig Options\\" size=\\"small\\" bordered={false}>\\n        <CmdForm />\\n      </Card>\\n    </WorkspacePanel>\\n  )\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/api/commands/nodes/node-update/demos/index.less?dumi-raw-code\n/* harmony default export */ var nodes_node_update_demosdumi_raw_code = (".xflow-node-update-demo {\\n  position: relative;\\n  height: 280px;\\n\\n  .ant-card {\\n    height: 100%;\\n    box-shadow: 0 0 10px 1px #e9e9e9;\\n  }\\n\\n  .ant-card-head-title {\\n    text-align: center;\\n  }\\n\\n  .ant-form-item {\\n    margin-bottom: 8px;\\n  }\\n\\n  .panel {\\n    padding: 0px 8px;\\n  }\\n\\n  .xflow-canvas-root {\\n    margin: 0px 8px;\\n    box-shadow: 0 0 10px 1px #e9e9e9;\\n  }\\n\\n  .react-node {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 100%;\\n    height: 100%;\\n    border: 1px solid #873bf4;\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-config-form/demos/basic/index.tsx?dumi-raw-code\n/* harmony default export */ var demos_basicdumi_raw_code = ("import React from \'react\'\\nimport type { NsNodeCmd, NsGraph } from \'@antv/xflow\'\\nimport {\\n  XFlow,\\n  XFlowCanvas,\\n  JsonSchemaForm,\\n  createGraphConfig,\\n  NsJsonSchemaForm,\\n  XFlowNodeCommands,\\n} from \'@antv/xflow\'\\nimport { set } from \'lodash\'\\nimport { onLoad } from \'./graph-config\'\\nimport \'@antv/xflow/dist/index.css\';\\nimport \'./index.less\'\\n\\n/**  Demo Props  */\\nexport interface IDemoProps {\\n  anything: string\\n}\\n\\n/**  graphConfig\uff1a\u914d\u7f6eGraph  */\\nexport const useGraphConfig = createGraphConfig<IDemoProps>(graphConfig => {\\n  graphConfig.setDefaultNodeRender(props => {\\n    return <div className=\\"react-node\\"> {props.data.label} </div>\\n  })\\n})\\n\\nnamespace NsJsonForm {\\n  /** ControlShape\u7684Enum */\\n  const { ControlShape } = NsJsonSchemaForm\\n\\n  /** \u4fdd\u5b58form\u7684values */\\n  export const formValueUpdateService: NsJsonSchemaForm.IFormValueUpdateService = async args => {\\n    const { values, commandService, targetData } = args\\n    const updateNode = (node: NsGraph.INodeConfig) => {\\n      return commandService.executeCommand<NsNodeCmd.UpdateNode.IArgs>(\\n        XFlowNodeCommands.UPDATE_NODE.id,\\n        { nodeConfig: node },\\n      )\\n    }\\n    console.log(\'formValueUpdateService  values:\', values, args)\\n    const nodeConfig: NsGraph.INodeConfig = {\\n      ...targetData,\\n    }\\n    values.forEach(val => {\\n      set(nodeConfig, val.name, val.value)\\n    })\\n    updateNode(nodeConfig)\\n  }\\n\\n  /** \u6839\u636e\u9009\u4e2d\u7684\u8282\u70b9\u66f4\u65b0formSchema */\\n  export const formSchemaService: NsJsonSchemaForm.IFormSchemaService = async args => {\\n    const { targetData } = args\\n    console.log(`formSchemaService args:`, args)\\n    if (!targetData) {\\n      return {\\n        tabs: [\\n          {\\n            /** Tab\u7684title */\\n            name: \'\u753b\u5e03\u914d\u7f6e\',\\n            groups: [],\\n          },\\n        ],\\n      }\\n    }\\n\\n    return {\\n      /** \u914d\u7f6e\u4e00\u4e2aTab */\\n      tabs: [\\n        {\\n          /** Tab\u7684title */\\n          name: \'\u8282\u70b9\u914d\u7f6e\',\\n          groups: [\\n            {\\n              name: \'group1\',\\n              controls: [\\n                {\\n                  name: \'label\',\\n                  label: \'\u8282\u70b9Label\',\\n                  shape: ControlShape.INPUT,\\n                  value: targetData.label,\\n                },\\n                {\\n                  name: \'x\',\\n                  label: \'x\',\\n                  shape: ControlShape.FLOAT,\\n                  value: targetData.x,\\n                },\\n                {\\n                  name: \'y\',\\n                  label: \'y\',\\n                  shape: ControlShape.FLOAT,\\n                  value: targetData.y,\\n                },\\n              ],\\n            },\\n          ],\\n        },\\n      ],\\n    }\\n  }\\n}\\n\\nconst XFlowDemo: React.FC<IDemoProps> = props => {\\n  const graphConfig = useGraphConfig(props)\\n\\n  return (\\n    <XFlow onLoad={onLoad} className=\\"xflow-workspace\\">\\n      <XFlowCanvas config={graphConfig} position={{ top: 0, bottom: 0, left: 0, right: 290 }} />\\n      <JsonSchemaForm\\n        formSchemaService={NsJsonForm.formSchemaService}\\n        formValueUpdateService={NsJsonForm.formValueUpdateService}\\n        position={{ top: 0, bottom: 0, right: 0, width: 290 }}\\n      />\\n    </XFlow>\\n  )\\n}\\n\\nexport default XFlowDemo");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-config-form/demos/basic/graph-config.tsx?dumi-raw-code\n/* harmony default export */ var graph_configdumi_raw_code = ("import type { IAppLoad, NsGraphCmd } from \'@antv/xflow\'\\nimport { XFlowGraphCommands } from \'@antv/xflow\'\\nimport { getGraphData } from \'./mock\'\\n\\nexport const onLoad: IAppLoad = async app => {\\n  // \u8ba1\u7b97\u5e03\u5c40\\n  const res = await app.executeCommand<\\n    NsGraphCmd.GraphLayout.IArgs,\\n    NsGraphCmd.GraphLayout.IResult\\n  >(XFlowGraphCommands.GRAPH_LAYOUT.id, {\\n    layoutType: \'dagre\',\\n    layoutOptions: {\\n      type: \'dagre\',\\n      /** \u5e03\u5c40\u65b9\u5411 */\\n      rankdir: \'TB\',\\n      /** \u8282\u70b9\u95f4\u8ddd */\\n      nodesep: 60,\\n      /** \u5c42\u95f4\u8ddd */\\n      ranksep: 30,\\n    },\\n    graphData: getGraphData(),\\n  })\\n  const { graphData } = res.contextProvider().getResult()\\n  // render\\n  await app.executeCommand<NsGraphCmd.GraphRender.IArgs>(XFlowGraphCommands.GRAPH_RENDER.id, {\\n    graphData: graphData,\\n  })\\n  // \u5c45\u4e2d\\n  await app.executeCommand<NsGraphCmd.GraphZoom.IArgs>(XFlowGraphCommands.GRAPH_ZOOM.id, {\\n    factor: \'real\',\\n  })\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-config-form/demos/basic/mock.ts?dumi-raw-code\n/* harmony default export */ var demos_basic_mockdumi_raw_code = ("import type { NsGraph } from \'@antv/xflow\'\\nimport { uuidv4 } from \'@antv/xflow\'\\n\\n// NodeConfig\\nconst NODE_COMMON_PROPS = {\\n  width: 160,\\n  height: 32,\\n} as const\\n// NodeConfig\\nconst EDGE_COMMON_PROPS = {\\n  attrs: {\\n    line: {\\n      targetMarker: {\\n        name: \'block\',\\n        width: 4,\\n        height: 8,\\n      },\\n      strokeDasharray: \'\',\\n      stroke: \'#A2B1C3\',\\n      strokeWidth: 1,\\n    },\\n  },\\n} as const\\n\\n// mock data\\nexport const getGraphData = () => {\\n  const nodes: NsGraph.INodeConfig[] = [\\n    {\\n      id: \'node1\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-1\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node2\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-2\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node3\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-3\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node4\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-4\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n  ]\\n  const edges: NsGraph.IEdgeConfig[] = [\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node2\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node2-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node3\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node3-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node4\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node4-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n  ]\\n  return {\\n    nodes: nodes,\\n    edges: edges,\\n  } as NsGraph.IGraphData\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-config-form/demos/basic/index.less?dumi-raw-code\n/* harmony default export */ var canvas_config_form_demos_basicdumi_raw_code = ("@body-bg: #f9f9f9;\\n@primaryColor: #1890ff;\\n@light-border: 1px solid #d9d9d9;\\n\\n.json-form-demo {\\n  position: relative;\\n  border: @light-border;\\n  .__dumi-default-previewer-demo {\\n    padding: 16px 12px;\\n  }\\n\\n  .xflow-workspace {\\n    box-shadow: 0 0 10px 1px #e9e9e9;\\n  }\\n\\n  .xflow-x6-canvas {\\n    background: @body-bg;\\n  }\\n\\n  .xflow-canvas-root {\\n    margin: 0;\\n  }\\n\\n  .react-node {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 100%;\\n    height: 100%;\\n    padding: 0 16px;\\n    overflow: hidden;\\n    font-weight: 600;\\n    white-space: nowrap;\\n    text-overflow: ellipsis;\\n    background-color: #fff;\\n    border: 1px solid #873bf4;\\n    border-radius: 4px;\\n    &:hover {\\n      background-color: rgb(234, 219, 255) !important;\\n    }\\n  }\\n  .x6-node-selected {\\n    .react-node {\\n      background-color: rgb(254, 254, 255);\\n      border: 3px solid rgb(135, 59, 244);\\n      box-shadow: 0 0 3px 3px rgba(135, 59, 244, 0.2);\\n      &:hover {\\n        background-color: rgba(227, 244, 255, 0.45);\\n      }\\n    }\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-config-form/demos/custom-shape/index.tsx?dumi-raw-code\n/* harmony default export */ var custom_shapedumi_raw_code = ("import React from \'react\'\\nimport type { NsJsonSchemaForm } from \'@antv/xflow\'\\nimport { XFlow, XFlowCanvas, JsonSchemaForm, createGraphConfig } from \'@antv/xflow\'\\nimport { controlMapService, ControlShapeEnum } from \'./custom-shapes\'\\nimport { onLoad } from \'./graph-config\'\\nimport \'@antv/xflow/dist/index.css\';\\nimport \'./index.less\'\\n\\n/**  Demo Props  */\\nexport interface IDemoProps {\\n  anything: string\\n}\\n\\n/**  graphConfig\uff1a\u914d\u7f6eGraph  */\\nexport const useGraphConfig = createGraphConfig<IDemoProps>(graphConfig => {\\n  graphConfig.setDefaultNodeRender(props => {\\n    return <div className=\\"react-node\\"> {props.data.label} </div>\\n  })\\n})\\n\\nnamespace NsJsonForm {\\n  /** \u6839\u636e\u9009\u4e2d\u7684\u8282\u70b9\u66f4\u65b0formSchema */\\n  export const formSchemaService: NsJsonSchemaForm.IFormSchemaService = async args => {\\n    const { targetData } = args\\n    console.log(`formSchemaService args:`, args)\\n    if (!targetData) {\\n      return {\\n        tabs: [\\n          {\\n            /** Tab\u7684title */\\n            name: \'\u753b\u5e03\u914d\u7f6e\',\\n            groups: [\\n              {\\n                name: \'group1\',\\n                controls: [\\n                  {\\n                    name: \'link\',\\n                    label: \'\u8fd9\u662f\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684Shape\',\\n                    shape: ControlShapeEnum.LINK_SHAPE,\\n                  },\\n                  {\\n                    name: \'graph-json\',\\n                    label: \'\u81ea\u5b9a\u4e49Shape: \u5c55\u793aGraph\u7684JSON\u6570\u636e\',\\n                    shape: ControlShapeEnum.EDITOR_SHAPE,\\n                  },\\n                ],\\n              },\\n            ],\\n          },\\n        ],\\n      }\\n    }\\n\\n    return {\\n      /** \u914d\u7f6e\u4e00\u4e2aTab */\\n      tabs: [\\n        {\\n          /** Tab\u7684title */\\n          name: \'\u8282\u70b9\u914d\u7f6e\',\\n          groups: [],\\n        },\\n      ],\\n    }\\n  }\\n}\\n\\nconst XFlowDemo: React.FC<IDemoProps> = props => {\\n  const graphConfig = useGraphConfig(props)\\n\\n  return (\\n    <XFlow onLoad={onLoad} className=\\"xflow-workspace\\">\\n      <XFlowCanvas config={graphConfig} position={{ top: 0, bottom: 0, left: 0, right: 290 }} />\\n      <JsonSchemaForm\\n        controlMapService={controlMapService}\\n        formSchemaService={NsJsonForm.formSchemaService}\\n        footerPosition={{ bottom: 0, left: 0, right: 0, height: 0 }}\\n        position={{ top: 0, bottom: 0, right: 0, width: 290 }}\\n      />\\n    </XFlow>\\n  )\\n}\\n\\nexport default XFlowDemo");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-config-form/demos/custom-shape/custom-shapes/index.tsx?dumi-raw-code\n/* harmony default export */ var custom_shapesdumi_raw_code = ("import type { NsJsonSchemaForm } from \'@antv/xflow-extension\'\\nimport { EditorShape } from \'./custom-editor\'\\nimport { LinkShape } from \'./custom-link\'\\n\\n/** \u81ea\u5b9a\u4e49form\u63a7\u4ef6 */\\nexport enum ControlShapeEnum {\\n  \'EDITOR_SHAPE\' = \'EDITOR\',\\n  \'LINK_SHAPE\' = \'LINKSHAPE\',\\n}\\n\\nexport const controlMapService: NsJsonSchemaForm.IControlMapService = controlMap => {\\n  controlMap.set(ControlShapeEnum.EDITOR_SHAPE, EditorShape)\\n  controlMap.set(ControlShapeEnum.LINK_SHAPE, LinkShape)\\n  return controlMap\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-config-form/demos/custom-shape/custom-shapes/custom-editor.tsx?dumi-raw-code\n/* harmony default export */ var custom_editordumi_raw_code = ("import { useXFlowApp, MODELS, XFlowGraphCommands } from \'@antv/xflow\'\\nimport { FormItemWrapper } from \'@antv/xflow-extension\'\\nimport type { NsJsonSchemaForm, NsGraphCmd } from \'@antv/xflow\'\\nimport { Form, Input } from \'antd\'\\nimport React from \'react\'\\n\\ninterface IEditorProps extends NsJsonSchemaForm.IFormItemProps {\\n  controlSchema: NsJsonSchemaForm.IControlSchema\\n  placeholder?: string\\n  disabled: boolean\\n}\\n\\nconst Editor: React.FC<IEditorProps> = props => {\\n  const { placeholder, disabled, onChange, value } = props\\n  const { commandService, modelService } = useXFlowApp()\\n  React.useEffect(() => {\\n    commandService.executeCommand<NsGraphCmd.SaveGraphData.IArgs>(\\n      XFlowGraphCommands.SAVE_GRAPH_DATA.id,\\n      {\\n        saveGraphDataService: async (meta, graph) => {\\n          /** \u5f53\u524d\u9009\u4e2d\u8282\u70b9\u6570\u636e */\\n          const nodes = await MODELS.SELECTED_NODES.useValue(modelService)\\n          console.log(graph)\\n          /** \u62ff\u5230\u6570\u636e\uff0c\u89e6\u53d1onChange*/\\n          onChange(JSON.stringify(graph))\\n          return { err: null, data: graph, meta }\\n        },\\n      },\\n    )\\n  })\\n\\n  return <Input.TextArea value={value} placeholder={placeholder} disabled={disabled} rows={10} />\\n}\\n\\nexport const EditorShape: React.FC<NsJsonSchemaForm.IControlProps> = props => {\\n  const { controlSchema } = props\\n  const { required, tooltip, extra, name, label, placeholder } = controlSchema\\n\\n  return (\\n    <FormItemWrapper schema={controlSchema}>\\n      {({ disabled, hidden, initialValue }) => {\\n        return (\\n          <Form.Item\\n            name={name}\\n            label={label}\\n            initialValue={initialValue}\\n            tooltip={tooltip}\\n            extra={extra}\\n            required={required}\\n            hidden={hidden}\\n          >\\n            {/* \u8fd9\u91cc\u7684\u7ec4\u4ef6\u53ef\u4ee5\u62ff\u5230onChange\u548cvalue */}\\n            <Editor controlSchema={controlSchema} placeholder={placeholder} disabled={disabled} />\\n          </Form.Item>\\n        )\\n      }}\\n    </FormItemWrapper>\\n  )\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-config-form/demos/custom-shape/custom-shapes/custom-link.tsx?dumi-raw-code\n/* harmony default export */ var custom_linkdumi_raw_code = ("import type { NsJsonSchemaForm } from \'@antv/xflow\'\\nimport React from \'react\'\\n\\nexport const LinkShape: React.FC<NsJsonSchemaForm.IControlProps> = props => {\\n  const { controlSchema } = props\\n  return (\\n    <div style={{ padding: \'8px 0px\', marginBottom: \'8px\' }}>\\n      <a href={controlSchema.value as string} target=\\"_blank\\">\\n        {controlSchema.label}\\n      </a>\\n    </div>\\n  )\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-config-form/demos/custom-shape/graph-config.tsx?dumi-raw-code\n/* harmony default export */ var custom_shape_graph_configdumi_raw_code = ("import type { IAppLoad, NsGraphCmd } from \'@antv/xflow\'\\nimport { XFlowGraphCommands } from \'@antv/xflow\'\\nimport { getGraphData } from \'./mock\'\\n\\nexport const onLoad: IAppLoad = async app => {\\n  // \u8ba1\u7b97\u5e03\u5c40\\n  const res = await app.executeCommand<\\n    NsGraphCmd.GraphLayout.IArgs,\\n    NsGraphCmd.GraphLayout.IResult\\n  >(XFlowGraphCommands.GRAPH_LAYOUT.id, {\\n    layoutType: \'dagre\',\\n    layoutOptions: {\\n      type: \'dagre\',\\n      /** \u5e03\u5c40\u65b9\u5411 */\\n      rankdir: \'TB\',\\n      /** \u8282\u70b9\u95f4\u8ddd */\\n      nodesep: 60,\\n      /** \u5c42\u95f4\u8ddd */\\n      ranksep: 30,\\n    },\\n    graphData: getGraphData(),\\n  })\\n  const { graphData } = res.contextProvider().getResult()\\n  // render\\n  await app.executeCommand<NsGraphCmd.GraphRender.IArgs>(XFlowGraphCommands.GRAPH_RENDER.id, {\\n    graphData: graphData,\\n  })\\n  // \u5c45\u4e2d\\n  await app.executeCommand<NsGraphCmd.GraphZoom.IArgs>(XFlowGraphCommands.GRAPH_ZOOM.id, {\\n    factor: \'real\',\\n  })\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-config-form/demos/custom-shape/mock.ts?dumi-raw-code\n/* harmony default export */ var custom_shape_mockdumi_raw_code = ("import type { NsGraph } from \'@antv/xflow\'\\nimport { uuidv4 } from \'@antv/xflow\'\\n\\n// NodeConfig\\nconst NODE_COMMON_PROPS = {\\n  width: 160,\\n  height: 32,\\n} as const\\n// NodeConfig\\nconst EDGE_COMMON_PROPS = {\\n  attrs: {\\n    line: {\\n      targetMarker: {\\n        name: \'block\',\\n        width: 4,\\n        height: 8,\\n      },\\n      strokeDasharray: \'\',\\n      stroke: \'#A2B1C3\',\\n      strokeWidth: 1,\\n    },\\n  },\\n} as const\\n\\n// mock data\\nexport const getGraphData = () => {\\n  const nodes: NsGraph.INodeConfig[] = [\\n    {\\n      id: \'node1\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-1\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node2\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-2\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node3\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-3\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node4\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-4\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n  ]\\n  const edges: NsGraph.IEdgeConfig[] = [\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node2\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node2-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node3\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node3-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node4\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node4-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n  ]\\n  return {\\n    nodes: nodes,\\n    edges: edges,\\n  } as NsGraph.IGraphData\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-config-form/demos/custom-shape/index.less?dumi-raw-code\n/* harmony default export */ var demos_custom_shapedumi_raw_code = ("@body-bg: #f9f9f9;\\n@primaryColor: #1890ff;\\n@light-border: 1px solid #d9d9d9;\\n\\n.json-form-demo {\\n  position: relative;\\n  border: @light-border;\\n  .__dumi-default-previewer-demo {\\n    padding: 16px 12px;\\n  }\\n\\n  .xflow-workspace {\\n    box-shadow: 0 0 10px 1px #e9e9e9;\\n  }\\n\\n  .xflow-x6-canvas {\\n    background: @body-bg;\\n  }\\n\\n  .xflow-canvas-root {\\n    margin: 0;\\n  }\\n\\n  .custom-form-component {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    height: 100%;\\n    font-weight: 500;\\n    font-size: 16px;\\n  }\\n\\n  .react-node {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 100%;\\n    height: 100%;\\n    padding: 0 16px;\\n    overflow: hidden;\\n    font-weight: 600;\\n    white-space: nowrap;\\n    text-overflow: ellipsis;\\n    background-color: #fff;\\n    border: 1px solid #873bf4;\\n    border-radius: 4px;\\n    &:hover {\\n      background-color: rgb(234, 219, 255) !important;\\n    }\\n  }\\n  .x6-node-selected {\\n    .react-node {\\n      background-color: rgb(254, 254, 255);\\n      border: 3px solid rgb(135, 59, 244);\\n      box-shadow: 0 0 3px 3px rgba(135, 59, 244, 0.2);\\n      &:hover {\\n        background-color: rgba(227, 244, 255, 0.45);\\n      }\\n    }\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-config-form/demos/target-type/index.tsx?dumi-raw-code\n/* harmony default export */ var target_typedumi_raw_code = ("import React from \'react\'\\nimport type { NsNodeCmd, NsEdgeCmd, NsGraph } from \'@antv/xflow\'\\nimport {\\n  XFlow,\\n  XFlowCanvas,\\n  JsonSchemaForm,\\n  createGraphConfig,\\n  NsJsonSchemaForm,\\n  XFlowNodeCommands,\\n  XFlowEdgeCommands,\\n} from \'@antv/xflow\'\\nimport { set } from \'lodash\'\\nimport { onLoad } from \'./graph-config\'\\nimport \'@antv/xflow/dist/index.css\'\\nimport \'./index.less\'\\n\\n/**  Demo Props  */\\nexport interface IDemoProps {\\n  anything: string\\n}\\n\\n/**  graphConfig\uff1a\u914d\u7f6eGraph  */\\nexport const useGraphConfig = createGraphConfig<IDemoProps>(graphConfig => {\\n  graphConfig.setDefaultNodeRender(props => {\\n    return <div className=\\"react-node\\"> {props.data.label} </div>\\n  })\\n})\\n\\nnamespace NsJsonForm {\\n  /** ControlShape\u7684Enum */\\n  const { ControlShape } = NsJsonSchemaForm\\n\\n  /** \u4fdd\u5b58form\u7684values */\\n  export const formValueUpdateService: NsJsonSchemaForm.IFormValueUpdateService = async args => {\\n    const { values, commandService, targetData } = args\\n    const updateNode = (node: NsGraph.INodeConfig) => {\\n      return commandService.executeCommand<NsNodeCmd.UpdateNode.IArgs>(\\n        XFlowNodeCommands.UPDATE_NODE.id,\\n        { nodeConfig: node },\\n      )\\n    }\\n    const updateEdge = (edge: NsGraph.IEdgeConfig) => {\\n      return commandService.executeCommand<NsEdgeCmd.UpdateEdge.IArgs>(\\n        XFlowEdgeCommands.UPDATE_EDGE.id,\\n        { edgeConfig: edge },\\n      )\\n    }\\n    const data = {\\n      ...targetData,\\n    }\\n    values.forEach(val => {\\n      set(data, val.name, val.value)\\n    })\\n    console.log(\'formValueUpdateService  values:\', values, data)\\n    if (args.targetType === \'edge\') {\\n      updateEdge(data as NsGraph.IEdgeConfig)\\n    } else if (args.targetType === \'node\') {\\n      updateNode(data as NsGraph.INodeConfig)\\n    }\\n  }\\n\\n  /** \u6839\u636e\u9009\u4e2d\u7684\u8282\u70b9\u66f4\u65b0formSchema */\\n  export const formSchemaService: NsJsonSchemaForm.IFormSchemaService = async args => {\\n    const { targetData, targetType } = args\\n    console.log(`formSchemaService args:`, args)\\n    if (!targetData) {\\n      return {\\n        tabs: [\\n          {\\n            /** Tab\u7684title */\\n            name: \'\u753b\u5e03\u914d\u7f6e\',\\n            groups: [],\\n          },\\n        ],\\n      }\\n    }\\n    if (targetType === \'edge\') {\\n      return {\\n        /** \u914d\u7f6e\u4e00\u4e2aTab */\\n        tabs: [\\n          {\\n            /** Tab\u7684title */\\n            name: \'\u8fb9\u914d\u7f6e\',\\n            groups: [\\n              {\\n                name: \'group1\',\\n                controls: [\\n                  {\\n                    name: \'label\',\\n                    label: \'Edge Label\',\\n                    shape: ControlShape.INPUT,\\n                    value: targetData.label,\\n                  },\\n                ],\\n              },\\n            ],\\n          },\\n        ],\\n      }\\n    }\\n\\n    return {\\n      /** \u914d\u7f6e\u4e00\u4e2aTab */\\n      tabs: [\\n        {\\n          /** Tab\u7684title */\\n          name: \'\u8282\u70b9\u914d\u7f6e\',\\n          groups: [\\n            {\\n              name: \'group1\',\\n              controls: [\\n                {\\n                  name: \'label\',\\n                  label: \'\u8282\u70b9Label\',\\n                  shape: ControlShape.INPUT,\\n                  value: targetData.label,\\n                },\\n                {\\n                  name: \'x\',\\n                  label: \'x\',\\n                  shape: ControlShape.FLOAT,\\n                  value: targetData.x,\\n                },\\n                {\\n                  name: \'y\',\\n                  label: \'y\',\\n                  shape: ControlShape.FLOAT,\\n                  value: targetData.y,\\n                },\\n              ],\\n            },\\n          ],\\n        },\\n      ],\\n    }\\n  }\\n}\\n\\nconst XFlowDemo: React.FC<IDemoProps> = props => {\\n  const graphConfig = useGraphConfig(props)\\n\\n  return (\\n    <XFlow onLoad={onLoad} className=\\"xflow-workspace\\">\\n      <XFlowCanvas config={graphConfig} position={{ top: 0, bottom: 0, left: 0, right: 290 }} />\\n      <JsonSchemaForm\\n        targetType={[\'node\', \'edge\', \'canvas\']}\\n        formSchemaService={NsJsonForm.formSchemaService}\\n        formValueUpdateService={NsJsonForm.formValueUpdateService}\\n        position={{ top: 0, bottom: 0, right: 0, width: 290 }}\\n      />\\n    </XFlow>\\n  )\\n}\\n\\nexport default XFlowDemo");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-config-form/demos/target-type/graph-config.tsx?dumi-raw-code\n/* harmony default export */ var target_type_graph_configdumi_raw_code = ("import type { IAppLoad, NsGraphCmd } from \'@antv/xflow\'\\nimport { XFlowGraphCommands } from \'@antv/xflow\'\\nimport { getGraphData } from \'./mock\'\\n\\nexport const onLoad: IAppLoad = async app => {\\n  // \u8ba1\u7b97\u5e03\u5c40\\n  const res = await app.executeCommand<\\n    NsGraphCmd.GraphLayout.IArgs,\\n    NsGraphCmd.GraphLayout.IResult\\n  >(XFlowGraphCommands.GRAPH_LAYOUT.id, {\\n    layoutType: \'dagre\',\\n    layoutOptions: {\\n      type: \'dagre\',\\n      /** \u5e03\u5c40\u65b9\u5411 */\\n      rankdir: \'TB\',\\n      /** \u8282\u70b9\u95f4\u8ddd */\\n      nodesep: 60,\\n      /** \u5c42\u95f4\u8ddd */\\n      ranksep: 30,\\n    },\\n    graphData: getGraphData(),\\n  })\\n  const { graphData } = res.contextProvider().getResult()\\n  // render\\n  await app.executeCommand<NsGraphCmd.GraphRender.IArgs>(XFlowGraphCommands.GRAPH_RENDER.id, {\\n    graphData: graphData,\\n  })\\n  // \u5c45\u4e2d\\n  await app.executeCommand<NsGraphCmd.GraphZoom.IArgs>(XFlowGraphCommands.GRAPH_ZOOM.id, {\\n    factor: \'real\',\\n  })\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-config-form/demos/target-type/mock.ts?dumi-raw-code\n/* harmony default export */ var target_type_mockdumi_raw_code = ("import type { NsGraph } from \'@antv/xflow\'\\nimport { uuidv4 } from \'@antv/xflow\'\\n\\n// NodeConfig\\nconst NODE_COMMON_PROPS = {\\n  width: 160,\\n  height: 32,\\n} as const\\n// NodeConfig\\nconst EDGE_COMMON_PROPS = {\\n  attrs: {\\n    line: {\\n      targetMarker: {\\n        name: \'block\',\\n        width: 4,\\n        height: 8,\\n      },\\n      strokeDasharray: \'\',\\n      stroke: \'#A2B1C3\',\\n      strokeWidth: 1,\\n    },\\n  },\\n} as const\\n\\n// mock data\\nexport const getGraphData = () => {\\n  const nodes: NsGraph.INodeConfig[] = [\\n    {\\n      id: \'node1\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-1\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node2\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-2\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node3\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-3\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node4\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-4\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n  ]\\n  const edges: NsGraph.IEdgeConfig[] = [\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node2\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node2-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node3\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node3-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node4\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node4-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n  ]\\n  return {\\n    nodes: nodes,\\n    edges: edges,\\n  } as NsGraph.IGraphData\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-config-form/demos/target-type/index.less?dumi-raw-code\n/* harmony default export */ var demos_target_typedumi_raw_code = ("@body-bg: #f9f9f9;\\n@primaryColor: #1890ff;\\n@light-border: 1px solid #d9d9d9;\\n\\n.json-form-demo {\\n  position: relative;\\n  border: @light-border;\\n  .__dumi-default-previewer-demo {\\n    padding: 16px 12px;\\n  }\\n\\n  .xflow-workspace {\\n    box-shadow: 0 0 10px 1px #e9e9e9;\\n  }\\n\\n  .xflow-x6-canvas {\\n    background: @body-bg;\\n  }\\n\\n  .xflow-canvas-root {\\n    margin: 0;\\n  }\\n\\n  .react-node {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 100%;\\n    height: 100%;\\n    padding: 0 16px;\\n    overflow: hidden;\\n    font-weight: 600;\\n    white-space: nowrap;\\n    text-overflow: ellipsis;\\n    background-color: #fff;\\n    border: 1px solid #873bf4;\\n    border-radius: 4px;\\n    &:hover {\\n      background-color: rgb(234, 219, 255) !important;\\n    }\\n  }\\n  .x6-node-selected {\\n    .react-node {\\n      background-color: rgb(254, 254, 255);\\n      border: 3px solid rgb(135, 59, 244);\\n      box-shadow: 0 0 3px 3px rgba(135, 59, 244, 0.2);\\n      &:hover {\\n        background-color: rgba(227, 244, 255, 0.45);\\n      }\\n    }\\n  }\\n  .x6-edge {\\n    &.x6-edge-selected {\\n      path:nth-child(2) {\\n        stroke: #873bf4;\\n        stroke-width: 2px;\\n      }\\n    }\\n    &:hover {\\n      path:nth-child(2) {\\n        stroke: #873bf4;\\n        stroke-width: 2px;\\n      }\\n    }\\n    &.hoverHighlight {\\n      path:nth-child(2) {\\n        stroke: #873bf4;\\n        stroke-width: 2px;\\n      }\\n    }\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-config-form/demos/custom-render/index.tsx?dumi-raw-code\n/* harmony default export */ var custom_renderdumi_raw_code = ("import React from \'react\'\\nimport type { NsNodeCmd, NsGraph } from \'@antv/xflow\'\\nimport {\\n  XFlow,\\n  XFlowCanvas,\\n  JsonSchemaForm,\\n  createGraphConfig,\\n  NsJsonSchemaForm,\\n  XFlowNodeCommands,\\n} from \'@antv/xflow\'\\nimport { set } from \'lodash\'\\nimport { onLoad } from \'./graph-config\'\\nimport \'@antv/xflow/dist/index.css\';\\nimport \'./index.less\'\\n\\n/**  Demo Props  */\\nexport interface IDemoProps {\\n  anything: string\\n}\\n\\n/**  graphConfig\uff1a\u914d\u7f6eGraph  */\\nexport const useGraphConfig = createGraphConfig<IDemoProps>(graphConfig => {\\n  graphConfig.setDefaultNodeRender(props => {\\n    return <div className=\\"react-node\\"> {props.data.label} </div>\\n  })\\n})\\n\\nnamespace NsJsonForm {\\n  /** ControlShape\u7684Enum */\\n  const { ControlShape } = NsJsonSchemaForm\\n\\n  /** \u4fdd\u5b58form\u7684values */\\n  export const formValueUpdateService: NsJsonSchemaForm.IFormValueUpdateService = async args => {\\n    const { values, commandService, targetData } = args\\n    const updateNode = (node: NsGraph.INodeConfig) => {\\n      return commandService.executeCommand<NsNodeCmd.UpdateNode.IArgs>(\\n        XFlowNodeCommands.UPDATE_NODE.id,\\n        { nodeConfig: node },\\n      )\\n    }\\n    console.log(\'formValueUpdateService  values:\', values)\\n    const nodeConfig: NsGraph.INodeConfig = {\\n      ...targetData,\\n    }\\n    values.forEach(val => {\\n      set(nodeConfig, val.name, val.value)\\n    })\\n    updateNode(nodeConfig)\\n  }\\n\\n  export const getCustomRenderComponent: NsJsonSchemaForm.ICustomRender = (\\n    targetType,\\n    targetData,\\n  ) => {\\n    console.log(targetType, targetData)\\n    if (targetType === \'node\') {\\n      return () => (\\n        <div className=\\"custom-form-component\\"> node: {targetData.label} custom componnet </div>\\n      )\\n    }\\n    if (targetType === \'canvas\') {\\n      return () => <div className=\\"custom-form-component\\"> canvas custom componnet </div>\\n    }\\n  }\\n\\n  /** \u6839\u636e\u9009\u4e2d\u7684\u8282\u70b9\u66f4\u65b0formSchema */\\n  export const formSchemaService: NsJsonSchemaForm.IFormSchemaService = async args => {\\n    const { targetData } = args\\n    console.log(`formSchemaService args:`, args)\\n    if (!targetData) {\\n      return {\\n        tabs: [\\n          {\\n            /** Tab\u7684title */\\n            name: \'\u753b\u5e03\u914d\u7f6e\',\\n            groups: [],\\n          },\\n        ],\\n      }\\n    }\\n\\n    return {\\n      /** \u914d\u7f6e\u4e00\u4e2aTab */\\n      tabs: [\\n        {\\n          /** Tab\u7684title */\\n          name: \'\u8282\u70b9\u914d\u7f6e\',\\n          groups: [\\n            {\\n              name: \'group1\',\\n              controls: [\\n                {\\n                  name: \'label\',\\n                  label: \'\u8282\u70b9Label\',\\n                  shape: ControlShape.INPUT,\\n                  value: targetData.label,\\n                },\\n                {\\n                  name: \'x\',\\n                  label: \'x\',\\n                  shape: ControlShape.FLOAT,\\n                  value: targetData.x,\\n                },\\n                {\\n                  name: \'y\',\\n                  label: \'y\',\\n                  shape: ControlShape.FLOAT,\\n                  value: targetData.y,\\n                },\\n              ],\\n            },\\n          ],\\n        },\\n      ],\\n    }\\n  }\\n}\\n\\nconst XFlowDemo: React.FC<IDemoProps> = props => {\\n  const graphConfig = useGraphConfig(props)\\n\\n  return (\\n    <XFlow onLoad={onLoad} className=\\"xflow-workspace\\">\\n      <XFlowCanvas config={graphConfig} position={{ top: 0, bottom: 0, left: 0, right: 290 }} />\\n      <JsonSchemaForm\\n        formSchemaService={NsJsonForm.formSchemaService}\\n        getCustomRenderComponent={NsJsonForm.getCustomRenderComponent}\\n        position={{ top: 0, bottom: 0, right: 0, width: 290 }}\\n      />\\n    </XFlow>\\n  )\\n}\\n\\nexport default XFlowDemo");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-config-form/demos/custom-render/graph-config.tsx?dumi-raw-code\n/* harmony default export */ var custom_render_graph_configdumi_raw_code = ("import type { IAppLoad, NsGraphCmd } from \'@antv/xflow\'\\nimport { XFlowGraphCommands } from \'@antv/xflow\'\\nimport { getGraphData } from \'./mock\'\\n\\nexport const onLoad: IAppLoad = async app => {\\n  // \u8ba1\u7b97\u5e03\u5c40\\n  const res = await app.executeCommand<\\n    NsGraphCmd.GraphLayout.IArgs,\\n    NsGraphCmd.GraphLayout.IResult\\n  >(XFlowGraphCommands.GRAPH_LAYOUT.id, {\\n    layoutType: \'dagre\',\\n    layoutOptions: {\\n      type: \'dagre\',\\n      /** \u5e03\u5c40\u65b9\u5411 */\\n      rankdir: \'TB\',\\n      /** \u8282\u70b9\u95f4\u8ddd */\\n      nodesep: 60,\\n      /** \u5c42\u95f4\u8ddd */\\n      ranksep: 30,\\n    },\\n    graphData: getGraphData(),\\n  })\\n  const { graphData } = res.contextProvider().getResult()\\n  // render\\n  await app.executeCommand<NsGraphCmd.GraphRender.IArgs>(XFlowGraphCommands.GRAPH_RENDER.id, {\\n    graphData: graphData,\\n  })\\n  // \u5c45\u4e2d\\n  await app.executeCommand<NsGraphCmd.GraphZoom.IArgs>(XFlowGraphCommands.GRAPH_ZOOM.id, {\\n    factor: \'real\',\\n  })\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-config-form/demos/custom-render/mock.ts?dumi-raw-code\n/* harmony default export */ var custom_render_mockdumi_raw_code = ("import type { NsGraph } from \'@antv/xflow\'\\nimport { uuidv4 } from \'@antv/xflow\'\\n\\n// NodeConfig\\nconst NODE_COMMON_PROPS = {\\n  width: 160,\\n  height: 32,\\n} as const\\n// NodeConfig\\nconst EDGE_COMMON_PROPS = {\\n  attrs: {\\n    line: {\\n      targetMarker: {\\n        name: \'block\',\\n        width: 4,\\n        height: 8,\\n      },\\n      strokeDasharray: \'\',\\n      stroke: \'#A2B1C3\',\\n      strokeWidth: 1,\\n    },\\n  },\\n} as const\\n\\n// mock data\\nexport const getGraphData = () => {\\n  const nodes: NsGraph.INodeConfig[] = [\\n    {\\n      id: \'node1\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-1\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node2\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-2\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node3\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-3\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node4\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-4\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n  ]\\n  const edges: NsGraph.IEdgeConfig[] = [\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node2\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node2-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node3\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node3-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node4\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node4-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n  ]\\n  return {\\n    nodes: nodes,\\n    edges: edges,\\n  } as NsGraph.IGraphData\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-config-form/demos/custom-render/index.less?dumi-raw-code\n/* harmony default export */ var demos_custom_renderdumi_raw_code = ("@body-bg: #f9f9f9;\\n@primaryColor: #1890ff;\\n@light-border: 1px solid #d9d9d9;\\n\\n.json-form-demo {\\n  position: relative;\\n  border: @light-border;\\n  .__dumi-default-previewer-demo {\\n    padding: 16px 12px;\\n  }\\n\\n  .xflow-workspace {\\n    box-shadow: 0 0 10px 1px #e9e9e9;\\n  }\\n\\n  .xflow-x6-canvas {\\n    background: @body-bg;\\n  }\\n\\n  .xflow-canvas-root {\\n    margin: 0;\\n  }\\n\\n  .react-node {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 100%;\\n    height: 100%;\\n    padding: 0 16px;\\n    overflow: hidden;\\n    font-weight: 600;\\n    white-space: nowrap;\\n    text-overflow: ellipsis;\\n    background-color: #fff;\\n    border: 1px solid #873bf4;\\n    border-radius: 4px;\\n    &:hover {\\n      background-color: rgb(234, 219, 255) !important;\\n    }\\n  }\\n  .x6-node-selected {\\n    .react-node {\\n      background-color: rgb(254, 254, 255);\\n      border: 3px solid rgb(135, 59, 244);\\n      box-shadow: 0 0 3px 3px rgba(135, 59, 244, 0.2);\\n      &:hover {\\n        background-color: rgba(227, 244, 255, 0.45);\\n      }\\n    }\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-keybinding/demos/basic/index.tsx?dumi-raw-code\n/* harmony default export */ var canvas_keybinding_demos_basicdumi_raw_code = ("import React from \'react\'\\nimport type { IAppLoad, NsGraphCmd } from \'@antv/xflow\'\\nimport {\\n  XFlow,\\n  XFlowCanvas,\\n  KeyBindings,\\n  XFlowGraphCommands,\\n  createGraphConfig,\\n  createKeybindingConfig,\\n} from \'@antv/xflow\'\\nimport \'@antv/xflow/dist/index.css\';\\nimport { getGraphData } from \'./mock\'\\nimport \'./index.less\'\\n\\n/**  Demo Props  */\\nexport interface IDemoProps {\\n  anything: string\\n}\\n\\n/**  graphConfig\uff1a\u914d\u7f6eGraph  */\\nexport const useGraphConfig = createGraphConfig<IDemoProps>(graphConfig => {\\n  graphConfig.setDefaultNodeRender(props => {\\n    return <div className=\\"react-node\\"> {props.data.label} </div>\\n  })\\n})\\n\\n/**  keybindings  */\\nexport const useKeybindingConfig = createKeybindingConfig(config => {\\n  config.setKeybindingFunc(reg => {\\n    return reg.registerKeybinding([\\n      {\\n        id: \'basic\',\\n        keybinding: [\'command+c\', \'ctrl+c\'],\\n        callback: async function (item, modelService, cmd, e) {\\n          console.log(\'keyboard event is triggered\', e)\\n        },\\n      },\\n    ])\\n  })\\n})\\n\\nconst XFlowDemo: React.FC<IDemoProps> = props => {\\n  const graphConfig = useGraphConfig(props)\\n  const keybindingConfig = useKeybindingConfig(props)\\n\\n  const onLoad: IAppLoad = async app => {\\n    // \u8ba1\u7b97\u5e03\u5c40\\n    const res = await app.executeCommand<\\n      NsGraphCmd.GraphLayout.IArgs,\\n      NsGraphCmd.GraphLayout.IResult\\n    >(XFlowGraphCommands.GRAPH_LAYOUT.id, {\\n      layoutType: \'dagre\',\\n      layoutOptions: {\\n        type: \'dagre\',\\n        /** \u5e03\u5c40\u65b9\u5411 */\\n        rankdir: \'TB\',\\n        /** \u8282\u70b9\u95f4\u8ddd */\\n        nodesep: 60,\\n        /** \u5c42\u95f4\u8ddd */\\n        ranksep: 30,\\n      },\\n      graphData: getGraphData(),\\n    })\\n    const { graphData } = res.contextProvider().getResult()\\n    // render\\n    await app.executeCommand<NsGraphCmd.GraphRender.IArgs>(XFlowGraphCommands.GRAPH_RENDER.id, {\\n      graphData: graphData,\\n    })\\n    // \u5c45\u4e2d\\n    await app.executeCommand<NsGraphCmd.GraphZoom.IArgs>(XFlowGraphCommands.GRAPH_ZOOM.id, {\\n      factor: \'real\',\\n    })\\n  }\\n\\n  return (\\n    <XFlow onLoad={onLoad} className=\\"xflow-workspace\\">\\n      <XFlowCanvas config={graphConfig} position={{ top: 0, bottom: 0, left: 0, right: 0 }}>\\n        <KeyBindings config={keybindingConfig} />\\n      </XFlowCanvas>\\n    </XFlow>\\n  )\\n}\\n\\nexport default XFlowDemo");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-keybinding/demos/basic/mock.ts?dumi-raw-code\n/* harmony default export */ var canvas_keybinding_demos_basic_mockdumi_raw_code = ("import type { NsGraph } from \'@antv/xflow\'\\nimport { uuidv4 } from \'@antv/xflow\'\\n\\n// NodeConfig\\nconst NODE_COMMON_PROPS = {\\n  width: 160,\\n  height: 32,\\n} as const\\n// NodeConfig\\nconst EDGE_COMMON_PROPS = {\\n  attrs: {\\n    line: {\\n      targetMarker: {\\n        name: \'block\',\\n        width: 4,\\n        height: 8,\\n      },\\n      strokeDasharray: \'\',\\n      stroke: \'#A2B1C3\',\\n      strokeWidth: 1,\\n    },\\n  },\\n} as const\\n\\n// mock data\\nexport const getGraphData = () => {\\n  const nodes: NsGraph.INodeConfig[] = [\\n    {\\n      id: \'node1\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-1\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node2\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-2\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node3\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-3\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node4\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-4\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n  ]\\n  const edges: NsGraph.IEdgeConfig[] = [\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node2\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node2-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node3\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node3-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node4\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node4-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n  ]\\n  return {\\n    nodes: nodes,\\n    edges: edges,\\n  } as NsGraph.IGraphData\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-keybinding/demos/basic/index.less?dumi-raw-code\n/* harmony default export */ var extension_components_canvas_keybinding_demos_basicdumi_raw_code = ("@body-bg: #f9f9f9;\\n@primaryColor: #1890ff;\\n@light-border: 1px solid #d9d9d9;\\n\\n.keyboard-basic-demo {\\n  position: relative;\\n  border: @light-border;\\n  .__dumi-default-previewer-demo {\\n    padding: 16px 12px;\\n  }\\n\\n  .xflow-workspace {\\n    box-shadow: 0 0 10px 1px #e9e9e9;\\n  }\\n\\n  .xflow-x6-canvas {\\n    background: @body-bg;\\n  }\\n\\n  .xflow-canvas-root {\\n    margin: 0;\\n  }\\n\\n  .react-node {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 100%;\\n    height: 100%;\\n    padding: 0 16px;\\n    overflow: hidden;\\n    font-weight: 600;\\n    white-space: nowrap;\\n    text-overflow: ellipsis;\\n    background-color: #fff;\\n    border: 1px solid #873bf4;\\n    border-radius: 4px;\\n    &:hover {\\n      background-color: rgb(234, 219, 255) !important;\\n    }\\n  }\\n  .x6-node-selected {\\n    .react-node {\\n      background-color: rgb(254, 254, 255);\\n      border: 3px solid rgb(135, 59, 244);\\n      box-shadow: 0 0 3px 3px rgba(135, 59, 244, 0.2);\\n      &:hover {\\n        background-color: rgba(227, 244, 255, 0.45);\\n      }\\n    }\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-keybinding/demos/command/index.tsx?dumi-raw-code\n/* harmony default export */ var commanddumi_raw_code = ("import React from \'react\'\\nimport type { IAppLoad, NsGraphCmd, NsEdgeCmd, NsNodeCmd } from \'@antv/xflow\'\\nimport {\\n  XFlow,\\n  XFlowCanvas,\\n  KeyBindings,\\n  MODELS,\\n  XFlowGraphCommands,\\n  XFlowEdgeCommands,\\n  XFlowNodeCommands,\\n  createGraphConfig,\\n  createKeybindingConfig,\\n} from \'@antv/xflow\'\\nimport { getGraphData } from \'./mock\'\\nimport \'./index.less\'\\nimport type { Node, Edge } from \'@antv/x6\'\\n\\n/**  Demo Props  */\\nexport interface IDemoProps {\\n  anything: string\\n}\\n\\n/**  graphConfig\uff1a\u914d\u7f6eGraph  */\\nexport const useGraphConfig = createGraphConfig<IDemoProps>(graphConfig => {\\n  graphConfig.setDefaultNodeRender(props => {\\n    return <div className=\\"react-node\\"> {props.data.label} </div>\\n  })\\n})\\n\\n/**  keybindings  */\\nexport const useKeybindingConfig = createKeybindingConfig((config, getProps) => {\\n  config.setKeybindingFunc(reg => {\\n    return reg.registerKeybinding([\\n      {\\n        id: \'delete node or edge\',\\n        keybinding: \'backspace\',\\n        callback: async function (item, modelService, cmd, e) {\\n          const cells = await MODELS.SELECTED_CELLS.useValue(modelService)\\n          const nodes = cells.filter((cell): cell is Edge => cell.isEdge())\\n          const edges = cells.filter((cell): cell is Node => cell.isNode())\\n          // \u8c03\u7528\u5220\u9664Edge\u7684Command\\n          const delEdge = (cell: Edge) => {\\n            return cmd.executeCommand<NsEdgeCmd.DelEdge.IArgs>(XFlowEdgeCommands.DEL_EDGE.id, {\\n              edgeConfig: { ...cell.getData(), id: cell.id },\\n            })\\n          }\\n          // \u8c03\u7528\u5220\u9664Node\u7684Command\\n          const delNode = (cell: Node) => {\\n            return cmd.executeCommand<NsNodeCmd.DelNode.IArgs>(XFlowNodeCommands.DEL_NODE.id, {\\n              nodeConfig: {\\n                ...cell.getData(),\\n                id: cell.id,\\n              },\\n            })\\n          }\\n          if (cells.length === 0) {\\n            console.warn(\'\u6ca1\u6709\u9009\u4e2d\u7684\u8282\u70b9\')\\n          }\\n          // \u5148\u5220\u9664edges\\n          await Promise.all(nodes.map(cell => delEdge(cell)))\\n          // \u5148\u5220\u9664nodes\\n          await Promise.all(edges.map(cell => delNode(cell)))\\n        },\\n      },\\n      {\\n        id: \'copy\',\\n        keybinding: [\'command+c\', \'ctrl+c\'],\\n        callback: async function (item, modelService, cmd, e) {\\n          e.preventDefault()\\n          console.log(item)\\n          cmd.executeCommand<\\n            NsGraphCmd.GraphCopySelection.IArgs,\\n            NsGraphCmd.GraphCopySelection.IResult\\n          >(XFlowGraphCommands.GRAPH_COPY.id, {})\\n        },\\n      },\\n      {\\n        id: \'paste\',\\n        keybinding: [\'command+v\', \'ctrl+v\'],\\n        callback: async function (item, modelService, cmd, e) {\\n          e.preventDefault()\\n          cmd.executeCommand<\\n            NsGraphCmd.GraphPasteSelection.IArgs,\\n            NsGraphCmd.GraphPasteSelection.IResult\\n          >(XFlowGraphCommands.GRAPH_PASTE.id, {})\\n        },\\n      },\\n    ])\\n  })\\n})\\n\\nconst XFlowDemo: React.FC<IDemoProps> = props => {\\n  const graphConfig = useGraphConfig(props)\\n  const keybindingConfig = useKeybindingConfig(props)\\n\\n  const onLoad: IAppLoad = async app => {\\n    // \u8ba1\u7b97\u5e03\u5c40\\n    const res = await app.executeCommand<\\n      NsGraphCmd.GraphLayout.IArgs,\\n      NsGraphCmd.GraphLayout.IResult\\n    >(XFlowGraphCommands.GRAPH_LAYOUT.id, {\\n      layoutType: \'dagre\',\\n      layoutOptions: {\\n        type: \'dagre\',\\n        /** \u5e03\u5c40\u65b9\u5411 */\\n        rankdir: \'TB\',\\n        /** \u8282\u70b9\u95f4\u8ddd */\\n        nodesep: 60,\\n        /** \u5c42\u95f4\u8ddd */\\n        ranksep: 30,\\n      },\\n      graphData: getGraphData(),\\n    })\\n    const { graphData } = res.contextProvider().getResult()\\n    // render\\n    await app.executeCommand<NsGraphCmd.GraphRender.IArgs>(XFlowGraphCommands.GRAPH_RENDER.id, {\\n      graphData: graphData,\\n    })\\n    // \u5c45\u4e2d\\n    await app.executeCommand<NsGraphCmd.GraphZoom.IArgs>(XFlowGraphCommands.GRAPH_ZOOM.id, {\\n      factor: \'real\',\\n    })\\n  }\\n\\n  return (\\n    <XFlow onLoad={onLoad} className=\\"xflow-workspace\\">\\n      <XFlowCanvas config={graphConfig} position={{ top: 0, bottom: 0, left: 0, right: 0 }}>\\n        <KeyBindings config={keybindingConfig} />\\n      </XFlowCanvas>\\n    </XFlow>\\n  )\\n}\\n\\nexport default XFlowDemo");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-keybinding/demos/command/mock.ts?dumi-raw-code\n/* harmony default export */ var command_mockdumi_raw_code = ("import type { NsGraph } from \'@antv/xflow\'\\nimport { uuidv4 } from \'@antv/xflow\'\\n\\n// NodeConfig\\nconst NODE_COMMON_PROPS = {\\n  width: 160,\\n  height: 32,\\n} as const\\n// NodeConfig\\nconst EDGE_COMMON_PROPS = {\\n  attrs: {\\n    line: {\\n      targetMarker: {\\n        name: \'block\',\\n        width: 4,\\n        height: 8,\\n      },\\n      strokeDasharray: \'\',\\n      stroke: \'#A2B1C3\',\\n      strokeWidth: 1,\\n    },\\n  },\\n} as const\\n\\n// mock data\\nexport const getGraphData = () => {\\n  const nodes: NsGraph.INodeConfig[] = [\\n    {\\n      id: \'node1\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-1\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node2\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-2\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node3\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-3\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node4\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-4\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n  ]\\n  const edges: NsGraph.IEdgeConfig[] = [\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node2\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node2-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node3\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node3-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node4\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node4-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n  ]\\n  return {\\n    nodes: nodes,\\n    edges: edges,\\n  } as NsGraph.IGraphData\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-keybinding/demos/command/index.less?dumi-raw-code\n/* harmony default export */ var demos_commanddumi_raw_code = ("@body-bg: #f9f9f9;\\n@primaryColor: #1890ff;\\n@light-border: 1px solid #d9d9d9;\\n\\n.keyboard-command-demo {\\n  position: relative;\\n  border: @light-border;\\n\\n  .__dumi-default-previewer-demo {\\n    padding: 16px 12px;\\n  }\\n\\n  .xflow-workspace {\\n    box-shadow: 0 0 10px 1px #e9e9e9;\\n  }\\n\\n  .xflow-x6-canvas {\\n    background: @body-bg;\\n  }\\n\\n  .xflow-canvas-root {\\n    margin: 0;\\n  }\\n\\n  .react-node {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 100%;\\n    height: 100%;\\n    padding: 0 16px;\\n    overflow: hidden;\\n    font-weight: 600;\\n    white-space: nowrap;\\n    text-overflow: ellipsis;\\n    background-color: #fff;\\n    border: 1px solid #873bf4;\\n    border-radius: 4px;\\n    &:hover {\\n      background-color: rgb(234, 219, 255) !important;\\n    }\\n  }\\n\\n  .x6-node-selected {\\n    .react-node {\\n      background-color: rgb(254, 254, 255);\\n      border: 3px solid rgb(135, 59, 244);\\n      box-shadow: 0 0 3px 3px rgba(135, 59, 244, 0.2);\\n      &:hover {\\n        background-color: rgba(227, 244, 255, 0.45);\\n      }\\n    }\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-mini-map/demos/basic/index.tsx?dumi-raw-code\n/* harmony default export */ var canvas_mini_map_demos_basicdumi_raw_code = ("import React from \'react\'\\nimport type { IAppLoad, NsGraphCmd } from \'@antv/xflow\'\\nimport {\\n  XFlow,\\n  createGraphConfig,\\n  XFlowCanvas,\\n  CanvasMiniMap,\\n  XFlowGraphCommands,\\n} from \'@antv/xflow\'\\nimport { getGraphData } from \'./mock\'\\nimport \'@antv/xflow/dist/index.css\';\\nimport \'./index.less\'\\n\\n/**  Demo Props  */\\nexport interface IDemoProps {\\n  anything: string\\n}\\n/**  graphConfig\uff1a\u914d\u7f6eGraph  */\\nexport const useGraphConfig = createGraphConfig<IDemoProps>(graphConfig => {\\n  graphConfig.setDefaultNodeRender(props => {\\n    return <div className=\\"react-node\\"> {props.data.label} </div>\\n  })\\n})\\n\\nconst XFlowDemo: React.FC<IDemoProps> = props => {\\n  const graphConfig = useGraphConfig(props)\\n\\n  const onLoad: IAppLoad = async app => {\\n    // \u8ba1\u7b97\u5e03\u5c40\\n    const res = await app.executeCommand<\\n      NsGraphCmd.GraphLayout.IArgs,\\n      NsGraphCmd.GraphLayout.IResult\\n    >(XFlowGraphCommands.GRAPH_LAYOUT.id, {\\n      layoutType: \'dagre\',\\n      layoutOptions: {\\n        type: \'dagre\',\\n        /** \u5e03\u5c40\u65b9\u5411 */\\n        rankdir: \'TB\',\\n        /** \u8282\u70b9\u95f4\u8ddd */\\n        nodesep: 60,\\n        /** \u5c42\u95f4\u8ddd */\\n        ranksep: 30,\\n      },\\n      graphData: getGraphData(),\\n    })\\n    const { graphData } = res.contextProvider().getResult()\\n    // render\\n    await app.executeCommand<NsGraphCmd.GraphRender.IArgs>(XFlowGraphCommands.GRAPH_RENDER.id, {\\n      graphData: graphData,\\n    })\\n    // \u5c45\u4e2d\\n    await app.executeCommand<NsGraphCmd.GraphZoom.IArgs>(XFlowGraphCommands.GRAPH_ZOOM.id, {\\n      factor: \'real\',\\n    })\\n  }\\n\\n  return (\\n    <XFlow onLoad={onLoad} className=\\"xflow-workspace\\">\\n      <XFlowCanvas config={graphConfig} position={{ top: 0, bottom: 0, left: 0, right: 0 }}>\\n        <CanvasMiniMap position={{ top: 12, left: 12 }} />\\n      </XFlowCanvas>\\n    </XFlow>\\n  )\\n}\\n\\nexport default XFlowDemo");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-mini-map/demos/basic/mock.ts?dumi-raw-code\n/* harmony default export */ var canvas_mini_map_demos_basic_mockdumi_raw_code = ("import type { NsGraph } from \'@antv/xflow\'\\nimport { uuidv4 } from \'@antv/xflow\'\\n\\n// NodeConfig\\nconst NODE_COMMON_PROPS = {\\n  width: 160,\\n  height: 32,\\n} as const\\n// NodeConfig\\nconst EDGE_COMMON_PROPS = {\\n  attrs: {\\n    line: {\\n      targetMarker: {\\n        name: \'block\',\\n        width: 4,\\n        height: 8,\\n      },\\n      strokeDasharray: \'\',\\n      stroke: \'#A2B1C3\',\\n      strokeWidth: 1,\\n    },\\n  },\\n} as const\\n\\n// mock data\\nexport const getGraphData = () => {\\n  const nodes: NsGraph.INodeConfig[] = [\\n    {\\n      id: \'node1\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-1\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node2\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-2\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node3\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-3\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node4\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-4\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n  ]\\n  const edges: NsGraph.IEdgeConfig[] = [\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node2\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node2-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node3\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node3-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node4\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node4-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n  ]\\n  return {\\n    nodes: nodes,\\n    edges: edges,\\n  } as NsGraph.IGraphData\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-mini-map/demos/basic/index.less?dumi-raw-code\n/* harmony default export */ var extension_components_canvas_mini_map_demos_basicdumi_raw_code = ("@body-bg: #f9f9f9;\\n@primaryColor: #1890ff;\\n@light-border: 1px solid #d9d9d9;\\n\\n.canvas-minimap-basic-demo {\\n  position: relative;\\n  border: @light-border;\\n  .__dumi-default-previewer-demo {\\n    padding: 16px 12px;\\n  }\\n\\n  .xflow-workspace {\\n    box-shadow: 0 0 10px 1px #e9e9e9;\\n  }\\n\\n  .xflow-x6-canvas {\\n    background: @body-bg;\\n  }\\n\\n  .xflow-canvas-root {\\n    margin: 0;\\n  }\\n\\n  .react-node {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 100%;\\n    height: 100%;\\n    font-weight: 600;\\n    background-color: #fff;\\n    border: 1px solid #873bf4;\\n    border-radius: 4px;\\n    &:hover {\\n      background-color: rgb(234, 219, 255) !important;\\n    }\\n  }\\n  .x6-node-selected {\\n    .react-node {\\n      background-color: rgb(254, 254, 255);\\n      border: 3px solid rgb(135, 59, 244);\\n      box-shadow: 0 0 3px 3px rgba(135, 59, 244, 0.2);\\n      &:hover {\\n        background-color: rgba(227, 244, 255, 0.45);\\n      }\\n    }\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-mini-map/demos/color/index.tsx?dumi-raw-code\n/* harmony default export */ var colordumi_raw_code = ("import React from \'react\'\\nimport type { IAppLoad, NsGraphCmd } from \'@antv/xflow\'\\nimport {\\n  XFlow,\\n  createGraphConfig,\\n  XFlowCanvas,\\n  CanvasMiniMap,\\n  XFlowGraphCommands,\\n} from \'@antv/xflow\'\\nimport { getGraphData } from \'./mock\'\\nimport \'@antv/xflow/dist/index.css\';\\nimport \'./index.less\'\\n\\n/**  Demo Props  */\\nexport interface IDemoProps {\\n  anything: string\\n}\\n/**  graphConfig\uff1a\u914d\u7f6eGraph  */\\nexport const useGraphConfig = createGraphConfig<IDemoProps>(graphConfig => {\\n  graphConfig.setDefaultNodeRender(props => {\\n    return <div className=\\"react-node\\"> {props.data.label} </div>\\n  })\\n})\\n\\nconst XFlowDemo: React.FC<IDemoProps> = props => {\\n  const graphConfig = useGraphConfig(props)\\n\\n  const onLoad: IAppLoad = async app => {\\n    // \u8ba1\u7b97\u5e03\u5c40\\n    const res = await app.executeCommand<\\n      NsGraphCmd.GraphLayout.IArgs,\\n      NsGraphCmd.GraphLayout.IResult\\n    >(XFlowGraphCommands.GRAPH_LAYOUT.id, {\\n      layoutType: \'dagre\',\\n      layoutOptions: {\\n        type: \'dagre\',\\n        /** \u5e03\u5c40\u65b9\u5411 */\\n        rankdir: \'TB\',\\n        /** \u8282\u70b9\u95f4\u8ddd */\\n        nodesep: 60,\\n        /** \u5c42\u95f4\u8ddd */\\n        ranksep: 30,\\n      },\\n      graphData: getGraphData(),\\n    })\\n    const { graphData } = res.contextProvider().getResult()\\n    // render\\n    await app.executeCommand<NsGraphCmd.GraphRender.IArgs>(XFlowGraphCommands.GRAPH_RENDER.id, {\\n      graphData: graphData,\\n    })\\n    // \u5c45\u4e2d\\n    await app.executeCommand<NsGraphCmd.GraphZoom.IArgs>(XFlowGraphCommands.GRAPH_ZOOM.id, {\\n      factor: \'real\',\\n    })\\n  }\\n\\n  return (\\n    <XFlow onLoad={onLoad} className=\\"xflow-workspace\\">\\n      <XFlowCanvas config={graphConfig} position={{ top: 0, bottom: 0, left: 0, right: 0 }}>\\n        <CanvasMiniMap\\n          position={{ top: 12, left: 12 }}\\n          nodeFillColor=\\"#873bf4\\"\\n          borderColor=\\"#873bf4\\"\\n          handlerColor=\\"#873bf4\\"\\n        />\\n      </XFlowCanvas>\\n    </XFlow>\\n  )\\n}\\n\\nexport default XFlowDemo");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-mini-map/demos/color/mock.ts?dumi-raw-code\n/* harmony default export */ var color_mockdumi_raw_code = ("import type { NsGraph } from \'@antv/xflow\'\\nimport { uuidv4 } from \'@antv/xflow\'\\n\\n// NodeConfig\\nconst NODE_COMMON_PROPS = {\\n  width: 160,\\n  height: 32,\\n} as const\\n// NodeConfig\\nconst EDGE_COMMON_PROPS = {\\n  attrs: {\\n    line: {\\n      targetMarker: {\\n        name: \'block\',\\n        width: 4,\\n        height: 8,\\n      },\\n      strokeDasharray: \'\',\\n      stroke: \'#A2B1C3\',\\n      strokeWidth: 1,\\n    },\\n  },\\n} as const\\n\\n// mock data\\nexport const getGraphData = () => {\\n  const nodes: NsGraph.INodeConfig[] = [\\n    {\\n      id: \'node1\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-1\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node2\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-2\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node3\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-3\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node4\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-4\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n  ]\\n  const edges: NsGraph.IEdgeConfig[] = [\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node2\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node2-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node3\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node3-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node4\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node4-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n  ]\\n  return {\\n    nodes: nodes,\\n    edges: edges,\\n  } as NsGraph.IGraphData\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-mini-map/demos/color/index.less?dumi-raw-code\n/* harmony default export */ var demos_colordumi_raw_code = ("@body-bg: #f9f9f9;\\n@primaryColor: #1890ff;\\n@light-border: 1px solid #d9d9d9;\\n\\n.canvas-minimap-color-demo {\\n  position: relative;\\n  border: @light-border;\\n  .__dumi-default-previewer-demo {\\n    padding: 16px 12px;\\n  }\\n\\n  .xflow-workspace {\\n    box-shadow: 0 0 10px 1px #e9e9e9;\\n  }\\n\\n  .xflow-x6-canvas {\\n    background: @body-bg;\\n  }\\n\\n  .xflow-canvas-root {\\n    margin: 0;\\n  }\\n\\n  .react-node {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 100%;\\n    height: 100%;\\n    font-weight: 600;\\n    background-color: #fff;\\n    border: 1px solid #873bf4;\\n    border-radius: 4px;\\n    &:hover {\\n      background-color: rgb(234, 219, 255) !important;\\n    }\\n  }\\n  .x6-node-selected {\\n    .react-node {\\n      background-color: rgb(254, 254, 255);\\n      border: 3px solid rgb(135, 59, 244);\\n      box-shadow: 0 0 3px 3px rgba(135, 59, 244, 0.2);\\n      &:hover {\\n        background-color: rgba(227, 244, 255, 0.45);\\n      }\\n    }\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-mini-map/demos/graph-options/index.tsx?dumi-raw-code\n/* harmony default export */ var graph_optionsdumi_raw_code = ("import React from \'react\'\\nimport type { IAppLoad, NsGraphCmd } from \'@antv/xflow\'\\nimport {\\n  XFlow,\\n  createGraphConfig,\\n  XFlowCanvas,\\n  CanvasMiniMap,\\n  XFlowGraphCommands,\\n} from \'@antv/xflow\'\\nimport { getGraphData } from \'./mock\'\\nimport \'@antv/xflow/dist/index.css\';\\nimport \'./index.less\'\\n\\n/**  Demo Props  */\\nexport interface IDemoProps {\\n  anything: string\\n}\\n/**  graphConfig\uff1a\u914d\u7f6eGraph  */\\nexport const useGraphConfig = createGraphConfig<IDemoProps>(graphConfig => {\\n  graphConfig.setDefaultNodeRender(props => {\\n    return <div className=\\"react-node\\"> {props.data.label} </div>\\n  })\\n})\\n\\nconst XFlowDemo: React.FC<IDemoProps> = props => {\\n  const graphConfig = useGraphConfig(props)\\n\\n  const onLoad: IAppLoad = async app => {\\n    // \u8ba1\u7b97\u5e03\u5c40\\n    const res = await app.executeCommand<\\n      NsGraphCmd.GraphLayout.IArgs,\\n      NsGraphCmd.GraphLayout.IResult\\n    >(XFlowGraphCommands.GRAPH_LAYOUT.id, {\\n      layoutType: \'dagre\',\\n      layoutOptions: {\\n        type: \'dagre\',\\n        /** \u5e03\u5c40\u65b9\u5411 */\\n        rankdir: \'TB\',\\n        /** \u8282\u70b9\u95f4\u8ddd */\\n        nodesep: 60,\\n        /** \u5c42\u95f4\u8ddd */\\n        ranksep: 30,\\n      },\\n      graphData: getGraphData(),\\n    })\\n    const { graphData } = res.contextProvider().getResult()\\n    // render\\n    await app.executeCommand<NsGraphCmd.GraphRender.IArgs>(XFlowGraphCommands.GRAPH_RENDER.id, {\\n      graphData: graphData,\\n    })\\n    // \u5c45\u4e2d\\n    await app.executeCommand<NsGraphCmd.GraphZoom.IArgs>(XFlowGraphCommands.GRAPH_ZOOM.id, {\\n      factor: \'real\',\\n    })\\n  }\\n\\n  return (\\n    <XFlow onLoad={onLoad} className=\\"xflow-workspace\\">\\n      <XFlowCanvas config={graphConfig} position={{ top: 0, bottom: 0, left: 0, right: 0 }}>\\n        <CanvasMiniMap\\n          position={{ top: 12, left: 12 }}\\n          minimapOptions={{ width: 200, height: 200 }}\\n        />\\n      </XFlowCanvas>\\n    </XFlow>\\n  )\\n}\\n\\nexport default XFlowDemo");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-mini-map/demos/graph-options/mock.ts?dumi-raw-code\n/* harmony default export */ var graph_options_mockdumi_raw_code = ("import type { NsGraph } from \'@antv/xflow\'\\nimport { uuidv4 } from \'@antv/xflow\'\\n\\n// NodeConfig\\nconst NODE_COMMON_PROPS = {\\n  width: 160,\\n  height: 32,\\n} as const\\n// NodeConfig\\nconst EDGE_COMMON_PROPS = {\\n  attrs: {\\n    line: {\\n      targetMarker: {\\n        name: \'block\',\\n        width: 4,\\n        height: 8,\\n      },\\n      strokeDasharray: \'\',\\n      stroke: \'#A2B1C3\',\\n      strokeWidth: 1,\\n    },\\n  },\\n} as const\\n\\n// mock data\\nexport const getGraphData = () => {\\n  const nodes: NsGraph.INodeConfig[] = [\\n    {\\n      id: \'node1\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-1\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node2\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-2\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node3\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-3\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node4\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-4\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n  ]\\n  const edges: NsGraph.IEdgeConfig[] = [\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node2\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node2-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node3\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node3-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node4\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node4-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n  ]\\n  return {\\n    nodes: nodes,\\n    edges: edges,\\n  } as NsGraph.IGraphData\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-mini-map/demos/graph-options/index.less?dumi-raw-code\n/* harmony default export */ var demos_graph_optionsdumi_raw_code = ("@body-bg: #f9f9f9;\\n@primaryColor: #1890ff;\\n@light-border: 1px solid #d9d9d9;\\n\\n.canvas-minimap-options-demo {\\n  position: relative;\\n  border: @light-border;\\n  .__dumi-default-previewer-demo {\\n    padding: 16px 12px;\\n  }\\n\\n  .xflow-workspace {\\n    height: 450px;\\n    box-shadow: 0 0 10px 1px #e9e9e9;\\n  }\\n\\n  .xflow-x6-canvas {\\n    background: @body-bg;\\n  }\\n\\n  .xflow-canvas-root {\\n    margin: 0;\\n  }\\n\\n  .react-node {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 100%;\\n    height: 100%;\\n    font-weight: 600;\\n    background-color: #fff;\\n    border: 1px solid #873bf4;\\n    border-radius: 4px;\\n    &:hover {\\n      background-color: rgb(234, 219, 255) !important;\\n    }\\n  }\\n  .x6-node-selected {\\n    .react-node {\\n      background-color: rgb(254, 254, 255);\\n      border: 3px solid rgb(135, 59, 244);\\n      box-shadow: 0 0 3px 3px rgba(135, 59, 244, 0.2);\\n      &:hover {\\n        background-color: rgba(227, 244, 255, 0.45);\\n      }\\n    }\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-node-panel/demos/basic/index.tsx?dumi-raw-code\n/* harmony default export */ var canvas_node_panel_demos_basicdumi_raw_code = ("import React from \'react\'\\nimport { XFlow, XFlowCanvas, NodeTreePanel } from \'@antv/xflow\'\\nimport { onLoad, useGraphConfig } from \'./graph-config\'\\nimport * as TreeConfig from \'./dnd-tree-config\'\\nimport \'./index.less\'\\nimport \'@antv/xflow/dist/index.css\'\\n\\nconst XFlowDemo: React.FC<{}> = props => {\\n  const graphConfig = useGraphConfig(props)\\n\\n  return (\\n    <XFlow onLoad={onLoad} className=\\"xflow-workspace\\">\\n      <NodeTreePanel\\n        header={<h4 className=\\"dnd-panel-header\\"> \u7ec4\u4ef6\u9762\u677f </h4>}\\n        footer={<div> Foorter </div>}\\n        onNodeDrop={TreeConfig.onNodeDrop}\\n        treeDataService={TreeConfig.treeDataService}\\n        position={{ top: 0, bottom: 0, left: 0, width: 290 }}\\n      />\\n      <XFlowCanvas config={graphConfig} position={{ top: 0, bottom: 0, left: 290, right: 0 }} />\\n    </XFlow>\\n  )\\n}\\n\\nexport default XFlowDemo");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-node-panel/demos/basic/graph-config.tsx?dumi-raw-code\n/* harmony default export */ var basic_graph_configdumi_raw_code = ("import type { IAppLoad, NsGraphCmd } from \'@antv/xflow\'\\nimport { createGraphConfig } from \'@antv/xflow\'\\nimport { XFlowGraphCommands } from \'@antv/xflow\'\\nimport { getGraphData } from \'./mock\'\\n\\nexport const onLoad: IAppLoad = async app => {\\n  // \u8ba1\u7b97\u5e03\u5c40\\n  const res = await app.executeCommand<\\n    NsGraphCmd.GraphLayout.IArgs,\\n    NsGraphCmd.GraphLayout.IResult\\n  >(XFlowGraphCommands.GRAPH_LAYOUT.id, {\\n    layoutType: \'dagre\',\\n    layoutOptions: {\\n      type: \'dagre\',\\n      /** \u5e03\u5c40\u65b9\u5411 */\\n      rankdir: \'TB\',\\n      /** \u8282\u70b9\u95f4\u8ddd */\\n      nodesep: 60,\\n      /** \u5c42\u95f4\u8ddd */\\n      ranksep: 30,\\n    },\\n    graphData: getGraphData(),\\n  })\\n  const { graphData } = res.contextProvider().getResult()\\n  // render\\n  await app.executeCommand<NsGraphCmd.GraphRender.IArgs>(XFlowGraphCommands.GRAPH_RENDER.id, {\\n    graphData: graphData,\\n  })\\n  // \u5c45\u4e2d\\n  await app.executeCommand<NsGraphCmd.GraphZoom.IArgs>(XFlowGraphCommands.GRAPH_ZOOM.id, {\\n    factor: \'real\',\\n  })\\n}\\n\\n/**  graphConfig\uff1a\u914d\u7f6eGraph  */\\nexport const useGraphConfig = createGraphConfig<any>(graphConfig => {\\n  graphConfig.setDefaultNodeRender(props => {\\n    return <div className=\\"react-dnd-node\\"> {props.data.label} </div>\\n  })\\n})");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-node-panel/demos/basic/mock.ts?dumi-raw-code\n/* harmony default export */ var canvas_node_panel_demos_basic_mockdumi_raw_code = ("import type { NsGraph } from \'@antv/xflow\'\\nimport { uuidv4 } from \'@antv/xflow\'\\n\\n// NodeConfig\\nconst NODE_COMMON_PROPS = {\\n  width: 160,\\n  height: 32,\\n} as const\\n// NodeConfig\\nconst EDGE_COMMON_PROPS = {\\n  attrs: {\\n    line: {\\n      targetMarker: {\\n        name: \'block\',\\n        width: 4,\\n        height: 8,\\n      },\\n      strokeDasharray: \'\',\\n      stroke: \'#A2B1C3\',\\n      strokeWidth: 1,\\n    },\\n  },\\n} as const\\n\\n// mock data\\nexport const getGraphData = () => {\\n  const nodes: NsGraph.INodeConfig[] = [\\n    {\\n      id: \'node1\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-1\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node2\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-2\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node3\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-3\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node4\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-4\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n  ]\\n  const edges: NsGraph.IEdgeConfig[] = [\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node2\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node2-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node3\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node3-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node4\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node4-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n  ]\\n  return {\\n    nodes: nodes,\\n    edges: edges,\\n  } as NsGraph.IGraphData\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-node-panel/demos/basic/dnd-tree-config.tsx?dumi-raw-code\n/* harmony default export */ var dnd_tree_configdumi_raw_code = ("import type { NsNodeTreePanel } from \'@antv/xflow\'\\nimport React from \'react\'\\nimport { XFlowConstants } from \'@antv/xflow\'\\nimport * as commandUtils from \'./comannd-utils\'\\n\\nexport const DND_RENDER_ID = \'DND_RENDER_ID\'\\n\\nexport const onNodeDrop: NsNodeTreePanel.IOnNodeDrop = async (\\n  nodeConfig,\\n  commandService,\\n  modelService,\\n) => {\\n  commandUtils.addNode(commandService, nodeConfig)\\n}\\n\\nexport const treeDataService: NsNodeTreePanel.ITreeDataService = async (meta, modelService) => {\\n  return [\\n    {\\n      id: \'1\',\\n      label: \'\u6570\u636e\u8bfb\u5199\',\\n      parentId: \'\',\\n      renderKey: XFlowConstants.XFLOW_DEFAULT_NODE,\\n    },\\n    {\\n      id: \'2\',\\n      label: \'\u7b97\u6cd5\u7ec4\u4ef61\',\\n      parentId: \'1\',\\n      width: 190,\\n      height: 32,\\n      renderKey: XFlowConstants.XFLOW_DEFAULT_NODE,\\n      popoverContent: <div> test </div>,\\n    },\\n    {\\n      id: \'3\',\\n      label: \'\u7b97\u6cd5\u7ec4\u4ef62\',\\n      parentId: \'1\',\\n      renderKey: XFlowConstants.XFLOW_DEFAULT_NODE,\\n    },\\n    {\\n      id: \'4\',\\n      label: \'\u7b97\u6cd5\u7ec4\u4ef63\',\\n      parentId: \'1\',\\n      renderKey: XFlowConstants.XFLOW_DEFAULT_NODE,\\n    },\\n    {\\n      id: \'5\',\\n      label: \'\u6570\u636e\u52a0\u5de5\',\\n      parentId: \'\',\\n      renderKey: XFlowConstants.XFLOW_DEFAULT_NODE,\\n    },\\n    {\\n      id: \'6\',\\n      label: \'\u7b97\u6cd5\u7ec4\u4ef64\',\\n      parentId: \'5\',\\n      renderKey: XFlowConstants.XFLOW_DEFAULT_NODE,\\n    },\\n    {\\n      id: \'7\',\\n      label: \'\u7b97\u6cd5\u7ec4\u4ef65\',\\n      parentId: \'5\',\\n      renderKey: XFlowConstants.XFLOW_DEFAULT_NODE,\\n    },\\n    {\\n      id: \'8\',\\n      label: \'\u7b97\u6cd5\u7ec4\u4ef66\',\\n      parentId: \'5\',\\n      renderKey: XFlowConstants.XFLOW_DEFAULT_NODE,\\n    },\\n    {\\n      id: \'9\',\\n      label: \'\u6a21\u578b\u8bad\u7ec3\',\\n      parentId: \'\',\\n      renderKey: XFlowConstants.XFLOW_DEFAULT_NODE,\\n    },\\n    {\\n      id: \'10\',\\n      label: \'\u7b97\u6cd5\u7ec4\u4ef67\',\\n      parentId: \'9\',\\n      renderKey: XFlowConstants.XFLOW_DEFAULT_NODE,\\n    },\\n    {\\n      id: \'11\',\\n      label: \'\u7b97\u6cd5\u7ec4\u4ef68\',\\n      parentId: \'9\',\\n      renderKey: XFlowConstants.XFLOW_DEFAULT_NODE,\\n    },\\n    {\\n      id: \'12\',\\n      label: \'\u7b97\u6cd5\u7ec4\u4ef69\',\\n      parentId: \'9\',\\n      renderKey: XFlowConstants.XFLOW_DEFAULT_NODE,\\n    },\\n  ]\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-node-panel/demos/basic/comannd-utils.tsx?dumi-raw-code\n/* harmony default export */ var comannd_utilsdumi_raw_code = ("import type { NsNodeCmd, IGraphCommandService, NsGraph } from \'@antv/xflow\'\\nimport { XFlowNodeCommands, uuidv4 } from \'@antv/xflow\'\\n\\nexport const addNode = (cmd: IGraphCommandService, nodeConfig: NsGraph.INodeConfig) => {\\n  return cmd.executeCommand<NsNodeCmd.AddNode.IArgs>(XFlowNodeCommands.ADD_NODE.id, {\\n    nodeConfig: { ...nodeConfig, id: uuidv4(), width: 190, height: 32 },\\n  })\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-node-panel/demos/basic/index.less?dumi-raw-code\n/* harmony default export */ var extension_components_canvas_node_panel_demos_basicdumi_raw_code = ("@body-bg: #f9f9f9;\\n@primaryColor: #1890ff;\\n@light-border: 1px solid #d9d9d9;\\n\\n.dnd-node-demo {\\n  position: relative;\\n  border: @light-border;\\n  .__dumi-default-previewer-demo {\\n    padding: 16px 12px;\\n  }\\n\\n  .xflow-workspace {\\n    height: 500px;\\n    box-shadow: 0 0 10px 1px #e9e9e9;\\n  }\\n\\n  .dnd-panel-header {\\n    color: #525252;\\n  }\\n\\n  .xflow-x6-canvas {\\n    background: @body-bg;\\n  }\\n\\n  .xflow-canvas-root {\\n    margin: 0;\\n  }\\n\\n  .react-dnd-node {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 190px;\\n    height: 32px;\\n    padding: 0 16px;\\n    overflow: hidden;\\n    font-weight: 600;\\n    white-space: nowrap;\\n    text-overflow: ellipsis;\\n    background-color: #fff;\\n    border: 1px solid #a2b1c3;\\n    border-radius: 4px;\\n    &:hover {\\n      background: ~\'linear-gradient(270deg,#f8faff,rgba(248,250,255,0)) !important\';\\n    }\\n  }\\n  .x6-node-selected {\\n    .react-dnd-node {\\n      background-color: rgb(254, 254, 255);\\n      border: 3px solid #a2b1c3;\\n      box-shadow: 0 0 3px 3px rgba(135, 59, 244, 0.2);\\n      &:hover {\\n        background-color: #b3babd2c;\\n      }\\n    }\\n  }\\n}\\n.x6-widget-dnd {\\n  .react-dnd-node {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 100%;\\n    height: 100%;\\n    padding: 0 16px;\\n    overflow: hidden;\\n    font-weight: 600;\\n    white-space: nowrap;\\n    text-overflow: ellipsis;\\n    background-color: #fff;\\n    border: 1px solid #a2b1c3;\\n    border-radius: 4px;\\n    &:hover {\\n      background-color: #b3babd2c !important;\\n    }\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-node-panel/demos/search/index.tsx?dumi-raw-code\n/* harmony default export */ var searchdumi_raw_code = ("import React from \'react\'\\nimport { XFlow, XFlowCanvas, NodeTreePanel } from \'@antv/xflow\'\\nimport { onLoad, useGraphConfig } from \'./graph-config\'\\nimport * as TreeConfig from \'./dnd-tree-config\'\\nimport { searchService } from \'./dnd-tree-config\'\\nimport \'./index.less\'\\nimport \'@antv/xflow/dist/index.css\'\\n\\nconst XFlowDemo: React.FC<{}> = props => {\\n  const graphConfig = useGraphConfig(props)\\n\\n  return (\\n    <XFlow onLoad={onLoad} className=\\"xflow-workspace\\">\\n      <NodeTreePanel\\n        searchService={searchService}\\n        onNodeDrop={TreeConfig.onNodeDrop}\\n        treeDataService={TreeConfig.treeDataService}\\n        position={{ top: 0, bottom: 0, left: 0, width: 290 }}\\n      />\\n      <XFlowCanvas config={graphConfig} position={{ top: 0, bottom: 0, left: 290, right: 0 }} />\\n    </XFlow>\\n  )\\n}\\n\\nexport default XFlowDemo");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-node-panel/demos/search/graph-config.tsx?dumi-raw-code\n/* harmony default export */ var search_graph_configdumi_raw_code = ("import type { IAppLoad, NsGraphCmd } from \'@antv/xflow\'\\nimport { createGraphConfig } from \'@antv/xflow\'\\nimport { XFlowGraphCommands } from \'@antv/xflow\'\\nimport { getGraphData } from \'./mock\'\\n\\nexport const onLoad: IAppLoad = async app => {\\n  // \u8ba1\u7b97\u5e03\u5c40\\n  const res = await app.executeCommand<\\n    NsGraphCmd.GraphLayout.IArgs,\\n    NsGraphCmd.GraphLayout.IResult\\n  >(XFlowGraphCommands.GRAPH_LAYOUT.id, {\\n    layoutType: \'dagre\',\\n    layoutOptions: {\\n      type: \'dagre\',\\n      /** \u5e03\u5c40\u65b9\u5411 */\\n      rankdir: \'TB\',\\n      /** \u8282\u70b9\u95f4\u8ddd */\\n      nodesep: 60,\\n      /** \u5c42\u95f4\u8ddd */\\n      ranksep: 30,\\n    },\\n    graphData: getGraphData(),\\n  })\\n  const { graphData } = res.contextProvider().getResult()\\n  // render\\n  await app.executeCommand<NsGraphCmd.GraphRender.IArgs>(XFlowGraphCommands.GRAPH_RENDER.id, {\\n    graphData: graphData,\\n  })\\n  // \u5c45\u4e2d\\n  await app.executeCommand<NsGraphCmd.GraphZoom.IArgs>(XFlowGraphCommands.GRAPH_ZOOM.id, {\\n    factor: \'real\',\\n  })\\n}\\n\\n/**  graphConfig\uff1a\u914d\u7f6eGraph  */\\nexport const useGraphConfig = createGraphConfig<any>(graphConfig => {\\n  graphConfig.setDefaultNodeRender(props => {\\n    return <div className=\\"react-dnd-node\\"> {props.data.label} </div>\\n  })\\n})");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-node-panel/demos/search/mock.ts?dumi-raw-code\n/* harmony default export */ var search_mockdumi_raw_code = ("import type { NsGraph } from \'@antv/xflow\'\\nimport { uuidv4 } from \'@antv/xflow\'\\n\\n// NodeConfig\\nconst NODE_COMMON_PROPS = {\\n  width: 160,\\n  height: 32,\\n} as const\\n// NodeConfig\\nconst EDGE_COMMON_PROPS = {\\n  attrs: {\\n    line: {\\n      targetMarker: {\\n        name: \'block\',\\n        width: 4,\\n        height: 8,\\n      },\\n      strokeDasharray: \'\',\\n      stroke: \'#A2B1C3\',\\n      strokeWidth: 1,\\n    },\\n  },\\n} as const\\n\\n// mock data\\nexport const getGraphData = () => {\\n  const nodes: NsGraph.INodeConfig[] = [\\n    {\\n      id: \'node1\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-1\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node2\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-2\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node3\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-3\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node4\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-4\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n  ]\\n  const edges: NsGraph.IEdgeConfig[] = [\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node2\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node2-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node3\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node3-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node4\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node4-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n  ]\\n  return {\\n    nodes: nodes,\\n    edges: edges,\\n  } as NsGraph.IGraphData\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-node-panel/demos/search/dnd-tree-config.tsx?dumi-raw-code\n/* harmony default export */ var search_dnd_tree_configdumi_raw_code = ("import type { NsNodeTreePanel } from \'@antv/xflow\'\\nimport { XFlowConstants } from \'@antv/xflow\'\\nimport * as commandUtils from \'./comannd-utils\'\\n\\nexport const DND_RENDER_ID = \'DND_RENDER_ID\'\\n\\nexport const onNodeDrop: NsNodeTreePanel.IOnNodeDrop = async (\\n  nodeConfig,\\n  commandService,\\n  modelService,\\n) => {\\n  commandUtils.addNode(commandService, nodeConfig)\\n}\\n\\nexport const treeDataService: NsNodeTreePanel.ITreeDataService = async (meta, modelService) => {\\n  return [\\n    {\\n      id: \'1\',\\n      label: \'\u6570\u636e\u8bfb\u5199\',\\n      parentId: \'\',\\n      renderKey: XFlowConstants.XFLOW_DEFAULT_NODE,\\n    },\\n    {\\n      id: \'2\',\\n      label: \'\u7b97\u6cd5\u7ec4\u4ef61\',\\n      parentId: \'1\',\\n      width: 190,\\n      height: 32,\\n      renderKey: XFlowConstants.XFLOW_DEFAULT_NODE,\\n      popoverContent: <div> test </div>,\\n    },\\n    {\\n      id: \'3\',\\n      label: \'\u7b97\u6cd5\u7ec4\u4ef62\',\\n      parentId: \'1\',\\n      renderKey: XFlowConstants.XFLOW_DEFAULT_NODE,\\n    },\\n    {\\n      id: \'4\',\\n      label: \'\u7b97\u6cd5\u7ec4\u4ef63\',\\n      parentId: \'1\',\\n      renderKey: XFlowConstants.XFLOW_DEFAULT_NODE,\\n    },\\n    {\\n      id: \'5\',\\n      label: \'\u6570\u636e\u52a0\u5de5\',\\n      parentId: \'\',\\n      renderKey: XFlowConstants.XFLOW_DEFAULT_NODE,\\n    },\\n    {\\n      id: \'6\',\\n      label: \'\u7b97\u6cd5\u7ec4\u4ef64\',\\n      parentId: \'5\',\\n      renderKey: XFlowConstants.XFLOW_DEFAULT_NODE,\\n    },\\n    {\\n      id: \'7\',\\n      label: \'\u7b97\u6cd5\u7ec4\u4ef65\',\\n      parentId: \'5\',\\n      renderKey: XFlowConstants.XFLOW_DEFAULT_NODE,\\n    },\\n    {\\n      id: \'8\',\\n      label: \'\u7b97\u6cd5\u7ec4\u4ef66\',\\n      parentId: \'5\',\\n      renderKey: XFlowConstants.XFLOW_DEFAULT_NODE,\\n    },\\n    {\\n      id: \'9\',\\n      label: \'\u6a21\u578b\u8bad\u7ec3\',\\n      parentId: \'\',\\n      renderKey: XFlowConstants.XFLOW_DEFAULT_NODE,\\n    },\\n    {\\n      id: \'10\',\\n      label: \'\u7b97\u6cd5\u7ec4\u4ef67\',\\n      parentId: \'9\',\\n      renderKey: XFlowConstants.XFLOW_DEFAULT_NODE,\\n    },\\n    {\\n      id: \'11\',\\n      label: \'\u7b97\u6cd5\u7ec4\u4ef68\',\\n      parentId: \'9\',\\n      renderKey: XFlowConstants.XFLOW_DEFAULT_NODE,\\n    },\\n    {\\n      id: \'12\',\\n      label: \'\u7b97\u6cd5\u7ec4\u4ef69\',\\n      parentId: \'9\',\\n      renderKey: XFlowConstants.XFLOW_DEFAULT_NODE,\\n    },\\n  ]\\n}\\n\\nexport const searchService: NsNodeTreePanel.ISearchService = async (\\n  treeNodeList: NsNodeTreePanel.ITreeNode[] = [],\\n  keyword: string,\\n) => {\\n  const list = treeNodeList.filter(i => i.isDirectory || i.label.includes(keyword))\\n  console.log(list, keyword, treeNodeList)\\n  return list\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-node-panel/demos/search/comannd-utils.tsx?dumi-raw-code\n/* harmony default export */ var search_comannd_utilsdumi_raw_code = ("import type { NsNodeCmd, IGraphCommandService, NsGraph } from \'@antv/xflow\'\\nimport { XFlowNodeCommands, uuidv4 } from \'@antv/xflow\'\\n\\nexport const addNode = (cmd: IGraphCommandService, nodeConfig: NsGraph.INodeConfig) => {\\n  return cmd.executeCommand<NsNodeCmd.AddNode.IArgs>(XFlowNodeCommands.ADD_NODE.id, {\\n    nodeConfig: { ...nodeConfig, id: uuidv4(), width: 190, height: 32 },\\n  })\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-node-panel/demos/search/index.less?dumi-raw-code\n/* harmony default export */ var demos_searchdumi_raw_code = (" \\n@body-bg: #f9f9f9;\\n@primaryColor: #1890ff;\\n@light-border: 1px solid #d9d9d9;\\n\\n.dnd-node-demo {\\n  position: relative;\\n  border: @light-border;\\n  .__dumi-default-previewer-demo {\\n    padding: 16px 12px;\\n  }\\n\\n  .xflow-workspace {\\n    height: 500px;\\n    box-shadow: 0 0 10px 1px #e9e9e9;\\n  }\\n\\n  .dnd-panel-header {\\n    color: #525252;\\n  }\\n\\n  .xflow-x6-canvas {\\n    background: @body-bg;\\n  }\\n\\n  .xflow-canvas-root {\\n    margin: 0;\\n  }\\n\\n  .react-dnd-node {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 190px;\\n    height: 32px;\\n    padding: 0 16px;\\n    overflow: hidden;\\n    font-weight: 600;\\n    white-space: nowrap;\\n    text-overflow: ellipsis;\\n    background-color: #fff;\\n    border: 1px solid #a2b1c3;\\n    border-radius: 4px;\\n    &:hover {\\n      background: ~\'linear-gradient(270deg,#f8faff,rgba(248,250,255,0)) !important\';\\n    }\\n  }\\n  .x6-node-selected {\\n    .react-dnd-node {\\n      background-color: rgb(254, 254, 255);\\n      border: 3px solid #a2b1c3;\\n      box-shadow: 0 0 3px 3px rgba(135, 59, 244, 0.2);\\n      &:hover {\\n        background-color: #b3babd2c;\\n      }\\n    }\\n  }\\n}\\n.x6-widget-dnd {\\n  .react-dnd-node {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 100%;\\n    height: 100%;\\n    padding: 0 16px;\\n    overflow: hidden;\\n    font-weight: 600;\\n    white-space: nowrap;\\n    text-overflow: ellipsis;\\n    background-color: #fff;\\n    border: 1px solid #a2b1c3;\\n    border-radius: 4px;\\n    &:hover {\\n      background-color: #b3babd2c !important;\\n    }\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-scale-toolbar/demos/index.tsx?dumi-raw-code\n/* harmony default export */ var canvas_scale_toolbar_demosdumi_raw_code = ("import React from \'react\'\\nimport type { IAppLoad, NsGraphCmd } from \'@antv/xflow\'\\nimport { XFlowGraphCommands } from \'@antv/xflow\'\\nimport { XFlow, createGraphConfig, XFlowCanvas, CanvasScaleToolbar } from \'@antv/xflow\'\\nimport { getGraphData } from \'./mock\'\\nimport \'./index.less\'\\nimport \'@antv/xflow/dist/index.css\'\\n\\n/**  Demo Props  */\\nexport interface IDemoProps {\\n  anything: string\\n}\\n/**  graphConfig\uff1a\u914d\u7f6eGraph  */\\nexport const useGraphConfig = createGraphConfig<IDemoProps>(graphConfig => {\\n  graphConfig.setDefaultNodeRender(props => {\\n    return <div className=\\"react-node\\"> {props.data.label} </div>\\n  })\\n})\\n\\nconst XFlowDemo: React.FC<IDemoProps> = props => {\\n  const graphConfig = useGraphConfig(props)\\n\\n  const onLoad: IAppLoad = async app => {\\n    // \u8ba1\u7b97\u5e03\u5c40\\n    const res = await app.executeCommand<\\n      NsGraphCmd.GraphLayout.IArgs,\\n      NsGraphCmd.GraphLayout.IResult\\n    >(XFlowGraphCommands.GRAPH_LAYOUT.id, {\\n      layoutType: \'dagre\',\\n      layoutOptions: {\\n        type: \'dagre\',\\n        /** \u5e03\u5c40\u65b9\u5411 */\\n        rankdir: \'TB\',\\n        /** \u8282\u70b9\u95f4\u8ddd */\\n        nodesep: 60,\\n        /** \u5c42\u95f4\u8ddd */\\n        ranksep: 30,\\n      },\\n      graphData: getGraphData(),\\n    })\\n    const { graphData } = res.contextProvider().getResult()\\n    // render\\n    await app.executeCommand<NsGraphCmd.GraphRender.IArgs>(XFlowGraphCommands.GRAPH_RENDER.id, {\\n      graphData: graphData,\\n    })\\n    // \u5c45\u4e2d\\n    await app.executeCommand<NsGraphCmd.GraphZoom.IArgs>(XFlowGraphCommands.GRAPH_ZOOM.id, {\\n      factor: \'real\',\\n    })\\n  }\\n\\n  return (\\n    <XFlow onLoad={onLoad} className=\\"xflow-workspace\\">\\n      <XFlowCanvas config={graphConfig} position={{ top: 0, bottom: 0, left: 0, right: 0 }}>\\n        {/* \u76f8\u5bf9\u4e8eCanvas\u753b\u5e03\u5b9a\u4f4d */}\\n        <CanvasScaleToolbar position={{ top: 12, left: 12 }} />\\n      </XFlowCanvas>\\n    </XFlow>\\n  )\\n}\\n\\nexport default XFlowDemo");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-scale-toolbar/demos/mock.ts?dumi-raw-code\n/* harmony default export */ var canvas_scale_toolbar_demos_mockdumi_raw_code = ("import type { NsGraph } from \'@antv/xflow\'\\nimport { uuidv4 } from \'@antv/xflow\'\\n\\n// NodeConfig\\nconst NODE_COMMON_PROPS = {\\n  width: 160,\\n  height: 32,\\n} as const\\n// NodeConfig\\nconst EDGE_COMMON_PROPS = {\\n  attrs: {\\n    line: {\\n      targetMarker: {\\n        name: \'block\',\\n        width: 4,\\n        height: 8,\\n      },\\n      strokeDasharray: \'\',\\n      stroke: \'#909090\',\\n      strokeWidth: 1,\\n    },\\n  },\\n} as const\\n\\n// mock data\\nexport const getGraphData = () => {\\n  const nodes: NsGraph.INodeConfig[] = [\\n    {\\n      id: \'node1\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-1\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node2\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-2\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node3\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-3\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node4\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-4\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n  ]\\n  const edges: NsGraph.IEdgeConfig[] = [\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node2\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node2-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node3\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node3-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node4\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node4-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n  ]\\n  return {\\n    nodes: nodes,\\n    edges: edges,\\n  } as NsGraph.IGraphData\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-scale-toolbar/demos/index.less?dumi-raw-code\n/* harmony default export */ var extension_components_canvas_scale_toolbar_demosdumi_raw_code = (" \\n@body-bg: #f9f9f9;\\n@primaryColor: #1890ff;\\n@light-border: 1px solid #d9d9d9;\\n\\n.canvas-scale-toolbar-demo {\\n  position: relative;\\n  border: @light-border;\\n  .__dumi-default-previewer-demo {\\n    padding: 16px 12px;\\n  }\\n\\n  .xflow-workspace {\\n    height: 350px;\\n    box-shadow: 0 0 10px 1px #e9e9e9;\\n  }\\n\\n  .xflow-x6-canvas {\\n    background: @body-bg;\\n  }\\n\\n  .xflow-canvas-root {\\n    margin: 0;\\n  }\\n\\n  .react-node {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 100%;\\n    height: 100%;\\n    font-weight: 600;\\n    background-color: #fff;\\n    border: 1px solid #873bf4;\\n    border-radius: 4px;\\n    &:hover {\\n      background-color: rgb(234, 219, 255) !important;\\n    }\\n  }\\n  .x6-node-selected {\\n    .react-node {\\n      background-color: rgb(254, 254, 255);\\n      border: 3px solid rgb(135, 59, 244);\\n      box-shadow: 0 0 3px 3px rgba(135, 59, 244, 0.2);\\n      &:hover {\\n        background-color: rgba(227, 244, 255, 0.45);\\n      }\\n    }\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-snapline/demos/basic/index.tsx?dumi-raw-code\n/* harmony default export */ var canvas_snapline_demos_basicdumi_raw_code = ("import React from \'react\'\\nimport type { IAppLoad, NsGraphCmd } from \'@antv/xflow\'\\nimport {\\n  XFlow,\\n  createGraphConfig,\\n  XFlowCanvas,\\n  CanvasSnapline,\\n  XFlowGraphCommands,\\n} from \'@antv/xflow\'\\nimport { getGraphData } from \'./mock\'\\nimport \'./index.less\'\\nimport \'@antv/xflow/dist/index.css\';\\n/**  Demo Props  */\\nexport interface IDemoProps {\\n  anything: string\\n}\\n/**  graphConfig\uff1a\u914d\u7f6eGraph  */\\nexport const useGraphConfig = createGraphConfig<IDemoProps>(graphConfig => {\\n  graphConfig.setDefaultNodeRender(props => {\\n    return <div className=\\"react-node\\"> {props.data.label} </div>\\n  })\\n})\\n\\nconst XFlowDemo: React.FC<IDemoProps> = props => {\\n  const graphConfig = useGraphConfig(props)\\n\\n  const onLoad: IAppLoad = async app => {\\n    // \u8ba1\u7b97\u5e03\u5c40\\n    const res = await app.executeCommand<\\n      NsGraphCmd.GraphLayout.IArgs,\\n      NsGraphCmd.GraphLayout.IResult\\n    >(XFlowGraphCommands.GRAPH_LAYOUT.id, {\\n      layoutType: \'dagre\',\\n      layoutOptions: {\\n        type: \'dagre\',\\n        /** \u5e03\u5c40\u65b9\u5411 */\\n        rankdir: \'TB\',\\n        /** \u8282\u70b9\u95f4\u8ddd */\\n        nodesep: 60,\\n        /** \u5c42\u95f4\u8ddd */\\n        ranksep: 30,\\n      },\\n      graphData: getGraphData(),\\n    })\\n    const { graphData } = res.contextProvider().getResult()\\n    // render\\n    await app.executeCommand<NsGraphCmd.GraphRender.IArgs>(XFlowGraphCommands.GRAPH_RENDER.id, {\\n      graphData: graphData,\\n    })\\n    // \u5c45\u4e2d\\n    await app.executeCommand<NsGraphCmd.GraphZoom.IArgs>(XFlowGraphCommands.GRAPH_ZOOM.id, {\\n      factor: \'real\',\\n    })\\n  }\\n\\n  return (\\n    <XFlow onLoad={onLoad} className=\\"xflow-workspace\\">\\n      <XFlowCanvas config={graphConfig} position={{ top: 0, bottom: 0, left: 0, right: 0 }}>\\n        <CanvasSnapline />\\n      </XFlowCanvas>\\n    </XFlow>\\n  )\\n}\\n\\nexport default XFlowDemo");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-snapline/demos/basic/mock.ts?dumi-raw-code\n/* harmony default export */ var canvas_snapline_demos_basic_mockdumi_raw_code = ("import type { NsGraph } from \'@antv/xflow\'\\nimport { uuidv4 } from \'@antv/xflow\'\\n\\n// NodeConfig\\nconst NODE_COMMON_PROPS = {\\n  width: 160,\\n  height: 32,\\n} as const\\n// NodeConfig\\nconst EDGE_COMMON_PROPS = {\\n  attrs: {\\n    line: {\\n      targetMarker: {\\n        name: \'block\',\\n        width: 4,\\n        height: 8,\\n      },\\n      strokeDasharray: \'\',\\n      stroke: \'#A2B1C3\',\\n      strokeWidth: 1,\\n    },\\n  },\\n} as const\\n\\n// mock data\\nexport const getGraphData = () => {\\n  const nodes: NsGraph.INodeConfig[] = [\\n    {\\n      id: \'node1\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-1\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node2\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-2\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node3\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-3\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node4\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-4\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n  ]\\n  const edges: NsGraph.IEdgeConfig[] = [\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node2\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node2-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node3\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node3-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node4\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node4-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n  ]\\n  return {\\n    nodes: nodes,\\n    edges: edges,\\n  } as NsGraph.IGraphData\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-snapline/demos/basic/index.less?dumi-raw-code\n/* harmony default export */ var extension_components_canvas_snapline_demos_basicdumi_raw_code = (" \\n@body-bg: #f9f9f9;\\n@primaryColor: #1890ff;\\n@light-border: 1px solid #d9d9d9;\\n\\n.canvas-snapline-basic-demo {\\n  position: relative;\\n  border: @light-border;\\n  .__dumi-default-previewer-demo {\\n    padding: 16px 12px;\\n  }\\n\\n  .xflow-workspace {\\n    height: 350px;\\n    box-shadow: 0 0 10px 1px #e9e9e9;\\n  }\\n\\n  .xflow-x6-canvas {\\n    background: @body-bg;\\n  }\\n\\n  .xflow-canvas-root {\\n    margin: 0;\\n  }\\n\\n  .react-node {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 100%;\\n    height: 100%;\\n    font-weight: 600;\\n    background-color: #fff;\\n    border: 1px solid #873bf4;\\n    border-radius: 4px;\\n    &:hover {\\n      background-color: rgb(234, 219, 255) !important;\\n    }\\n  }\\n  .x6-node-selected {\\n    .react-node {\\n      background-color: rgb(254, 254, 255);\\n      border: 3px solid rgb(135, 59, 244);\\n      box-shadow: 0 0 3px 3px rgba(135, 59, 244, 0.2);\\n      &:hover {\\n        background-color: rgba(227, 244, 255, 0.45);\\n      }\\n    }\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-snapline/demos/color/index.tsx?dumi-raw-code\n/* harmony default export */ var canvas_snapline_demos_colordumi_raw_code = ("import React from \'react\'\\nimport type { IAppLoad, NsGraphCmd } from \'@antv/xflow\'\\nimport {\\n  XFlow,\\n  XFlowCanvas,\\n  CanvasSnapline,\\n  XFlowGraphCommands,\\n  createGraphConfig,\\n} from \'@antv/xflow\'\\nimport { getGraphData } from \'./mock\'\\nimport \'./index.less\'\\nimport \'@antv/xflow/dist/index.css\';\\n/**  Demo Props  */\\nexport interface IDemoProps {\\n  anything: string\\n}\\n/**  graphConfig\uff1a\u914d\u7f6eGraph  */\\nexport const useGraphConfig = createGraphConfig<IDemoProps>(graphConfig => {\\n  graphConfig.setDefaultNodeRender(props => {\\n    return <div className=\\"react-node\\"> {props.data.label} </div>\\n  })\\n})\\n\\nconst XFlowDemo: React.FC<IDemoProps> = props => {\\n  const graphConfig = useGraphConfig(props)\\n\\n  const onLoad: IAppLoad = async app => {\\n    // \u8ba1\u7b97\u5e03\u5c40\\n    const res = await app.executeCommand<\\n      NsGraphCmd.GraphLayout.IArgs,\\n      NsGraphCmd.GraphLayout.IResult\\n    >(XFlowGraphCommands.GRAPH_LAYOUT.id, {\\n      layoutType: \'dagre\',\\n      layoutOptions: {\\n        type: \'dagre\',\\n        /** \u5e03\u5c40\u65b9\u5411 */\\n        rankdir: \'TB\',\\n        /** \u8282\u70b9\u95f4\u8ddd */\\n        nodesep: 60,\\n        /** \u5c42\u95f4\u8ddd */\\n        ranksep: 30,\\n      },\\n      graphData: getGraphData(),\\n    })\\n    const { graphData } = res.contextProvider().getResult()\\n    // render\\n    await app.executeCommand<NsGraphCmd.GraphRender.IArgs>(XFlowGraphCommands.GRAPH_RENDER.id, {\\n      graphData: graphData,\\n    })\\n    // \u5c45\u4e2d\\n    await app.executeCommand<NsGraphCmd.GraphZoom.IArgs>(XFlowGraphCommands.GRAPH_ZOOM.id, {\\n      factor: \'real\',\\n    })\\n  }\\n\\n  return (\\n    <XFlow onLoad={onLoad} className=\\"xflow-workspace\\">\\n      <XFlowCanvas config={graphConfig} position={{ top: 0, bottom: 0, left: 0, right: 0 }}>\\n        <CanvasSnapline color=\\"#873bf4\\" />\\n      </XFlowCanvas>\\n    </XFlow>\\n  )\\n}\\n\\nexport default XFlowDemo");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-snapline/demos/color/mock.ts?dumi-raw-code\n/* harmony default export */ var demos_color_mockdumi_raw_code = ("import type { NsGraph } from \'@antv/xflow\'\\nimport { uuidv4 } from \'@antv/xflow\'\\n\\n// NodeConfig\\nconst NODE_COMMON_PROPS = {\\n  width: 160,\\n  height: 32,\\n} as const\\n// NodeConfig\\nconst EDGE_COMMON_PROPS = {\\n  attrs: {\\n    line: {\\n      targetMarker: {\\n        name: \'block\',\\n        width: 4,\\n        height: 8,\\n      },\\n      strokeDasharray: \'\',\\n      stroke: \'#A2B1C3\',\\n      strokeWidth: 1,\\n    },\\n  },\\n} as const\\n\\n// mock data\\nexport const getGraphData = () => {\\n  const nodes: NsGraph.INodeConfig[] = [\\n    {\\n      id: \'node1\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-1\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node2\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-2\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node3\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-3\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node4\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-4\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n  ]\\n  const edges: NsGraph.IEdgeConfig[] = [\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node2\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node2-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node3\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node3-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node4\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node4-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n  ]\\n  return {\\n    nodes: nodes,\\n    edges: edges,\\n  } as NsGraph.IGraphData\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-snapline/demos/color/index.less?dumi-raw-code\n/* harmony default export */ var extension_components_canvas_snapline_demos_colordumi_raw_code = ("@body-bg: #f9f9f9;\\n@primaryColor: #1890ff;\\n@light-border: 1px solid #d9d9d9;\\n\\n.canvas-snapline-color-demo {\\n  position: relative;\\n  border: @light-border;\\n  .__dumi-default-previewer-demo {\\n    padding: 16px 12px;\\n  }\\n\\n  .xflow-workspace {\\n    height: 350px;\\n    box-shadow: 0 0 10px 1px #e9e9e9;\\n  }\\n\\n  .xflow-x6-canvas {\\n    background: @body-bg;\\n  }\\n\\n  .xflow-canvas-root {\\n    margin: 0;\\n  }\\n\\n  .react-node {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 100%;\\n    height: 100%;\\n    font-weight: 600;\\n    background-color: #fff;\\n    border: 1px solid #873bf4;\\n    border-radius: 4px;\\n    &:hover {\\n      background-color: rgb(234, 219, 255) !important;\\n    }\\n  }\\n  .x6-node-selected {\\n    .react-node {\\n      background-color: rgb(254, 254, 255);\\n      border: 3px solid rgb(135, 59, 244);\\n      box-shadow: 0 0 3px 3px rgba(135, 59, 244, 0.2);\\n      &:hover {\\n        background-color: rgba(227, 244, 255, 0.45);\\n      }\\n    }\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-toolbar/demos/basic/index.tsx?dumi-raw-code\n/* harmony default export */ var canvas_toolbar_demos_basicdumi_raw_code = ("import React from \'react\'\\nimport type { IAppLoad } from \'@antv/xflow\'\\nimport { XFlow, createGraphConfig, XFlowCanvas, CanvasToolbar } from \'@antv/xflow\'\\nimport { useToolbarConfig } from \'./toolbar-config\'\\nimport \'./index.less\'\\nimport \'@antv/xflow/dist/index.css\';\\n/**  Demo Props  */\\nexport interface IDemoProps {\\n  anything: string\\n}\\n/**  graphConfig\uff1a\u914d\u7f6eGraph  */\\nexport const useGraphConfig = createGraphConfig<IDemoProps>(graphConfig => {\\n  graphConfig.setDefaultNodeRender(props => {\\n    return <div className=\\"react-node\\"> {props.data.label} </div>\\n  })\\n})\\n\\nconst XFlowDemo: React.FC<IDemoProps> = props => {\\n  const graphConfig = useGraphConfig(props)\\n  const toolbarConfig = useToolbarConfig(props)\\n\\n  const onLoad: IAppLoad = async app => {\\n    console.log(app)\\n  }\\n\\n  return (\\n    <XFlow onLoad={onLoad} className=\\"xflow-workspace\\">\\n      <CanvasToolbar\\n        layout=\\"horizontal\\"\\n        config={toolbarConfig}\\n        position={{ top: 0, left: 0, right: 0, height: 40 }}\\n      />\\n      <XFlowCanvas config={graphConfig} position={{ top: 40, bottom: 0, left: 0, right: 0 }} />\\n    </XFlow>\\n  )\\n}\\n\\nexport default XFlowDemo");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-toolbar/demos/basic/toolbar-config.tsx?dumi-raw-code\n/* harmony default export */ var toolbar_configdumi_raw_code = ("import type { IToolbarItemOptions } from \'@antv/xflow\'\\nimport { createToolbarConfig } from \'@antv/xflow\'\\nimport { XFlowGraphCommands, XFlowNodeCommands, IconStore } from \'@antv/xflow\'\\nimport { SaveOutlined, PlusCircleOutlined, DeleteOutlined } from \'@ant-design/icons\'\\nimport { message } from \'antd\'\\nimport type { NsGraphCmd, NsNodeCmd } from \'@antv/xflow\'\\n\\nnamespace NsConfig {\\n  /** \u6ce8\u518cicon \u7c7b\u578b */\\n  IconStore.set(\'PlusCircleOutlined\', PlusCircleOutlined)\\n  IconStore.set(\'DeleteOutlined\', DeleteOutlined)\\n  IconStore.set(\'SaveOutlined\', SaveOutlined)\\n  /** nodeId */\\n  let id = 1\\n  /** \u83b7\u53d6toobar\u914d\u7f6e\u9879 */\\n  export const getToolbarItems = async () => {\\n    const toolbarGroup1: IToolbarItemOptions[] = []\\n    const toolbarGroup2: IToolbarItemOptions[] = []\\n    /** \u4fdd\u5b58\u6570\u636e */\\n    toolbarGroup1.push({\\n      id: XFlowNodeCommands.ADD_NODE.id,\\n      iconName: \'PlusCircleOutlined\',\\n      tooltip: \'\u6dfb\u52a0\u8282\u70b9\',\\n      onClick: async ({ commandService }) => {\\n        const nodeName = `Node-${id}`\\n        commandService.executeCommand<NsNodeCmd.AddNode.IArgs>(XFlowNodeCommands.ADD_NODE.id, {\\n          nodeConfig: {\\n            id: nodeName,\\n            label: nodeName,\\n            x: 100 + id * 5,\\n            y: 50 + id * 5,\\n            width: 160,\\n            height: 32,\\n          },\\n        })\\n        id += 1\\n      },\\n    })\\n    toolbarGroup1.push({\\n      id: XFlowNodeCommands.MOVE_NODE.id,\\n      iconName: \'DeleteOutlined\',\\n      tooltip: \'\u5220\u9664\u8282\u70b9\',\\n      isEnabled: false,\\n    })\\n\\n    /** \u4fdd\u5b58\u6570\u636e */\\n    toolbarGroup2.push({\\n      id: XFlowGraphCommands.SAVE_GRAPH_DATA.id,\\n      iconName: \'SaveOutlined\',\\n      tooltip: \'\u4fdd\u5b58\u6570\u636e\',\\n      onClick: async ({ commandService }) => {\\n        commandService.executeCommand<NsGraphCmd.SaveGraphData.IArgs>(\\n          XFlowGraphCommands.SAVE_GRAPH_DATA.id,\\n          {\\n            saveGraphDataService: async (meta, data) => {\\n              console.log(data)\\n              message.success(\'nodes count:\' + data.nodes.length)\\n            },\\n          },\\n        )\\n      },\\n    })\\n\\n    return [\\n      { name: \'nodeGroup\', items: toolbarGroup1 },\\n      { name: \'graphGroup\', items: toolbarGroup2 },\\n    ]\\n  }\\n}\\n\\n/** wrap\u51fa\u4e00\u4e2ahook */\\nexport const useToolbarConfig = createToolbarConfig(toolbarConfig => {\\n  /** \u751f\u4ea7 toolbar item */\\n  toolbarConfig.setToolbarModelService(async toolbarModel => {\\n    const toolbarItems = await NsConfig.getToolbarItems()\\n    toolbarModel.setValue(toolbar => {\\n      toolbar.mainGroups = toolbarItems\\n    })\\n  })\\n})");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-toolbar/demos/basic/index.less?dumi-raw-code\n/* harmony default export */ var extension_components_canvas_toolbar_demos_basicdumi_raw_code = ("@body-bg: #f9f9f9;\\n@primaryColor: #1890ff;\\n@light-border: 1px solid #d9d9d9;\\n\\n.canvas-toolbar-basic {\\n  position: relative;\\n  border: @light-border;\\n  .__dumi-default-previewer-demo {\\n    padding: 16px 12px;\\n  }\\n\\n  .xflow-workspace {\\n    min-height: 290px;\\n    box-shadow: 0 0 10px 1px #e9e9e9;\\n  }\\n\\n  .xflow-x6-canvas {\\n    background: @body-bg;\\n  }\\n\\n  .xflow-canvas-root {\\n    margin: 0;\\n  }\\n\\n  .react-node {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 100%;\\n    height: 100%;\\n    font-weight: 600;\\n    background-color: #fff;\\n    border: 1px solid #873bf4;\\n    border-radius: 4px;\\n    &:hover {\\n      background-color: rgb(234, 219, 255) !important;\\n    }\\n  }\\n  .x6-node-selected {\\n    .react-node {\\n      background-color: rgb(254, 254, 255);\\n      border: 3px solid rgb(135, 59, 244);\\n      box-shadow: 0 0 3px 3px rgba(135, 59, 244, 0.2);\\n      &:hover {\\n        background-color: rgba(227, 244, 255, 0.45);\\n      }\\n    }\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-toolbar/demos/toolbar-render-item/index.tsx?dumi-raw-code\n/* harmony default export */ var toolbar_render_itemdumi_raw_code = ("import React from \'react\'\\nimport type { IAppLoad } from \'@antv/xflow\'\\nimport { XFlow, createGraphConfig, XFlowCanvas, CanvasToolbar } from \'@antv/xflow\'\\nimport { useToolbarConfig } from \'./toolbar-config\'\\nimport \'./index.less\'\\nimport \'@antv/xflow/dist/index.css\'\\n/**  Demo Props  */\\nexport interface IDemoProps {\\n  anything: string\\n}\\n/**  graphConfig\uff1a\u914d\u7f6eGraph  */\\nexport const useGraphConfig = createGraphConfig<IDemoProps>(graphConfig => {\\n  graphConfig.setDefaultNodeRender(props => {\\n    return <div className=\\"react-node\\"> {props.data.label} </div>\\n  })\\n})\\n\\nconst XFlowDemo: React.FC<IDemoProps> = props => {\\n  const graphConfig = useGraphConfig(props)\\n  const toolbarConfig = useToolbarConfig(props)\\n\\n  const onLoad: IAppLoad = async app => {\\n    console.log(app)\\n  }\\n\\n  return (\\n    <XFlow onLoad={onLoad} className=\\"xflow-workspace\\">\\n      <CanvasToolbar\\n        layout=\\"horizontal\\"\\n        config={toolbarConfig}\\n        position={{ top: 0, left: 0, right: 0, height: 40 }}\\n      />\\n      <XFlowCanvas config={graphConfig} position={{ top: 40, bottom: 0, left: 0, right: 0 }} />\\n    </XFlow>\\n  )\\n}\\n\\nexport default XFlowDemo");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-toolbar/demos/toolbar-render-item/toolbar-config.tsx?dumi-raw-code\n/* harmony default export */ var toolbar_render_item_toolbar_configdumi_raw_code = ("import type { IToolbarItemOptions } from \'@antv/xflow\'\\nimport { XFlowNodeCommands, createToolbarConfig } from \'@antv/xflow\'\\nimport { IconStore } from \'@antv/xflow\'\\nimport { SaveOutlined, PlusCircleOutlined, DeleteOutlined } from \'@ant-design/icons\'\\nimport { Popconfirm } from \'antd\'\\nimport React from \'react\'\\n\\nexport namespace NSToolbarConfig {\\n  /** \u6ce8\u518cicon \u7c7b\u578b */\\n  IconStore.set(\'PlusCircleOutlined\', PlusCircleOutlined)\\n  IconStore.set(\'DeleteOutlined\', DeleteOutlined)\\n  IconStore.set(\'SaveOutlined\', SaveOutlined)\\n\\n  export const getToolbarItems = async () => {\\n    const textToolbarGroup: IToolbarItemOptions[] = []\\n    const iconToolbarGroup: IToolbarItemOptions[] = []\\n    /** \u4fdd\u5b58\u6570\u636e */\\n    textToolbarGroup.push({\\n      id: XFlowNodeCommands.MOVE_NODE.id + \'text only\',\\n      text: \'\u6dfb\u52a0\u8282\u70b9\',\\n      tooltip: \'\u6dfb\u52a0\u8282\u70b9\uff0ctext=\u6dfb\u52a0\u8282\u70b9, group1\',\\n    })\\n    textToolbarGroup.push({\\n      id: XFlowNodeCommands.MOVE_NODE.id + \'text\',\\n      iconName: \'PlusCircleOutlined\',\\n      text: \'\u6dfb\u52a0\u8282\u70b9\',\\n      tooltip: \'\u6dfb\u52a0\u8282\u70b9\uff0ctext + iconName, group1 \',\\n    })\\n    iconToolbarGroup.push({\\n      id: XFlowNodeCommands.ADD_NODE.id + \'iconName\',\\n      iconName: \'PlusCircleOutlined\',\\n      tooltip: \'\u6dfb\u52a0\u8282\u70b9\uff0c\u53ea\u914d\u7f6e iconName=PlusCircleOutlined, group2  \',\\n    })\\n    iconToolbarGroup.push({\\n      id: XFlowNodeCommands.MOVE_NODE.id + \'tooltip\',\\n      iconName: \'PlusCircleOutlined\',\\n      tooltip: \'\u6dfb\u52a0\u8282\u70b9\uff0c tooltip \u914d\u7f6e, group2\',\\n    })\\n    iconToolbarGroup.push({\\n      id: XFlowNodeCommands.MOVE_NODE.id + \'disabled\',\\n      iconName: \'PlusCircleOutlined\',\\n      tooltip: \'\u6dfb\u52a0\u8282\u70b9\uff0c isEnabled=false, group2\',\\n      isEnabled: false,\\n    })\\n    iconToolbarGroup.push({\\n      id: XFlowNodeCommands.MOVE_NODE.id + \'visible\',\\n      iconName: \'PlusCircleOutlined\',\\n      tooltip: \'\u6dfb\u52a0\u8282\u70b9 isVisible=true, group2\',\\n      isVisible: false,\\n    })\\n    iconToolbarGroup.push({\\n      id: XFlowNodeCommands.MOVE_NODE.id + \'active\',\\n      iconName: \'PlusCircleOutlined\',\\n      tooltip: \'\u6dfb\u52a0\u8282\u70b9 active=true, group2\',\\n      active: true,\\n    })\\n    iconToolbarGroup.push({\\n      id: XFlowNodeCommands.MOVE_NODE.id + \'custom render\',\\n      iconName: \'PlusCircleOutlined\',\\n      tooltip: \'\u6dfb\u52a0\u8282\u70b9 \u81ea\u5b9a\u4e49\u6e32\u67d3\u6dfb\u52a0\u4e00\u4e2aPopconfirm, group2\',\\n      onClick: args => {\\n        console.log(\'toolbar onClick args\', args)\\n      },\\n      render: props => {\\n        return (\\n          <Popconfirm\\n            title=\\"are you sure\\"\\n            onConfirm={() => {\\n              props.onClick()\\n            }}\\n          >\\n            {props.children}\\n          </Popconfirm>\\n        )\\n      },\\n    })\\n\\n    return [\\n      { name: \'textToolbarGroup\', items: textToolbarGroup },\\n      { name: \'iconToolbarGroup\', items: iconToolbarGroup },\\n    ]\\n  }\\n  export const getExtraToolbarItems = async () => {\\n    const toolbarGroup: IToolbarItemOptions[] = []\\n    /** \u4fdd\u5b58\u6570\u636e */\\n    toolbarGroup.push({\\n      id: XFlowNodeCommands.MOVE_NODE.id + \'text only\',\\n      text: \'\u6dfb\u52a0\u8282\u70b9\',\\n      tooltip: \'\u6dfb\u52a0\u8282\u70b9\uff0c\u914d\u7f6eextraGroups\',\\n    })\\n\\n    return [{ name: \'extra\', items: toolbarGroup }]\\n  }\\n}\\nexport const useToolbarConfig = createToolbarConfig(toolbarConfig => {\\n  /** \u751f\u4ea7 toolbar item */\\n  toolbarConfig.setToolbarModelService(async toolbarModel => {\\n    const toolbarItems = await NSToolbarConfig.getToolbarItems()\\n    const extraToolbarItems = await NSToolbarConfig.getExtraToolbarItems()\\n    toolbarModel.setValue(toolbar => {\\n      toolbar.mainGroups = toolbarItems\\n      toolbar.extraGroups = extraToolbarItems\\n    })\\n  })\\n})");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-toolbar/demos/toolbar-render-item/index.less?dumi-raw-code\n/* harmony default export */ var demos_toolbar_render_itemdumi_raw_code = ("@body-bg: #f9f9f9;\\n@primaryColor: #1890ff;\\n@light-border: 1px solid #d9d9d9;\\n\\n.toolbar-render-item {\\n  position: relative;\\n  border: @light-border;\\n  .__dumi-default-previewer-demo {\\n    padding: 16px 12px;\\n\\n    .xflow-workspace {\\n      height: 300px;\\n      box-shadow: 0 0 10px 1px #e9e9e9;\\n    }\\n\\n    .xflow-x6-canvas {\\n      background: @body-bg;\\n    }\\n\\n    .xflow-canvas-root {\\n      margin: 0;\\n    }\\n  }\\n\\n  .react-node {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 100%;\\n    height: 100%;\\n    font-weight: 600;\\n    background-color: #fff;\\n    border: 1px solid #873bf4;\\n    border-radius: 4px;\\n    &:hover {\\n      background-color: rgb(234, 219, 255) !important;\\n    }\\n  }\\n  .x6-node-selected {\\n    .react-node {\\n      background-color: rgb(254, 254, 255);\\n      border: 3px solid rgb(135, 59, 244);\\n      box-shadow: 0 0 3px 3px rgba(135, 59, 244, 0.2);\\n      &:hover {\\n        background-color: rgba(227, 244, 255, 0.45);\\n      }\\n    }\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-toolbar/demos/toolbar-layout/index.tsx?dumi-raw-code\n/* harmony default export */ var toolbar_layoutdumi_raw_code = ("import React from \'react\'\\nimport { XFlow, createGraphConfig, XFlowCanvas, CanvasToolbar } from \'@antv/xflow\'\\nimport { useToolbarConfig1, useToolbarConfig2, useToolbarConfig3 } from \'./toolbar-config\'\\nimport type { IAppLoad } from \'@antv/xflow\'\\nimport \'./index.less\'\\nimport \'@antv/xflow/dist/index.css\';\\n/**  Demo Props  */\\nexport interface IDemoProps {\\n  anything: string\\n}\\n/**  graphConfig\uff1a\u914d\u7f6eGraph  */\\nexport const useGraphConfig = createGraphConfig<IDemoProps>(graphConfig => {\\n  graphConfig.setDefaultNodeRender(props => {\\n    return <div className=\\"react-node\\"> {props.data.label} </div>\\n  })\\n})\\n\\nconst XFlowDemo: React.FC<IDemoProps> = props => {\\n  const graphConfig = useGraphConfig(props)\\n  const toolbarConfig1 = useToolbarConfig1(props)\\n  const toolbarConfig2 = useToolbarConfig2(props)\\n  const toolbarConfig3 = useToolbarConfig3(props)\\n\\n  const onLoad: IAppLoad = async app => {\\n    console.log(app)\\n  }\\n\\n  return (\\n    <XFlow onLoad={onLoad} className=\\"xflow-workspace\\">\\n      <CanvasToolbar\\n        layout={\'vertical\'}\\n        config={toolbarConfig1}\\n        position={{ top: 48, left: 8, bottom: 48 }}\\n      />\\n      <CanvasToolbar\\n        layout=\\"horizontal\\"\\n        config={toolbarConfig2}\\n        position={{ top: 0, left: 0, right: 0, height: 40 }}\\n      />\\n      <CanvasToolbar\\n        layout={\'horizontal-center\'}\\n        config={toolbarConfig3}\\n        position={{ bottom: 0, left: 0, right: 0, height: 40 }}\\n      />\\n\\n      <XFlowCanvas config={graphConfig} position={{ top: 0, bottom: 0, left: 0, right: 0 }} />\\n    </XFlow>\\n  )\\n}\\n\\nexport default XFlowDemo");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-toolbar/demos/toolbar-layout/toolbar-config.tsx?dumi-raw-code\n/* harmony default export */ var toolbar_layout_toolbar_configdumi_raw_code = ("import { createToolbarConfig } from \'@antv/xflow\'\\nimport { IconStore } from \'@antv/xflow\'\\nimport { PlusCircleOutlined } from \'@ant-design/icons\'\\n\\nIconStore.set(\'PlusCircleOutlined\', PlusCircleOutlined)\\n\\nexport const useToolbarConfig1 = createToolbarConfig(toolbarConfig => {\\n  /** \u751f\u4ea7 toolbar item */\\n  toolbarConfig.setToolbarModelService(async toolbarModel => {\\n    toolbarModel.setValue(toolbar => {\\n      toolbar.mainGroups = [\\n        {\\n          name: \'main\',\\n          items: [\\n            {\\n              id: \'1\',\\n              iconName: \'PlusCircleOutlined\',\\n              tooltip: \'vertical\',\\n            },\\n            {\\n              id: \'2\',\\n              iconName: \'PlusCircleOutlined\',\\n              tooltip: \'vertical\',\\n            },\\n          ],\\n        },\\n      ]\\n      toolbar.extraGroups = [\\n        {\\n          name: \'extra\',\\n          items: [\\n            {\\n              id: \'3\',\\n              iconName: \'PlusCircleOutlined\',\\n              tooltip: \'vertical\',\\n            },\\n          ],\\n        },\\n      ]\\n    })\\n  })\\n})\\nexport const useToolbarConfig2 = createToolbarConfig(toolbarConfig => {\\n  /** \u751f\u4ea7 toolbar item */\\n  toolbarConfig.setToolbarModelService(async toolbarModel => {\\n    toolbarModel.setValue(toolbar => {\\n      toolbar.mainGroups = [\\n        {\\n          name: \'main\',\\n          items: [\\n            {\\n              id: \'1\',\\n              text: \'\u6dfb\u52a0\u8282\u70b9\',\\n              iconName: \'PlusCircleOutlined\',\\n              tooltip: \'horizontal\',\\n            },\\n            {\\n              id: \'2\',\\n              text: \'\u6dfb\u52a0\u8282\u70b9\',\\n              iconName: \'PlusCircleOutlined\',\\n              tooltip: \'horizontal\',\\n            },\\n          ],\\n        },\\n      ]\\n      toolbar.extraGroups = [\\n        {\\n          name: \'extra\',\\n          items: [\\n            {\\n              id: \'3\',\\n              iconName: \'PlusCircleOutlined\',\\n              text: \'\u6dfb\u52a0\u8282\u70b9\',\\n              tooltip: \'\u6dfb\u52a0\u8282\u70b9\uff0c\u914d\u7f6eextraGroups\',\\n            },\\n          ],\\n        },\\n      ]\\n    })\\n  })\\n})\\nexport const useToolbarConfig3 = createToolbarConfig(toolbarConfig => {\\n  /** \u751f\u4ea7 toolbar item */\\n  toolbarConfig.setToolbarModelService(async toolbarModel => {\\n    toolbarModel.setValue(toolbar => {\\n      toolbar.mainGroups = [\\n        {\\n          name: \'main\',\\n          items: [\\n            {\\n              id: \'1\',\\n              text: \'\u6dfb\u52a0\u8282\u70b9\',\\n              iconName: \'PlusCircleOutlined\',\\n              tooltip: \'horizontal-center\',\\n            },\\n            {\\n              id: \'2\',\\n              text: \'\u6dfb\u52a0\u8282\u70b9\',\\n              iconName: \'PlusCircleOutlined\',\\n              tooltip: \'horizontal-center\',\\n            },\\n          ],\\n        },\\n      ]\\n      toolbar.extraGroups = [\\n        {\\n          name: \'extra\',\\n          items: [\\n            {\\n              id: \'3\',\\n              iconName: \'PlusCircleOutlined\',\\n              text: \'\u6dfb\u52a0\u8282\u70b9\',\\n              tooltip: \'\u6dfb\u52a0\u8282\u70b9\uff0c\u914d\u7f6eextraGroups\',\\n            },\\n          ],\\n        },\\n      ]\\n    })\\n  })\\n})");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-toolbar/demos/toolbar-layout/index.less?dumi-raw-code\n/* harmony default export */ var demos_toolbar_layoutdumi_raw_code = ("@body-bg: #f9f9f9;\\n@primaryColor: #1890ff;\\n@light-border: 1px solid #d9d9d9;\\n\\n.toolbar-layout {\\n  position: relative;\\n  border: @light-border;\\n  .__dumi-default-previewer-demo {\\n    padding: 16px 12px;\\n\\n    .xflow-workspace {\\n      height: 300px;\\n      box-shadow: 0 0 10px 1px #e9e9e9;\\n    }\\n\\n    .xflow-x6-canvas {\\n      background: @body-bg;\\n    }\\n\\n    .xflow-canvas-root {\\n      margin: 0;\\n    }\\n  }\\n\\n  .react-node {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 100%;\\n    height: 100%;\\n    font-weight: 600;\\n    background-color: #fff;\\n    border: 1px solid #873bf4;\\n    border-radius: 4px;\\n    &:hover {\\n      background-color: rgb(234, 219, 255) !important;\\n    }\\n  }\\n  .x6-node-selected {\\n    .react-node {\\n      background-color: rgb(254, 254, 255);\\n      border: 3px solid rgb(135, 59, 244);\\n      box-shadow: 0 0 3px 3px rgba(135, 59, 244, 0.2);\\n      &:hover {\\n        background-color: rgba(227, 244, 255, 0.45);\\n      }\\n    }\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-toolbar/demos/toolbar-model/index.tsx?dumi-raw-code\n/* harmony default export */ var toolbar_modeldumi_raw_code = ("import React from \'react\'\\nimport type { IAppLoad, NsNodeCmd } from \'@antv/xflow\'\\nimport { XFlowNodeCommands } from \'@antv/xflow\'\\nimport { XFlow, createGraphConfig, XFlowCanvas, CanvasToolbar } from \'@antv/xflow\'\\nimport { useToolbarConfig } from \'./toolbar-config\'\\nimport \'./index.less\'\\nimport \'@antv/xflow/dist/index.css\'\\n/**  Demo Props  */\\nexport interface IDemoProps {\\n  anything: string\\n}\\n/**  graphConfig\uff1a\u914d\u7f6eGraph  */\\nexport const useGraphConfig = createGraphConfig<IDemoProps>(graphConfig => {\\n  graphConfig.setDefaultNodeRender(props => {\\n    return <div className=\\"react-node\\"> {props.data.label} </div>\\n  })\\n})\\n\\nconst XFlowDemo: React.FC<IDemoProps> = props => {\\n  const graphConfig = useGraphConfig(props)\\n  const toolbarConfig = useToolbarConfig(props)\\n\\n  const onLoad: IAppLoad = async app => {\\n    console.log(app)\\n    app.executeCommand<NsNodeCmd.AddNode.IArgs>(XFlowNodeCommands.ADD_NODE.id, {\\n      nodeConfig: {\\n        id: `Node-1`,\\n        label: `Node-1`,\\n        x: 100,\\n        y: 50,\\n        width: 160,\\n        height: 32,\\n      },\\n    })\\n    app.executeCommand<NsNodeCmd.AddNode.IArgs>(XFlowNodeCommands.ADD_NODE.id, {\\n      nodeConfig: {\\n        id: `Node-2`,\\n        label: `Node-2`,\\n        x: 110,\\n        y: 60,\\n        width: 160,\\n        height: 32,\\n      },\\n    })\\n    app.executeCommand<NsNodeCmd.AddNode.IArgs>(XFlowNodeCommands.ADD_NODE.id, {\\n      nodeConfig: {\\n        id: `Node-3`,\\n        label: `Node-3`,\\n        x: 120,\\n        y: 70,\\n        width: 160,\\n        height: 32,\\n      },\\n    })\\n  }\\n\\n  return (\\n    <XFlow onLoad={onLoad} className=\\"xflow-workspace\\">\\n      <CanvasToolbar\\n        layout=\\"horizontal\\"\\n        config={toolbarConfig}\\n        position={{ top: 0, left: 0, right: 0, height: 40 }}\\n      />\\n      <XFlowCanvas config={graphConfig} position={{ top: 40, bottom: 0, left: 0, right: 0 }} />\\n    </XFlow>\\n  )\\n}\\n\\nexport default XFlowDemo");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-toolbar/demos/toolbar-model/toolbar-config.tsx?dumi-raw-code\n/* harmony default export */ var toolbar_model_toolbar_configdumi_raw_code = ("import type { IModelService, IToolbarItemOptions } from \'@antv/xflow\'\\nimport { createToolbarConfig } from \'@antv/xflow\'\\nimport { MODELS, XFlowNodeCommands, IconStore } from \'@antv/xflow\'\\nimport { SaveOutlined, PlusCircleOutlined, DeleteOutlined } from \'@ant-design/icons\'\\n\\nexport namespace NSToolbarConfig {\\n  /** \u6ce8\u518cicon \u7c7b\u578b */\\n  IconStore.set(\'PlusCircleOutlined\', PlusCircleOutlined)\\n  IconStore.set(\'DeleteOutlined\', DeleteOutlined)\\n  IconStore.set(\'SaveOutlined\', SaveOutlined)\\n\\n  /** toolbar\u4f9d\u8d56\u7684\u72b6\u6001 */\\n  export interface IState {\\n    isNodeSelected: boolean\\n  }\\n\\n  /** \u83b7\u53d6toolbar\u4f9d\u8d56\u7684\u72b6\u6001 */\\n  export const getToolbarState = async (modelService: IModelService) => {\\n    // nodes\\n    const nodes = await MODELS.SELECTED_NODES.useValue(modelService)\\n    return {\\n      isNodeSelected: nodes.length > 0,\\n    } as IState\\n  }\\n  /** toolbar\u4f9d\u8d56\u7684\u914d\u7f6e\u9879 */\\n  export const getToolbarItems = async (state: IState) => {\\n    const toolbarGroup1: IToolbarItemOptions[] = []\\n    toolbarGroup1.push({\\n      id: XFlowNodeCommands.MOVE_NODE.id,\\n      text: \'\u5220\u9664\u8282\u70b9\uff0c\u53ea\u6709Node\u9009\u4e2d\u65f6\u53ef\u7528\',\\n      iconName: \'DeleteOutlined\',\\n      tooltip: \'\u5220\u9664\u8282\u70b9: \u53ea\u5728\u6709node\u9009\u4e2d\u65f6Enable\',\\n      isEnabled: state.isNodeSelected,\\n    })\\n\\n    return [{ name: \'toolbar\', items: toolbarGroup1 }]\\n  }\\n}\\n\\n/** toolbar\u4f9d\u8d56\u7684\u914d\u7f6e\u9879 */\\nexport const useToolbarConfig = createToolbarConfig(toolbarConfig => {\\n  /** \u751f\u4ea7 toolbar item */\\n  toolbarConfig.setToolbarModelService(async (toolbarModel, modelService) => {\\n    // \u66f4\u65b0toolbar model\\n    const updateToolbarState = async () => {\\n      const toolbarState = await NSToolbarConfig.getToolbarState(modelService)\\n      const toolbarItems = await NSToolbarConfig.getToolbarItems(toolbarState)\\n      toolbarModel.setValue(toolbar => {\\n        toolbar.mainGroups = toolbarItems\\n      })\\n    }\\n\\n    // \u76d1\u542c\u5bf9\u5e94\u7684model\\n    const model = await MODELS.SELECTED_NODES.getModel(modelService)\\n    model.watch(() => {\\n      updateToolbarState()\\n    })\\n  })\\n})");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-toolbar/demos/toolbar-model/index.less?dumi-raw-code\n/* harmony default export */ var demos_toolbar_modeldumi_raw_code = ("@body-bg: #f9f9f9;\\n@primaryColor: #1890ff;\\n@light-border: 1px solid #d9d9d9;\\n\\n.canvas-toolbar-model {\\n  position: relative;\\n  border: @light-border;\\n  .__dumi-default-previewer-demo {\\n    padding: 16px 12px;\\n  }\\n\\n  .xflow-workspace {\\n    height: 300px;\\n    box-shadow: 0 0 10px 1px #e9e9e9;\\n  }\\n\\n  .xflow-x6-canvas {\\n    background: @body-bg;\\n  }\\n\\n  .xflow-canvas-root {\\n    margin: 0;\\n  }\\n\\n  .react-node {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 100%;\\n    height: 100%;\\n    font-weight: 600;\\n    background-color: #fff;\\n    border: 1px solid #873bf4;\\n    border-radius: 4px;\\n    &:hover {\\n      background-color: rgb(234, 219, 255) !important;\\n    }\\n  }\\n  .x6-node-selected {\\n    .react-node {\\n      background-color: rgb(254, 254, 255);\\n      border: 3px solid rgb(135, 59, 244);\\n      box-shadow: 0 0 3px 3px rgba(135, 59, 244, 0.2);\\n      &:hover {\\n        background-color: rgba(227, 244, 255, 0.45);\\n      }\\n    }\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-toolbar/demos/toolbar-custom-render/index.tsx?dumi-raw-code\n/* harmony default export */ var toolbar_custom_renderdumi_raw_code = ("import React from \'react\'\\nimport type { IAppLoad, NsNodeCmd } from \'@antv/xflow\'\\nimport { XFlowNodeCommands } from \'@antv/xflow\'\\nimport { XFlow, createGraphConfig, XFlowCanvas, CanvasToolbar } from \'@antv/xflow\'\\nimport { useToolbarConfig } from \'./toolbar-config\'\\nimport \'./index.less\'\\nimport \'@antv/xflow/dist/index.css\';\\n/**  Demo Props  */\\nexport interface IDemoProps {\\n  anything: string\\n}\\n/**  graphConfig\uff1a\u914d\u7f6eGraph  */\\nexport const useGraphConfig = createGraphConfig<IDemoProps>(graphConfig => {\\n  graphConfig.setDefaultNodeRender(props => {\\n    return <div className=\\"react-node\\"> {props.data.label} </div>\\n  })\\n})\\n\\nconst XFlowDemo: React.FC<IDemoProps> = props => {\\n  const graphConfig = useGraphConfig(props)\\n  const toolbarConfig = useToolbarConfig(props)\\n\\n  const onLoad: IAppLoad = async app => {\\n    console.log(app)\\n    app.executeCommand<NsNodeCmd.AddNode.IArgs>(XFlowNodeCommands.ADD_NODE.id, {\\n      nodeConfig: {\\n        id: `Node-1`,\\n        label: `Node-1`,\\n        x: 100,\\n        y: 50,\\n        width: 160,\\n        height: 32,\\n      },\\n    })\\n    app.executeCommand<NsNodeCmd.AddNode.IArgs>(XFlowNodeCommands.ADD_NODE.id, {\\n      nodeConfig: {\\n        id: `Node-2`,\\n        label: `Node-2`,\\n        x: 110,\\n        y: 60,\\n        width: 160,\\n        height: 32,\\n      },\\n    })\\n    app.executeCommand<NsNodeCmd.AddNode.IArgs>(XFlowNodeCommands.ADD_NODE.id, {\\n      nodeConfig: {\\n        id: `Node-3`,\\n        label: `Node-3`,\\n        x: 120,\\n        y: 70,\\n        width: 160,\\n        height: 32,\\n      },\\n    })\\n  }\\n\\n  return (\\n    <XFlow onLoad={onLoad} className=\\"xflow-workspace\\">\\n      <CanvasToolbar\\n        layout=\\"horizontal\\"\\n        config={toolbarConfig}\\n        position={{ top: 0, left: 0, right: 0, height: 40 }}\\n      />\\n      <XFlowCanvas config={graphConfig} position={{ top: 40, bottom: 0, left: 0, right: 0 }} />\\n    </XFlow>\\n  )\\n}\\n\\nexport default XFlowDemo");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-toolbar/demos/toolbar-custom-render/toolbar-config.tsx?dumi-raw-code\n/* harmony default export */ var toolbar_custom_render_toolbar_configdumi_raw_code = ("import type { IModelService, IToolbarItemOptions } from \'@antv/xflow\'\\nimport { createToolbarConfig } from \'@antv/xflow\'\\nimport { MODELS, XFlowNodeCommands, IconStore } from \'@antv/xflow\'\\nimport { SaveOutlined, PlusCircleOutlined, DeleteOutlined } from \'@ant-design/icons\'\\nimport { Button } from \'antd\'\\nexport namespace NSToolbarConfig {\\n  /** \u6ce8\u518cicon \u7c7b\u578b */\\n  IconStore.set(\'PlusCircleOutlined\', PlusCircleOutlined)\\n  IconStore.set(\'DeleteOutlined\', DeleteOutlined)\\n  IconStore.set(\'SaveOutlined\', SaveOutlined)\\n\\n  /** toolbar\u4f9d\u8d56\u7684\u72b6\u6001 */\\n  export interface IState {\\n    isNodeSelected: boolean\\n  }\\n\\n  /** \u83b7\u53d6toolbar\u4f9d\u8d56\u7684\u72b6\u6001 */\\n  export const getToolbarState = async (modelService: IModelService) => {\\n    // nodes\\n    const nodes = await MODELS.SELECTED_NODES.useValue(modelService)\\n    return {\\n      isNodeSelected: nodes.length > 0,\\n    } as IState\\n  }\\n  /** toolbar\u4f9d\u8d56\u7684\u914d\u7f6e\u9879 */\\n  export const getToolbarItems = async (state: IState) => {\\n    const toolbarGroup1: IToolbarItemOptions[] = []\\n    toolbarGroup1.push({\\n      id: XFlowNodeCommands.MOVE_NODE.id,\\n      text: \'\u9009\u4e2d\u8282\u70b9\u65f6\u4f1a\u4f7f\u7528\u81ea\u5b9a\u4e49\u6e32\u67d3\',\\n      iconName: \'DeleteOutlined\',\\n      tooltip: \'\u9009\u4e2d\u8282\u70b9\u65f6\u4f1a\u89e6\u53d1\u81ea\u5b9a\u4e49\u6e32\u67d3\',\\n      isEnabled: state.isNodeSelected,\\n    })\\n\\n    return [{ name: \'toolbar\', items: toolbarGroup1 }]\\n  }\\n}\\n\\n/** toolbar\u4f9d\u8d56\u7684\u914d\u7f6e\u9879 */\\nexport const useToolbarConfig = createToolbarConfig(toolbarConfig => {\\n  /** \u751f\u4ea7 toolbar item */\\n  toolbarConfig.setToolbarModelService(async (toolbarModel, modelService, toDispose) => {\\n    // \u66f4\u65b0toolbar model\\n    const updateToolbarState = async () => {\\n      const toolbarState = await NSToolbarConfig.getToolbarState(modelService)\\n      const toolbarItems = await NSToolbarConfig.getToolbarItems(toolbarState)\\n      toolbarModel.setValue(toolbar => {\\n        toolbar.mainGroups = toolbarItems\\n      })\\n    }\\n\\n    // \u76d1\u542c\u5bf9\u5e94\u7684model\\n    const model = await MODELS.SELECTED_NODES.getModel(modelService)\\n    const d = model.watch(() => {\\n      updateToolbarState()\\n    })\\n    toDispose.push(d)\\n  })\\n\\n  toolbarConfig.setCustomToolbarRender(async (modelService, updateComponent) => {\\n    const model = await MODELS.SELECTED_NODES.getModel(modelService)\\n    model.watch(nodes => {\\n      if (nodes.length > 0) {\\n        const CustomRender = () => (\\n          <div className=\\"custom-toolbar\\">\\n            <Button> \u652f\u6301\u81ea\u5b9a\u4e49\u6e32\u67d3 </Button>\\n          </div>\\n        )\\n        updateComponent(CustomRender)\\n      } else {\\n        updateComponent(null)\\n      }\\n    })\\n    return null\\n  })\\n})");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/canvas-toolbar/demos/toolbar-custom-render/index.less?dumi-raw-code\n/* harmony default export */ var demos_toolbar_custom_renderdumi_raw_code = ("@body-bg: #f9f9f9;\\n@primaryColor: #1890ff;\\n@light-border: 1px solid #d9d9d9;\\n\\n.toolbar-custom-render {\\n  position: relative;\\n  border: @light-border;\\n  .__dumi-default-previewer-demo {\\n    padding: 16px 12px;\\n  }\\n\\n  .xflow-workspace {\\n    height: 300px;\\n    box-shadow: 0 0 10px 1px #e9e9e9;\\n  }\\n\\n  .xflow-x6-canvas {\\n    background: @body-bg;\\n  }\\n\\n  .xflow-canvas-root {\\n    margin: 0;\\n  }\\n\\n  .custom-toolbar {\\n    width: 100%;\\n    line-height: 40px;\\n    text-align: center;\\n  }\\n\\n  .react-node {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 100%;\\n    height: 100%;\\n    font-weight: 600;\\n    background-color: #fff;\\n    border: 1px solid #873bf4;\\n    border-radius: 4px;\\n    &:hover {\\n      background-color: rgb(234, 219, 255) !important;\\n    }\\n  }\\n  .x6-node-selected {\\n    .react-node {\\n      background-color: rgb(254, 254, 255);\\n      border: 3px solid rgb(135, 59, 244);\\n      box-shadow: 0 0 3px 3px rgba(135, 59, 244, 0.2);\\n      &:hover {\\n        background-color: rgba(227, 244, 255, 0.45);\\n      }\\n    }\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/context-menu/demos/basic/index.tsx?dumi-raw-code\n/* harmony default export */ var context_menu_demos_basicdumi_raw_code = ("import React from \'react\'\\nimport { XFlow, XFlowCanvas, CanvasContextMenu } from \'@antv/xflow\'\\nimport { onLoad, useGraphConfig } from \'./graph-config\'\\nimport { useMenuConfig } from \'./menu-config\'\\n\\nimport \'./index.less\'\\nimport \'@antv/xflow/dist/index.css\'\\n\\n/**  Demo Props  */\\nexport interface IDemoProps {\\n  anything: string\\n}\\n\\nconst XFlowDemo: React.FC<IDemoProps> = props => {\\n  const graphConfig = useGraphConfig(props)\\n  const menucConfig = useMenuConfig(props)\\n\\n  return (\\n    <XFlow onLoad={onLoad} className=\\"xflow-workspace\\">\\n      <XFlowCanvas config={graphConfig} position={{ top: 0, bottom: 0, left: 0, right: 0 }}>\\n        <CanvasContextMenu config={menucConfig} />\\n      </XFlowCanvas>\\n    </XFlow>\\n  )\\n}\\n\\nexport default XFlowDemo");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/context-menu/demos/basic/graph-config.tsx?dumi-raw-code\n/* harmony default export */ var demos_basic_graph_configdumi_raw_code = ("import type { IAppLoad, NsGraphCmd } from \'@antv/xflow\'\\nimport React from \'react\'\\nimport { createGraphConfig } from \'@antv/xflow\'\\nimport { XFlowGraphCommands } from \'@antv/xflow\'\\nimport { getGraphData } from \'./mock\'\\n\\nexport const onLoad: IAppLoad = async app => {\\n  // \u8ba1\u7b97\u5e03\u5c40\\n  const res = await app.executeCommand<\\n    NsGraphCmd.GraphLayout.IArgs,\\n    NsGraphCmd.GraphLayout.IResult\\n  >(XFlowGraphCommands.GRAPH_LAYOUT.id, {\\n    layoutType: \'dagre\',\\n    layoutOptions: {\\n      type: \'dagre\',\\n      /** \u5e03\u5c40\u65b9\u5411 */\\n      rankdir: \'TB\',\\n      /** \u8282\u70b9\u95f4\u8ddd */\\n      nodesep: 60,\\n      /** \u5c42\u95f4\u8ddd */\\n      ranksep: 30,\\n    },\\n    graphData: getGraphData(),\\n  })\\n  const { graphData } = res.contextProvider().getResult()\\n  // render\\n  await app.executeCommand<NsGraphCmd.GraphRender.IArgs>(XFlowGraphCommands.GRAPH_RENDER.id, {\\n    graphData: graphData,\\n  })\\n  // \u5c45\u4e2d\\n  await app.executeCommand<NsGraphCmd.GraphZoom.IArgs>(XFlowGraphCommands.GRAPH_ZOOM.id, {\\n    factor: \'real\',\\n  })\\n}\\n\\n/**  graphConfig\uff1a\u914d\u7f6eGraph  */\\nexport const useGraphConfig = createGraphConfig<any>(graphConfig => {\\n  graphConfig.setDefaultNodeRender(props => {\\n    return <div className=\\"react-node\\"> {props.data.label} </div>\\n  })\\n})");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/context-menu/demos/basic/mock.ts?dumi-raw-code\n/* harmony default export */ var context_menu_demos_basic_mockdumi_raw_code = ("import type { NsGraph } from \'@antv/xflow\'\\nimport { uuidv4 } from \'@antv/xflow\'\\n\\n// NodeConfig\\nconst NODE_COMMON_PROPS = {\\n  width: 160,\\n  height: 32,\\n} as const\\n// NodeConfig\\nconst EDGE_COMMON_PROPS = {\\n  attrs: {\\n    line: {\\n      targetMarker: {\\n        name: \'block\',\\n        width: 4,\\n        height: 8,\\n      },\\n      strokeDasharray: \'\',\\n      stroke: \'#A2B1C3\',\\n      strokeWidth: 1,\\n    },\\n  },\\n} as const\\n\\n// mock data\\nexport const getGraphData = () => {\\n  const nodes: NsGraph.INodeConfig[] = [\\n    {\\n      id: \'node1\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-1\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node2\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-2\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node3\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-3\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node4\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-4\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n  ]\\n  const edges: NsGraph.IEdgeConfig[] = [\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node2\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node2-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node3\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node3-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node4\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node4-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n  ]\\n  return {\\n    nodes: nodes,\\n    edges: edges,\\n  } as NsGraph.IGraphData\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/context-menu/demos/basic/menu-config.tsx?dumi-raw-code\n/* harmony default export */ var menu_configdumi_raw_code = ("import { createCtxMenuConfig } from \'@antv/xflow-extension\'\\nimport type { NsNodeCmd, NsEdgeCmd } from \'@antv/xflow\'\\nimport type { IMenuOptions } from \'@antv/xflow\'\\nimport { MenuItemType } from \'@antv/xflow\'\\nimport type { NsGraph } from \'@antv/xflow\'\\nimport { IconStore, XFlowNodeCommands, XFlowEdgeCommands } from \'@antv/xflow\'\\nimport { DeleteOutlined, EditOutlined, StopOutlined } from \'@ant-design/icons\'\\n\\nexport const useMenuConfig = createCtxMenuConfig(config => {\\n  config.setMenuModelService(async (data, model, modelService, toDispose) => {\\n    const { type, cell } = data\\n    console.log(type)\\n    switch (type) {\\n      case \'node\':\\n        model.setValue({\\n          id: \'root\',\\n          type: MenuItemType.Root,\\n          submenu: [NsCustomMenuItems.DELETE_NODE],\\n        })\\n        break\\n      case \'edge\':\\n        model.setValue({\\n          id: \'root\',\\n          type: MenuItemType.Root,\\n          submenu: [NsCustomMenuItems.DELETE_EDGE],\\n        })\\n        break\\n      case \'blank\':\\n        model.setValue({\\n          id: \'root\',\\n          type: MenuItemType.Root,\\n          submenu: [NsCustomMenuItems.EMPTY_MENU],\\n        })\\n        break\\n      default:\\n        model.setValue({\\n          id: \'root\',\\n          type: MenuItemType.Root,\\n          submenu: [NsCustomMenuItems.EMPTY_MENU],\\n        })\\n        break\\n    }\\n  })\\n})\\n\\n/** menuitem \u914d\u7f6e */\\nexport namespace NsCustomMenuItems {\\n  /** \u6ce8\u518c\u83dc\u5355\u4f9d\u8d56\u7684icon */\\n  IconStore.set(\'DeleteOutlined\', DeleteOutlined)\\n  IconStore.set(\'EditOutlined\', EditOutlined)\\n  IconStore.set(\'StopOutlined\', StopOutlined)\\n\\n  export const DELETE_EDGE: IMenuOptions = {\\n    id: XFlowEdgeCommands.DEL_EDGE.id,\\n    label: \'\u5220\u9664\u8fb9\',\\n    hotkey: \'Delete\',\\n    iconName: \'DeleteOutlined\',\\n    onClick: async ({ target, commandService }) => {\\n      commandService.executeCommand<NsEdgeCmd.DelEdge.IArgs>(XFlowEdgeCommands.DEL_EDGE.id, {\\n        edgeConfig: target.data as NsGraph.IEdgeConfig,\\n      })\\n    },\\n  }\\n\\n  export const DELETE_NODE: IMenuOptions = {\\n    id: XFlowNodeCommands.DEL_NODE.id,\\n    label: \'\u5220\u9664\u8282\u70b9\',\\n    iconName: \'DeleteOutlined\',\\n    hotkey: \'Delete\',\\n    onClick: async ({ target, commandService }) => {\\n      commandService.executeCommand<NsNodeCmd.DelNode.IArgs>(XFlowNodeCommands.DEL_NODE.id, {\\n        nodeConfig: { id: target.data.id },\\n      })\\n    },\\n  }\\n\\n  export const EMPTY_MENU: IMenuOptions = {\\n    id: \'EMPTY_MENU_ITEM\',\\n    label: \'\u6682\u65e0\u53ef\u7528\',\\n    isEnabled: false,\\n    iconName: \'DeleteOutlined\',\\n    onClick: async ({ target, commandService }) => {\\n      commandService.executeCommand<NsNodeCmd.DelNode.IArgs>(XFlowNodeCommands.DEL_NODE.id, {\\n        nodeConfig: { id: target.data.id },\\n      })\\n    },\\n  }\\n\\n  export const SEPARATOR: IMenuOptions = {\\n    id: \'separator\',\\n    type: MenuItemType.Separator,\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/context-menu/demos/basic/index.less?dumi-raw-code\n/* harmony default export */ var extension_components_context_menu_demos_basicdumi_raw_code = ("@body-bg: #f9f9f9;\\n@primaryColor: #1890ff;\\n@light-border: 1px solid #d9d9d9;\\n\\n.canvas-menu-basic {\\n  position: relative;\\n  border: @light-border;\\n  .__dumi-default-previewer-demo {\\n    padding: 16px 12px;\\n  }\\n\\n  .xflow-workspace {\\n    height: 300px;\\n    box-shadow: 0 0 10px 1px #e9e9e9;\\n  }\\n\\n  .xflow-x6-canvas {\\n    background: @body-bg;\\n  }\\n\\n  .xflow-canvas-root {\\n    margin: 0;\\n  }\\n\\n  .react-node {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 100%;\\n    height: 100%;\\n    padding: 0 16px;\\n    overflow: hidden;\\n    font-weight: 600;\\n    white-space: nowrap;\\n    text-overflow: ellipsis;\\n    background-color: #fff;\\n    border: 1px solid #873bf4;\\n    border-radius: 4px;\\n    &:hover {\\n      background-color: rgb(234, 219, 255) !important;\\n    }\\n  }\\n  .x6-node-selected {\\n    .react-node {\\n      background-color: rgb(254, 254, 255);\\n      border: 3px solid rgb(135, 59, 244);\\n      box-shadow: 0 0 3px 3px rgba(135, 59, 244, 0.2);\\n      &:hover {\\n        background-color: rgba(227, 244, 255, 0.45);\\n      }\\n    }\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/context-menu/demos/dynamic-config/index.tsx?dumi-raw-code\n/* harmony default export */ var dynamic_configdumi_raw_code = ("import React from \'react\'\\nimport { XFlow, XFlowCanvas, CanvasContextMenu } from \'@antv/xflow\'\\nimport { onLoad, useGraphConfig } from \'./graph-config\'\\nimport { useMenuConfig } from \'./menu-config\'\\n\\nimport \'./index.less\'\\nimport \'@antv/xflow/dist/index.css\'\\n\\n/**  Demo Props  */\\nexport interface IDemoProps {\\n  anything: string\\n}\\n\\nconst XFlowDemo: React.FC<IDemoProps> = props => {\\n  const graphConfig = useGraphConfig(props)\\n  const menucConfig = useMenuConfig(props)\\n\\n  return (\\n    <XFlow onLoad={onLoad} className=\\"xflow-workspace\\">\\n      <XFlowCanvas config={graphConfig} position={{ top: 0, bottom: 0, left: 0, right: 0 }}>\\n        <CanvasContextMenu config={menucConfig} />\\n      </XFlowCanvas>\\n    </XFlow>\\n  )\\n}\\n\\nexport default XFlowDemo");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/context-menu/demos/dynamic-config/graph-config.tsx?dumi-raw-code\n/* harmony default export */ var dynamic_config_graph_configdumi_raw_code = ("import type { IAppLoad, NsGraphCmd } from \'@antv/xflow\'\\nimport { createGraphConfig } from \'@antv/xflow\'\\nimport { XFlowGraphCommands } from \'@antv/xflow\'\\nimport { getGraphData } from \'./mock\'\\n\\nexport const onLoad: IAppLoad = async app => {\\n  // \u8ba1\u7b97\u5e03\u5c40\\n  const res = await app.executeCommand<\\n    NsGraphCmd.GraphLayout.IArgs,\\n    NsGraphCmd.GraphLayout.IResult\\n  >(XFlowGraphCommands.GRAPH_LAYOUT.id, {\\n    layoutType: \'dagre\',\\n    layoutOptions: {\\n      type: \'dagre\',\\n      /** \u5e03\u5c40\u65b9\u5411 */\\n      rankdir: \'TB\',\\n      /** \u8282\u70b9\u95f4\u8ddd */\\n      nodesep: 60,\\n      /** \u5c42\u95f4\u8ddd */\\n      ranksep: 30,\\n    },\\n    graphData: getGraphData(),\\n  })\\n  const { graphData } = res.contextProvider().getResult()\\n  // render\\n  await app.executeCommand<NsGraphCmd.GraphRender.IArgs>(XFlowGraphCommands.GRAPH_RENDER.id, {\\n    graphData: graphData,\\n  })\\n  // \u5c45\u4e2d\\n  await app.executeCommand<NsGraphCmd.GraphZoom.IArgs>(XFlowGraphCommands.GRAPH_ZOOM.id, {\\n    factor: \'real\',\\n  })\\n}\\n\\n/**  graphConfig\uff1a\u914d\u7f6eGraph  */\\nexport const useGraphConfig = createGraphConfig<any>(graphConfig => {\\n  graphConfig.setDefaultNodeRender(props => {\\n    return <div className=\\"react-node\\"> {props.data.label} </div>\\n  })\\n})");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/context-menu/demos/dynamic-config/mock.ts?dumi-raw-code\n/* harmony default export */ var dynamic_config_mockdumi_raw_code = ("import type { NsGraph } from \'@antv/xflow\'\\nimport { uuidv4 } from \'@antv/xflow\'\\n\\n// NodeConfig\\nconst NODE_COMMON_PROPS = {\\n  width: 160,\\n  height: 32,\\n} as const\\n// NodeConfig\\nconst EDGE_COMMON_PROPS = {\\n  attrs: {\\n    line: {\\n      targetMarker: {\\n        name: \'block\',\\n        width: 4,\\n        height: 8,\\n      },\\n      strokeDasharray: \'\',\\n      stroke: \'#A2B1C3\',\\n      strokeWidth: 1,\\n    },\\n  },\\n} as const\\n\\n// mock data\\nexport const getGraphData = () => {\\n  const nodes: NsGraph.INodeConfig[] = [\\n    {\\n      id: \'node1\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-1\',\\n      ...NODE_COMMON_PROPS,\\n      menuItems: [\'\u52a8\u6001\u6e32\u67d3\u7684MenuItem \'],\\n    },\\n    {\\n      id: \'node2\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-2\',\\n      ...NODE_COMMON_PROPS,\\n      menuItems: [\'\u52a8\u6001\u6e32\u67d3\u7684MenuItem \', \'\u52a8\u6001\u6e32\u67d3\u7684MenuItem \'],\\n    },\\n    {\\n      id: \'node3\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-3\',\\n      ...NODE_COMMON_PROPS,\\n      menuItems: [\'\u52a8\u6001\u6e32\u67d3\u7684MenuItem \', \'\u52a8\u6001\u6e32\u67d3\u7684MenuItem \', \'\u52a8\u6001\u6e32\u67d3\u7684MenuItem \'],\\n    },\\n    {\\n      id: \'node4\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-4\',\\n      ...NODE_COMMON_PROPS,\\n      menuItems: [],\\n    },\\n  ]\\n  const edges: NsGraph.IEdgeConfig[] = [\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node2\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node2-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node3\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node3-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node4\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node4-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n  ]\\n  return {\\n    nodes: nodes,\\n    edges: edges,\\n  } as NsGraph.IGraphData\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/context-menu/demos/dynamic-config/menu-config.tsx?dumi-raw-code\n/* harmony default export */ var dynamic_config_menu_configdumi_raw_code = ("import type { NsNodeCmd, NsEdgeCmd, IMenuOptions, MODELS, NsGraph } from \'@antv/xflow\'\\nimport { createCtxMenuConfig, MenuItemType } from \'@antv/xflow\'\\nimport {} from \'@antv/xflow\'\\nimport { IconStore, XFlowNodeCommands, XFlowEdgeCommands } from \'@antv/xflow\'\\nimport {\\n  DeleteOutlined,\\n  EditOutlined,\\n  StopOutlined,\\n  UnorderedListOutlined,\\n} from \'@ant-design/icons\'\\n\\nexport const useMenuConfig = createCtxMenuConfig(config => {\\n  config.setMenuModelService(async (data, model, modelService, toDispose) => {\\n    const { type, cell } = data\\n    console.log(type)\\n    switch (type) {\\n      case \'node\':\\n        model.setValue({\\n          id: \'root\',\\n          type: MenuItemType.Root,\\n          submenu: [NsCustomMenuItems.DELETE_NODE, NsCustomMenuItems.getDynamicMenuItems(data)],\\n        })\\n        break\\n\\n      default:\\n        model.setValue({\\n          id: \'root\',\\n          type: MenuItemType.Root,\\n          submenu: [NsCustomMenuItems.EMPTY_MENU],\\n        })\\n        break\\n    }\\n  })\\n})\\n\\n/** menuitem \u914d\u7f6e */\\nexport namespace NsCustomMenuItems {\\n  /** \u6ce8\u518c\u83dc\u5355\u4f9d\u8d56\u7684icon */\\n  IconStore.set(\'DeleteOutlined\', DeleteOutlined)\\n  IconStore.set(\'EditOutlined\', EditOutlined)\\n  IconStore.set(\'StopOutlined\', StopOutlined)\\n  IconStore.set(\'UnorderedListOutlined\', UnorderedListOutlined)\\n\\n  interface INode extends NsGraph.INodeConfig {\\n    menuItems: string[]\\n  }\\n\\n  export const getDynamicMenuItems = (state: MODELS.CONTEXTMENU_TARGET.IState) => {\\n    const data = state.cell.getData<INode>()\\n    return {\\n      id: \'\u52a8\u6001\u6e32\u7684submenu\',\\n      label: \'\u52a8\u6001\u6e32\u67d3\u7684\u83dc\u5355\',\\n      iconName: \'UnorderedListOutlined\',\\n      type: MenuItemType.Submenu,\\n      submenu: data.menuItems.map((item, idx) => {\\n        return {\\n          id: item + \'#\' + idx,\\n          label: item + \'#\' + (idx + 1),\\n          type: MenuItemType.Leaf,\\n          iconName: \'UnorderedListOutlined\',\\n          onClick: async ({ target }) => {\\n            console.log(\'submenu is  click\', target, item)\\n          },\\n        }\\n      }),\\n    }\\n  }\\n\\n  export const DELETE_NODE: IMenuOptions = {\\n    id: XFlowNodeCommands.DEL_NODE.id,\\n    label: \'\u5220\u9664\u8282\u70b9\',\\n    iconName: \'DeleteOutlined\',\\n    onClick: async ({ target, commandService }) => {\\n      commandService.executeCommand<NsNodeCmd.DelNode.IArgs>(XFlowNodeCommands.DEL_NODE.id, {\\n        nodeConfig: { id: target.data.id },\\n      })\\n    },\\n  }\\n\\n  export const EMPTY_MENU: IMenuOptions = {\\n    id: \'EMPTY_MENU_ITEM\',\\n    label: \'\u6682\u65e0\u53ef\u7528\',\\n    isEnabled: false,\\n    iconName: \'DeleteOutlined\',\\n    onClick: async ({ target, commandService }) => {\\n      commandService.executeCommand<NsNodeCmd.DelNode.IArgs>(XFlowNodeCommands.DEL_NODE.id, {\\n        nodeConfig: { id: target.data.id },\\n      })\\n    },\\n  }\\n\\n  export const SEPARATOR: IMenuOptions = {\\n    id: \'separator\',\\n    type: MenuItemType.Separator,\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/context-menu/demos/dynamic-config/index.less?dumi-raw-code\n/* harmony default export */ var demos_dynamic_configdumi_raw_code = ("@body-bg: #f9f9f9;\\n@primaryColor: #1890ff;\\n@light-border: 1px solid #d9d9d9;\\n\\n.canvas-menu-dynamic-config {\\n  position: relative;\\n  border: @light-border;\\n  .__dumi-default-previewer-demo {\\n    padding: 16px 12px;\\n  }\\n\\n  .xflow-workspace {\\n    height: 300px;\\n    box-shadow: 0 0 10px 1px #e9e9e9;\\n  }\\n\\n  .xflow-x6-canvas {\\n    background: @body-bg;\\n  }\\n\\n  .xflow-canvas-root {\\n    margin: 0;\\n  }\\n\\n  .react-node {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 100%;\\n    height: 100%;\\n    padding: 0 16px;\\n    overflow: hidden;\\n    font-weight: 600;\\n    white-space: nowrap;\\n    text-overflow: ellipsis;\\n    background-color: #fff;\\n    border: 1px solid #873bf4;\\n    border-radius: 4px;\\n    &:hover {\\n      background-color: rgb(234, 219, 255) !important;\\n    }\\n  }\\n  .x6-node-selected {\\n    .react-node {\\n      background-color: rgb(254, 254, 255);\\n      border: 3px solid rgb(135, 59, 244);\\n      box-shadow: 0 0 3px 3px rgba(135, 59, 244, 0.2);\\n      &:hover {\\n        background-color: rgba(227, 244, 255, 0.45);\\n      }\\n    }\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/context-menu/demos/hotkey/index.tsx?dumi-raw-code\n/* harmony default export */ var hotkeydumi_raw_code = ("import React from \'react\'\\nimport { XFlow, XFlowCanvas, CanvasContextMenu, KeyBindings } from \'@antv/xflow\'\\nimport { onLoad, useGraphConfig } from \'./graph-config\'\\nimport { useMenuConfig } from \'./menu-config\'\\nimport { useKeybindingConfig } from \'./hotkey-config\'\\nimport \'./index.less\'\\n\\n/**  Demo Props  */\\nexport interface IDemoProps {\\n  anything: string\\n}\\n\\nconst XFlowDemo: React.FC<IDemoProps> = props => {\\n  const graphConfig = useGraphConfig(props)\\n  const menucConfig = useMenuConfig(props)\\n  const keybindingConfig = useKeybindingConfig(props)\\n\\n  return (\\n    <XFlow onLoad={onLoad} className=\\"xflow-workspace\\">\\n      <XFlowCanvas config={graphConfig} position={{ top: 0, bottom: 0, left: 0, right: 0 }}>\\n        <CanvasContextMenu config={menucConfig} />\\n        <KeyBindings config={keybindingConfig} />\\n      </XFlowCanvas>\\n    </XFlow>\\n  )\\n}\\n\\nexport default XFlowDemo");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/context-menu/demos/hotkey/graph-config.tsx?dumi-raw-code\n/* harmony default export */ var hotkey_graph_configdumi_raw_code = ("import type { IAppLoad, NsGraphCmd } from \'@antv/xflow\'\\nimport { createGraphConfig } from \'@antv/xflow\'\\nimport { XFlowGraphCommands } from \'@antv/xflow\'\\nimport { getGraphData } from \'./mock\'\\n\\nexport const onLoad: IAppLoad = async app => {\\n  // \u8ba1\u7b97\u5e03\u5c40\\n  const res = await app.executeCommand<\\n    NsGraphCmd.GraphLayout.IArgs,\\n    NsGraphCmd.GraphLayout.IResult\\n  >(XFlowGraphCommands.GRAPH_LAYOUT.id, {\\n    layoutType: \'dagre\',\\n    layoutOptions: {\\n      type: \'dagre\',\\n      /** \u5e03\u5c40\u65b9\u5411 */\\n      rankdir: \'TB\',\\n      /** \u8282\u70b9\u95f4\u8ddd */\\n      nodesep: 60,\\n      /** \u5c42\u95f4\u8ddd */\\n      ranksep: 30,\\n    },\\n    graphData: getGraphData(),\\n  })\\n  const { graphData } = res.contextProvider().getResult()\\n  // render\\n  await app.executeCommand<NsGraphCmd.GraphRender.IArgs>(XFlowGraphCommands.GRAPH_RENDER.id, {\\n    graphData: graphData,\\n  })\\n  // \u5c45\u4e2d\\n  await app.executeCommand<NsGraphCmd.GraphZoom.IArgs>(XFlowGraphCommands.GRAPH_ZOOM.id, {\\n    factor: \'real\',\\n  })\\n}\\n\\n/**  graphConfig\uff1a\u914d\u7f6eGraph  */\\nexport const useGraphConfig = createGraphConfig<any>(graphConfig => {\\n  graphConfig.setDefaultNodeRender(props => {\\n    return <div className=\\"react-node\\"> {props.data.label} </div>\\n  })\\n})");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/context-menu/demos/hotkey/mock.ts?dumi-raw-code\n/* harmony default export */ var hotkey_mockdumi_raw_code = ("import type { NsGraph } from \'@antv/xflow\'\\nimport { uuidv4 } from \'@antv/xflow\'\\n\\n// NodeConfig\\nconst NODE_COMMON_PROPS = {\\n  width: 160,\\n  height: 32,\\n} as const\\n// NodeConfig\\nconst EDGE_COMMON_PROPS = {\\n  attrs: {\\n    line: {\\n      targetMarker: {\\n        name: \'block\',\\n        width: 4,\\n        height: 8,\\n      },\\n      strokeDasharray: \'\',\\n      stroke: \'#A2B1C3\',\\n      strokeWidth: 1,\\n    },\\n  },\\n} as const\\n\\n// mock data\\nexport const getGraphData = () => {\\n  const nodes: NsGraph.INodeConfig[] = [\\n    {\\n      id: \'node1\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-1\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node2\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-2\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node3\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-3\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node4\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-4\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n  ]\\n  const edges: NsGraph.IEdgeConfig[] = [\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node2\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node2-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node3\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node3-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node4\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node4-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n  ]\\n  return {\\n    nodes: nodes,\\n    edges: edges,\\n  } as NsGraph.IGraphData\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/context-menu/demos/hotkey/menu-config.tsx?dumi-raw-code\n/* harmony default export */ var hotkey_menu_configdumi_raw_code = ("import { createCtxMenuConfig } from \'@antv/xflow-extension\'\\nimport type { NsNodeCmd, NsEdgeCmd } from \'@antv/xflow\'\\nimport type { IMenuOptions } from \'@antv/xflow\'\\nimport { MenuItemType } from \'@antv/xflow\'\\nimport type { NsGraph } from \'@antv/xflow\'\\nimport { IconStore, XFlowNodeCommands, XFlowEdgeCommands } from \'@antv/xflow\'\\nimport { DeleteOutlined, EditOutlined, StopOutlined } from \'@ant-design/icons\'\\n\\nexport const useMenuConfig = createCtxMenuConfig(config => {\\n  config.setMenuModelService(async (data, model, modelService, toDispose) => {\\n    const { type, cell } = data\\n    console.log(type)\\n    switch (type) {\\n      case \'node\':\\n        model.setValue({\\n          id: \'root\',\\n          type: MenuItemType.Root,\\n          submenu: [NsCustomMenuItems.DELETE_NODE],\\n        })\\n        break\\n      case \'edge\':\\n        model.setValue({\\n          id: \'root\',\\n          type: MenuItemType.Root,\\n          submenu: [NsCustomMenuItems.DELETE_EDGE],\\n        })\\n        break\\n      case \'blank\':\\n        model.setValue({\\n          id: \'root\',\\n          type: MenuItemType.Root,\\n          submenu: [NsCustomMenuItems.EMPTY_MENU],\\n        })\\n        break\\n      default:\\n        model.setValue({\\n          id: \'root\',\\n          type: MenuItemType.Root,\\n          submenu: [NsCustomMenuItems.EMPTY_MENU],\\n        })\\n        break\\n    }\\n  })\\n})\\n\\n/** menuitem \u914d\u7f6e */\\nexport namespace NsCustomMenuItems {\\n  /** \u6ce8\u518c\u83dc\u5355\u4f9d\u8d56\u7684icon */\\n  IconStore.set(\'DeleteOutlined\', DeleteOutlined)\\n  IconStore.set(\'EditOutlined\', EditOutlined)\\n  IconStore.set(\'StopOutlined\', StopOutlined)\\n\\n  export const DELETE_EDGE: IMenuOptions = {\\n    id: XFlowEdgeCommands.DEL_EDGE.id,\\n    label: \'\u5220\u9664\u8fb9\',\\n    hotkey: \'Delete\',\\n    iconName: \'DeleteOutlined\',\\n    onClick: async ({ target, commandService }) => {\\n      commandService.executeCommand<NsEdgeCmd.DelEdge.IArgs>(XFlowEdgeCommands.DEL_EDGE.id, {\\n        edgeConfig: target.data as NsGraph.IEdgeConfig,\\n      })\\n    },\\n  }\\n\\n  export const DELETE_NODE: IMenuOptions = {\\n    id: XFlowNodeCommands.DEL_NODE.id,\\n    label: \'\u5220\u9664\u8282\u70b9\',\\n    iconName: \'DeleteOutlined\',\\n    hotkey: \'Delete\',\\n    onClick: async ({ target, commandService }) => {\\n      commandService.executeCommand<NsNodeCmd.DelNode.IArgs>(XFlowNodeCommands.DEL_NODE.id, {\\n        nodeConfig: { id: target.data.id },\\n      })\\n    },\\n  }\\n\\n  export const EMPTY_MENU: IMenuOptions = {\\n    id: \'EMPTY_MENU_ITEM\',\\n    label: \'\u6682\u65e0\u53ef\u7528\',\\n    isEnabled: false,\\n    iconName: \'DeleteOutlined\',\\n    onClick: async ({ target, commandService }) => {\\n      commandService.executeCommand<NsNodeCmd.DelNode.IArgs>(XFlowNodeCommands.DEL_NODE.id, {\\n        nodeConfig: { id: target.data.id },\\n      })\\n    },\\n  }\\n\\n  export const SEPARATOR: IMenuOptions = {\\n    id: \'separator\',\\n    type: MenuItemType.Separator,\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/context-menu/demos/hotkey/hotkey-config.tsx?dumi-raw-code\n/* harmony default export */ var hotkey_configdumi_raw_code = ("import type { Edge, Node } from \'@antv/x6\'\\nimport { createKeybindingConfig, MODELS, XFlowEdgeCommands, XFlowNodeCommands } from \'@antv/xflow\'\\nimport type { NsEdgeCmd, NsNodeCmd } from \'@antv/xflow\'\\n\\n/**  keybindings  */\\nexport const useKeybindingConfig = createKeybindingConfig((config, getProps) => {\\n  config.setKeybindingFunc(reg => {\\n    return reg.registerKeybinding([\\n      {\\n        id: \'delete node or edge\',\\n        keybinding: \'backspace\',\\n        callback: async function (item, modelService, cmd, e) {\\n          const cells = await MODELS.SELECTED_CELLS.useValue(modelService)\\n          const nodes = cells.filter((cell): cell is Edge => cell.isEdge())\\n          const edges = cells.filter((cell): cell is Node => cell.isNode())\\n          // \u8c03\u7528\u5220\u9664Edge\u7684Command\\n          const delEdge = (cell: Edge) => {\\n            return cmd.executeCommand<NsEdgeCmd.DelEdge.IArgs>(XFlowEdgeCommands.DEL_EDGE.id, {\\n              edgeConfig: { ...cell.getData(), id: cell.id },\\n            })\\n          }\\n          // \u8c03\u7528\u5220\u9664Node\u7684Command\\n          const delNode = (cell: Node) => {\\n            return cmd.executeCommand<NsNodeCmd.DelNode.IArgs>(XFlowNodeCommands.DEL_NODE.id, {\\n              nodeConfig: {\\n                ...cell.getData(),\\n                id: cell.id,\\n              },\\n            })\\n          }\\n          if (cells.length === 0) {\\n            console.warn(\'\u6ca1\u6709\u9009\u4e2d\u7684\u8282\u70b9\')\\n          }\\n          // \u5148\u5220\u9664edges\\n          await Promise.all(nodes.map(cell => delEdge(cell)))\\n          // \u5148\u5220\u9664nodes\\n          await Promise.all(edges.map(cell => delNode(cell)))\\n        },\\n      },\\n    ])\\n  })\\n})");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/context-menu/demos/hotkey/index.less?dumi-raw-code\n/* harmony default export */ var demos_hotkeydumi_raw_code = ("@import \'~@antv/xflow/es/style/components.less\';\\n\\n@body-bg: #f9f9f9;\\n@primaryColor: #1890ff;\\n@light-border: 1px solid #d9d9d9;\\n\\n.canvas-menu-hotkey {\\n  position: relative;\\n  border: @light-border;\\n  .__dumi-default-previewer-demo {\\n    padding: 16px 12px;\\n  }\\n\\n  .xflow-workspace {\\n    height: 300px;\\n    box-shadow: 0 0 10px 1px #e9e9e9;\\n  }\\n\\n  .xflow-x6-canvas {\\n    background: @body-bg;\\n  }\\n\\n  .xflow-canvas-root {\\n    margin: 0;\\n  }\\n\\n  .react-node {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 100%;\\n    height: 100%;\\n    padding: 0 16px;\\n    overflow: hidden;\\n    font-weight: 600;\\n    white-space: nowrap;\\n    text-overflow: ellipsis;\\n    background-color: #fff;\\n    border: 1px solid #873bf4;\\n    border-radius: 4px;\\n    &:hover {\\n      background-color: rgb(234, 219, 255) !important;\\n    }\\n  }\\n  .x6-node-selected {\\n    .react-node {\\n      background-color: rgb(254, 254, 255);\\n      border: 3px solid rgb(135, 59, 244);\\n      box-shadow: 0 0 3px 3px rgba(135, 59, 244, 0.2);\\n      &:hover {\\n        background-color: rgba(227, 244, 255, 0.45);\\n      }\\n    }\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/context-menu/demos/custom-render/index.tsx?dumi-raw-code\n/* harmony default export */ var context_menu_demos_custom_renderdumi_raw_code = ("import React from \'react\'\\nimport { XFlow, XFlowCanvas, CanvasContextMenu } from \'@antv/xflow\'\\nimport { onLoad, useGraphConfig } from \'./graph-config\'\\nimport { useMenuConfig } from \'./menu-config\'\\n\\nimport \'./index.less\'\\nimport \'@antv/xflow/dist/index.css\'\\n\\n/**  Demo Props  */\\nexport interface IDemoProps {\\n  anything: string\\n}\\n\\nconst XFlowDemo: React.FC<IDemoProps> = props => {\\n  const graphConfig = useGraphConfig(props)\\n  const menucConfig = useMenuConfig(props)\\n\\n  return (\\n    <XFlow onLoad={onLoad} className=\\"xflow-workspace\\">\\n      <XFlowCanvas config={graphConfig} position={{ top: 0, bottom: 0, left: 0, right: 0 }}>\\n        <CanvasContextMenu config={menucConfig} />\\n      </XFlowCanvas>\\n    </XFlow>\\n  )\\n}\\n\\nexport default XFlowDemo");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/context-menu/demos/custom-render/graph-config.tsx?dumi-raw-code\n/* harmony default export */ var demos_custom_render_graph_configdumi_raw_code = ("import type { IAppLoad, NsGraphCmd } from \'@antv/xflow\'\\nimport { createGraphConfig } from \'@antv/xflow\'\\nimport { XFlowGraphCommands } from \'@antv/xflow\'\\nimport { getGraphData } from \'./mock\'\\n\\nexport const onLoad: IAppLoad = async app => {\\n  // \u8ba1\u7b97\u5e03\u5c40\\n  const res = await app.executeCommand<\\n    NsGraphCmd.GraphLayout.IArgs,\\n    NsGraphCmd.GraphLayout.IResult\\n  >(XFlowGraphCommands.GRAPH_LAYOUT.id, {\\n    layoutType: \'dagre\',\\n    layoutOptions: {\\n      type: \'dagre\',\\n      /** \u5e03\u5c40\u65b9\u5411 */\\n      rankdir: \'TB\',\\n      /** \u8282\u70b9\u95f4\u8ddd */\\n      nodesep: 60,\\n      /** \u5c42\u95f4\u8ddd */\\n      ranksep: 30,\\n    },\\n    graphData: getGraphData(),\\n  })\\n  const { graphData } = res.contextProvider().getResult()\\n  // render\\n  await app.executeCommand<NsGraphCmd.GraphRender.IArgs>(XFlowGraphCommands.GRAPH_RENDER.id, {\\n    graphData: graphData,\\n  })\\n  // \u5c45\u4e2d\\n  await app.executeCommand<NsGraphCmd.GraphZoom.IArgs>(XFlowGraphCommands.GRAPH_ZOOM.id, {\\n    factor: \'real\',\\n  })\\n}\\n\\n/**  graphConfig\uff1a\u914d\u7f6eGraph  */\\nexport const useGraphConfig = createGraphConfig<any>(graphConfig => {\\n  graphConfig.setDefaultNodeRender(props => {\\n    return <div className=\\"react-node\\"> {props.data.label} </div>\\n  })\\n})");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/context-menu/demos/custom-render/mock.ts?dumi-raw-code\n/* harmony default export */ var demos_custom_render_mockdumi_raw_code = ("import type { NsGraph } from \'@antv/xflow\'\\nimport { uuidv4 } from \'@antv/xflow\'\\n\\n// NodeConfig\\nconst NODE_COMMON_PROPS = {\\n  width: 160,\\n  height: 32,\\n} as const\\n// NodeConfig\\nconst EDGE_COMMON_PROPS = {\\n  attrs: {\\n    line: {\\n      targetMarker: {\\n        name: \'block\',\\n        width: 4,\\n        height: 8,\\n      },\\n      strokeDasharray: \'\',\\n      stroke: \'#A2B1C3\',\\n      strokeWidth: 1,\\n    },\\n  },\\n} as const\\n\\n// mock data\\nexport const getGraphData = () => {\\n  const nodes: NsGraph.INodeConfig[] = [\\n    {\\n      id: \'node1\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-1\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node2\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-2\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node3\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-3\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node4\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-4\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n  ]\\n  const edges: NsGraph.IEdgeConfig[] = [\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node2\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node2-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node3\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node3-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node4\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node4-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n  ]\\n  return {\\n    nodes: nodes,\\n    edges: edges,\\n  } as NsGraph.IGraphData\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/context-menu/demos/custom-render/menu-config.tsx?dumi-raw-code\n/* harmony default export */ var custom_render_menu_configdumi_raw_code = ("import { createCtxMenuConfig } from \'@antv/xflow-extension\'\\nimport type { NsNodeCmd, NsEdgeCmd } from \'@antv/xflow\'\\nimport type { IMenuOptions } from \'@antv/xflow\'\\nimport { MenuItemType } from \'@antv/xflow\'\\nimport type { NsGraph } from \'@antv/xflow\'\\nimport { IconStore, XFlowNodeCommands, XFlowEdgeCommands } from \'@antv/xflow\'\\nimport { DeleteOutlined, EditOutlined, StopOutlined } from \'@ant-design/icons\'\\nimport { Popconfirm } from \'antd\'\\n\\nexport const useMenuConfig = createCtxMenuConfig(config => {\\n  config.setMenuModelService(async (data, model, modelService, toDispose) => {\\n    const { type, cell } = data\\n    console.log(type)\\n    switch (type) {\\n      case \'node\':\\n        model.setValue({\\n          id: \'root\',\\n          type: MenuItemType.Root,\\n          submenu: [\\n            NsCustomMenuItems.DELETE_NODE,\\n            NsCustomMenuItems.SEPARATOR,\\n            NsCustomMenuItems.NODE_LINK,\\n          ],\\n        })\\n        break\\n      case \'edge\':\\n        model.setValue({\\n          id: \'root\',\\n          type: MenuItemType.Root,\\n          submenu: [NsCustomMenuItems.DELETE_EDGE],\\n        })\\n        break\\n      case \'blank\':\\n        model.setValue({\\n          id: \'root\',\\n          type: MenuItemType.Root,\\n          submenu: [NsCustomMenuItems.EMPTY_MENU],\\n        })\\n        break\\n      default:\\n        model.setValue({\\n          id: \'root\',\\n          type: MenuItemType.Root,\\n          submenu: [NsCustomMenuItems.EMPTY_MENU],\\n        })\\n        break\\n    }\\n  })\\n})\\n\\n/** menuitem \u914d\u7f6e */\\nexport namespace NsCustomMenuItems {\\n  /** \u6ce8\u518c\u83dc\u5355\u4f9d\u8d56\u7684icon */\\n  IconStore.set(\'DeleteOutlined\', DeleteOutlined)\\n  IconStore.set(\'EditOutlined\', EditOutlined)\\n  IconStore.set(\'StopOutlined\', StopOutlined)\\n\\n  export const DELETE_EDGE: IMenuOptions = {\\n    id: XFlowEdgeCommands.DEL_EDGE.id,\\n    label: \'\u5220\u9664\u8fb9\',\\n    hotkey: \'Delete\',\\n    iconName: \'DeleteOutlined\',\\n    onClick: async ({ target, commandService }) => {\\n      commandService.executeCommand<NsEdgeCmd.DelEdge.IArgs>(XFlowEdgeCommands.DEL_EDGE.id, {\\n        edgeConfig: target.data as NsGraph.IEdgeConfig,\\n      })\\n    },\\n  }\\n\\n  export const DELETE_NODE: IMenuOptions = {\\n    id: XFlowNodeCommands.DEL_NODE.id,\\n    label: \'\u5220\u9664\u8282\u70b9\',\\n    iconName: \'DeleteOutlined\',\\n    hotkey: \'Delete\',\\n    onClick: async ({ target, commandService }) => {\\n      commandService.executeCommand<NsNodeCmd.DelNode.IArgs>(XFlowNodeCommands.DEL_NODE.id, {\\n        nodeConfig: { id: target.data.id },\\n      })\\n    },\\n  }\\n\\n  export const NODE_LINK: IMenuOptions = {\\n    id: \'NODE_LINK\',\\n    label: \'NODE_LINK\',\\n    render: ({ children }) => {\\n      return (\\n        <a target=\\"_blank\\" href=\\"https://x6.antv.vision/\\" style={{ padding: \'0 16px\' }}>\\n          \u4e00\u4e2a\u81ea\u5b9a\u4e49\u6e32\u67d3\u7684\u8fde\u63a5\\n        </a>\\n      )\\n    },\\n  }\\n\\n  export const EMPTY_MENU: IMenuOptions = {\\n    id: \'EMPTY_MENU_ITEM\',\\n    label: \'\u6682\u65e0\u53ef\u7528\',\\n    isEnabled: false,\\n    iconName: \'DeleteOutlined\',\\n    onClick: async ({ target, commandService }) => {\\n      commandService.executeCommand<NsNodeCmd.DelNode.IArgs>(XFlowNodeCommands.DEL_NODE.id, {\\n        nodeConfig: { id: target.data.id },\\n      })\\n    },\\n  }\\n\\n  export const SEPARATOR: IMenuOptions = {\\n    id: \'separator\',\\n    type: MenuItemType.Separator,\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/context-menu/demos/custom-render/index.less?dumi-raw-code\n/* harmony default export */ var extension_components_context_menu_demos_custom_renderdumi_raw_code = ("@body-bg: #f9f9f9;\\n@primaryColor: #1890ff;\\n@light-border: 1px solid #d9d9d9;\\n\\n.canvas-custom-render {\\n  position: relative;\\n  border: @light-border;\\n  .__dumi-default-previewer-demo {\\n    padding: 16px 12px;\\n  }\\n\\n  .xflow-workspace {\\n    height: 300px;\\n    box-shadow: 0 0 10px 1px #e9e9e9;\\n  }\\n\\n  .xflow-x6-canvas {\\n    background: @body-bg;\\n  }\\n\\n  .xflow-canvas-root {\\n    margin: 0;\\n  }\\n\\n  .react-node {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 100%;\\n    height: 100%;\\n    padding: 0 16px;\\n    overflow: hidden;\\n    font-weight: 600;\\n    white-space: nowrap;\\n    text-overflow: ellipsis;\\n    background-color: #fff;\\n    border: 1px solid #873bf4;\\n    border-radius: 4px;\\n    &:hover {\\n      background-color: rgb(234, 219, 255) !important;\\n    }\\n  }\\n  .x6-node-selected {\\n    .react-node {\\n      background-color: rgb(254, 254, 255);\\n      border: 3px solid rgb(135, 59, 244);\\n      box-shadow: 0 0 3px 3px rgba(135, 59, 244, 0.2);\\n      &:hover {\\n        background-color: rgba(227, 244, 255, 0.45);\\n      }\\n    }\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/workspace-panel/demos/basic/index.tsx?dumi-raw-code\n/* harmony default export */ var workspace_panel_demos_basicdumi_raw_code = ("import React from \'react\'\\nimport { XFlow, XFlowCanvas } from \'@antv/xflow\'\\nimport CustomPanel from \'./custom-panel\'\\nimport \'./index.less\'\\nimport { useGraphConfig, onLoad } from \'./graph-config\'\\nimport \'@antv/xflow/dist/index.css\'\\n/**  Demo Props  */\\nexport interface IDemoProps {\\n  anything: string\\n}\\n\\nconst XFlowDemo: React.FC<IDemoProps> = props => {\\n  const graphConfig = useGraphConfig(props)\\n  return (\\n    <XFlow onLoad={onLoad} className=\\"xflow-workspace\\">\\n      <XFlowCanvas config={graphConfig} position={{ top: 0, bottom: 0, left: 290, right: 0 }} />\\n      <CustomPanel position={{ top: 0, bottom: 0, left: 0, width: 290 }} />\\n    </XFlow>\\n  )\\n}\\n\\nexport default XFlowDemo");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/workspace-panel/demos/basic/custom-panel/index.tsx?dumi-raw-code\n/* harmony default export */ var custom_paneldumi_raw_code = ("import {\\n  WorkspacePanel,\\n  usePanelContext,\\n  useXFlowApp,\\n  MODELS,\\n  XFlowNodeCommands,\\n  useModelAsync,\\n  randomInt,\\n  uuidv4,\\n} from \'@antv/xflow\'\\nimport type { IPosition, NsNodeCmd } from \'@antv/xflow\'\\nimport { Card, Form, Button, Input, message } from \'antd\'\\nexport interface IPanelProps {\\n  position: IPosition\\n}\\n\\nexport const ModelServieCard = () => {\\n  const app = useXFlowApp()\\n  const [cells] = useModelAsync<MODELS.SELECTED_NODES.IState>({\\n    getModel: async () => MODELS.SELECTED_NODES.getModel(app.modelService),\\n    initialState: [],\\n  })\\n  return (\\n    <Card title=\\"Model Service \\" size=\\"small\\">\\n      <div> \u5f53\u524d\u9009\u4e2d\u8282\u70b9\u6570\u91cf: {cells.length} </div>\\n    </Card>\\n  )\\n}\\n\\nexport const CommandServieCard = () => {\\n  const app = useXFlowApp()\\n  const onFinish = values => {\\n    if (!values.label) {\\n      return message.warn(`\u8bf7\u8f93\u5165\u8282\u70b9\u540d`)\\n    }\\n    app.executeCommand<NsNodeCmd.AddNode.IArgs>(XFlowNodeCommands.ADD_NODE.id, {\\n      nodeConfig: {\\n        id: uuidv4(),\\n        label: values.label,\\n        x: randomInt(50, 100),\\n        y: randomInt(50, 100),\\n        width: 160,\\n        height: 30,\\n      },\\n    })\\n  }\\n\\n  return (\\n    <Card title=\\"Command Service \\" size=\\"small\\">\\n      <Form onFinish={onFinish} layout=\\"vertical\\">\\n        <Form.Item name=\\"label\\" label=\\"\u8282\u70b9\u540d\\" required requiredMark>\\n          <Input placeholder=\\"node label\\" />\\n        </Form.Item>\\n        <Form.Item name=\\"label\\">\\n          <Button type=\\"primary\\" htmlType=\\"submit\\" style={{ width: \'100%\' }}>\\n            \u6267\u884cAddNode\u547d\u4ee4\\n          </Button>\\n        </Form.Item>\\n      </Form>\\n    </Card>\\n  )\\n}\\n\\nexport const X6GraphCard = () => {\\n  const app = useXFlowApp()\\n  const callX6Api = async () => {\\n    const x6 = await app.getGraphInstance()\\n    const cells = x6.getCells()\\n    console.log(\'x6 graph\', x6)\\n    message.info(`x6 \u753b\u5e03\u5df2\u6709cell: ${cells.length} \u4e2a`)\\n    // \u8bf7\u52ff\u7ed5\u8fc7command \u76f4\u63a5\u4fee\u6539\u753b\u5e03\u6570\u636e\\n  }\\n  return (\\n    <Card title=\\"use X6 Graph \\" size=\\"small\\">\\n      <Button type=\\"primary\\" htmlType=\\"submit\\" onClick={callX6Api} style={{ width: \'100%\' }}>\\n        \u83b7\u53d6X6 Cells \u6570\u91cf\\n      </Button>\\n    </Card>\\n  )\\n}\\n\\nexport const CustomPanel: React.FC = () => {\\n  const { propsProxy } = usePanelContext()\\n  const app = useXFlowApp()\\n  const props = propsProxy.getValue()\\n  console.log(\'can use root component props:\', props)\\n  console.log(\'can use app\', app)\\n\\n  return (\\n    <div className=\\"card-wrap\\">\\n      <ModelServieCard />\\n      <CommandServieCard />\\n      <X6GraphCard />\\n    </div>\\n  )\\n}\\n\\nexport default (props: IPanelProps) => {\\n  return (\\n    <WorkspacePanel {...props}>\\n      <CustomPanel />\\n    </WorkspacePanel>\\n  )\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/workspace-panel/demos/basic/index.less?dumi-raw-code\n/* harmony default export */ var extension_components_workspace_panel_demos_basicdumi_raw_code = ("@body-bg: #f9f9f9;\\n@primaryColor: #1890ff;\\n@light-border: 1px solid #d9d9d9;\\n\\n.custom-panel-demo {\\n  position: relative;\\n  border: @light-border;\\n  .__dumi-default-previewer-demo {\\n    padding: 16px 12px;\\n  }\\n\\n  .card-wrap {\\n    display: flex;\\n    flex-direction: column;\\n    gap: 8px;\\n    justify-content: space-evenly;\\n    height: 100%;\\n  }\\n\\n  .xflow-workspace {\\n    height: 400px;\\n    box-shadow: 0 0 10px 1px #e9e9e9;\\n  }\\n\\n  .xflow-x6-canvas {\\n    background: @body-bg;\\n  }\\n\\n  .xflow-canvas-root {\\n    margin: 0;\\n  }\\n\\n  .react-node {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 100%;\\n    height: 100%;\\n    padding: 0 16px;\\n    overflow: hidden;\\n    font-weight: 600;\\n    white-space: nowrap;\\n    text-overflow: ellipsis;\\n    background-color: #fff;\\n    border: 1px solid #873bf4;\\n    border-radius: 4px;\\n    &:hover {\\n      background-color: rgb(234, 219, 255) !important;\\n    }\\n  }\\n  .x6-node-selected {\\n    .react-node {\\n      background-color: rgb(254, 254, 255);\\n      border: 3px solid rgb(135, 59, 244);\\n      box-shadow: 0 0 3px 3px rgba(135, 59, 244, 0.2);\\n      &:hover {\\n        background-color: rgba(227, 244, 255, 0.45);\\n      }\\n    }\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/workspace-panel/demos/basic/graph-config.tsx?dumi-raw-code\n/* harmony default export */ var workspace_panel_demos_basic_graph_configdumi_raw_code = ("import type { IAppLoad, NsGraphCmd } from \'@antv/xflow\'\\nimport { createGraphConfig } from \'@antv/xflow\'\\nimport { XFlowGraphCommands } from \'@antv/xflow\'\\nimport { getGraphData } from \'./mock\'\\n\\nexport const onLoad: IAppLoad = async app => {\\n  // \u8ba1\u7b97\u5e03\u5c40\\n  const res = await app.executeCommand<\\n    NsGraphCmd.GraphLayout.IArgs,\\n    NsGraphCmd.GraphLayout.IResult\\n  >(XFlowGraphCommands.GRAPH_LAYOUT.id, {\\n    layoutType: \'dagre\',\\n    layoutOptions: {\\n      type: \'dagre\',\\n      /** \u5e03\u5c40\u65b9\u5411 */\\n      rankdir: \'TB\',\\n      /** \u8282\u70b9\u95f4\u8ddd */\\n      nodesep: 60,\\n      /** \u5c42\u95f4\u8ddd */\\n      ranksep: 30,\\n    },\\n    graphData: getGraphData(),\\n  })\\n  const { graphData } = res.contextProvider().getResult()\\n  // render\\n  await app.executeCommand<NsGraphCmd.GraphRender.IArgs>(XFlowGraphCommands.GRAPH_RENDER.id, {\\n    graphData: graphData,\\n  })\\n  // \u5c45\u4e2d\\n  await app.executeCommand<NsGraphCmd.GraphZoom.IArgs>(XFlowGraphCommands.GRAPH_ZOOM.id, {\\n    factor: \'real\',\\n  })\\n}\\n\\n/**  graphConfig\uff1a\u914d\u7f6eGraph  */\\nexport const useGraphConfig = createGraphConfig<any>(graphConfig => {\\n  graphConfig.setDefaultNodeRender(props => {\\n    return <div className=\\"react-node\\"> {props.data.label} </div>\\n  })\\n})");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/extension-components/workspace-panel/demos/basic/mock.ts?dumi-raw-code\n/* harmony default export */ var workspace_panel_demos_basic_mockdumi_raw_code = ("import type { NsGraph } from \'@antv/xflow\'\\nimport { uuidv4 } from \'@antv/xflow\'\\n\\n// NodeConfig\\nconst NODE_COMMON_PROPS = {\\n  width: 160,\\n  height: 32,\\n} as const\\n// NodeConfig\\nconst EDGE_COMMON_PROPS = {\\n  attrs: {\\n    line: {\\n      targetMarker: {\\n        name: \'block\',\\n        width: 4,\\n        height: 8,\\n      },\\n      strokeDasharray: \'\',\\n      stroke: \'#A2B1C3\',\\n      strokeWidth: 1,\\n    },\\n  },\\n} as const\\n\\n// mock data\\nexport const getGraphData = () => {\\n  const nodes: NsGraph.INodeConfig[] = [\\n    {\\n      id: \'node1\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-1\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node2\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-2\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node3\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-3\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n    {\\n      id: \'node4\',\\n      label: \'\u7b97\u6cd5\u8282\u70b9-4\',\\n      ...NODE_COMMON_PROPS,\\n    },\\n  ]\\n  const edges: NsGraph.IEdgeConfig[] = [\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node2\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node2-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node3\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node3-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n    {\\n      id: uuidv4(),\\n      source: \'node1\',\\n      target: \'node4\',\\n      sourcePortId: \'node1-output-1\',\\n      targetPortId: \'node4-input-1\',\\n      ...EDGE_COMMON_PROPS,\\n    },\\n  ]\\n  return {\\n    nodes: nodes,\\n    edges: edges,\\n  } as NsGraph.IGraphData\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/getting-started/demo/index.tsx?dumi-raw-code\n/* harmony default export */ var demodumi_raw_code = ("import React, { useState } from \'react\'\\n/** \u56fe\u6838\u5fc3\u7ec4\u4ef6 & \u7c7b\u578b\u5b9a\u4e49 */\\nimport type { IAppLoad, NsGraph } from \'@antv/xflow\'\\nimport { XFlow, XFlowCanvas } from \'@antv/xflow\'\\n/** \u56fe\u7684\u5404\u79cd\u6269\u5c55\u4ea4\u4e92\u7ec4\u4ef6 */\\nimport { CanvasContextMenu, CanvasMiniMap, CanvasScaleToolbar, CanvasSnapline } from \'@antv/xflow\'\\n/** \u56fe\u7684\u914d\u7f6e\u9879 */\\nimport { useGraphConfig } from \'./config-graph\'\\n/** \u53f3\u952e\u83dc\u5355\u680f */\\nimport { useMenuConfig } from \'./menu-config\'\\nimport { message } from \'antd\'\\n\\nimport \'./index.less\'\\nimport \'@antv/xflow/dist/index.css\'\\n\\nexport interface IProps {}\\n\\nconst Demo: React.FC<IProps> = () => {\\n  /** \u753b\u5e03\u914d\u7f6e */\\n  const graphConfig = useGraphConfig()\\n  /** \u53f3\u952e\u83dc\u5355\u914d\u7f6e */\\n  const menuConfig = useMenuConfig()\\n\\n  /** \u753b\u5e03\u6e32\u67d3\u6570\u636e */\\n  const [graphData, setGraphData] = useState<NsGraph.IGraphData>(undefined)\\n\\n  /** XFlow\u521d\u59cb\u5316\u5b8c\u6210\u7684\u56de\u8c03 */\\n  const onLoad: IAppLoad = async app => {\\n    const nodes: NsGraph.INodeConfig[] = [\\n      { id: \'root1\', width: 150, height: 40, renderKey: \'NODE1\', info: { text: \'root1\' } },\\n      { id: \'down1\', width: 150, height: 40, renderKey: \'NODE2\', info: { text: \'down1\' } },\\n      { id: \'down2\', width: 150, height: 40, renderKey: \'NODE2\', info: { text: \'down2\' } },\\n      { id: \'down3\', width: 150, height: 40, renderKey: \'NODE2\', info: { text: \'down3\' } },\\n    ]\\n    const edges: NsGraph.IEdgeConfig[] = [\\n      {\\n        id: \'root1-down1\',\\n        source: \'root1\',\\n        target: \'down1\',\\n        renderKey: \'EDGE1\',\\n        edgeContentWidth: 60,\\n        edgeContentHeigt: 30,\\n        info: { line: \'root1-down1\' },\\n      },\\n      {\\n        id: \'root1-down2\',\\n        source: \'root1\',\\n        target: \'down2\',\\n        renderKey: \'EDGE2\',\\n        edgeContentWidth: 60,\\n        edgeContentHeigt: 30,\\n        info: { line: \'root1-down2\' },\\n      },\\n      {\\n        id: \'root1-down3\',\\n        source: \'root1\',\\n        target: \'down3\',\\n        label: \'1:N(\u7eaf\u6587\u672c)\',\\n        info: { line: \'root1-down3\' },\\n      },\\n    ]\\n    const newGraphData = { nodes, edges }\\n    setGraphData(newGraphData)\\n\\n    const graph = await app.getGraphInstance()\\n    graph.on(\'node:click\', ({ node }) => {\\n      const nodeData: NsGraph.INodeConfig = node.getData()\\n      message.success(`${nodeData.id}\u8282\u70b9\u88ab\u70b9\u51fb\u4e86`)\\n    })\\n    graph.on(\'edge:click\', ({ edge }) => {\\n      edge.toFront()\\n      const edgeData: NsGraph.IEdgeConfig = edge.getData()\\n      message.success(`${edgeData.id}\u8fde\u7ebf\u88ab\u70b9\u51fb\u4e86`)\\n    })\\n  }\\n\\n  return (\\n    <XFlow\\n      className=\\"xflow-user-container\\"\\n      graphData={graphData}\\n      graphLayout={{\\n        layoutType: \'dagre\',\\n        layoutOptions: {\\n          type: \'dagre\',\\n          rankdir: \'TB\',\\n          nodesep: 60,\\n          ranksep: 40,\\n        },\\n      }}\\n      onLoad={onLoad}\\n      isAutoCenter={true}\\n    >\\n      <XFlowCanvas config={graphConfig}>\\n        <CanvasScaleToolbar position={{ top: 12, left: 12 }} />\\n        <CanvasContextMenu config={menuConfig} />\\n        <CanvasMiniMap\\n          miniMapClz=\\"xflow-custom-minimap\\"\\n          nodeFillColor=\\"#ccc\\"\\n          minimapOptions={{\\n            width: 200,\\n            height: 120,\\n          }}\\n          position={{ top: 12, right: 12 }}\\n        />\\n        <CanvasSnapline color=\\"#1890ff\\" />\\n      </XFlowCanvas>\\n    </XFlow>\\n  )\\n}\\n\\nexport default Demo");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/getting-started/demo/config-graph.tsx?dumi-raw-code\n/* harmony default export */ var demo_config_graphdumi_raw_code = ("import React from \'react\'\\nimport { createGraphConfig } from \'@antv/xflow\'\\n/** \u81ea\u5b9a\u4e49React\u8282\u70b9/\u8fb9 */\\nimport Node1 from \'./react-node/node1\'\\nimport Node2 from \'./react-node/node2\'\\nimport Edge1 from \'./react-edge/edge1\'\\nimport Edge2 from \'./react-edge/edge2\'\\n\\nexport const useGraphConfig = createGraphConfig(config => {\\n  /** \u9884\u8bbeXFlow\u753b\u5e03\u914d\u7f6e\u9879 */\\n  config.setX6Config({\\n    /** \u753b\u5e03\u7f51\u683c */\\n    grid: true,\\n    /** \u753b\u5e03\u7f29\u653e\u7b49\u7ea7 */\\n    scaling: {\\n      min: 0.2,\\n      max: 3,\\n    },\\n    /** \u753b\u5e03\u6eda\u8f6e\u7f29\u653e */\\n    mousewheel: {\\n      enabled: true,\\n      /** \u5c06\u9f20\u6807\u4f4d\u7f6e\u4f5c\u4e3a\u4e2d\u5fc3\u7f29\u653e */\\n      zoomAtMousePosition: true,\\n    },\\n  })\\n\\n  /** \u9884\u8bbeXFlow\u753b\u5e03\u9700\u8981\u6e32\u67d3\u7684React\u8282\u70b9/\u8fb9 */\\n  config.setNodeRender(\'NODE1\', props => <Node1 {...props} />)\\n  config.setNodeRender(\'NODE2\', Node2)\\n  config.setEdgeRender(\'EDGE1\', props => <Edge1 {...props} />)\\n  config.setEdgeRender(\'EDGE2\', props => <Edge2 {...props} />)\\n})");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/getting-started/demo/react-node/node1.tsx?dumi-raw-code\n/* harmony default export */ var node1dumi_raw_code = ("import type { NsGraph } from \'@antv/xflow\'\\nimport React from \'react\'\\nimport \'./node1.less\'\\n\\nconst Node1: NsGraph.INodeRender = props => {\\n  /**\\n   * 1. \u8282\u70b9\u7684\u6570\u636e\u3001\u4f4d\u7f6e\u4fe1\u606f\u901a\u8fc7props\u53d6\\n   * 2. \u5f53\u8282\u70b9\u88ab\u89e6\u53d1\u66f4\u65b0\u65f6, props\u8fd4\u56de\u7684\u6570\u636e\u4e5f\u4f1a\u52a8\u6001\u66f4\u65b0, \u89e6\u53d1\u8282\u70b9\u91cd\u65b0\u6e32\u67d3\\n   */\\n  return (\\n    <div className=\\"node1-container\\">\\n      <div>{\'React\u8282\u70b91\'}</div>\\n    </div>\\n  )\\n}\\nexport default Node1");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/getting-started/demo/react-node/node1.less?dumi-raw-code\n/* harmony default export */ var react_node_node1dumi_raw_code = (".node1-container {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  width: 100%;\\n  height: 100%;\\n  font-weight: 600;\\n  border-radius: 2px;\\n  background: #ccc;\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/getting-started/demo/react-node/node2.tsx?dumi-raw-code\n/* harmony default export */ var node2dumi_raw_code = ("import type { NsGraph } from \'@antv/xflow\'\\nimport React from \'react\'\\nimport { useAppContext } from \'@antv/xflow\'\\nimport \'./node2.less\'\\n\\nconst Node2: NsGraph.INodeRender = props => {\\n  const ctx = useAppContext()\\n\\n  return (\\n    <div className=\\"node2-container\\">\\n      <div>{\'React\u8282\u70b92\'}</div>\\n    </div>\\n  )\\n}\\nexport default Node2");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/getting-started/demo/react-node/node2.less?dumi-raw-code\n/* harmony default export */ var react_node_node2dumi_raw_code = (".node2-container {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  width: 100%;\\n  height: 100%;\\n  font-weight: 600;\\n  border-radius: 2px;\\n  background: #ccc;\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/getting-started/demo/react-edge/edge1.tsx?dumi-raw-code\n/* harmony default export */ var edge1dumi_raw_code = ("import React from \'react\'\\nimport type { NsGraph } from \'@antv/xflow\'\\nimport { useAppContext } from \'@antv/xflow\'\\nimport { Tooltip } from \'antd\'\\nimport \'./edge1.less\'\\n\\nconst Edge1: NsGraph.IEdgeRender = props => {\\n  const ctx = useAppContext()\\n  // console.log(\'edge useAppContext\', ctx);\\n  // console.log(\'edge props:\', props);\\n  return (\\n    <div className=\\"edge1-container\\">\\n      <Tooltip\\n        title=\\"\u8fd9\u662f\u8fde\u7ebf\u4e0a\u6e32\u67d3\u7684React\u5185\u5bb9\\"\\n        // defaultVisible={true}\\n      >\\n        <div>hover\u6211</div>\\n      </Tooltip>\\n    </div>\\n  )\\n}\\nexport default Edge1");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/getting-started/demo/react-edge/edge1.less?dumi-raw-code\n/* harmony default export */ var react_edge_edge1dumi_raw_code = (".edge1-container {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  width: 100%;\\n  height: 100%;\\n  font-size: 14px;\\n  background-color: #fff;\\n  border: 1px solid #690;\\n  border-radius: 4px;\\n  cursor: pointer;\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/getting-started/demo/react-edge/edge2.tsx?dumi-raw-code\n/* harmony default export */ var edge2dumi_raw_code = ("import React from \'react\'\\nimport type { NsGraph } from \'@antv/xflow\'\\nimport { useAppContext } from \'@antv/xflow\'\\nimport \'./edge2.less\'\\n\\nconst Edge2: NsGraph.IEdgeRender = props => {\\n  return <div className=\\"edge2-container\\">React2</div>\\n}\\nexport default Edge2");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/getting-started/demo/react-edge/edge2.less?dumi-raw-code\n/* harmony default export */ var react_edge_edge2dumi_raw_code = (".edge2-container {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  width: 100%;\\n  height: 100%;\\n  font-size: 14px;\\n  background-color: #fff;\\n  border: 1px solid #690;\\n  border-radius: 4px;\\n  cursor: pointer;\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/getting-started/demo/menu-config.tsx?dumi-raw-code\n/* harmony default export */ var demo_menu_configdumi_raw_code = ("import { createCtxMenuConfig } from \'@antv/xflow-extension\'\\nimport type { NsNodeCmd, NsEdgeCmd } from \'@antv/xflow\'\\nimport { MODELS } from \'@antv/xflow\'\\nimport type { IMenuOptions } from \'@antv/xflow\'\\nimport { MenuItemType } from \'@antv/xflow\'\\nimport type { NsGraph } from \'@antv/xflow\'\\nimport { IconStore, XFlowNodeCommands, XFlowEdgeCommands } from \'@antv/xflow\'\\nimport { DeleteOutlined, EditOutlined, StopOutlined } from \'@ant-design/icons\'\\n\\n/** menuitem \u914d\u7f6e */\\nexport namespace NsCustomMenuItems {\\n  /** \u6ce8\u518c\u83dc\u5355\u4f9d\u8d56\u7684icon */\\n  IconStore.set(\'DeleteOutlined\', DeleteOutlined)\\n  IconStore.set(\'EditOutlined\', EditOutlined)\\n  IconStore.set(\'StopOutlined\', StopOutlined)\\n\\n  export const DELETE_EDGE: IMenuOptions = {\\n    id: XFlowEdgeCommands.DEL_EDGE.id,\\n    label: \'\u5220\u9664\u8fb9\',\\n    iconName: \'DeleteOutlined\',\\n    onClick: async ({ target, commandService }) => {\\n      commandService.executeCommand<NsEdgeCmd.DelEdge.IArgs>(XFlowEdgeCommands.DEL_EDGE.id, {\\n        edgeConfig: target.data as NsGraph.IEdgeConfig,\\n      })\\n    },\\n  }\\n\\n  export const DELETE_NODE: IMenuOptions = {\\n    id: XFlowNodeCommands.DEL_NODE.id,\\n    label: \'\u5220\u9664\u8282\u70b9\',\\n    iconName: \'DeleteOutlined\',\\n    onClick: async ({ target, commandService }) => {\\n      commandService.executeCommand<NsNodeCmd.DelNode.IArgs>(XFlowNodeCommands.DEL_NODE.id, {\\n        nodeConfig: { id: target.data.id },\\n      })\\n    },\\n  }\\n\\n  export const EMPTY_MENU: IMenuOptions = {\\n    id: \'EMPTY_MENU_ITEM\',\\n    label: \'\u6682\u65e0\u53ef\u7528\',\\n    isEnabled: false,\\n    iconName: \'DeleteOutlined\',\\n    onClick: async ({ target, commandService }) => {\\n      commandService.executeCommand<NsNodeCmd.DelNode.IArgs>(XFlowNodeCommands.DEL_NODE.id, {\\n        nodeConfig: { id: target.data.id },\\n      })\\n    },\\n  }\\n\\n  export const SEPARATOR: IMenuOptions = {\\n    id: \'separator\',\\n    type: MenuItemType.Separator,\\n  }\\n}\\n\\nexport const useMenuConfig = createCtxMenuConfig(config => {\\n  config.setMenuModelService(async (data, model, modelService, toDispose) => {\\n    const { type, cell } = data\\n    console.log(type)\\n    switch (type) {\\n      case \'node\':\\n        model.setValue({\\n          id: \'root\',\\n          type: MenuItemType.Root,\\n          submenu: [NsCustomMenuItems.DELETE_NODE],\\n        })\\n        break\\n      case \'edge\':\\n        model.setValue({\\n          id: \'root\',\\n          type: MenuItemType.Root,\\n          submenu: [NsCustomMenuItems.DELETE_EDGE],\\n        })\\n        break\\n      case \'blank\':\\n        model.setValue({\\n          id: \'root\',\\n          type: MenuItemType.Root,\\n          submenu: [NsCustomMenuItems.EMPTY_MENU],\\n        })\\n        break\\n      default:\\n        model.setValue({\\n          id: \'root\',\\n          type: MenuItemType.Root,\\n          submenu: [NsCustomMenuItems.EMPTY_MENU],\\n        })\\n        break\\n    }\\n  })\\n})");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/getting-started/demo/index.less?dumi-raw-code\n/* harmony default export */ var getting_started_demodumi_raw_code = (".quick-start {\\n  .__dumi-default-previewer-demo {\\n    padding: 0 0;\\n  }\\n\\n  @light-border: ~\'1px solid #d9d9d9\';\\n\\n  .xflow-user-container {\\n    position: relative;\\n    width: 100%;\\n    height: 320px;\\n    overflow: scroll;\\n\\n    /** \u8986\u76d6\u8282\u70b9\u9ed8\u8ba4\u9009\u4e2d\u8272 */\\n    .x6-node-selected rect {\\n      stroke: #dd4a68;\\n      stroke-width: 3px;\\n    }\\n\\n    /** \u8986\u76d6\u8fde\u7ebf\u9ed8\u8ba4\u9009\u4e2d\u8272 */\\n    .x6-edge-selected path {\\n      stroke: #873bf4;\\n      stroke-width: 2px;\\n    }\\n\\n    .xflow-workspace-toolbar-top {\\n      border-bottom: @light-border;\\n    }\\n\\n    .xflow-custom-minimap {\\n      border: 1px solid rgba(0, 0, 0, 0.1);\\n\\n      .x6-widget-minimap-viewport {\\n        border: 1px solid rgba(0, 0, 0, 0.3);\\n      }\\n    }\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/dag/demos/basic/index.tsx?dumi-raw-code\n/* harmony default export */ var dag_demos_basicdumi_raw_code = ("import React from \'react\'\\n/** app \u6838\u5fc3\u7ec4\u4ef6 */\\nimport { XFlow, XFlowCanvas, KeyBindings } from \'@antv/xflow\'\\nimport type { IApplication, IAppLoad } from \'@antv/xflow\'\\n/** \u4ea4\u4e92\u7ec4\u4ef6 */\\nimport {\\n  /** \u89e6\u53d1Command\u7684\u4ea4\u4e92\u7ec4\u4ef6 */\\n  CanvasScaleToolbar,\\n  JsonSchemaForm,\\n  WorkspacePanel,\\n  NodeTreePanel,\\n  CanvasContextMenu,\\n  CanvasToolbar,\\n  /** Graph\u7684\u6269\u5c55\u4ea4\u4e92\u7ec4\u4ef6 */\\n  CanvasSnapline,\\n  CanvasMiniMap,\\n  CanvasNodePortTooltip,\\n  DagGraphExtension,\\n} from \'@antv/xflow\'\\n\\n/** app \u7ec4\u4ef6\u914d\u7f6e  */\\n/** \u914d\u7f6e\u753b\u5e03 */\\nimport { useGraphHookConfig } from \'./config-graph\'\\n/** \u914d\u7f6eCommand */\\nimport { useCmdConfig, initGraphCmds } from \'./config-cmd\'\\n/** \u914d\u7f6eModel */\\nimport { useModelServiceConfig } from \'./config-model-service\'\\n/** \u914d\u7f6eMenu */\\nimport { useMenuConfig } from \'./config-menu\'\\n/** \u914d\u7f6eToolbar */\\nimport { useToolbarConfig } from \'./config-toolbar\'\\n/** \u914d\u7f6e\u5feb\u6377\u952e */\\nimport { useKeybindingConfig } from \'./config-keybinding\'\\n/** \u914d\u7f6eDnd\u7ec4\u4ef6\u9762\u677f */\\nimport { onNodeDrop, searchService, treeDataService } from \'./config-dnd-panel\'\\n/** \u914d\u7f6eJsonConfigForm */\\nimport { formSchemaService, formValueUpdateService, controlMapService } from \'./config-form\'\\n\\nimport \'./index.less\'\\nimport \'@antv/xflow/dist/index.css\'\\n\\nexport interface IProps {\\n  meta: { flowId: string }\\n}\\n\\nexport const Demo: React.FC<IProps> = props => {\\n  const { meta } = props\\n  const graphHooksConfig = useGraphHookConfig(props)\\n  const toolbarConfig = useToolbarConfig()\\n  const menuConfig = useMenuConfig()\\n  const cmdConfig = useCmdConfig()\\n  const modelServiceConfig = useModelServiceConfig()\\n  const keybindingConfig = useKeybindingConfig()\\n\\n  const cache = React.useMemo<{ app: IApplication } | null>(\\n    () => ({\\n      app: null,\\n    }),\\n    [],\\n  )\\n  /**\\n   * @param app \u5f53\u524dXFlow\u5de5\u4f5c\u7a7a\u95f4\\n   * @param extensionRegistry \u5f53\u524dXFlow\u914d\u7f6e\u9879\\n   */\\n\\n  const onLoad: IAppLoad = async app => {\\n    cache.app = app\\n    initGraphCmds(cache.app)\\n  }\\n\\n  /** \u7236\u7ec4\u4ef6meta\u5c5e\u6027\u66f4\u65b0\u65f6,\u6267\u884cinitGraphCmds */\\n  React.useEffect(() => {\\n    if (cache.app) {\\n      initGraphCmds(cache.app)\\n    }\\n  }, [cache.app, meta])\\n\\n  return (\\n    <XFlow\\n      className=\\"user-custom-clz\\"\\n      hookConfig={graphHooksConfig}\\n      modelServiceConfig={modelServiceConfig}\\n      commandConfig={cmdConfig}\\n      onLoad={onLoad}\\n      meta={meta}\\n    >\\n      <DagGraphExtension />\\n      <NodeTreePanel\\n        searchService={searchService}\\n        treeDataService={treeDataService}\\n        onNodeDrop={onNodeDrop}\\n        position={{ width: 290, top: 0, bottom: 0, left: 0 }}\\n      />\\n      <CanvasToolbar\\n        className=\\"xflow-workspace-toolbar-top\\"\\n        layout=\\"horizontal\\"\\n        config={toolbarConfig}\\n        position={{ top: 0, left: 290, right: 290, bottom: 0 }}\\n      />\\n      <XFlowCanvas position={{ top: 40, left: 290, right: 290, bottom: 40 }}>\\n        <CanvasScaleToolbar position={{ top: 12, right: 12 }} />\\n        <CanvasContextMenu config={menuConfig} />\\n        <CanvasMiniMap />\\n        <CanvasSnapline color=\\"#faad14\\" />\\n        <CanvasNodePortTooltip />\\n      </XFlowCanvas>\\n      <WorkspacePanel\\n        className=\\"xflow-workspace-toolbar-bottom\\"\\n        position={{ bottom: 0, left: 290, right: 290, height: 40, lineHeight: 40 }}\\n      >\\n        <div> Bottom Toolbar </div>\\n      </WorkspacePanel>\\n      <JsonSchemaForm\\n        controlMapService={controlMapService}\\n        formSchemaService={formSchemaService}\\n        formValueUpdateService={formValueUpdateService}\\n        position={{ width: 290, top: 0, bottom: 0, right: 0 }}\\n      />\\n      <KeyBindings config={keybindingConfig} />\\n    </XFlow>\\n  )\\n}\\n\\nexport default Demo\\n\\nDemo.defaultProps = {\\n  meta: { flowId: \'test-meta-flow-id\' },\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/dag/demos/basic/config-graph.tsx?dumi-raw-code\n/* harmony default export */ var demos_basic_config_graphdumi_raw_code = ("import type { IProps } from \'./index\'\\nimport type { NsGraph } from \'@antv/xflow\'\\nimport { createHookConfig, DisposableCollection } from \'@antv/xflow\'\\nimport { DND_RENDER_ID, GROUP_NODE_RENDER_ID } from \'./constant\'\\nimport { DndNode } from \'./react-node/dnd-node\'\\nimport { GroupNode } from \'./react-node/group\'\\n\\nexport const useGraphHookConfig = createHookConfig<IProps>((config, proxy) => {\\n  // \u83b7\u53d6 Props\\n  const props = proxy.getValue()\\n  console.log(\'get main props\', props)\\n  config.setRegisterHook(hooks => {\\n    const disposableList = [\\n      // \u6ce8\u518c\u589e\u52a0 react Node Render\\n      hooks.reactNodeRender.registerHook({\\n        name: \'add react node\',\\n        handler: async renderMap => {\\n          renderMap.set(DND_RENDER_ID, DndNode)\\n          renderMap.set(GROUP_NODE_RENDER_ID, GroupNode)\\n        },\\n      }),\\n      // \u6ce8\u518c\u589e\u52a0 graph options\\n      hooks.graphOptions.registerHook({\\n        name: \'custom-x6-options\',\\n        // before: \'dag-extension-x6-options\',\\n        handler: async options => {\\n          options.grid = true\\n          options.keyboard = {\\n            enabled: true,\\n          }\\n        },\\n      }),\\n      // \u6ce8\u518c\u589e\u52a0 graph event\\n      hooks.x6Events.registerHook({\\n        name: \'add node click event\',\\n        handler: async events => {\\n          events.push({\\n            eventName: \'node:click\',\\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\\n            callback: (e, cmds, ctx) => {\\n              // \u7ed1\u5b9a\u4e8b\u4ef6\\n            },\\n          } as NsGraph.IEvent<\'node:click\'>)\\n        },\\n      }),\\n    ]\\n    const toDispose = new DisposableCollection()\\n    toDispose.pushAll(disposableList)\\n    return toDispose\\n  })\\n})");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/dag/demos/basic/constant.ts?dumi-raw-code\n/* harmony default export */ var demos_basic_constantdumi_raw_code = ("export const DND_RENDER_ID = \'DND_NDOE\'\\nexport const GROUP_NODE_RENDER_ID = \'GROUP_NODE_RENDER_ID\'\\nexport const NODE_WIDTH = 190\\nexport const NODE_HEIGHT = 40");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/dag/demos/basic/react-node/dnd-node.tsx?dumi-raw-code\n/* harmony default export */ var dnd_nodedumi_raw_code = ("import React from \'react\'\\nimport type { NsGraph } from \'@antv/xflow\'\\nimport \'./dnd-node.less\'\\n\\nexport const DndNode: NsGraph.INodeRender = props => {\\n  return <div className=\\"xflow-dnd-node\\">{props.data.label}</div>\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/dag/demos/basic/react-node/dnd-node.less?dumi-raw-code\n/* harmony default export */ var react_node_dnd_nodedumi_raw_code = ("@light-border: 1px solid #d9d9d9;\\n@primaryColor: #1890ff;\\n\\n.xflow-dnd-node {\\n  z-index: 10;\\n  width: 100%;\\n  height: 40px;\\n  font-size: 16px;\\n  line-height: 40px;\\n  text-align: center;\\n  background-color: #fff;\\n  border-radius: 4px;\\n  box-shadow: ~\'rgb(17 49 96 / 12%) 0px 1px 3px 0px, rgb(17 49 96 / 4%) 0px 0px 0px 1px\';\\n  cursor: grab;\\n  &:hover,\\n  &.selected {\\n    background-color: rgba(227, 244, 255, 0.45);\\n    border: 1px solid @primaryColor;\\n    box-shadow: 0 0 3px 3px rgba(64, 169, 255, 0.2);\\n    cursor: move;\\n  }\\n}\\n\\n.x6-node-selected {\\n  .xflow-dnd-node {\\n    background-color: rgba(227, 244, 255, 0.9);\\n    border: 1px solid @primaryColor;\\n    box-shadow: 0 0 3px 3px rgba(64, 169, 255, 0.2);\\n    &:hover {\\n      background-color: rgba(227, 244, 255, 0.45);\\n    }\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/dag/demos/basic/react-node/group.tsx?dumi-raw-code\n/* harmony default export */ var groupdumi_raw_code = ("import React from \'react\'\\nimport { PlusSquareOutlined, MinusSquareOutlined } from \'@ant-design/icons\'\\nimport type { NsGraph } from \'@antv/xflow\'\\nimport { useXFlowApp, XFlowGroupCommands, NsNodeCmd } from \'@antv/xflow\'\\nimport \'./group.less\'\\n\\nexport const GroupNode: NsGraph.INodeRender = props => {\\n  const { cell } = props\\n  const app = useXFlowApp()\\n  const isCollapsed = props.data.isCollapsed || false\\n  const onExpand = e => {\\n    app.executeCommand(XFlowGroupCommands.COLLAPSE_GROUP.id, {\\n      nodeId: cell.id,\\n      isCollapsed: false,\\n      collapsedSize: { width: 200, height: 40 },\\n    })\\n  }\\n  const onCollapse = e => {\\n    app.executeCommand(XFlowGroupCommands.COLLAPSE_GROUP.id, {\\n      nodeId: cell.id,\\n      isCollapsed: true,\\n      collapsedSize: { width: 200, height: 40 },\\n      gap: 3,\\n    })\\n  }\\n\\n  return (\\n    <div className=\\"xflow-group-node\\">\\n      <div className=\\"xflow-group-header\\">\\n        <div className=\\"header-left\\">{props.data.label}</div>\\n        <div className=\\"header-right\\">\\n          {isCollapsed && <PlusSquareOutlined onClick={onExpand} />}\\n          {!isCollapsed && <MinusSquareOutlined onClick={onCollapse} />}\\n        </div>\\n      </div>\\n    </div>\\n  )\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/dag/demos/basic/react-node/group.less?dumi-raw-code\n/* harmony default export */ var react_node_groupdumi_raw_code = ("@light-border: 1px solid #d9d9d9;\\n@primaryColor: #1890ff;\\n\\n.xflow-group-node {\\n  z-index: 9;\\n  width: 100%;\\n  height: 100%;\\n  background-color: rgba(255, 255, 255, 0.65);\\n  border: 1px solid rgba(255, 255, 255, 0.25);\\n  border-radius: 4px;\\n  box-shadow: ~\'rgb(17 49 96 / 12%) 0px 1px 3px 0px, rgb(17 49 96 / 4%) 0px 0px 0px 1px\';\\n  cursor: grab;\\n  &:hover {\\n    background-color: rgba(227, 244, 255, 0.45);\\n    border: 1px solid @primaryColor;\\n    box-shadow: 0 0 3px 3px rgba(64, 169, 255, 0.2);\\n    cursor: move;\\n  }\\n  .xflow-group-header {\\n    display: flex;\\n    justify-content: space-between;\\n    padding: 0 12px;\\n    font-size: 14px;\\n    line-height: 38px;\\n    .header-left {\\n      width: 80%;\\n      overflow: hidden;\\n      white-space: nowrap;\\n      text-overflow: ellipsis;\\n    }\\n    .header-right {\\n      display: inline-flex;\\n      align-items: center;\\n      span.anticon {\\n        margin-left: 8px;\\n      }\\n    }\\n  }\\n}\\n\\n.x6-node-selected {\\n  .xflow-group-node {\\n    background-color: rgba(243, 249, 255, 0.92);\\n    border: 1px solid @primaryColor;\\n    box-shadow: 0 0 3px 3px rgb(64 169 255 / 20%);\\n    &:hover {\\n      background-color: rgba(243, 249, 255, 0.6);\\n    }\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/dag/demos/basic/config-cmd.ts?dumi-raw-code\n/* harmony default export */ var config_cmddumi_raw_code = ("import type { NsGraphCmd } from \'@antv/xflow\'\\nimport { createCmdConfig, DisposableCollection, XFlowGraphCommands } from \'@antv/xflow\'\\nimport type { IApplication } from \'@antv/xflow\'\\nimport type { IGraphPipelineCommand } from \'@antv/xflow\'\\nimport { MockApi } from \'./service\'\\nimport { commandContributions } from \'./cmd-extensions\'\\nexport const useCmdConfig = createCmdConfig(config => {\\n  // \u6ce8\u518c\u5168\u5c40Command\u6269\u5c55\\n  config.setCommandContributions(() => commandContributions)\\n  // \u8bbe\u7f6ehook\\n  config.setRegisterHookFn(hooks => {\\n    const list = [\\n      hooks.graphMeta.registerHook({\\n        name: \'get node config from backend api\',\\n        handler: async args => {\\n          args.graphMetaService = MockApi.queryGraphMeta\\n        },\\n      }),\\n      hooks.saveGrpahData.registerHook({\\n        name: \'get node config from backend api\',\\n        handler: async args => {\\n          if (!args.saveGraphDataService) {\\n            args.saveGraphDataService = MockApi.saveGraphData\\n          }\\n        },\\n      }),\\n      hooks.addNode.registerHook({\\n        name: \'get node config from backend api\',\\n        handler: async args => {\\n          args.createNodeService = MockApi.addNode\\n        },\\n      }),\\n      hooks.delNode.registerHook({\\n        name: \'get edge config from backend api\',\\n        handler: async args => {\\n          args.deleteNodeService = MockApi.delNode\\n        },\\n      }),\\n      hooks.addEdge.registerHook({\\n        name: \'get edge config from backend api\',\\n        handler: async args => {\\n          args.createEdgeService = MockApi.addEdge\\n        },\\n      }),\\n      hooks.delEdge.registerHook({\\n        name: \'get edge config from backend api\',\\n        handler: async args => {\\n          args.deleteEdgeService = MockApi.delEdge\\n        },\\n      }),\\n    ]\\n    const toDispose = new DisposableCollection()\\n    toDispose.pushAll(list)\\n    return toDispose\\n  })\\n})\\n\\n/** \u67e5\u8be2\u56fe\u7684\u8282\u70b9\u548c\u8fb9\u7684\u6570\u636e */\\nexport const initGraphCmds = (app: IApplication) => {\\n  app.executeCommandPipeline([\\n    /** 1. \u4ece\u670d\u52a1\u7aef\u83b7\u53d6\u6570\u636e */\\n    {\\n      commandId: XFlowGraphCommands.LOAD_DATA.id,\\n      getCommandOption: async ctx => {\\n        return {\\n          args: {\\n            loadDataService: MockApi.loadGraphData,\\n          },\\n        }\\n      },\\n    } as IGraphPipelineCommand<NsGraphCmd.GraphLoadData.IArgs>,\\n    /** 2. \u6267\u884c\u5e03\u5c40\u7b97\u6cd5 */\\n    {\\n      commandId: XFlowGraphCommands.GRAPH_LAYOUT.id,\\n      getCommandOption: async ctx => {\\n        const { graphData } = ctx.getResult()\\n        return {\\n          args: {\\n            layoutType: \'dagre\',\\n            layoutOptions: {\\n              type: \'dagre\',\\n              /** \u5e03\u5c40\u65b9\u5411 */\\n              rankdir: \'TB\',\\n              /** \u8282\u70b9\u95f4\u8ddd */\\n              nodesep: 60,\\n              /** \u5c42\u95f4\u8ddd */\\n              ranksep: 30,\\n            },\\n            graphData,\\n          },\\n        }\\n      },\\n    } as IGraphPipelineCommand<NsGraphCmd.GraphLayout.IArgs>,\\n    /** 3. \u753b\u5e03\u5185\u5bb9\u6e32\u67d3 */\\n    {\\n      commandId: XFlowGraphCommands.GRAPH_RENDER.id,\\n      getCommandOption: async ctx => {\\n        const { graphData } = ctx.getResult()\\n        return {\\n          args: {\\n            graphData,\\n          },\\n        }\\n      },\\n    } as IGraphPipelineCommand<NsGraphCmd.GraphRender.IArgs>,\\n    /** 4. \u7f29\u653e\u753b\u5e03 */\\n    {\\n      commandId: XFlowGraphCommands.GRAPH_ZOOM.id,\\n      getCommandOption: async ctx => {\\n        return {\\n          args: { factor: \'fit\' },\\n        }\\n      },\\n    } as IGraphPipelineCommand<NsGraphCmd.GraphZoom.IArgs>,\\n  ])\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/dag/demos/basic/service.ts?dumi-raw-code\n/* harmony default export */ var servicedumi_raw_code = ("import { DND_RENDER_ID, NODE_WIDTH, NODE_HEIGHT } from \'./constant\'\\nimport { uuidv4, NsGraph } from \'@antv/xflow\'\\nimport type { NsRenameNodeCmd } from \'./cmd-extensions/cmd-rename-node-modal\'\\nimport type { NsNodeCmd, NsEdgeCmd, NsGraphCmd } from \'@antv/xflow\'\\nimport type { NsDeployDagCmd } from \'./cmd-extensions/cmd-deploy\'\\n/** mock \u540e\u7aef\u63a5\u53e3\u8c03\u7528 */\\nexport namespace MockApi {\\n  export const NODE_COMMON_PROPS = {\\n    renderKey: DND_RENDER_ID,\\n    width: NODE_WIDTH,\\n    height: NODE_HEIGHT,\\n  } as const\\n\\n  /** \u67e5\u56fe\u7684meta\u5143\u4fe1\u606f */\\n  export const queryGraphMeta: NsGraphCmd.GraphMeta.IArgs[\'graphMetaService\'] = async args => {\\n    console.log(\'queryMeta\', args)\\n    return { ...args, flowId: args.meta.flowId }\\n  }\\n  /** \u52a0\u8f7d\u56fe\u6570\u636e\u7684api */\\n  export const loadGraphData = async (meta: NsGraph.IGraphMeta) => {\\n    const nodes: NsGraph.INodeConfig[] = [\\n      {\\n        ...NODE_COMMON_PROPS,\\n        id: \'node1\',\\n        label: \'\u7b97\u6cd5\u8282\u70b9-1\',\\n        ports: [\\n          {\\n            id: \'node1-input-1\',\\n            type: NsGraph.AnchorType.INPUT,\\n            group: NsGraph.AnchorGroup.TOP,\\n            tooltip: \'\u8f93\u5165\u6869\',\\n          },\\n          {\\n            id: \'node1-output-1\',\\n            type: NsGraph.AnchorType.OUTPUT,\\n            group: NsGraph.AnchorGroup.BOTTOM,\\n            tooltip: \'\u8f93\u51fa\u6869\',\\n          },\\n        ] as NsGraph.INodeAnchor[],\\n      },\\n      {\\n        ...NODE_COMMON_PROPS,\\n        id: \'node2\',\\n        label: \'\u7b97\u6cd5\u8282\u70b9-2\',\\n        ports: [\\n          {\\n            id: \'node2-input-1\',\\n            type: NsGraph.AnchorType.INPUT,\\n            group: NsGraph.AnchorGroup.TOP,\\n            tooltip: \'\u8f93\u5165\u6869\',\\n            connected: true,\\n          },\\n          {\\n            id: \'node2-output-1\',\\n            type: NsGraph.AnchorType.OUTPUT,\\n            group: NsGraph.AnchorGroup.BOTTOM,\\n            tooltip: \'\u8f93\u51fa\u6869\',\\n          },\\n        ] as NsGraph.INodeAnchor[],\\n      },\\n      {\\n        ...NODE_COMMON_PROPS,\\n        id: \'node3\',\\n        label: \'\u7b97\u6cd5\u8282\u70b9-3\',\\n        ports: [\\n          {\\n            id: \'node3-input-1\',\\n            type: NsGraph.AnchorType.INPUT,\\n            group: NsGraph.AnchorGroup.TOP,\\n            tooltip: \'\u8f93\u5165\u6869\',\\n            connected: true,\\n          },\\n          {\\n            id: \'node3-output-1\',\\n            type: NsGraph.AnchorType.OUTPUT,\\n            group: NsGraph.AnchorGroup.BOTTOM,\\n            tooltip: \'\u8f93\u51fa\u6869\',\\n          },\\n        ] as NsGraph.INodeAnchor[],\\n      },\\n      {\\n        ...NODE_COMMON_PROPS,\\n        id: \'node4\',\\n        label: \'\u7b97\u6cd5\u8282\u70b9-4\',\\n        ports: [\\n          {\\n            id: \'node4-input-1\',\\n            type: NsGraph.AnchorType.INPUT,\\n            group: NsGraph.AnchorGroup.TOP,\\n            tooltip: \'\u8f93\u5165\u6869\',\\n            connected: true,\\n          },\\n          {\\n            id: \'node4-output-1\',\\n            type: NsGraph.AnchorType.OUTPUT,\\n            group: NsGraph.AnchorGroup.BOTTOM,\\n            tooltip: \'\u8f93\u51fa\u6869\',\\n          },\\n        ] as NsGraph.INodeAnchor[],\\n      },\\n    ]\\n    const edges: NsGraph.IEdgeConfig[] = [\\n      {\\n        id: uuidv4(),\\n        source: \'node1\',\\n        target: \'node2\',\\n        sourcePortId: \'node1-output-1\',\\n        targetPortId: \'node2-input-1\',\\n      },\\n      {\\n        id: uuidv4(),\\n        source: \'node1\',\\n        target: \'node3\',\\n        sourcePortId: \'node1-output-1\',\\n        targetPortId: \'node3-input-1\',\\n      },\\n      {\\n        id: uuidv4(),\\n        source: \'node1\',\\n        target: \'node4\',\\n        sourcePortId: \'node1-output-1\',\\n        targetPortId: \'node4-input-1\',\\n      },\\n    ]\\n    return { nodes, edges }\\n  }\\n  /** \u4fdd\u5b58\u56fe\u6570\u636e\u7684api */\\n  export const saveGraphData: NsGraphCmd.SaveGraphData.IArgs[\'saveGraphDataService\'] = async (\\n    meta: NsGraph.IGraphMeta,\\n    graphData: NsGraph.IGraphData,\\n  ) => {\\n    console.log(\'saveGraphData api\', meta, graphData)\\n    return {\\n      success: true,\\n      data: graphData,\\n    }\\n  }\\n  /** \u90e8\u7f72\u56fe\u6570\u636e\u7684api */\\n  export const deployDagService: NsDeployDagCmd.IDeployDagService = async (\\n    meta: NsGraph.IGraphMeta,\\n    graphData: NsGraph.IGraphData,\\n  ) => {\\n    console.log(\'deployService api\', meta, graphData)\\n    return {\\n      success: true,\\n      data: graphData,\\n    }\\n  }\\n\\n  /** \u6dfb\u52a0\u8282\u70b9api */\\n  export const addNode: NsNodeCmd.AddNode.IArgs[\'createNodeService\'] = async (\\n    args: NsNodeCmd.AddNode.IArgs,\\n  ) => {\\n    console.info(\'addNode service running, add node:\', args)\\n    const portItems = [\\n      {\\n        type: NsGraph.AnchorType.INPUT,\\n        group: NsGraph.AnchorGroup.TOP,\\n        tooltip: \'\u8f93\u5165\u68691\',\\n      },\\n      {\\n        type: NsGraph.AnchorType.INPUT,\\n        group: NsGraph.AnchorGroup.TOP,\\n        tooltip: \'\u8f93\u5165\u68692\',\\n      },\\n      {\\n        type: NsGraph.AnchorType.OUTPUT,\\n        group: NsGraph.AnchorGroup.BOTTOM,\\n        tooltip: \'\u8f93\u51fa\u6869\',\\n      },\\n    ] as NsGraph.INodeAnchor[]\\n\\n    const { id, ports = portItems, groupChildren } = args.nodeConfig\\n    const nodeId = id || uuidv4()\\n    /** \u8fd9\u91cc\u6dfb\u52a0\u8fde\u7ebf\u6869 */\\n    const node: NsNodeCmd.AddNode.IArgs[\'nodeConfig\'] = {\\n      width: 190,\\n      height: 40,\\n      ...args.nodeConfig,\\n      id: nodeId,\\n      ports: ports.map(port => {\\n        return { ...port, id: uuidv4() }\\n      }),\\n    }\\n    /** group\u6ca1\u6709\u94fe\u63a5\u6869 */\\n    if (groupChildren && groupChildren.length) {\\n      node.ports = []\\n    }\\n    return node\\n  }\\n\\n  /** \u66f4\u65b0\u8282\u70b9 name\uff0c\u53ef\u80fd\u4f9d\u8d56\u63a5\u53e3\u5224\u65ad\u662f\u5426\u91cd\u540d\uff0c\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u65f6\uff0c\u4e0d\u66f4\u65b0 */\\n  export const renameNode: NsRenameNodeCmd.IUpdateNodeNameService = async (\\n    name,\\n    node,\\n    graphMeta,\\n  ) => {\\n    console.log(\'rename node\', node, name, graphMeta)\\n    return { err: null, nodeName: name }\\n  }\\n\\n  /** \u5220\u9664\u8282\u70b9\u7684api */\\n  export const delNode: NsNodeCmd.DelNode.IArgs[\'deleteNodeService\'] = async args => {\\n    console.info(\'delNode service running, del node:\', args.nodeConfig.id)\\n    return true\\n  }\\n\\n  /** \u6dfb\u52a0\u8fb9\u7684api */\\n  export const addEdge: NsEdgeCmd.AddEdge.IArgs[\'createEdgeService\'] = async args => {\\n    console.info(\'addEdge service running, add edge:\', args)\\n    const { edgeConfig } = args\\n    return {\\n      ...edgeConfig,\\n      id: uuidv4(),\\n    }\\n  }\\n\\n  /** \u5220\u9664\u8fb9\u7684api */\\n  export const delEdge: NsEdgeCmd.DelEdge.IArgs[\'deleteEdgeService\'] = async args => {\\n    console.info(\'delEdge service running, del edge:\', args)\\n    return true\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/dag/demos/basic/cmd-extensions/index.ts?dumi-raw-code\n/* harmony default export */ var cmd_extensionsdumi_raw_code = ("import { TestAsyncCommand, NsTestCmd } from \'./cmd-async-test\'\\nimport { DeployDagCommand, NsDeployDagCmd } from \'./cmd-deploy\'\\nimport { RenameNodeCommand, NsRenameNodeCmd } from \'./cmd-rename-node-modal\'\\nimport type { ICommandContributionConfig } from \'@antv/xflow\'\\n/** \u6ce8\u518c\u6210\u4e3a\u53ef\u4ee5\u6267\u884c\u7684\u547d\u4ee4 */\\n\\nexport const commandContributions: ICommandContributionConfig[] = [\\n  {\\n    ...NsTestCmd,\\n    CommandHandler: TestAsyncCommand,\\n  },\\n  {\\n    ...NsDeployDagCmd,\\n    CommandHandler: DeployDagCommand,\\n  },\\n  {\\n    ...NsRenameNodeCmd,\\n    CommandHandler: RenameNodeCommand,\\n  },\\n]");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/dag/demos/basic/cmd-extensions/cmd-async-test.ts?dumi-raw-code\n/* harmony default export */ var cmd_async_testdumi_raw_code = ("import type { ICmdHooks as IHooks } from \'@antv/xflow\'\\nimport type { HookHub } from \'@antv/xflow-hook\'\\nimport type { IArgsBase, ICommandHandler } from \'@antv/xflow\'\\nimport { ICommandContextProvider, ManaSyringe } from \'@antv/xflow\'\\nimport { CustomCommands } from \'./constants\'\\n\\ntype ICommand = ICommandHandler<NsTestCmd.IArgs, NsTestCmd.IResult, NsTestCmd.ICmdHooks>\\n\\nconst { inject, injectable } = ManaSyringe\\nexport namespace NsTestCmd {\\n  /** Command: \u7528\u4e8e\u6ce8\u518cnamed factory */\\n  export const command = CustomCommands.TEST_ASYNC_CMD\\n  /** hook name */\\n  export const hookKey = \'testCmd\'\\n  /** hook \u53c2\u6570\u7c7b\u578b */\\n  export interface IArgs extends IArgsBase {\\n    test: any\\n  }\\n  /** hook handler \u8fd4\u56de\u7c7b\u578b */\\n  export interface IResult {\\n    test: any\\n  }\\n  /** hooks \u7c7b\u578b */\\n  export interface ICmdHooks extends IHooks {\\n    testCmd: HookHub<IArgs, IResult>\\n  }\\n}\\n\\n@injectable()\\n/** \u521b\u5efa\u8282\u70b9\u547d\u4ee4 */\\nexport class TestAsyncCommand implements ICommand {\\n  /** api */\\n  @inject(ICommandContextProvider) contextProvider: ICommand[\'contextProvider\']\\n\\n  /** \u6267\u884cCmd */\\n  execute = async () => {\\n    const ctx = this.contextProvider()\\n    const hooks = ctx.getHooks()\\n    const { args, hooks: runtimeHook } = ctx.getArgs()\\n    const graph = await ctx.getX6Graph()\\n    const result = await hooks.testCmd.call(\\n      args,\\n      async args => {\\n        const { commandService, modelService, graphMeta, test } = args\\n        console.log(graph, commandService, modelService, graphMeta, test)\\n        return { test: true }\\n      },\\n      runtimeHook,\\n    )\\n\\n    ctx.setResult(result)\\n    return this\\n  }\\n\\n  /** undo cmd */\\n  undo = async () => {\\n    if (this.isUndoable()) {\\n      const ctx = this.contextProvider()\\n      ctx.undo()\\n    }\\n    return this\\n  }\\n\\n  /** redo cmd */\\n  redo = async () => {\\n    if (!this.isUndoable()) {\\n      await this.execute()\\n    }\\n    return this\\n  }\\n\\n  isUndoable(): boolean {\\n    const ctx = this.contextProvider()\\n    return ctx.isUndoable()\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/dag/demos/basic/cmd-extensions/constants.ts?dumi-raw-code\n/* harmony default export */ var constantsdumi_raw_code = ("import type { IGraphCommand } from \'@antv/xflow\'\\n\\n/** \u8282\u70b9\u547d\u4ee4 */\\nexport namespace CustomCommands {\\n  const category = \'\u8282\u70b9\u64cd\u4f5c\'\\n  /** \u5f02\u6b65\u8bf7\u6c42demo */\\n  export const TEST_ASYNC_CMD: IGraphCommand = {\\n    id: \'xflow:async-cmd\',\\n    label: \'\u5f02\u6b65\u8bf7\u6c42\',\\n    category,\\n  }\\n  /** \u91cd\u547d\u540d\u8282\u70b9\u5f39\u7a97 */\\n  export const SHOW_RENAME_MODAL: IGraphCommand = {\\n    id: \'xflow:rename-node-modal\',\\n    label: \'\u6253\u5f00\u91cd\u547d\u540d\u5f39\u7a97\',\\n    category,\\n  }\\n  /** \u90e8\u7f72\u670d\u52a1 */\\n  export const DEPLOY_SERVICE: IGraphCommand = {\\n    id: \'xflow:deploy-service\',\\n    label: \'\u90e8\u7f72\u670d\u52a1\',\\n    category,\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/dag/demos/basic/cmd-extensions/cmd-deploy.ts?dumi-raw-code\n/* harmony default export */ var cmd_deploydumi_raw_code = ("import { inject, injectable } from \'mana-syringe\'\\nimport type { NsGraphCmd, ICmdHooks as IHooks, NsGraph } from \'@antv/xflow\'\\nimport type { HookHub } from \'@antv/xflow-hook\'\\nimport type { IArgsBase, ICommandHandler } from \'@antv/xflow\'\\nimport { XFlowGraphCommands, ManaSyringe } from \'@antv/xflow\'\\nimport { ICommandContextProvider } from \'@antv/xflow\'\\nimport { CustomCommands } from \'./constants\'\\n\\ntype ICommand = ICommandHandler<\\n  NsDeployDagCmd.IArgs,\\n  NsDeployDagCmd.IResult,\\n  NsDeployDagCmd.ICmdHooks\\n>\\n\\nexport namespace NsDeployDagCmd {\\n  /** Command: \u7528\u4e8e\u6ce8\u518cnamed factory */\\n  export const command = CustomCommands.DEPLOY_SERVICE\\n  /** hook name */\\n  export const hookKey = \'deployDag\'\\n  /** hook \u53c2\u6570\u7c7b\u578b */\\n  export interface IArgs extends IArgsBase {\\n    deployDagService: IDeployDagService\\n  }\\n  export interface IDeployDagService {\\n    (meta: NsGraph.IGraphMeta, data: NsGraph.IGraphData): Promise<{ success: boolean }>\\n  }\\n  /** hook handler \u8fd4\u56de\u7c7b\u578b */\\n  export interface IResult {\\n    success: boolean\\n  }\\n  /** hooks \u7c7b\u578b */\\n  export interface ICmdHooks extends IHooks {\\n    deployDag: HookHub<IArgs, IResult>\\n  }\\n}\\n\\n@ManaSyringe.injectable()\\n/** \u90e8\u7f72\u753b\u5e03\u6570\u636e */\\nexport class DeployDagCommand implements ICommand {\\n  /** api */\\n  @ManaSyringe.inject(ICommandContextProvider) contextProvider: ICommand[\'contextProvider\']\\n\\n  /** \u6267\u884cCmd */\\n  execute = async () => {\\n    const ctx = this.contextProvider()\\n    const { args, hooks: runtimeHook } = ctx.getArgs()\\n    const hooks = ctx.getHooks()\\n\\n    const result = await hooks.deployDag.call(args, async args => {\\n      const { commandService, deployDagService } = args\\n      /** \u6267\u884cCommand */\\n      await commandService.executeCommand(\\n        XFlowGraphCommands.SAVE_GRAPH_DATA.id,\\n        {\\n          saveGraphDataService: async (meta, graph) => {\\n            await deployDagService(meta, graph)\\n          },\\n        } as NsGraphCmd.SaveGraphData.IArgs,\\n        runtimeHook,\\n      )\\n      return { success: true }\\n    })\\n\\n    ctx.setResult(result)\\n    return this\\n  }\\n\\n  /** undo cmd */\\n  undo = async () => {\\n    if (this.isUndoable()) {\\n      const ctx = this.contextProvider()\\n      ctx.undo()\\n    }\\n    return this\\n  }\\n\\n  /** redo cmd */\\n  redo = async () => {\\n    if (!this.isUndoable()) {\\n      await this.execute()\\n    }\\n    return this\\n  }\\n\\n  isUndoable(): boolean {\\n    const ctx = this.contextProvider()\\n    return ctx.isUndoable()\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/dag/demos/basic/cmd-extensions/cmd-rename-node-modal.tsx?dumi-raw-code\n/* harmony default export */ var cmd_rename_node_modaldumi_raw_code = ("import React from \'react\'\\nimport type { HookHub, ICmdHooks as IHooks, NsGraph, IModelService } from \'@antv/xflow\'\\nimport { Deferred, ManaSyringe } from \'@antv/xflow\'\\nimport type { FormInstance } from \'antd\'\\nimport { Modal, Form, Input, ConfigProvider } from \'antd\'\\n\\nimport type { IArgsBase, ICommandHandler, IGraphCommandService } from \'@antv/xflow\'\\nimport { ICommandContextProvider } from \'@antv/xflow\'\\n\\nimport { CustomCommands } from \'./constants\'\\n\\nimport \'antd/es/modal/style/index\'\\n\\ntype ICommand = ICommandHandler<\\n  NsRenameNodeCmd.IArgs,\\n  NsRenameNodeCmd.IResult,\\n  NsRenameNodeCmd.ICmdHooks\\n>\\n\\nexport namespace NsRenameNodeCmd {\\n  /** Command: \u7528\u4e8e\u6ce8\u518cnamed factory */\\n  export const command = CustomCommands.SHOW_RENAME_MODAL\\n  /** hook name */\\n  export const hookKey = \'renameNode\'\\n  /** hook \u53c2\u6570\u7c7b\u578b */\\n  export interface IArgs extends IArgsBase {\\n    nodeConfig: NsGraph.INodeConfig\\n    updateNodeNameService: IUpdateNodeNameService\\n  }\\n  export interface IUpdateNodeNameService {\\n    (newName: string, nodeConfig: NsGraph.INodeConfig, meta: NsGraph.IGraphMeta): Promise<{\\n      err: string | null\\n      nodeName: string\\n    }>\\n  }\\n  /** hook handler \u8fd4\u56de\u7c7b\u578b */\\n  export interface IResult {\\n    err: string | null\\n    preNodeName?: string\\n    currenNodetName?: string\\n  }\\n  /** hooks \u7c7b\u578b */\\n  export interface ICmdHooks extends IHooks {\\n    renameNode: HookHub<IArgs, IResult>\\n  }\\n}\\n\\n@ManaSyringe.injectable()\\n/** \u90e8\u7f72\u753b\u5e03\u6570\u636e */\\nexport class RenameNodeCommand implements ICommand {\\n  /** api */\\n  @ManaSyringe.inject(ICommandContextProvider) contextProvider: ICommand[\'contextProvider\']\\n\\n  /** \u6267\u884cCmd */\\n  execute = async () => {\\n    const ctx = this.contextProvider()\\n    const { args, hooks: runtimeHook } = ctx.getArgs()\\n    const hooks = ctx.getHooks()\\n    const result = await hooks.renameNode.call(args, async args => {\\n      const { nodeConfig, graphMeta, commandService, modelService, updateNodeNameService } = args\\n      const preNodeName = nodeConfig.label\\n\\n      const getAppContext: IGetAppCtx = () => {\\n        return {\\n          graphMeta,\\n          commandService,\\n          modelService,\\n          updateNodeNameService,\\n        }\\n      }\\n\\n      const x6Graph = await ctx.getX6Graph()\\n      const cell = x6Graph.getCellById(nodeConfig.id)\\n\\n      if (!cell || !cell.isNode()) {\\n        throw new Error(`${nodeConfig.id} is not a valid node`)\\n      }\\n      /** \u901a\u8fc7modal \u83b7\u53d6 new name */\\n      const newName = await showModal(nodeConfig, getAppContext)\\n      /** \u66f4\u65b0 node name  */\\n      if (newName) {\\n        const cellData = cell.getData<NsGraph.INodeConfig>()\\n        cell.setData({ ...cellData, label: newName } as NsGraph.INodeConfig)\\n        return { err: null, preNodeName, currenNodetName: newName }\\n      }\\n      return { err: null, preNodeName, currenNodetName: \'\' }\\n    })\\n\\n    ctx.setResult(result)\\n    return this\\n  }\\n\\n  /** undo cmd */\\n  undo = async () => {\\n    if (this.isUndoable()) {\\n      const ctx = this.contextProvider()\\n      ctx.undo()\\n    }\\n    return this\\n  }\\n\\n  /** redo cmd */\\n  redo = async () => {\\n    if (!this.isUndoable()) {\\n      await this.execute()\\n    }\\n    return this\\n  }\\n\\n  isUndoable(): boolean {\\n    const ctx = this.contextProvider()\\n    return ctx.isUndoable()\\n  }\\n}\\n\\nexport interface IGetAppCtx {\\n  (): {\\n    graphMeta: NsGraph.IGraphMeta\\n    commandService: IGraphCommandService\\n    modelService: IModelService\\n    updateNodeNameService: NsRenameNodeCmd.IUpdateNodeNameService\\n  }\\n}\\n\\nexport type IModalInstance = ReturnType<typeof Modal.confirm>\\nexport interface IFormProps {\\n  newNodeName: string\\n}\\n\\nconst layout = {\\n  labelCol: { span: 5 },\\n  wrapperCol: { span: 19 },\\n}\\n\\nfunction showModal(node: NsGraph.INodeConfig, getAppContext: IGetAppCtx) {\\n  /** showModal \u8fd4\u56de\u4e00\u4e2aPromise */\\n  const defer = new Deferred<string | void>()\\n\\n  /** modal\u786e\u8ba4\u4fdd\u5b58\u903b\u8f91 */\\n  class ModalCache {\\n    static modal: IModalInstance\\n    static form: FormInstance<IFormProps>\\n  }\\n\\n  /** modal\u786e\u8ba4\u4fdd\u5b58\u903b\u8f91 */\\n  const onOk = async () => {\\n    const { form, modal } = ModalCache\\n    const appContext = getAppContext()\\n    const { updateNodeNameService, graphMeta } = appContext\\n    try {\\n      modal.update({ okButtonProps: { loading: true } })\\n      await form.validateFields()\\n      const values = await form.getFieldsValue()\\n      const newName: string = values.newNodeName\\n      /** \u6267\u884c backend service */\\n      if (updateNodeNameService) {\\n        const { err, nodeName } = await updateNodeNameService(newName, node, graphMeta)\\n        if (err) {\\n          throw new Error(err)\\n        }\\n        defer.resolve(nodeName)\\n      }\\n      /** \u66f4\u65b0\u6210\u529f\u540e\uff0c\u5173\u95edmodal */\\n      onHide()\\n    } catch (error) {\\n      console.error(error)\\n      /** \u5982\u679cresolve\u7a7a\u5b57\u7b26\u4e32\u5219\u4e0d\u66f4\u65b0 */\\n      modal.update({ okButtonProps: { loading: false } })\\n    }\\n  }\\n\\n  /** modal\u9500\u6bc1\u903b\u8f91 */\\n  const onHide = () => {\\n    modal.destroy()\\n    ModalCache.form = null as any\\n    ModalCache.modal = null as any\\n    container.destory()\\n  }\\n\\n  /** modal\u5185\u5bb9 */\\n  const ModalContent = () => {\\n    const [form] = Form.useForm<IFormProps>()\\n    /** \u7f13\u5b58form\u5b9e\u4f8b */\\n    ModalCache.form = form\\n\\n    return (\\n      <div>\\n        <ConfigProvider>\\n          <Form form={form} {...layout} initialValues={{ newNodeName: node.label }}>\\n            <Form.Item\\n              name=\\"newNodeName\\"\\n              label=\\"\u8282\u70b9\u540d\\"\\n              rules={[\\n                { required: true, message: \'\u8bf7\u8f93\u5165\u65b0\u8282\u70b9\u540d\' },\\n                { min: 3, message: \'\u8282\u70b9\u540d\u4e0d\u80fd\u5c11\u4e8e3\u4e2a\u5b57\u7b26\' },\\n              ]}\\n            >\\n              <Input />\\n            </Form.Item>\\n          </Form>\\n        </ConfigProvider>\\n      </div>\\n    )\\n  }\\n  /** \u521b\u5efamodal dom\u5bb9\u5668 */\\n  const container = createContainer()\\n  /** \u521b\u5efamodal */\\n  const modal = Modal.confirm({\\n    title: \'\u91cd\u547d\u540d\',\\n    content: <ModalContent />,\\n    getContainer: () => {\\n      return container.element\\n    },\\n    okButtonProps: {\\n      onClick: e => {\\n        e.stopPropagation()\\n        onOk()\\n      },\\n    },\\n    onCancel: () => {\\n      onHide()\\n    },\\n    afterClose: () => {\\n      onHide()\\n    },\\n  })\\n\\n  /** \u7f13\u5b58modal\u5b9e\u4f8b */\\n  ModalCache.modal = modal\\n\\n  /** showModal \u8fd4\u56de\u4e00\u4e2aPromise\uff0c\u7528\u4e8eawait */\\n  return defer.promise\\n}\\n\\nconst createContainer = () => {\\n  const div = document.createElement(\'div\')\\n  div.classList.add(\'xflow-modal-container\')\\n  window.document.body.append(div)\\n  return {\\n    element: div,\\n    destory: () => {\\n      window.document.body.removeChild(div)\\n    },\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/dag/demos/basic/config-model-service.ts?dumi-raw-code\n/* harmony default export */ var config_model_servicedumi_raw_code = ("import type { IModelService } from \'@antv/xflow\'\\nimport { createModelServiceConfig } from \'@antv/xflow\'\\n\\nexport namespace NS_LOADING_STATE {\\n  export const id = \'test\'\\n  export interface IState {\\n    loading: boolean\\n  }\\n}\\n\\nexport const useModelServiceConfig = createModelServiceConfig(config => {\\n  config.registerModel(registry => {\\n    return registry.registerModel({\\n      id: NS_LOADING_STATE.id,\\n      getInitialValue: () => {\\n        loading: true\\n      },\\n    })\\n  })\\n})\\n\\nexport const useLoadingState = async (contextService: IModelService) => {\\n  const ctx = await contextService.awaitModel<NS_LOADING_STATE.IState>(NS_LOADING_STATE.id)\\n  return ctx.getValidValue()\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/dag/demos/basic/config-menu.ts?dumi-raw-code\n/* harmony default export */ var config_menudumi_raw_code = ("import type { NsNodeCmd, NsEdgeCmd, IMenuOptions, NsGraph } from \'@antv/xflow\'\\nimport { createCtxMenuConfig, MenuItemType } from \'@antv/xflow\'\\nimport { IconStore, XFlowNodeCommands, XFlowEdgeCommands } from \'@antv/xflow\'\\nimport { DeleteOutlined, EditOutlined, StopOutlined } from \'@ant-design/icons\'\\nimport { CustomCommands } from \'./cmd-extensions/constants\'\\nimport type { NsRenameNodeCmd } from \'./cmd-extensions/cmd-rename-node-modal\'\\nimport { MockApi } from \'./service\'\\n\\n/** menuitem \u914d\u7f6e */\\nexport namespace NsMenuItemConfig {\\n  /** \u6ce8\u518c\u83dc\u5355\u4f9d\u8d56\u7684icon */\\n  IconStore.set(\'DeleteOutlined\', DeleteOutlined)\\n  IconStore.set(\'EditOutlined\', EditOutlined)\\n  IconStore.set(\'StopOutlined\', StopOutlined)\\n\\n  export const DELETE_EDGE: IMenuOptions = {\\n    id: XFlowEdgeCommands.DEL_EDGE.id,\\n    label: \'\u5220\u9664\u8fb9\',\\n    iconName: \'DeleteOutlined\',\\n    onClick: async ({ target, commandService }) => {\\n      commandService.executeCommand<NsEdgeCmd.DelEdge.IArgs>(XFlowEdgeCommands.DEL_EDGE.id, {\\n        edgeConfig: target.data as NsGraph.IEdgeConfig,\\n      })\\n    },\\n  }\\n\\n  export const DELETE_NODE: IMenuOptions = {\\n    id: XFlowNodeCommands.DEL_NODE.id,\\n    label: \'\u5220\u9664\u8282\u70b9\',\\n    iconName: \'DeleteOutlined\',\\n    onClick: async ({ target, commandService }) => {\\n      commandService.executeCommand<NsNodeCmd.DelNode.IArgs>(XFlowNodeCommands.DEL_NODE.id, {\\n        nodeConfig: { id: target.data.id },\\n      })\\n    },\\n  }\\n\\n  export const EMPTY_MENU: IMenuOptions = {\\n    id: \'EMPTY_MENU_ITEM\',\\n    label: \'\u6682\u65e0\u53ef\u7528\',\\n    isEnabled: false,\\n    iconName: \'DeleteOutlined\',\\n  }\\n\\n  export const RENAME_NODE: IMenuOptions = {\\n    id: CustomCommands.SHOW_RENAME_MODAL.id,\\n    label: \'\\u001d\u91cd\u547d\u540d\',\\n    isVisible: true,\\n    iconName: \'EditOutlined\',\\n    onClick: async ({ target, commandService }) => {\\n      const nodeConfig = target.data as NsGraph.INodeConfig\\n      commandService.executeCommand<NsRenameNodeCmd.IArgs>(CustomCommands.SHOW_RENAME_MODAL.id, {\\n        nodeConfig,\\n        updateNodeNameService: MockApi.renameNode,\\n      })\\n    },\\n  }\\n\\n  export const SEPARATOR: IMenuOptions = {\\n    id: \'separator\',\\n    type: MenuItemType.Separator,\\n  }\\n}\\n\\nexport const useMenuConfig = createCtxMenuConfig(config => {\\n  config.setMenuModelService(async (target, model, modelService, toDispose) => {\\n    const { type, cell } = target\\n    console.log(type)\\n    switch (type) {\\n      /** \u8282\u70b9\u83dc\u5355 */\\n      case \'node\':\\n        model.setValue({\\n          id: \'root\',\\n          type: MenuItemType.Root,\\n          submenu: [NsMenuItemConfig.DELETE_NODE, NsMenuItemConfig.RENAME_NODE],\\n        })\\n        break\\n      /** \u8fb9\u83dc\u5355 */\\n      case \'edge\':\\n        model.setValue({\\n          id: \'root\',\\n          type: MenuItemType.Root,\\n          submenu: [NsMenuItemConfig.DELETE_EDGE],\\n        })\\n        break\\n      /** \u753b\u5e03\u83dc\u5355 */\\n      case \'blank\':\\n        model.setValue({\\n          id: \'root\',\\n          type: MenuItemType.Root,\\n          submenu: [NsMenuItemConfig.EMPTY_MENU],\\n        })\\n        break\\n      /** \u9ed8\u8ba4\u83dc\u5355 */\\n      default:\\n        model.setValue({\\n          id: \'root\',\\n          type: MenuItemType.Root,\\n          submenu: [NsMenuItemConfig.EMPTY_MENU],\\n        })\\n        break\\n    }\\n  })\\n})");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/dag/demos/basic/config-toolbar.ts?dumi-raw-code\n/* harmony default export */ var config_toolbardumi_raw_code = ("import type { IToolbarItemOptions } from \'@antv/xflow\'\\nimport { createToolbarConfig, XFlowGroupCommands, uuidv4 } from \'@antv/xflow\'\\nimport type { IModelService } from \'@antv/xflow\'\\nimport { XFlowGraphCommands, MODELS, IconStore } from \'@antv/xflow\'\\nimport {\\n  UngroupOutlined,\\n  SaveOutlined,\\n  CloudSyncOutlined,\\n  GroupOutlined,\\n  GatewayOutlined,\\n  ShareAltOutlined,\\n} from \'@ant-design/icons\'\\nimport { MockApi } from \'./service\'\\nimport { CustomCommands } from \'./cmd-extensions/constants\'\\nimport type { NsDeployDagCmd } from \'./cmd-extensions/cmd-deploy\'\\nimport type { NsGraphCmd, NsGroupCmd } from \'@antv/xflow\'\\nimport { GROUP_NODE_RENDER_ID } from \'./constant\'\\n\\nexport namespace NSToolbarConfig {\\n  /** \u6ce8\u518cicon \u7c7b\u578b */\\n  IconStore.set(\'SaveOutlined\', SaveOutlined)\\n  IconStore.set(\'CloudSyncOutlined\', CloudSyncOutlined)\\n  IconStore.set(\'GatewayOutlined\', GatewayOutlined)\\n  IconStore.set(\'GroupOutlined\', GroupOutlined)\\n  IconStore.set(\'UngroupOutlined\', UngroupOutlined)\\n  IconStore.set(\'ShareAltOutlined\', ShareAltOutlined)\\n\\n  /** toolbar\u4f9d\u8d56\u7684\u72b6\u6001 */\\n  export interface IToolbarState {\\n    isMultiSelctionActive: boolean\\n    isNodeSelected: boolean\\n    isGroupSelected: boolean\\n  }\\n\\n  export const getDependencies = async (modelService: IModelService) => {\\n    return [\\n      await MODELS.SELECTED_CELLS.getModel(modelService),\\n      await MODELS.GRAPH_ENABLE_MULTI_SELECT.getModel(modelService),\\n    ]\\n  }\\n\\n  /** toolbar\u4f9d\u8d56\u7684\u72b6\u6001 */\\n  export const getToolbarState = async (modelService: IModelService) => {\\n    // isMultiSelctionActive\\n    const { isEnable: isMultiSelctionActive } = await MODELS.GRAPH_ENABLE_MULTI_SELECT.useValue(\\n      modelService,\\n    )\\n    // isGroupSelected\\n    const isGroupSelected = await MODELS.IS_GROUP_SELECTED.useValue(modelService)\\n    // isNormalNodesSelected: node\u4e0d\u80fd\u662fGroupNode\\n    const isNormalNodesSelected = await MODELS.IS_NORMAL_NODES_SELECTED.useValue(modelService)\\n\\n    return {\\n      isNodeSelected: isNormalNodesSelected,\\n      isGroupSelected,\\n      isMultiSelctionActive,\\n    } as NSToolbarConfig.IToolbarState\\n  }\\n\\n  export const getToolbarItems = async (state: IToolbarState) => {\\n    const toolbarGroup1: IToolbarItemOptions[] = []\\n    const toolbarGroup2: IToolbarItemOptions[] = []\\n    const toolbarGroup3: IToolbarItemOptions[] = []\\n    /** \u4fdd\u5b58\u6570\u636e */\\n    toolbarGroup1.push({\\n      id: XFlowGraphCommands.SAVE_GRAPH_DATA.id,\\n      iconName: \'SaveOutlined\',\\n      tooltip: \'\u4fdd\u5b58\u6570\u636e\',\\n      onClick: async ({ commandService }) => {\\n        commandService.executeCommand<NsGraphCmd.SaveGraphData.IArgs>(\\n          XFlowGraphCommands.SAVE_GRAPH_DATA.id,\\n          { saveGraphDataService: (meta, graphData) => MockApi.saveGraphData(meta, graphData) },\\n        )\\n      },\\n    })\\n    /** \u90e8\u7f72\u670d\u52a1\u6309\u94ae */\\n    toolbarGroup1.push({\\n      iconName: \'CloudSyncOutlined\',\\n      tooltip: \'\u90e8\u7f72\u670d\u52a1\',\\n      id: CustomCommands.DEPLOY_SERVICE.id,\\n      onClick: ({ commandService }) => {\\n        commandService.executeCommand<NsDeployDagCmd.IArgs>(CustomCommands.DEPLOY_SERVICE.id, {\\n          deployDagService: (meta, graphData) => MockApi.deployDagService(meta, graphData),\\n        })\\n      },\\n    })\\n    /** \u5f00\u542f\u6846\u9009 */\\n    toolbarGroup2.push({\\n      id: XFlowGraphCommands.GRAPH_TOGGLE_MULTI_SELECT.id,\\n      tooltip: \'\u5f00\u542f\u6846\u9009\',\\n      iconName: \'GatewayOutlined\',\\n      active: state.isMultiSelctionActive,\\n      onClick: async ({ commandService }) => {\\n        commandService.executeCommand<NsGraphCmd.GraphToggleMultiSelect.IArgs>(\\n          XFlowGraphCommands.GRAPH_TOGGLE_MULTI_SELECT.id,\\n          {},\\n        )\\n      },\\n    })\\n    /** \u65b0\u5efa\u7fa4\u7ec4 */\\n    toolbarGroup2.push({\\n      id: XFlowGroupCommands.ADD_GROUP.id,\\n      tooltip: \'\u65b0\u5efa\u7fa4\u7ec4\',\\n      iconName: \'GroupOutlined\',\\n      isEnabled: state.isNodeSelected,\\n      onClick: async ({ commandService, modelService }) => {\\n        const cells = await MODELS.SELECTED_CELLS.useValue(modelService)\\n        const groupChildren = cells.map(cell => cell.id)\\n        commandService.executeCommand<NsGroupCmd.AddGroup.IArgs>(XFlowGroupCommands.ADD_GROUP.id, {\\n          nodeConfig: {\\n            id: uuidv4(),\\n            renderKey: GROUP_NODE_RENDER_ID,\\n            groupChildren,\\n            groupCollapsedSize: { width: 200, height: 40 },\\n            label: \'\u65b0\u5efa\u7fa4\u7ec4\',\\n          },\\n        })\\n      },\\n    })\\n    /** \u89e3\u6563\u7fa4\u7ec4 */\\n    toolbarGroup2.push({\\n      id: XFlowGroupCommands.DEL_GROUP.id,\\n      tooltip: \'\u89e3\u6563\u7fa4\u7ec4\',\\n      iconName: \'UngroupOutlined\',\\n      isEnabled: state.isGroupSelected,\\n      onClick: async ({ commandService, modelService }) => {\\n        const cell = await MODELS.SELECTED_NODE.useValue(modelService)\\n        const nodeConfig = cell.getData()\\n        commandService.executeCommand<NsGroupCmd.AddGroup.IArgs>(XFlowGroupCommands.DEL_GROUP.id, {\\n          nodeConfig: nodeConfig,\\n        })\\n      },\\n    })\\n\\n    toolbarGroup3.push({\\n      id: XFlowGraphCommands.GRAPH_INSTANCE_COMMAND.id,\\n      tooltip: \'\u53ef\u4ee5\u4f7f\u7528 x6 graph \u7684\u547d\u4ee4\',\\n      iconName: \'ShareAltOutlined\',\\n      onClick: async ({ commandService, modelService }) => {\\n        commandService.executeCommand<NsGraphCmd.GraphInstanceCmd.IArgs>(\\n          XFlowGraphCommands.GRAPH_INSTANCE_COMMAND.id,\\n          {\\n            useGraph: async x6 => {\\n              const node = x6.getCellById(\'node-1\')\\n              console.log(node, x6)\\n              return node\\n            },\\n          },\\n        )\\n      },\\n    })\\n\\n    return [\\n      { name: \'graphData\', items: toolbarGroup1 },\\n      { name: \'groupOperations\', items: toolbarGroup2 },\\n      {\\n        name: \'customCmd\',\\n        items: toolbarGroup3,\\n      },\\n    ]\\n  }\\n}\\nexport const useToolbarConfig = createToolbarConfig(toolbarConfig => {\\n  /** \u751f\u4ea7 toolbar item */\\n  toolbarConfig.setToolbarModelService(async (toolbarModel, modelService, toDispose) => {\\n    const updateToolbarModel = async () => {\\n      const state = await NSToolbarConfig.getToolbarState(modelService)\\n      const toolbarItems = await NSToolbarConfig.getToolbarItems(state)\\n      toolbarModel.setValue(toolbar => {\\n        toolbar.mainGroups = toolbarItems\\n      })\\n    }\\n    const models = await NSToolbarConfig.getDependencies(modelService)\\n    const subscriptions = models.map(model => {\\n      return model.watch(async () => {\\n        updateToolbarModel()\\n      })\\n    })\\n    toDispose.pushAll(subscriptions)\\n  })\\n})");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/dag/demos/basic/config-keybinding.ts?dumi-raw-code\n/* harmony default export */ var config_keybindingdumi_raw_code = ("import type { NsNodeCmd, NsEdgeCmd, NsGraphCmd } from \'@antv/xflow\'\\nimport {\\n  createKeybindingConfig,\\n  XFlowNodeCommands,\\n  XFlowEdgeCommands,\\n  MODELS,\\n  XFlowGraphCommands,\\n} from \'@antv/xflow\'\\n\\nexport const useKeybindingConfig = createKeybindingConfig(config => {\\n  config.setKeybindingFunc(regsitry => {\\n    return regsitry.registerKeybinding([\\n      {\\n        id: \'delete node or edge\',\\n        keybinding: \'backspace\',\\n        callback: async function (item, modelService, cmd, e) {\\n          const cells = await MODELS.SELECTED_CELLS.useValue(modelService)\\n          // \u5148\u5220\u9664edges\\n          await Promise.all(\\n            cells.map(cell => {\\n              if (cell.isEdge()) {\\n                return cmd.executeCommand<NsEdgeCmd.DelEdge.IArgs>(XFlowEdgeCommands.DEL_EDGE.id, {\\n                  edgeConfig: { ...cell.getData(), id: cell.id },\\n                })\\n              }\\n            }),\\n          )\\n          // \u5148\u5220\u9664nodes\\n          await Promise.all(\\n            cells.map(cell => {\\n              if (cell.isNode()) {\\n                return cmd.executeCommand<NsNodeCmd.DelNode.IArgs>(XFlowNodeCommands.DEL_NODE.id, {\\n                  nodeConfig: {\\n                    ...cell.getData(),\\n                    id: cell.id,\\n                  },\\n                })\\n              }\\n            }),\\n          )\\n        },\\n      },\\n      {\\n        id: \'copy\',\\n        keybinding: [\'command+c\', \'ctrl+c\'],\\n        callback: async function (item, modelService, cmd, e) {\\n          e.preventDefault()\\n          console.log(item)\\n          cmd.executeCommand<NsGraphCmd.GraphCopySelection.IArgs>(\\n            XFlowGraphCommands.GRAPH_COPY.id,\\n            {},\\n          )\\n        },\\n      },\\n      {\\n        id: \'paste\',\\n        keybinding: [\'command+v\', \'ctrl+v\'],\\n        callback: async function (item, ctx, cmd, e) {\\n          e.preventDefault()\\n          cmd.executeCommand<NsGraphCmd.GraphPasteSelection.IArgs>(\\n            XFlowGraphCommands.GRAPH_PASTE.id,\\n            {},\\n          )\\n        },\\n      },\\n    ])\\n  })\\n})");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/dag/demos/basic/config-dnd-panel.tsx?dumi-raw-code\n/* harmony default export */ var config_dnd_paneldumi_raw_code = ("import { uuidv4 } from \'@antv/xflow\'\\nimport { XFlowNodeCommands } from \'@antv/xflow\'\\nimport { DND_RENDER_ID } from \'./constant\'\\nimport type { NsNodeCmd } from \'@antv/xflow\'\\nimport type { NsNodeTreePanel } from \'@antv/xflow\'\\n\\nexport const onNodeDrop: NsNodeTreePanel.IOnNodeDrop = async (node, commands, modelService) => {\\n  const args: NsNodeCmd.AddNode.IArgs = {\\n    nodeConfig: { ...node, id: uuidv4() },\\n  }\\n  commands.executeCommand(XFlowNodeCommands.ADD_NODE.id, args)\\n}\\n\\nexport const treeDataService: NsNodeTreePanel.ITreeDataService = async (meta, modelService) => {\\n  return [\\n    {\\n      id: \'1\',\\n      label: \'\u6570\u636e\u8bfb\u5199\',\\n      parentId: \'\',\\n      renderKey: DND_RENDER_ID,\\n    },\\n    {\\n      id: \'2\',\\n      label: \'\u7b97\u6cd5\u7ec4\u4ef61\',\\n      parentId: \'1\',\\n      renderKey: DND_RENDER_ID,\\n      popoverContent: <div> test </div>,\\n    },\\n    {\\n      id: \'3\',\\n      label: \'\u7b97\u6cd5\u7ec4\u4ef62\',\\n      parentId: \'1\',\\n      renderKey: DND_RENDER_ID,\\n    },\\n    {\\n      id: \'4\',\\n      label: \'\u7b97\u6cd5\u7ec4\u4ef63\',\\n      parentId: \'1\',\\n      renderKey: DND_RENDER_ID,\\n    },\\n    {\\n      id: \'5\',\\n      label: \'\u6570\u636e\u52a0\u5de5\',\\n      parentId: \'\',\\n      renderKey: DND_RENDER_ID,\\n    },\\n    {\\n      id: \'6\',\\n      label: \'\u7b97\u6cd5\u7ec4\u4ef64\',\\n      parentId: \'5\',\\n      renderKey: DND_RENDER_ID,\\n    },\\n    {\\n      id: \'7\',\\n      label: \'\u7b97\u6cd5\u7ec4\u4ef65\',\\n      parentId: \'5\',\\n      renderKey: DND_RENDER_ID,\\n    },\\n    {\\n      id: \'8\',\\n      label: \'\u7b97\u6cd5\u7ec4\u4ef66\',\\n      parentId: \'5\',\\n      renderKey: DND_RENDER_ID,\\n    },\\n    {\\n      id: \'9\',\\n      label: \'\u6a21\u578b\u8bad\u7ec3\',\\n      parentId: \'\',\\n      renderKey: DND_RENDER_ID,\\n    },\\n    {\\n      id: \'10\',\\n      label: \'\u7b97\u6cd5\u7ec4\u4ef67\',\\n      parentId: \'9\',\\n      renderKey: DND_RENDER_ID,\\n    },\\n    {\\n      id: \'11\',\\n      label: \'\u7b97\u6cd5\u7ec4\u4ef68\',\\n      parentId: \'9\',\\n      renderKey: DND_RENDER_ID,\\n    },\\n    {\\n      id: \'12\',\\n      label: \'\u7b97\u6cd5\u7ec4\u4ef69\',\\n      parentId: \'9\',\\n      renderKey: DND_RENDER_ID,\\n    },\\n  ]\\n}\\n\\nexport const searchService: NsNodeTreePanel.ISearchService = async (\\n  treeNodeList: NsNodeTreePanel.ITreeNode[] = [],\\n  keyword: string,\\n) => {\\n  const list = treeNodeList.filter(i => i.isDirectory || i.label.includes(keyword))\\n  console.log(list, keyword, treeNodeList)\\n  return list\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/dag/demos/basic/config-form.tsx?dumi-raw-code\n/* harmony default export */ var config_formdumi_raw_code = ("import { controlMapService, ControlShapeEnum } from \'./form-controls\'\\nimport type { NsJsonSchemaForm } from \'@antv/xflow\'\\nimport { MODELS } from \'@antv/xflow\'\\n\\nexport function delay(ms: number) {\\n  return new Promise(resolve => setTimeout(() => resolve(true), ms))\\n}\\n\\nlet i = 0\\nexport const formSchemaService: NsJsonSchemaForm.IFormSchemaService = async args => {\\n  const { targetData, modelService, targetType } = args\\n  /** \u53ef\u4ee5\u4f7f\u7528\u83b7\u53d6 graphMeta */\\n  const graphMeta = await MODELS.GRAPH_META.useValue(modelService)\\n  console.log(\'formSchemaService\', graphMeta, args)\\n\\n  if (targetType === \'canvas\') {\\n    return {\\n      tabs: [\\n        {\\n          name: \'GraphMeta\',\\n          groups: [],\\n        },\\n      ],\\n    }\\n  }\\n\\n  const nodeSchema: NsJsonSchemaForm.ISchema = {\\n    tabs: [\\n      {\\n        name: \'Tab1\',\\n        groups: [\\n          {\\n            name: \'groupName\',\\n            controls: [\\n              {\\n                label: \'GraphEditor\',\\n                name: \'Tab1-0\',\\n                /** \u4f7f\u7528\u81ea\u5b9a\u4e49shape */\\n                shape: ControlShapeEnum.EDITOR,\\n                disabled: false,\\n                required: true,\\n                tooltip: \'hello world\',\\n                placeholder: \'please write something\',\\n                value: \'\',\\n                defaultValue: \'\', // \u53ef\u4ee5\u8ba4\u4e3a\u662f\u9ed8\u8ba4\u503c\\n                hidden: false,\\n                options: [{ title: \'\', value: \'\' }],\\n                originData: {}, // \u539f\u59cb\u6570\u636e\\n              },\\n              {\\n                label: \'Link\',\\n                name: \'Tab1-1\',\\n                /** \u4f7f\u7528\u81ea\u5b9a\u4e49shape */\\n                shape: ControlShapeEnum.LINKSHAPE,\\n                disabled: false,\\n                required: true,\\n                tooltip: \'hello world\',\\n                extra: \'hello world extra\',\\n                placeholder: \'please write something\',\\n                value: \'\',\\n                defaultValue: \'\', // \u53ef\u4ee5\u8ba4\u4e3a\u662f\u9ed8\u8ba4\u503c\\n                hidden: false,\\n                options: [{ title: \'\', value: \'\' }],\\n                originData: {}, // \u539f\u59cb\u6570\u636e\\n              },\\n              {\\n                label: \'Tab1-2\',\\n                name: \'Tab1-2\', // \u4e5f\u53ef\u4ee5\u662f\u6570\u7ec4\\n                shape: \'Input\',\\n                disabled: false,\\n                required: true,\\n                tooltip: \'hello world\',\\n                extra: \'hello world extra\',\\n                placeholder: \'please write something\',\\n                value: \'\',\\n                defaultValue: \'\', // \u53ef\u4ee5\u8ba4\u4e3a\u662f\u9ed8\u8ba4\u503c\\n\\n                hidden: false,\\n                options: [{ title: \'\', value: \'\' }],\\n                originData: {}, // \u539f\u59cb\u6570\u636e\\n              },\\n              {\\n                label: \'Tab1-3\',\\n                name: \'Tab1-3\', // \u4e5f\u53ef\u4ee5\u662f\u6570\u7ec4\\n                shape: \'Input\',\\n                disabled: false,\\n                required: true,\\n                tooltip: \'hello world\',\\n                extra: \'hello world extra\',\\n                placeholder: \'please write something\',\\n                value: \'\',\\n                defaultValue: \'\', // \u53ef\u4ee5\u8ba4\u4e3a\u662f\u9ed8\u8ba4\u503c\\n\\n                hidden: false,\\n                options: [{ title: \'\', value: \'\' }],\\n                originData: {}, // \u539f\u59cb\u6570\u636e\\n              },\\n              {\\n                label: \'Tab1-4\',\\n                name: \'Tab1-4\', // \u4e5f\u53ef\u4ee5\u662f\u6570\u7ec4\\n                shape: \'Input\',\\n                disabled: false,\\n                required: true,\\n                tooltip: \'hello world\',\\n                extra: \'hello world extra\',\\n                placeholder: \'please write something\',\\n                value: \'\',\\n                defaultValue: \'\', // \u53ef\u4ee5\u8ba4\u4e3a\u662f\u9ed8\u8ba4\u503c\\n\\n                hidden: false,\\n                options: [{ title: \'\', value: \'\' }],\\n                originData: {}, // \u539f\u59cb\u6570\u636e\\n              },\\n            ],\\n          },\\n        ],\\n      },\\n      {\\n        name: \'Tab2\',\\n        groups: [\\n          {\\n            name: \'groupName\',\\n            controls: [\\n              {\\n                name: \'Tab2-1\', // \u4e5f\u53ef\u4ee5\u662f\u6570\u7ec4\\n                label: \'Tab2-1\',\\n                shape: \'Input\',\\n                disabled: false,\\n                required: true,\\n                tooltip: \'hello world\',\\n                extra: \'hello world extra\',\\n                placeholder: \'please write something\',\\n                value: \'\',\\n                defaultValue: \'\', // \u53ef\u4ee5\u8ba4\u4e3a\u662f\u9ed8\u8ba4\u503c\\n\\n                hidden: false,\\n                options: [{ title: \'\', value: \'\' }],\\n                originData: {}, // \u539f\u59cb\u6570\u636e\\n              },\\n              {\\n                label: \'Tab2-2\',\\n                name: \'Tab2-2\', // \u4e5f\u53ef\u4ee5\u662f\u6570\u7ec4\\n                shape: \'Input\',\\n                disabled: false,\\n                required: true,\\n                tooltip: \'hello world\',\\n                extra: \'hello world extra\',\\n                placeholder: \'please write something\',\\n                value: \'\',\\n                defaultValue: \'\', // \u53ef\u4ee5\u8ba4\u4e3a\u662f\u9ed8\u8ba4\u503c\\n\\n                hidden: false,\\n                options: [{ title: \'\', value: \'\' }],\\n                originData: {}, // \u539f\u59cb\u6570\u636e\\n              },\\n              {\\n                label: \'Tab2-3\',\\n                name: \'Tab2-3\', // \u4e5f\u53ef\u4ee5\u662f\u6570\u7ec4\\n                shape: \'Input\',\\n                disabled: false,\\n                required: true,\\n                tooltip: \'hello world\',\\n                extra: \'hello world extra\',\\n                placeholder: \'please write something\',\\n                value: \'\',\\n                defaultValue: \'\', // \u53ef\u4ee5\u8ba4\u4e3a\u662f\u9ed8\u8ba4\u503c\\n                hidden: false,\\n                options: [{ title: \'\', value: \'\' }],\\n                originData: {}, // \u539f\u59cb\u6570\u636e\\n              },\\n            ],\\n          },\\n        ],\\n      },\\n    ],\\n  }\\n\\n  await delay(100)\\n  if (targetData && i === 0) {\\n    i = 1\\n    return nodeSchema\\n  }\\n\\n  if (targetData) {\\n    i = 0\\n    return {\\n      tabs: [\\n        {\\n          name: \'Tab3\',\\n          groups: [],\\n        },\\n      ],\\n    }\\n  }\\n\\n  if (targetData) {\\n    return nodeSchema\\n  }\\n\\n  return {\\n    tabs: [],\\n  }\\n}\\n\\nexport const formValueUpdateService: NsJsonSchemaForm.IFormValueUpdateService = async args => {\\n  console.log(\'formValueUpdateService\', args)\\n}\\n\\nexport { controlMapService }");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/dag/demos/basic/form-controls/index.tsx?dumi-raw-code\n/* harmony default export */ var form_controlsdumi_raw_code = ("import type { NsJsonSchemaForm } from \'@antv/xflow-extension\'\\nimport { EditorShape } from \'./custom-editor\'\\nimport { LinkShape } from \'./link\'\\n\\n/** \u81ea\u5b9a\u4e49form\u63a7\u4ef6 */\\nexport enum ControlShapeEnum {\\n  \'EDITOR\' = \'EDITOR\',\\n  \'LINKSHAPE\' = \'LINKSHAPE\',\\n}\\n\\nexport const controlMapService: NsJsonSchemaForm.IControlMapService = controlMap => {\\n  controlMap.set(ControlShapeEnum.EDITOR, EditorShape)\\n  controlMap.set(ControlShapeEnum.LINKSHAPE, LinkShape)\\n  return controlMap\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/dag/demos/basic/form-controls/custom-editor.tsx?dumi-raw-code\n/* harmony default export */ var form_controls_custom_editordumi_raw_code = ("import { useXFlowApp, MODELS, XFlowGraphCommands } from \'@antv/xflow\'\\nimport { FormItemWrapper } from \'@antv/xflow-extension\'\\nimport type { NsJsonSchemaForm, NsGraphCmd } from \'@antv/xflow\'\\nimport { Form, Input } from \'antd\'\\nimport React from \'react\'\\n\\nexport const EditorShape: React.FC<NsJsonSchemaForm.IControlProps> = props => {\\n  const { controlSchema } = props\\n  const { required, tooltip, extra, name, label, placeholder } = controlSchema\\n\\n  return (\\n    <FormItemWrapper schema={controlSchema}>\\n      {({ disabled, hidden, initialValue }) => {\\n        return (\\n          <Form.Item\\n            name={name}\\n            label={label}\\n            initialValue={initialValue}\\n            tooltip={tooltip}\\n            extra={extra}\\n            required={required}\\n            hidden={hidden}\\n          >\\n            {/* \u8fd9\u91cc\u7684\u7ec4\u4ef6\u53ef\u4ee5\u62ff\u5230onChange\u548cvalue */}\\n            <Editor controlSchema={controlSchema} placeholder={placeholder} disabled={disabled} />\\n          </Form.Item>\\n        )\\n      }}\\n    </FormItemWrapper>\\n  )\\n}\\n\\ninterface IEditorProps extends NsJsonSchemaForm.IFormItemProps {\\n  controlSchema: NsJsonSchemaForm.IControlSchema\\n  placeholder?: string\\n  disabled: boolean\\n}\\n\\nconst Editor: React.FC<IEditorProps> = props => {\\n  const { placeholder, disabled, onChange, value } = props\\n  const { commandService, modelService } = useXFlowApp()\\n  React.useEffect(() => {\\n    commandService.executeCommand<NsGraphCmd.SaveGraphData.IArgs>(\\n      XFlowGraphCommands.SAVE_GRAPH_DATA.id,\\n      {\\n        saveGraphDataService: async (meta, graph) => {\\n          /** \u5f53\u524d\u9009\u4e2d\u8282\u70b9\u6570\u636e */\\n          const nodes = await MODELS.SELECTED_NODES.useValue(modelService)\\n          console.log(graph)\\n          /** \u62ff\u5230\u6570\u636e\uff0c\u89e6\u53d1onChange*/\\n          onChange(JSON.stringify(graph))\\n          return { err: null, data: graph, meta }\\n        },\\n      },\\n    )\\n  })\\n\\n  return <Input.TextArea value={value} placeholder={placeholder} disabled={disabled} rows={10} />\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/dag/demos/basic/form-controls/link.tsx?dumi-raw-code\n/* harmony default export */ var linkdumi_raw_code = ("import type { NsJsonSchemaForm } from \'@antv/xflow\'\\nimport React from \'react\'\\n\\nexport const LinkShape: React.FC<NsJsonSchemaForm.IControlProps> = props => {\\n  const { controlSchema } = props\\n  return (\\n    <div style={{ padding: \'8px 0px\', marginBottom: \'8px\' }}>\\n      <a href={controlSchema.value as string} target=\\"_blank\\">\\n        {controlSchema.label}\\n      </a>\\n    </div>\\n  )\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/dag/demos/basic/index.less?dumi-raw-code\n/* harmony default export */ var solutions_dag_demos_basicdumi_raw_code = ("@body-bg: #f9f9f9;\\n@primaryColor: #1890ff;\\n@light-border: 1px solid #d9d9d9;\\n\\n.dag-solution {\\n  .user-custom-clz {\\n    position: relative;\\n    height: 610px;\\n    border: @light-border;\\n    .xflow-x6-canvas {\\n      background: @body-bg;\\n    }\\n\\n    .xflow-node-dnd-panel-node-wrapper {\\n      .xflow-dnd-node {\\n        width: 190px;\\n      }\\n    }\\n\\n    .xflow-canvas-dnd-node-tree {\\n      border-right: @light-border;\\n    }\\n\\n    .xflow-workspace-toolbar-top {\\n      border-bottom: @light-border;\\n    }\\n\\n    .xflow-workspace-toolbar-bottom {\\n      text-align: center;\\n      background: #fff;\\n      border-top: @light-border;\\n    }\\n  }\\n\\n  .xflow-modal-container {\\n    position: fixed;\\n    top: 0;\\n    right: 0;\\n    bottom: 0;\\n    left: 0;\\n    z-index: 1000;\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/er/demos/index.tsx?dumi-raw-code\n/* harmony default export */ var er_demosdumi_raw_code = ("import React, { useState } from \'react\'\\nimport type { IAppLoad, NsGraph, IApplication } from \'@antv/xflow\'\\nimport { XFlow, XFlowCanvas, KeyBindings } from \'@antv/xflow\'\\nimport { XFlowAppProvider, useXFlowApp } from \'@antv/xflow\'\\nimport type { NsGraphCmd, NsNodeCmd, NsEdgeCmd } from \'@antv/xflow\'\\nimport { XFlowGraphCommands, XFlowNodeCommands, XFlowEdgeCommands } from \'@antv/xflow\'\\nimport { CanvasMiniMap, CanvasScaleToolbar, CanvasSnapline } from \'@antv/xflow\'\\nimport GraphToolbar from \'./GraphToolbar/index\'\\n\\n/** \u914d\u7f6e\u753b\u5e03 */\\nimport { useGraphConfig } from \'./config-graph\'\\n/** \u914d\u7f6eCommand */\\nimport { useCmdConfig } from \'./config-cmd\'\\n/** \u914d\u7f6e\u5feb\u6377\u952e */\\nimport { useKeybindingConfig } from \'./config-keybinding\'\\n\\nimport { message } from \'antd\'\\nimport type { EntityCanvasModel } from \'./interface\'\\nimport CreateRelationModal from \'./CreateRelationModal\'\\nimport Entity from \'./react-node/Entity\'\\nimport Relation from \'./react-edge/Relation\'\\n\\nimport \'./index.less\'\\n\\n/** Mock\u6240\u6709\u4e0e\u670d\u52a1\u7aef\u4ea4\u4e92\u7684\u63a5\u53e3 */\\nimport { MockApi } from \'./service\'\\n\\ninterface IProps {}\\n\\nconst Demo: React.FC<IProps> = (props: IProps) => {\\n  /** XFlow\u5e94\u7528\u5b9e\u4f8b */\\n  const app = useXFlowApp()\\n\\n  /** \u753b\u5e03\u914d\u7f6e\u9879 */\\n  const graphConfig = useGraphConfig()\\n  /** \u9884\u8bbeXFlow\u753b\u5e03\u9700\u8981\u6e32\u67d3\u7684React\u8282\u70b9 / \u8fb9 */\\n  graphConfig.setNodeRender(\'NODE1\', props => <Entity {...props} />)\\n  graphConfig.setEdgeRender(\'EDGE1\', props => {\\n    return <Relation {...props} deleteRelation={handleDeleteEdge} />\\n  })\\n  /** \u547d\u4ee4\u914d\u7f6e\u9879 */\\n  const cmdConfig = useCmdConfig()\\n  /** \u5feb\u6377\u952e\u914d\u7f6e\u9879 */\\n  const keybindingConfig = useKeybindingConfig()\\n\\n  /** \u662f\u5426\u5c55\u793a\u65b0\u5efa\u5173\u8054\u5173\u7cfb\u5f39\u7a97 */\\n  const [isShowCreateRelationModal, setIsShowCreateRelationModal] = useState<boolean>(false)\\n  /** \u8fde\u7ebfsource\u6570\u636e */\\n  const [relationSourceData, setRelationSourceData] = useState<EntityCanvasModel>(undefined)\\n  /** \u8fde\u7ebftarget\u6570\u636e */\\n  const [relationTargetData, setRelationTargetData] = useState<EntityCanvasModel>(undefined)\\n\\n  /** XFlow\u521d\u59cb\u5316\u5b8c\u6210\u7684\u56de\u8c03 */\\n  const onLoad: IAppLoad = async app => {\\n    const graph = await app.getGraphInstance()\\n    graph.zoom(-0.2)\\n\\n    /** Mock\u4ece\u670d\u52a1\u7aef\u83b7\u53d6\u6570\u636e */\\n    const graphData = await MockApi.loadGraphData()\\n\\n    /** \u6e32\u67d3\u753b\u5e03\u6570\u636e */\\n    await app.executeCommand(XFlowGraphCommands.GRAPH_RENDER.id, {\\n      graphData,\\n    } as NsGraphCmd.GraphRender.IArgs)\\n\\n    /** \u8bbe\u7f6e\u76d1\u542c\u4e8b\u4ef6 */\\n    await watchEvent(app)\\n  }\\n\\n  /** \u76d1\u542c\u4e8b\u4ef6 */\\n  const watchEvent = async (appRef: IApplication) => {\\n    if (appRef) {\\n      const graph = await appRef.getGraphInstance()\\n      graph.on(\'node:mousedown\', ({ e, x, y, node, view }) => {\\n        appRef.executeCommand(XFlowNodeCommands.FRONT_NODE.id, {\\n          nodeId: node?.getData()?.id,\\n        } as NsNodeCmd.FrontNode.IArgs)\\n      })\\n      graph.on(\'edge:connected\', ({ edge }) => {\\n        const relationSourceData = edge?.getSourceNode()?.data\\n        const relationTargetData = edge?.getTargetNode()?.data\\n        setRelationSourceData(relationSourceData)\\n        setRelationTargetData(relationTargetData)\\n        setIsShowCreateRelationModal(true)\\n        /** \u62d6\u62fd\u8fc7\u7a0b\u4e2d\u4f1a\u751f\u6210\u4e00\u6761\u65e0\u5b9e\u9645\u4e1a\u52a1\u542b\u4e49\u7684\u7ebf, \u9700\u8981\u624b\u52a8\u5220\u9664 */\\n        const edgeData: NsGraph.IEdgeConfig = edge?.getData()\\n        if (!edgeData) {\\n          appRef.executeCommand(XFlowEdgeCommands.DEL_EDGE.id, {\\n            x6Edge: edge as any,\\n          } as NsEdgeCmd.DelEdge.IArgs)\\n        }\\n      })\\n      graph.on(\'node:mouseenter\', ({ e, node, view }) => {\\n        changePortsVisible(true)\\n      })\\n      graph.on(\'node:mouseleave\', ({ e, node, view }) => {\\n        changePortsVisible(false)\\n      })\\n    }\\n  }\\n\\n  const changePortsVisible = (visible: boolean) => {\\n    const ports = document.body.querySelectorAll(\'.x6-port-body\') as NodeListOf<SVGElement>\\n    for (let i = 0, len = ports.length; i < len; i = i + 1) {\\n      ports[i].style.visibility = visible ? \'visible\' : \'hidden\'\\n    }\\n  }\\n\\n  /** \u521b\u5efa\u753b\u5e03\u8282\u70b9 */\\n  const handleCreateNode = async (values: any) => {\\n    // const res = await app.executeCommand(XFlowNodeCommands.ADD_NODE.id, {\\n    //   // nodeConfig\\n    // } as NsNodeCmd.AddNode.IArgs)\\n    // // const res = await app.executeCommand(\\n    // //   XFlowNodeCommands.ADD_NODE.id,\\n    // //   {} as NsNodeCmd.AddNode.IArgs,\\n    // // )\\n  }\\n\\n  /** \u5220\u9664\u753b\u5e03\u8282\u70b9 */\\n  const handleDeleteNode = async () => {}\\n\\n  /** \u521b\u5efa\u5173\u8054\u5173\u7cfb */\\n  const handleCreateEdge = async (values: any) => {\\n    const { cb, ...rest } = values\\n    const res = await app.executeCommand(XFlowEdgeCommands.ADD_EDGE.id, {\\n      edgeConfig: {\\n        id: \'fact1-dim1\',\\n        source: \'fact1\',\\n        target: \'dim1\',\\n        renderKey: \'EDGE1\',\\n        edgeContentWidth: 20,\\n        edgeContentHeigt: 20,\\n        /** \u8bbe\u7f6e\u8fde\u7ebf\u6837\u5f0f */\\n        attrs: {\\n          line: {\\n            stroke: \'#d8d8d8\',\\n            strokeWidth: 1,\\n            targetMarker: {\\n              name: \'classic\',\\n            },\\n          },\\n        },\\n      },\\n    } as NsEdgeCmd.AddEdge.IArgs)\\n\\n    if (res) {\\n      cb && cb()\\n      setIsShowCreateRelationModal(false)\\n      message.success(\'\u6dfb\u52a0\u8fde\u7ebf\u6210\u529f!\')\\n    }\\n  }\\n\\n  /** \u5220\u9664\u5173\u8054\u5173\u7cfb */\\n  const handleDeleteEdge = async (relationId: string) => {\\n    const res = await app.executeCommand(XFlowEdgeCommands.DEL_EDGE.id, {\\n      edgeConfig: { id: relationId },\\n    } as NsEdgeCmd.DelEdge.IArgs)\\n    if (res) {\\n      message.success(\'\u5220\u9664\u8fde\u7ebf\u6210\u529f!\')\\n    }\\n  }\\n\\n  return (\\n    <XFlow className=\\"xflow-er-solution-container\\" commandConfig={cmdConfig} onLoad={onLoad}>\\n      <GraphToolbar\\n        onAddNodeClick={() => {\\n          message.info(\'\u9f20\u6807\u79fb\u52a8\u5230\u753b\u5e03\u7a7a\u767d\u4f4d\u7f6e, \u518d\u6b21\u70b9\u51fb\u9f20\u6807\u5b8c\u6210\u521b\u5efa\', 2)\\n        }}\\n        onDeleteNodeClick={() => {}}\\n        onConnectEdgeClick={() => {\\n          console.log(\'gjy111111\')\\n          setIsShowCreateRelationModal(true)\\n        }}\\n      />\\n      <XFlowCanvas config={graphConfig}>\\n        <CanvasMiniMap nodeFillColor=\\"#00ff00\\" minimapOptions={{}} />\\n        <CanvasScaleToolbar position={{ bottom: 12, left: 20 }} />\\n        <CanvasSnapline />\\n        {/** \u5360\u4f4d\u7a7a\u8282\u70b9 */}\\n\\n        {/** \u521b\u5efa\u8282\u70b9 */}\\n\\n        {/** \u521b\u5efa\u5173\u8054\u5173\u7cfb\u5f39\u7a97 */}\\n        <CreateRelationModal\\n          visible={isShowCreateRelationModal}\\n          sourceEntity={relationSourceData}\\n          targetEntity={relationTargetData}\\n          onOk={handleCreateEdge}\\n          onCancel={() => {\\n            setIsShowCreateRelationModal(false)\\n          }}\\n        />\\n      </XFlowCanvas>\\n      <KeyBindings config={keybindingConfig} />\\n    </XFlow>\\n  )\\n}\\n\\nexport default (props: IProps) => (\\n  <XFlowAppProvider>\\n    <Demo {...props} />\\n  </XFlowAppProvider>\\n)");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/er/demos/GraphToolbar/index.tsx?dumi-raw-code\n/* harmony default export */ var GraphToolbardumi_raw_code = ("import React from \'react\'\\nimport {} from \'antd\'\\nimport { PlusCircleOutlined, DeleteOutlined, LinkOutlined } from \'@ant-design/icons\'\\nimport \'./index.less\'\\n\\ninterface Props {\\n  onAddNodeClick: () => void\\n  onDeleteNodeClick: () => void\\n  onConnectEdgeClick: () => void\\n}\\n\\nconst GraphToolbar = (props: Props) => {\\n  const { onAddNodeClick, onDeleteNodeClick, onConnectEdgeClick } = props\\n  return (\\n    <div className=\\"xflow-er-solution-toolbar\\">\\n      <div className=\\"icon\\" onClick={() => onAddNodeClick()}>\\n        <span>\u6dfb\u52a0\u8282\u70b9</span>\\n        <PlusCircleOutlined />\\n      </div>\\n      <div className=\\"icon\\" onClick={() => onConnectEdgeClick()}>\\n        <span>\u6dfb\u52a0\u5173\u7cfb</span>\\n        <LinkOutlined />\\n      </div>\\n      <div className=\\"icon\\" onClick={() => onDeleteNodeClick()}>\\n        <span>\u5220\u9664\u8282\u70b9/\u8fde\u7ebf</span>\\n        <DeleteOutlined />\\n      </div>\\n    </div>\\n  )\\n}\\n\\nexport default GraphToolbar");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/er/demos/index.less?dumi-raw-code\n/* harmony default export */ var solutions_er_demosdumi_raw_code = (".xflow-er-solution-container {\\n  width: 100%;\\n  height: 550px;\\n  border: 1px solid #ebedf1;\\n\\n  .xflow-canvas-root {\\n    margin-top: 60px;\\n  }\\n\\n  /** \u8986\u76d6\u8282\u70b9\u9ed8\u8ba4\u9009\u4e2d\u8272 */\\n  .x6-node-selected rect {\\n    stroke: #1890ff;\\n    stroke-width: 4px;\\n  }\\n\\n  .x6-edge-selected path {\\n    stroke: #1890ff;\\n    stroke-width: 2px;\\n  }\\n\\n  /** \u9ed8\u8ba4\u9690\u85cf\u94fe\u63a5\u6869 */\\n  .x6-port-body {\\n    z-index: 1;\\n    visibility: hidden;\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/er/demos/config-graph.tsx?dumi-raw-code\n/* harmony default export */ var er_demos_config_graphdumi_raw_code = ("import { createGraphConfig } from \'@antv/xflow\'\\nimport Entity from \'./react-node/Entity\'\\nimport Relation from \'./react-edge/Relation\'\\n\\nexport const useGraphConfig = createGraphConfig(config => {\\n  /** \u9884\u8bbeXFlow\u753b\u5e03\u914d\u7f6e\u9879 */\\n  config.setX6Config({\\n    grid: true,\\n    scaling: {\\n      min: 0.2,\\n      max: 3,\\n    },\\n    connecting: {\\n      /** \u8fde\u7ebf\u8fc7\u7a0b\u4e2d\u8ddd\u79bb\u76ee\u6807\u8282\u70b950px\u65f6\u81ea\u52a8\u5438\u9644 */\\n      snap: {\\n        radius: 50,\\n      },\\n      connector: {\\n        name: \'rounded\',\\n        args: {\\n          radius: 50,\\n        },\\n      },\\n      router: {\\n        name: \'er\',\\n      },\\n      /** \u4e0d\u5141\u8bb8\u8fde\u63a5\u5230\u753b\u5e03\u7a7a\u767d\u4f4d\u7f6e, \u5373\u6ca1\u6709\u76ee\u6807\u8282\u70b9\u65f6\u8fde\u7ebf\u4f1a\u81ea\u52a8\u6d88\u5931 */\\n      allowBlank: false,\\n    },\\n  })\\n\\n  /** \u9884\u8bbeXFlow\u753b\u5e03\u9700\u8981\u6e32\u67d3\u7684React\u8282\u70b9/\u8fb9 */\\n  // config.setNodeRender(\'NODE1\', props => <Entity {...props} /> )\\n  // config.setEdgeRender(\'EDGE1\', props => {\\n  //   console.log(\'\u6211\u770b\u770bprops:\', props)\\n  //   return (\\n  //     <Relation\\n  //       {...props}\\n  //       deleteRelation={(relationId: string) => {\\n  //         console.log(\'gjygjy111:\', relationId);\\n  //       }}\\n  //     />\\n  //   )\\n  // })\\n})");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/er/demos/config-cmd.ts?dumi-raw-code\n/* harmony default export */ var demos_config_cmddumi_raw_code = ("import { createCmdConfig, DisposableCollection } from \'@antv/xflow\'\\nimport { MockApi } from \'./service\'\\n\\nexport const useCmdConfig = createCmdConfig(config => {\\n  /** \u8bbe\u7f6ehook */\\n  config.setRegisterHookFn(hooks => {\\n    const list = [\\n      hooks.addNode.registerHook({\\n        name: \'addNodeHook\',\\n        handler: async args => {\\n          args.createNodeService = MockApi.addNode\\n        },\\n      }),\\n      hooks.addEdge.registerHook({\\n        name: \'addEdgeHook\',\\n        handler: async args => {\\n          args.createEdgeService = MockApi.addEdge\\n        },\\n      }),\\n    ]\\n    const toDispose = new DisposableCollection()\\n    toDispose.pushAll(list)\\n    return toDispose\\n  })\\n})");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/er/demos/service.ts?dumi-raw-code\n/* harmony default export */ var demos_servicedumi_raw_code = ("import type { NsGraph, NsNodeCmd, NsEdgeCmd } from \'@antv/xflow\'\\nimport { mockEntityData, mockRelationData } from \'./mock\'\\n\\n/** mock\u540e\u7aef\u63a5\u53e3\u8c03\u7528 */\\nexport namespace MockApi {\\n  /** \u52a0\u8f7d\u753b\u5e03\u6570\u636e */\\n  export const loadGraphData = async () => {\\n    const promise: Promise<NsGraph.IGraphData> = new Promise(resolve => {\\n      setTimeout(() => {\\n        /** \u94fe\u63a5\u6869\u6837\u5f0f\u914d\u7f6e, \u5c06\u5177\u6709\u76f8\u540c\u884c\u4e3a\u548c\u5916\u89c2\u7684\u94fe\u63a5\u6869\u5f52\u4e3a\u540c\u4e00\u7ec4 */\\n        const portAttrs = {\\n          circle: {\\n            r: 7,\\n            stroke: \'#31d0c6\',\\n            strokeWidth: 2,\\n            fill: \'#fff\',\\n            /** \u94fe\u63a5\u6869\u5728\u8fde\u7ebf\u4ea4\u4e92\u65f6\u53ef\u4ee5\u88ab\u8fde\u63a5\u4e0a */\\n            magnet: true,\\n          },\\n        }\\n        const nodes: NsGraph.INodeConfig[] = mockEntityData?.map(entity => {\\n          const nodeConfig: NsGraph.INodeConfig = {\\n            ...entity,\\n            renderKey: \'NODE1\',\\n            ports: {\\n              groups: {\\n                top: {\\n                  position: \'top\',\\n                  attrs: portAttrs,\\n                },\\n                right: {\\n                  position: \'right\',\\n                  attrs: portAttrs,\\n                },\\n                bottom: {\\n                  position: \'bottom\',\\n                  attrs: portAttrs,\\n                },\\n                left: {\\n                  position: \'left\',\\n                  attrs: portAttrs,\\n                },\\n              },\\n              items: [\\n                { id: \'top_port\', group: \'top\' },\\n                { id: \'right_port\', group: \'right\' },\\n                { id: \'bottom_port\', group: \'bottom\' },\\n                { id: \'left_port\', group: \'left\' },\\n              ],\\n            },\\n          }\\n          return nodeConfig\\n        })\\n        const edges: NsGraph.IEdgeConfig[] = mockRelationData?.map(relation => {\\n          const edgeConfig: NsGraph.IEdgeConfig = {\\n            ...relation,\\n            renderKey: \'EDGE1\',\\n            edgeContentWidth: 20,\\n            edgeContentHeigt: 20,\\n            /** \u8bbe\u7f6e\u8fde\u7ebf\u6837\u5f0f */\\n            attrs: {\\n              line: {\\n                stroke: \'#d8d8d8\',\\n                strokeWidth: 1,\\n                targetMarker: {\\n                  name: \'classic\',\\n                },\\n              },\\n            },\\n          }\\n          return edgeConfig\\n        })\\n        const graphData = { nodes, edges }\\n        resolve(graphData)\\n      }, 100)\\n    })\\n    const res = await promise\\n    return res\\n  }\\n\\n  /** \u6dfb\u52a0\u8282\u70b9 */\\n  export const addNode: NsNodeCmd.AddNode.IArgs[\'createNodeService\'] = async args => {\\n    const { nodeConfig } = args\\n    const promise: Promise<NsGraph.INodeConfig> = new Promise(resolve => {\\n      setTimeout(() => {\\n        resolve({\\n          ...nodeConfig,\\n        })\\n      }, 1000)\\n    })\\n    const res = await promise\\n    return res\\n  }\\n  /** \u5220\u9664\u8282\u70b9 */\\n  export const delNode: NsNodeCmd.DelNode.IArgs[\'deleteNodeService\'] = async args => {\\n    const { nodeConfig } = args\\n    const promise: Promise<boolean> = new Promise(resolve => {\\n      setTimeout(() => {\\n        resolve(true)\\n      }, 1000)\\n    })\\n    const res = await promise\\n    return res\\n  }\\n  /** \u6dfb\u52a0\u8fb9 */\\n  export const addEdge: NsEdgeCmd.AddEdge.IArgs[\'createEdgeService\'] = async args => {\\n    const { edgeConfig } = args\\n    const promise: Promise<NsGraph.IEdgeConfig> = new Promise(resolve => {\\n      setTimeout(() => {\\n        resolve({\\n          ...edgeConfig,\\n        })\\n      }, 1000)\\n    })\\n    const res = await promise\\n    return res\\n  }\\n  /** \u5220\u9664\u8fb9 */\\n  export const delEdge: NsEdgeCmd.DelEdge.IArgs[\'deleteEdgeService\'] = async args => {\\n    const { edgeConfig } = args\\n    const promise: Promise<boolean> = new Promise(resolve => {\\n      setTimeout(() => {\\n        resolve(true)\\n      }, 1000)\\n    })\\n    const res = await promise\\n    return res\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/er/demos/mock.ts?dumi-raw-code\n/* harmony default export */ var er_demos_mockdumi_raw_code = ("import type { EntityProperty, EntityCanvasModel, RelationCanvasModel } from \'./interface\'\\n\\nexport const mockProperties: EntityProperty[] = [\\n  {\\n    propertyId: \'propertyId1\',\\n    propertyName: \'\u4e1a\u52a1\u65e5\u671f\',\\n    propertyType: \'string\',\\n    isPK: true,\\n  },\\n  {\\n    propertyId: \'propertyId2\',\\n    propertyName: \'\u4ea4\u6613\u53f71\',\\n    propertyType: \'bigint\',\\n    isFK: true,\\n  },\\n  {\\n    propertyId: \'propertyId3\',\\n    propertyName: \'\u6700\u957f\u663e\u793a\u7684\u8868\u5355\u540d\u6700\u957f\u663e\u793a\u7684\u8868\u5355\u540d\',\\n    propertyType: \'string\',\\n  },\\n  {\\n    propertyId: \'propertyId4\',\\n    propertyName: \'\u4ea4\u6613\u652f\u4ed8\u5916\u952e\',\\n    propertyType: \'string\',\\n  },\\n  {\\n    propertyId: \'propertyId5\',\\n    propertyName: \'\u5356\u5bb6\u652f\u4ed8\u65e5\u671f\',\\n    propertyType: \'string\',\\n  },\\n  {\\n    propertyId: \'propertyId6\',\\n    propertyName: \'\u7f51\u5546\u94f6\u884c\',\\n    propertyType: \'string\',\\n  },\\n  {\\n    propertyId: \'propertyId7\',\\n    propertyName: \'\u4e1a\u52a1\u65e5\u671f\',\\n    propertyType: \'string\',\\n  },\\n  {\\n    propertyId: \'propertyId8\',\\n    propertyName: \'\u4e1a\u52a1\u65e5\u671f111\',\\n    propertyType: \'string\',\\n  },\\n  {\\n    propertyId: \'propertyId9\',\\n    propertyName: \'\u4e1a\u52a1\u65e5\u671f222\',\\n    propertyType: \'string\',\\n  },\\n  {\\n    propertyId: \'propertyId10\',\\n    propertyName: \'\u4e1a\u52a1\u65e5\u671f333\',\\n    propertyType: \'string\',\\n  },\\n]\\n\\nexport const mockEntityData: EntityCanvasModel[] = [\\n  {\\n    id: \'fact1\',\\n    x: 550,\\n    y: 400,\\n    width: 214,\\n    height: 252,\\n    entityId: \'fact1\',\\n    entityName: \'\u4e8b\u5b9e\u88681\',\\n    entityType: \'FACT\',\\n    properties: mockProperties,\\n  },\\n  {\\n    id: \'fact2\',\\n    x: 100,\\n    y: 100,\\n    width: 214,\\n    height: 252,\\n    entityId: \'fact2\',\\n    entityName: \'\u4e8b\u5b9e\u88682\',\\n    entityType: \'FACT\',\\n    properties: mockProperties,\\n  },\\n  {\\n    id: \'dim1\',\\n    x: 100,\\n    y: 400,\\n    width: 214,\\n    height: 252,\\n    entityId: \'dim1\',\\n    entityName: \'\u7ef4\u5ea6\u88681\',\\n    entityType: \'DIM\',\\n    properties: mockProperties,\\n  },\\n  {\\n    id: \'other1\',\\n    x: 100,\\n    y: 700,\\n    width: 214,\\n    height: 252,\\n    entityId: \'other1\',\\n    entityName: \'\u5176\u4ed6\u88681\',\\n    entityType: \'OTHER\',\\n    properties: mockProperties,\\n  },\\n  {\\n    id: \'other2\',\\n    x: 900,\\n    y: 0,\\n    width: 214,\\n    height: 252,\\n    entityId: \'other2\',\\n    entityName: \'\u5176\u4ed6\u88682\',\\n    entityType: \'OTHER\',\\n    properties: mockProperties,\\n  },\\n]\\n\\nexport const mockRelationData: RelationCanvasModel[] = [\\n  {\\n    id: \'fact1-fact2\',\\n    source: \'fact1\',\\n    target: \'fact2\',\\n  },\\n]");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/er/demos/config-keybinding.ts?dumi-raw-code\n/* harmony default export */ var demos_config_keybindingdumi_raw_code = ("import type { NsNodeCmd, NsEdgeCmd, IGraphCommandService } from \'@antv/xflow\'\\nimport { createKeybindingConfig, XFlowNodeCommands, XFlowEdgeCommands, MODELS } from \'@antv/xflow\'\\nimport type { Node as X6Node, Edge as X6Edge } from \'@antv/x6\'\\nimport { Platform } from \'@antv/x6\'\\nimport { message } from \'antd\'\\n\\n/** \u5feb\u6377\u952e */\\nenum ShortCut {\\n  DELETE = \'Backspace\', // \u5220\u9664\\n  CmdDelete = \'Cmd+Delete\', // Mac\u6309\u4f4fCommand\u591a\u9009\u5220\u9664\\n  CtrlDelete = \'Ctrl+Delete\', // Windows\u6309\u4f4fCtrl\u591a\u9009\u5220\u9664\\n}\\n\\nexport const useKeybindingConfig = createKeybindingConfig(config => {\\n  config.setKeybindingFunc(registry => {\\n    return registry.registerKeybinding([\\n      {\\n        id: \'delete\',\\n        keybinding: ShortCut.DELETE,\\n        callback: async (item, modelService, commandService, e) => {\\n          /** \u5982\u679c\u662finput\u7684delete\u4e8b\u4ef6, \u5219\u4e0d\u8d70\u5220\u9664\u7684\u56de\u8c03 */\\n          const target = e && (e?.target as HTMLElement)\\n          if (target && target.tagName && target.tagName.toLowerCase() === \'input\') {\\n            return\\n          }\\n          const cells = await MODELS.SELECTED_CELLS.useValue(modelService)\\n          const nodes = cells?.filter(cell => cell.isNode())\\n          const edges = cells?.filter(cell => cell.isEdge())\\n          if (edges?.length > 0) {\\n            deleteEdges(commandService, edges as X6Edge[])\\n          }\\n          if (nodes?.length > 0) {\\n            deleteNodes(commandService, nodes as X6Node[])\\n          }\\n        },\\n      },\\n      {\\n        id: \'deleteAll\',\\n        keybinding: Platform.IS_MAC ? ShortCut.CmdDelete : ShortCut.CtrlDelete,\\n        callback: async (item, modelService, commandService, e) => {\\n          const cells = await MODELS.SELECTED_CELLS.useValue(modelService)\\n          const nodes = cells?.filter(cell => cell.isNode())\\n          const edges = cells?.filter(cell => cell.isEdge())\\n          deleteEdges(commandService, edges as X6Edge[])\\n          deleteNodes(commandService, nodes as X6Node[])\\n        },\\n      },\\n    ])\\n  })\\n})\\n\\nexport const deleteNodes = async (commandService: IGraphCommandService, nodes: X6Node[]) => {\\n  const promiseList = nodes?.map(node => {\\n    return commandService.executeCommand(XFlowNodeCommands.DEL_NODE.id, {\\n      nodeConfig: {\\n        ...node.getData(),\\n      },\\n    } as NsNodeCmd.DelNode.IArgs)\\n  })\\n  const res = await Promise.all(promiseList)\\n  if (res.length > 0) {\\n    message.success(\'\u5220\u9664\u8282\u70b9\u6210\u529f\uff01\')\\n  }\\n}\\n\\nexport const deleteEdges = async (commandServce: IGraphCommandService, edges: X6Edge[]) => {\\n  const promiseList = edges\\n    ?.filter(edge => edge.isEdge())\\n    ?.map(edge => {\\n      return commandServce.executeCommand(XFlowEdgeCommands.DEL_EDGE.id, {\\n        edgeConfig: {\\n          ...edge.getData(),\\n        },\\n      } as NsEdgeCmd.DelEdge.IArgs)\\n    })\\n  const res = await Promise.all(promiseList)\\n  if (res.length > 0) {\\n    message.success(\'\u5220\u9664\u8fde\u7ebf\u6210\u529f\uff01\')\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/er/demos/CreateRelationModal/index.tsx?dumi-raw-code\n/* harmony default export */ var CreateRelationModaldumi_raw_code = ("import React, { useState } from \'react\'\\nimport { Modal, Form, Input, Select } from \'antd\'\\nimport type { EntityCanvasModel } from \'../interface\'\\n\\nconst formItemLayout = {\\n  labelCol: {\\n    xs: { span: 24 },\\n    sm: { span: 6 },\\n  },\\n  wrapperCol: {\\n    xs: { span: 24 },\\n    sm: { span: 16 },\\n  },\\n}\\n\\ninterface Props {\\n  visible: boolean\\n  onOk: (value: any) => void\\n  onCancel: () => void\\n  sourceEntity?: EntityCanvasModel\\n  targetEntity?: EntityCanvasModel\\n}\\n\\nconst CreateRelationModal = (props: Props) => {\\n  const { visible, sourceEntity, targetEntity, onOk, onCancel } = props\\n  const [confirmLoading, setConfirmLoading] = useState<boolean>(false)\\n  const [form] = Form.useForm()\\n\\n  const handleOK = () => {\\n    form.validateFields().then(values => {\\n      console.log(\'gujinyue111:\', values)\\n      setConfirmLoading(true)\\n      const cb = () => {\\n        setConfirmLoading(false)\\n      }\\n      onOk({ ...values, cb })\\n    })\\n  }\\n\\n  return (\\n    <Modal\\n      title=\\"\u5173\u8054\u6a21\u578b\\"\\n      visible={visible}\\n      confirmLoading={confirmLoading}\\n      wrapClassName=\\"create-relation-container\\"\\n      okText=\\"\u786e\u5b9a\\"\\n      cancelText=\\"\u53d6\u6d88\\"\\n      onOk={handleOK}\\n      onCancel={onCancel}\\n      mask={false}\\n      centered\\n      destroyOnClose={true}\\n    >\\n      <Form form={form}>\\n        <Form.Item\\n          {...formItemLayout}\\n          name=\\"SOURCE_GUID\\"\\n          label=\\"SOURCE_GUID\\"\\n          rules={[{ required: true }]}\\n          initialValue={`${sourceEntity?.entityName}(${sourceEntity?.entityId})`}\\n        >\\n          <Input />\\n        </Form.Item>\\n        <Form.Item\\n          {...formItemLayout}\\n          name=\\"TARGET_GUID\\"\\n          label=\\"TARGET_GUID\\"\\n          rules={[{ required: true }]}\\n          initialValue={`${targetEntity?.entityName}(${targetEntity?.entityId})`}\\n        >\\n          <Input />\\n        </Form.Item>\\n        <Form.Item\\n          {...formItemLayout}\\n          name=\\"RELATION_TYPE\\"\\n          label=\\"\u9009\u62e9\u5173\u8054\u5173\u7cfb\\"\\n          rules={[{ required: true }]}\\n          initialValue={\'N:1\'}\\n        >\\n          <Select placeholder=\\"\u8bf7\u9009\u62e9\u5173\u8054\u5173\u7cfb\\">\\n            <Select.Option value=\\"N:1\\">\u591a\u5bf9\u4e00</Select.Option>\\n            <Select.Option value=\\"1:N\\">\u4e00\u5bf9\u591a</Select.Option>\\n          </Select>\\n        </Form.Item>\\n      </Form>\\n    </Modal>\\n  )\\n}\\n\\nexport default CreateRelationModal");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/er/demos/react-node/Entity.tsx?dumi-raw-code\n/* harmony default export */ var Entitydumi_raw_code = ("import React from \'react\'\\nimport type { NsGraph } from \'@antv/xflow\'\\nimport type { EntityCanvasModel, EntityProperty } from \'../interface\'\\nimport { BarsOutlined, EllipsisOutlined } from \'@ant-design/icons\'\\nimport { EntityType } from \'../const\'\\n\\nimport \'./Entity.less\'\\n\\nconst Entity: NsGraph.INodeRender = props => {\\n  const entity: EntityCanvasModel = props?.data\\n\\n  const getCls = () => {\\n    if (entity?.entityType === EntityType.FACT) {\\n      return \'fact\'\\n    }\\n    if (entity?.entityType === EntityType.DIM) {\\n      return \'dim\'\\n    }\\n    if (entity?.entityType === EntityType.OTHER) {\\n      return \'other\'\\n    }\\n    return \'\'\\n  }\\n  return (\\n    <div className={`entity-container ${getCls()}`}>\\n      <div className={`content ${getCls()}`}>\\n        <div className=\\"head\\">\\n          <div>\\n            <BarsOutlined className=\\"type\\" />\\n            <span>{entity?.entityName}</span>\\n          </div>\\n          <EllipsisOutlined />\\n        </div>\\n        <div className=\\"body\\">\\n          {entity?.properties?.map((property: EntityProperty) => {\\n            return (\\n              <div className=\\"body-item\\" key={property.propertyId}>\\n                <div className=\\"name\\">\\n                  {property?.isPK && <span className=\\"pk\\">PK</span>}\\n                  {property?.isFK && <span className=\\"fk\\">FK</span>}\\n                  {property?.propertyName}\\n                </div>\\n                <div className=\\"type\\">{property.propertyType}</div>\\n              </div>\\n            )\\n          })}\\n        </div>\\n      </div>\\n    </div>\\n  )\\n}\\n\\nexport default Entity");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/er/demos/const.ts?dumi-raw-code\n/* harmony default export */ var constdumi_raw_code = ("export enum GraphMode {\\n  INFO = \'INFO\', // \u7f29\u7565\u6a21\u5f0f\\n  DETAIL = \'DETAIL\', // \u8be6\u60c5\u6a21\u5f0f\\n}\\n\\nexport enum EntityType {\\n  FACT = \'FACT\',\\n  DIM = \'DIM\',\\n  OTHER = \'OTHER\',\\n}\\n\\nexport const entityTypeDisplay = {\\n  [EntityType.FACT]: \'\u4e8b\u5b9e\u8868\',\\n  [EntityType.DIM]: \'\u7ef4\u5ea6\u8868\',\\n  [EntityType.OTHER]: \'\u5176\u4ed6\u8868\',\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/er/demos/react-node/Entity.less?dumi-raw-code\n/* harmony default export */ var react_node_Entitydumi_raw_code = (".entity-container {\\n  width: 100%;\\n  height: 100%;\\n  background-color: white;\\n  border-radius: 2px;\\n\\n  &.fact {\\n    border: 1px solid #cdddfd;\\n\\n    &:hover {\\n      border: 1px solid #1890ff;\\n    }\\n  }\\n\\n  &.dim {\\n    border: 1px solid #decfea;\\n\\n    &:hover {\\n      border: 1px solid #1890ff;\\n    }\\n  }\\n\\n  &.other {\\n    border: 1px solid #ced4de;\\n\\n    &:hover {\\n      border: 1px solid #1890ff;\\n    }\\n  }\\n\\n  .content {\\n    width: calc(100% - 2px);\\n    height: calc(100% - 2px);\\n    margin: 1px 1px;\\n\\n    &.fact {\\n      background-color: #cdddfd;\\n    }\\n\\n    &.dim {\\n      background-color: #decfea;\\n    }\\n\\n    &.other {\\n      background-color: #ced4de;\\n    }\\n\\n    .head {\\n      display: flex;\\n      flex-direction: row;\\n      align-items: center;\\n      justify-content: space-between;\\n      width: calc(100% - 12px);\\n      height: 38px;\\n      margin-left: 6px;\\n      font-size: 12px;\\n\\n      .type {\\n        padding-right: 8px;\\n      }\\n\\n      .more {\\n        cursor: pointer;\\n      }\\n    }\\n\\n    .body {\\n      width: calc(100% - 12px);\\n      height: calc(100% - 36px - 6px);\\n      margin-bottom: 6px;\\n      margin-left: 6px;\\n      overflow: auto;\\n      background-color: white;\\n      cursor: pointer;\\n\\n      .body-item {\\n        display: flex;\\n        flex-direction: row;\\n        align-items: center;\\n        justify-content: space-between;\\n        width: 100%;\\n        height: 28px;\\n        color: #595959;\\n        font-size: 12px;\\n        border-bottom: 1px solid rgba(206, 212, 222, 0.2);\\n\\n        .name {\\n          margin-left: 6px;\\n          overflow: hidden;\\n          white-space: nowrap;\\n          text-overflow: ellipsis;\\n\\n          .pk,\\n          .fk {\\n            width: 12px;\\n            margin-right: 6px;\\n            color: #ffd666;\\n            font-family: HelveticaNeue-CondensedBold;\\n          }\\n        }\\n\\n        .type {\\n          margin-right: 8px;\\n          color: #bfbfbf;\\n          font-size: 8px;\\n        }\\n      }\\n    }\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/er/demos/react-edge/Relation.tsx?dumi-raw-code\n/* harmony default export */ var Relationdumi_raw_code = ("import React from \'react\'\\nimport type { NsGraph } from \'@antv/xflow-core\'\\nimport type { RelationCanvasModel } from \'../interface\'\\nimport { Popover, Popconfirm, Tooltip } from \'antd\'\\nimport { ScissorOutlined } from \'@ant-design/icons\'\\nimport _ from \'lodash\'\\nimport \'./Relation.less\'\\n\\ninterface OwnProps {\\n  deleteRelation: Function\\n}\\n\\ntype Props = OwnProps & NsGraph.IReactEdgeProps\\n\\nconst Relation = (props: Props) => {\\n  const relation: RelationCanvasModel = props?.data\\n\\n  const renderRelationOperationItem = (relation: RelationCanvasModel) => {\\n    const sourcePropertyName = relation?.source\\n    const targetPropertyName = relation?.target\\n    return (\\n      <div className=\\"relation-operation-item\\" key={relation.id}>\\n        <div className=\\"relation-operation-item-content\\">\\n          <Tooltip placement=\\"top\\" title={sourcePropertyName}>\\n            <span className=\\"relation-property-source\\">{sourcePropertyName}</span>\\n          </Tooltip>\\n          (N:1)\\n          <Tooltip placement=\\"top\\" title={targetPropertyName}>\\n            <span className=\\"relation-property-target\\">{targetPropertyName}</span>\\n          </Tooltip>\\n        </div>\\n        <Popconfirm\\n          placement=\\"leftTop\\"\\n          title=\\"\u4f60\u786e\u5b9a\u8981\u5220\u9664\u8be5\u5173\u7cfb\u5417\\"\\n          okText=\\"\u786e\u5b9a\\"\\n          cancelText=\\"\u53d6\u6d88\\"\\n          onConfirm={() => {\\n            props?.deleteRelation(relation.id)\\n          }}\\n        >\\n          <ScissorOutlined />\\n        </Popconfirm>\\n      </div>\\n    )\\n  }\\n\\n  const renderPopoverContent = () => {\\n    return (\\n      <div className=\\"relation-operation-container\\">{renderRelationOperationItem(relation)}</div>\\n    )\\n  }\\n\\n  return (\\n    <Popover\\n      trigger={\'hover\'}\\n      content={renderPopoverContent()}\\n      overlayClassName=\\"relation-operation-popover\\"\\n    >\\n      <div className=\\"relation-count-container\\">{1}</div>\\n    </Popover>\\n  )\\n}\\n\\nexport default Relation");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/er/demos/react-edge/Relation.less?dumi-raw-code\n/* harmony default export */ var react_edge_Relationdumi_raw_code = (".relation-count-container {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  width: 20px;\\n  height: 20px;\\n  color: #868c91;\\n  background-color: #d8d8d8;\\n  cursor: pointer;\\n  &:hover {\\n    color: #fff;\\n    background-color: #1890ff;\\n  }\\n}\\n\\n.relation-operation-popover .ant-popover-inner-content {\\n  padding: 0;\\n}\\n\\n.relation-operation-container {\\n  width: 220px;\\n  max-height: 80px;\\n  padding: 12px 16px;\\n  overflow: hidden;\\n  background-color: #fff;\\n\\n  &:hover {\\n    overflow-y: auto;\\n  }\\n\\n  &::-webkit-scrollbar {\\n    width: 5px;\\n    background: #2b2f33;\\n  }\\n\\n  &::-webkit-scrollbar-thumb {\\n    background: #5f656b;\\n    border-radius: 10px;\\n  }\\n\\n  .relation-operation-item {\\n    display: flex;\\n    align-items: center;\\n    justify-content: space-between;\\n    height: 28px;\\n    color: #000;\\n    .relation-operation-item-content {\\n      display: flex;\\n      flex-basis: 160px;\\n      align-items: center;\\n      justify-content: space-between;\\n      height: 100%;\\n\\n      // &:hover {\\n      //   cursor: pointer;\\n      //   background: #d8d8d8\\n      // }\\n    }\\n    .relation-property-source,\\n    .relation-property-target {\\n      display: inline-block;\\n      max-width: 65px;\\n      overflow: hidden;\\n      white-space: nowrap;\\n      text-overflow: ellipsis;\\n    }\\n    .relation-property-source {\\n      padding-right: 6px;\\n    }\\n    .relation-property-target {\\n      padding-left: 6px;\\n    }\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/flow/demos/basic/index.tsx?dumi-raw-code\n/* harmony default export */ var flow_demos_basicdumi_raw_code = ("import type { IApplication, IAppLoad } from \'@antv/xflow\'\\nimport React from \'react\'\\n/** app \u6838\u5fc3\u7ec4\u4ef6 */\\nimport { XFlow, XFlowCanvas, KeyBindings } from \'@antv/xflow\'\\n/** \u4ea4\u4e92\u7ec4\u4ef6 */\\nimport {\\n  /** \u89e6\u53d1Command\u7684\u4ea4\u4e92\u7ec4\u4ef6 */\\n  CanvasScaleToolbar,\\n  WorkspacePanel,\\n  NodeTreePanel,\\n  JsonSchemaForm,\\n  CanvasToolbar,\\n  CanvasContextMenu,\\n  /** Graph\u7684\u6269\u5c55\u4ea4\u4e92\u7ec4\u4ef6 */\\n  CanvasSnapline,\\n  CanvasMiniMap,\\n  CanvasNodePortTooltip,\\n  FlowGraphExtension,\\n} from \'@antv/xflow\'\\n\\n/** app \u7ec4\u4ef6\u914d\u7f6e  */\\n/** \u914d\u7f6e\u753b\u5e03 */\\nimport { useGraphConfig } from \'./config-graph\'\\n/** \u914d\u7f6eCommand */\\nimport { useCmdConfig, initGraphCmds } from \'./config-cmd\'\\n/** \u914d\u7f6eModel */\\nimport { useModelServiceConfig } from \'./config-ctx-service\'\\n/** \u914d\u7f6eMenu */\\nimport { useMenuConfig } from \'./config-menu\'\\n/** \u914d\u7f6eToolbar */\\nimport { useToolbarConfig } from \'./config-toolbar\'\\n/** \u914d\u7f6e\u5feb\u6377\u952e */\\nimport { useKeybindingConfig } from \'./config-keybinding\'\\n/** \u914d\u7f6eDnd\u7ec4\u4ef6\u9762\u677f */\\nimport { onNodeDrop, searchService, treeDataService } from \'./config-dnd-panel\'\\n/** \u914d\u7f6eJsonConfigForm */\\nimport { formSchemaService, formValueUpdateService, controlMapService } from \'./config-form\'\\n\\nimport \'./index.less\'\\nimport \'@antv/xflow/dist/index.css\'\\n\\nexport interface IProps {\\n  meta: { flowId: string }\\n}\\n\\nexport const Demo: React.FC<IProps> = props => {\\n  const { meta } = props\\n  const graphConfig = useGraphConfig()\\n  const toolbarConfig = useToolbarConfig()\\n  const menuConfig = useMenuConfig()\\n  const cmdConfig = useCmdConfig()\\n  const modelConfig = useModelServiceConfig()\\n  const keybindingConfig = useKeybindingConfig()\\n\\n  const cache = React.useMemo<{ app: IApplication } | null>(\\n    () => ({\\n      app: null,\\n    }),\\n    [],\\n  )\\n  /**\\n   * @param app \u5f53\u524dXFlow\u5de5\u4f5c\u7a7a\u95f4\\n   * @param extensionRegistry \u5f53\u524dXFlow\u914d\u7f6e\u9879\\n   */\\n\\n  const onLoad: IAppLoad = async app => {\\n    cache.app = app\\n    initGraphCmds(cache.app)\\n  }\\n\\n  /** \u7236\u7ec4\u4ef6meta\u5c5e\u6027\u66f4\u65b0\u65f6,\u6267\u884cinitGraphCmds */\\n  React.useEffect(() => {\\n    if (cache.app) {\\n      initGraphCmds(cache.app)\\n    }\\n  }, [cache.app, meta])\\n\\n  return (\\n    <XFlow\\n      className=\\"user-custom-clz\\"\\n      modelServiceConfig={modelConfig}\\n      commandConfig={cmdConfig}\\n      onLoad={onLoad}\\n      meta={meta}\\n    >\\n      <FlowGraphExtension />\\n      <NodeTreePanel\\n        searchService={searchService}\\n        treeDataService={treeDataService}\\n        onNodeDrop={onNodeDrop}\\n        position={{ width: 290, top: 0, bottom: 0, left: 0 }}\\n      />\\n      <CanvasToolbar\\n        className=\\"xflow-workspace-toolbar-top\\"\\n        layout=\\"horizontal\\"\\n        config={toolbarConfig}\\n        position={{ top: 0, left: 290, right: 290, bottom: 0 }}\\n      />\\n      <XFlowCanvas config={graphConfig} position={{ top: 40, left: 290, right: 290, bottom: 40 }}>\\n        <CanvasScaleToolbar position={{ top: 12, right: 12 }} />\\n        <CanvasContextMenu config={menuConfig} />\\n        <CanvasMiniMap />\\n        <CanvasSnapline color=\\"#faad14\\" />\\n        <CanvasNodePortTooltip />\\n      </XFlowCanvas>\\n      <WorkspacePanel\\n        className=\\"xflow-workspace-toolbar-bottom\\"\\n        position={{ bottom: 0, left: 290, right: 290, height: 40, lineHeight: 40 }}\\n      >\\n        <div> Bottom Toolbar </div>\\n      </WorkspacePanel>\\n      <JsonSchemaForm\\n        controlMapService={controlMapService}\\n        formSchemaService={formSchemaService}\\n        formValueUpdateService={formValueUpdateService}\\n        position={{ width: 290, top: 0, bottom: 0, right: 0 }}\\n      />\\n      <KeyBindings config={keybindingConfig} />\\n    </XFlow>\\n  )\\n}\\n\\nexport default Demo\\n\\nDemo.defaultProps = {\\n  meta: { flowId: \'test-meta-flow-id\' },\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/flow/demos/basic/config-graph.tsx?dumi-raw-code\n/* harmony default export */ var flow_demos_basic_config_graphdumi_raw_code = ("import type { NsGraph } from \'@antv/xflow\'\\nimport { createGraphConfig } from \'@antv/xflow\'\\nimport { DndNode } from \'./react-node/dnd-node\'\\nimport { DND_RENDER_ID } from \'./constant\'\\n\\n// \u63a7\u5236\u8fde\u63a5\u6869\u663e\u793a/\u9690\u85cf\\nconst showPorts = (ports: NodeListOf<SVGElement>, show: boolean) => {\\n  for (let i = 0, len = ports.length; i < len; i = i + 1) {\\n    ports[i].style.visibility = show ? \'visible\' : \'hidden\'\\n  }\\n}\\n\\n/**  graphConfig    */\\nexport const useGraphConfig = createGraphConfig(config => {\\n  config.setNodeTypeParser(node => node?.renderKey)\\n  config.setEdgeTypeParser(edge => edge?.renderKey)\\n  config.setNodeRender(DND_RENDER_ID, DndNode)\\n  config.setX6Config({\\n    grid: true,\\n    history: true,\\n  })\\n  config.setEvents([\\n    {\\n      eventName: \'node:mouseenter\',\\n      callback: () => {\\n        const container = document.querySelector(\'.user-custom-clz\')!\\n        const ports = container.querySelectorAll(\'.x6-port-body\') as NodeListOf<SVGElement>\\n        showPorts(ports, true)\\n      },\\n    } as NsGraph.IEvent<\'node:mouseenter\'>,\\n    {\\n      eventName: \'node:mouseleave\',\\n      callback: () => {\\n        const container = document.querySelector(\'.user-custom-clz\')!\\n        const ports = container.querySelectorAll(\'.x6-port-body\') as NodeListOf<SVGElement>\\n        showPorts(ports, false)\\n      },\\n    } as NsGraph.IEvent<\'node:mouseleave\'>,\\n  ])\\n})");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/flow/demos/basic/react-node/dnd-node.tsx?dumi-raw-code\n/* harmony default export */ var basic_react_node_dnd_nodedumi_raw_code = ("import React from \'react\'\\nimport type { NsGraph } from \'@antv/xflow\'\\nimport \'./dnd-node.less\'\\n\\nexport const DndNode: NsGraph.INodeRender = props => {\\n  const { label, des } = props.data\\n  return (\\n    <div className=\\"xflow-flow-node\\">\\n      <div className=\\"node-title\\">\\n        <img\\n          src=\\"https://gw.alipayobjects.com/mdn/rms_43231b/afts/img/A*GY1bRIKjcuYAAAAAAAAAAAAAARQnAQ\\"\\n          alt=\\"\\"\\n        />\\n        <span>{label}</span>\\n      </div>\\n      <div className=\\"node-des\\">{des}</div>\\n    </div>\\n  )\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/flow/demos/basic/react-node/dnd-node.less?dumi-raw-code\n/* harmony default export */ var demos_basic_react_node_dnd_nodedumi_raw_code = ("@light-border: 1px solid #d9d9d9;\\n@primaryColor: #1890ff;\\n\\n.xflow-flow-node {\\n  width: 200px;\\n  height: 60px;\\n  padding: 8px 12px;\\n  color: rgba(0, 0, 0, 0.85);\\n  font-size: 12px;\\n  background: #eff4ff;\\n  border: 1px solid #5f95ff;\\n  border-radius: 4px;\\n  &:hover,\\n  &.selected {\\n    border-width: 2px;\\n  }\\n  .node-title {\\n    display: flex;\\n    align-items: center;\\n    height: 20px;\\n    line-height: 20px;\\n    img {\\n      width: 16px;\\n      height: 16px;\\n    }\\n    span {\\n      display: inline-block;\\n      margin-left: 12px;\\n      font-weight: bold;\\n    }\\n  }\\n  .node-des {\\n    margin: 0 0 0 28px;\\n    color: rgba(0, 0, 0, 0.45);\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/flow/demos/basic/constant.ts?dumi-raw-code\n/* harmony default export */ var flow_demos_basic_constantdumi_raw_code = ("export const DND_RENDER_ID = \'DND_NDOE\'\\nexport const NODE_WIDTH = 200\\nexport const NODE_HEIGHT = 60");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/flow/demos/basic/config-cmd.ts?dumi-raw-code\n/* harmony default export */ var basic_config_cmddumi_raw_code = ("import type { NsGraphCmd } from \'@antv/xflow\'\\nimport type { IApplication } from \'@antv/xflow\'\\nimport type { IGraphPipelineCommand } from \'@antv/xflow\'\\nimport { createCmdConfig, DisposableCollection, XFlowGraphCommands } from \'@antv/xflow\'\\nimport { MockApi } from \'./service\'\\nimport { commandContributions } from \'./cmd-extensions\'\\nexport const useCmdConfig = createCmdConfig(config => {\\n  // \u6ce8\u518c\u5168\u5c40Command\u6269\u5c55\\n  config.setCommandContributions(() => commandContributions)\\n  // \u8bbe\u7f6ehook\\n  config.setRegisterHookFn(hooks => {\\n    const list = [\\n      hooks.graphMeta.registerHook({\\n        name: \'get node config from backend api\',\\n        handler: async args => {\\n          args.graphMetaService = MockApi.queryGraphMeta\\n        },\\n      }),\\n      hooks.saveGrpahData.registerHook({\\n        name: \'get node config from backend api\',\\n        handler: async args => {\\n          if (!args.saveGraphDataService) {\\n            args.saveGraphDataService = MockApi.saveGraphData\\n          }\\n        },\\n      }),\\n      hooks.addNode.registerHook({\\n        name: \'get node config from backend api\',\\n        handler: async args => {\\n          args.createNodeService = MockApi.addNode\\n        },\\n      }),\\n      hooks.delNode.registerHook({\\n        name: \'get edge config from backend api\',\\n        handler: async args => {\\n          args.deleteNodeService = MockApi.delNode\\n        },\\n      }),\\n      hooks.addEdge.registerHook({\\n        name: \'get edge config from backend api\',\\n        handler: async args => {\\n          args.createEdgeService = MockApi.addEdge\\n        },\\n      }),\\n      hooks.delEdge.registerHook({\\n        name: \'get edge config from backend api\',\\n        handler: async args => {\\n          args.deleteEdgeService = MockApi.delEdge\\n        },\\n      }),\\n    ]\\n    const toDispose = new DisposableCollection()\\n    toDispose.pushAll(list)\\n    return toDispose\\n  })\\n})\\n\\n/** \u67e5\u8be2\u56fe\u7684\u8282\u70b9\u548c\u8fb9\u7684\u6570\u636e */\\nexport const initGraphCmds = (app: IApplication) => {\\n  app.executeCommandPipeline([\\n    /** 1. \u4ece\u670d\u52a1\u7aef\u83b7\u53d6\u6570\u636e */\\n    {\\n      commandId: XFlowGraphCommands.LOAD_DATA.id,\\n      getCommandOption: async ctx => {\\n        return {\\n          args: {\\n            loadDataService: MockApi.loadGraphData,\\n          },\\n        }\\n      },\\n    } as IGraphPipelineCommand<NsGraphCmd.GraphLoadData.IArgs>,\\n    /** 2. \u753b\u5e03\u5185\u5bb9\u6e32\u67d3 */\\n    {\\n      commandId: XFlowGraphCommands.GRAPH_RENDER.id,\\n      getCommandOption: async ctx => {\\n        const { graphData } = ctx.getResult()\\n        return {\\n          args: {\\n            graphData,\\n          },\\n        }\\n      },\\n    } as IGraphPipelineCommand<NsGraphCmd.GraphRender.IArgs>,\\n  ])\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/flow/demos/basic/service.ts?dumi-raw-code\n/* harmony default export */ var basic_servicedumi_raw_code = ("import { DND_RENDER_ID, NODE_WIDTH, NODE_HEIGHT } from \'./constant\'\\nimport { uuidv4, NsGraph } from \'@antv/xflow\'\\nimport type { NsRenameNodeCmd } from \'./cmd-extensions/cmd-rename-node-modal\'\\nimport type { NsNodeCmd, NsEdgeCmd, NsGraphCmd } from \'@antv/xflow\'\\n\\n/** mock \u540e\u7aef\u63a5\u53e3\u8c03\u7528 */\\nexport namespace MockApi {\\n  export const NODE_COMMON_PROPS = {\\n    renderKey: DND_RENDER_ID,\\n    width: NODE_WIDTH,\\n    height: NODE_HEIGHT,\\n  } as const\\n\\n  /** \u67e5\u56fe\u7684meta\u5143\u4fe1\u606f */\\n  export const queryGraphMeta: NsGraphCmd.GraphMeta.IArgs[\'graphMetaService\'] = async args => {\\n    console.log(\'queryMeta\', args)\\n    return { ...args, flowId: args.meta.flowId }\\n  }\\n  /** \u52a0\u8f7d\u56fe\u6570\u636e\u7684api */\\n  export const loadGraphData = async (meta: NsGraph.IGraphMeta) => {\\n    const nodes: NsGraph.INodeConfig[] = [\\n      {\\n        ...NODE_COMMON_PROPS,\\n        id: \'node1\',\\n        label: \'\u6d41\u7a0b1\',\\n        x: 140,\\n        y: 210,\\n        des: \'\u6d41\u7a0b1\u7684\u63cf\u8ff0\',\\n        ports: {\\n          items: [\\n            {\\n              id: \'node1-input-1\',\\n              group: \'left\',\\n            },\\n            {\\n              id: \'node1-output-1\',\\n              group: \'right\',\\n            },\\n          ],\\n        },\\n      },\\n      {\\n        ...NODE_COMMON_PROPS,\\n        id: \'node2\',\\n        label: \'\u6d41\u7a0b2\',\\n        des: \'\u6d41\u7a0b2\u7684\u63cf\u8ff0\',\\n        x: 430,\\n        y: 120,\\n        ports: {\\n          items: [\\n            {\\n              id: \'node2-input-1\',\\n              group: \'left\',\\n            },\\n            {\\n              id: \'node2-output-1\',\\n              group: \'right\',\\n            },\\n          ],\\n        },\\n      },\\n      {\\n        ...NODE_COMMON_PROPS,\\n        id: \'node3\',\\n        label: \'\u6d41\u7a0b3\',\\n        des: \'\u6d41\u7a0b3\u7684\u63cf\u8ff0\',\\n        x: 430,\\n        y: 290,\\n        ports: {\\n          items: [\\n            {\\n              id: \'node3-input-1\',\\n              group: \'left\',\\n            },\\n            {\\n              id: \'node3-output-1\',\\n              group: \'right\',\\n            },\\n          ],\\n        },\\n      },\\n      {\\n        ...NODE_COMMON_PROPS,\\n        id: \'node4\',\\n        label: \'\u6d41\u7a0b4\',\\n        des: \'\u6d41\u7a0b4\u7684\u63cf\u8ff0\',\\n        x: 740,\\n        y: 210,\\n        ports: {\\n          items: [\\n            {\\n              id: \'node4-input-1\',\\n              group: \'left\',\\n            },\\n            {\\n              id: \'node4-output-1\',\\n              group: \'right\',\\n            },\\n          ],\\n        },\\n      },\\n    ]\\n    const edges: NsGraph.IEdgeConfig[] = [\\n      {\\n        id: uuidv4(),\\n        source: \'node1\',\\n        target: \'node2\',\\n        sourcePortId: \'node1-output-1\',\\n        targetPortId: \'node2-input-1\',\\n      },\\n      {\\n        id: uuidv4(),\\n        source: \'node1\',\\n        target: \'node3\',\\n        sourcePortId: \'node1-output-1\',\\n        targetPortId: \'node3-input-1\',\\n      },\\n      {\\n        id: uuidv4(),\\n        source: \'node2\',\\n        target: \'node4\',\\n        sourcePortId: \'node2-output-1\',\\n        targetPortId: \'node4-input-1\',\\n      },\\n      {\\n        id: uuidv4(),\\n        source: \'node3\',\\n        target: \'node4\',\\n        sourcePortId: \'node3-output-1\',\\n        targetPortId: \'node4-input-1\',\\n      },\\n    ]\\n    return { nodes, edges }\\n  }\\n  /** \u4fdd\u5b58\u56fe\u6570\u636e\u7684api */\\n  export const saveGraphData: NsGraphCmd.SaveGraphData.IArgs[\'saveGraphDataService\'] = async (\\n    meta: NsGraph.IGraphMeta,\\n    graphData: NsGraph.IGraphData,\\n  ) => {\\n    console.log(\'saveGraphData api\', meta, graphData)\\n    return {\\n      success: true,\\n      data: graphData,\\n    }\\n  }\\n\\n  /** \u6dfb\u52a0\u8282\u70b9api */\\n  export const addNode: NsNodeCmd.AddNode.IArgs[\'createNodeService\'] = async (\\n    args: NsNodeCmd.AddNode.IArgs,\\n  ) => {\\n    const { id, ports } = args.nodeConfig\\n    const nodeId = id || uuidv4()\\n    /** \u8fd9\u91cc\u6dfb\u52a0\u8fde\u7ebf\u6869 */ args\\n    const node: NsNodeCmd.AddNode.IArgs[\'nodeConfig\'] = {\\n      width: 200,\\n      height: 60,\\n      ...args.nodeConfig,\\n      id: nodeId,\\n      ports: ports\\n        ? ports\\n        : {\\n            items: [\\n              {\\n                id: uuidv4(),\\n                group: NsGraph.AnchorGroup.LEFT,\\n              },\\n              {\\n                id: uuidv4(),\\n                group: NsGraph.AnchorGroup.RIGHT,\\n              },\\n            ] as NsGraph.INodeAnchor[],\\n          },\\n    }\\n    return node\\n  }\\n\\n  /** \u66f4\u65b0\u8282\u70b9 name\uff0c\u53ef\u80fd\u4f9d\u8d56\u63a5\u53e3\u5224\u65ad\u662f\u5426\u91cd\u540d\uff0c\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u65f6\uff0c\u4e0d\u66f4\u65b0 */\\n  export const renameNode: NsRenameNodeCmd.IUpdateNodeNameService = async (\\n    name,\\n    node,\\n    graphMeta,\\n  ) => {\\n    console.log(\'rename node\', node, name, graphMeta)\\n    return { err: null, nodeName: name }\\n  }\\n\\n  /** \u5220\u9664\u8282\u70b9\u7684api */\\n  export const delNode: NsNodeCmd.DelNode.IArgs[\'deleteNodeService\'] = async args => {\\n    console.info(\'delNode service running, del node:\', args.nodeConfig.id)\\n    return true\\n  }\\n\\n  /** \u6dfb\u52a0\u8fb9\u7684api */\\n  export const addEdge: NsEdgeCmd.AddEdge.IArgs[\'createEdgeService\'] = async args => {\\n    console.info(\'addEdge service running, add edge:\', args)\\n    const { edgeConfig } = args\\n    return {\\n      ...edgeConfig,\\n      id: uuidv4(),\\n    }\\n  }\\n\\n  /** \u5220\u9664\u8fb9\u7684api */\\n  export const delEdge: NsEdgeCmd.DelEdge.IArgs[\'deleteEdgeService\'] = async args => {\\n    console.info(\'delEdge service running, del edge:\', args)\\n    return true\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/flow/demos/basic/cmd-extensions/index.ts?dumi-raw-code\n/* harmony default export */ var basic_cmd_extensionsdumi_raw_code = ("import { ClearGraphCommand, NsClearGraphCmd } from \'./cmd-clear\'\\nimport { ExportGraphCmd, NsExportGraphCmd } from \'./cmd-export\'\\nimport { RenameNodeCommand, NsRenameNodeCmd } from \'./cmd-rename-node-modal\'\\nimport type { ICommandContributionConfig } from \'@antv/xflow\'\\n/** \u6ce8\u518c\u6210\u4e3a\u53ef\u4ee5\u6267\u884c\u7684\u547d\u4ee4 */\\n\\nexport const commandContributions: ICommandContributionConfig[] = [\\n  {\\n    ...NsClearGraphCmd,\\n    CommandHandler: ClearGraphCommand,\\n  },\\n  {\\n    ...NsExportGraphCmd,\\n    CommandHandler: ExportGraphCmd,\\n  },\\n  {\\n    ...NsRenameNodeCmd,\\n    CommandHandler: RenameNodeCommand,\\n  },\\n]");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/flow/demos/basic/cmd-extensions/cmd-clear.ts?dumi-raw-code\n/* harmony default export */ var cmd_cleardumi_raw_code = ("import type { ICmdHooks as IHooks } from \'@antv/xflow\'\\nimport type { HookHub } from \'@antv/xflow-hook\'\\nimport type { IArgsBase, ICommandHandler } from \'@antv/xflow\'\\nimport { inject, injectable } from \'mana-syringe\'\\nimport { ICommandContextProvider } from \'@antv/xflow\'\\nimport { CustomCommands } from \'./constants\'\\nimport { Disposable } from \'@antv/xflow\'\\n\\ntype ICommand = ICommandHandler<\\n  NsClearGraphCmd.IArgs,\\n  NsClearGraphCmd.IResult,\\n  NsClearGraphCmd.ICmdHooks\\n>\\n\\nexport namespace NsClearGraphCmd {\\n  /** Command: \u7528\u4e8e\u6ce8\u518cnamed factory */\\n  export const command = CustomCommands.CLEAR_GRAPH\\n  /** hook name */\\n  export const hookKey = \'clearGraph\'\\n  /** hook \u53c2\u6570\u7c7b\u578b */\\n  export type IArgs = IArgsBase\\n  /** hook handler \u8fd4\u56de\u7c7b\u578b */\\n  export interface IResult {}\\n  /** hooks \u7c7b\u578b */\\n  export interface ICmdHooks extends IHooks {\\n    clearGraph: HookHub<IArgs, IResult>\\n  }\\n}\\n\\n@injectable()\\n/** \u90e8\u7f72\u753b\u5e03\u6570\u636e */\\nexport class ClearGraphCommand implements ICommand {\\n  /** api */\\n  @inject(ICommandContextProvider) contextProvider: ICommand[\'contextProvider\']\\n\\n  /** \u6267\u884cCmd */\\n  execute = async () => {\\n    const ctx = this.contextProvider()\\n    const { args, hooks: runtimeHook } = ctx.getArgs()\\n    const hooks = ctx.getHooks()\\n\\n    const result = await hooks.clearGraph.call(args, async args => {\\n      const graph = await ctx.getX6Graph()\\n      const cells = graph.getCells()\\n      graph.clearCells()\\n\\n      ctx.addUndo(\\n        Disposable.create(async () => {\\n          graph.resetCells(cells)\\n        }),\\n      )\\n\\n      return {}\\n    })\\n\\n    ctx.setResult(result)\\n    return this\\n  }\\n\\n  /** undo cmd */\\n  undo = async () => {\\n    if (this.isUndoable()) {\\n      const ctx = this.contextProvider()\\n      ctx.undo()\\n    }\\n    return this\\n  }\\n\\n  /** redo cmd */\\n  redo = async () => {\\n    if (!this.isUndoable()) {\\n      await this.execute()\\n    }\\n    return this\\n  }\\n\\n  isUndoable(): boolean {\\n    const ctx = this.contextProvider()\\n    return ctx.isUndoable()\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/flow/demos/basic/cmd-extensions/constants.ts?dumi-raw-code\n/* harmony default export */ var cmd_extensions_constantsdumi_raw_code = ("import type { IGraphCommand } from \'@antv/xflow\'\\n\\n/** \u8282\u70b9\u547d\u4ee4 */\\nexport namespace CustomCommands {\\n  const category = \'\u8282\u70b9\u64cd\u4f5c\'\\n  /** \u6e05\u9664\u753b\u5e03 */\\n  export const CLEAR_GRAPH: IGraphCommand = {\\n    id: \'xflow:clear-graph\',\\n    label: \'\u6e05\u9664\',\\n    category,\\n  }\\n  /** \u5bfc\u51fa */\\n  export const EXPORT_GRAPH: IGraphCommand = {\\n    id: \'xflow:export-graph\',\\n    label: \'\u5bfc\u51fa\',\\n    category,\\n  }\\n  /** \u91cd\u547d\u540d\u8282\u70b9\u5f39\u7a97 */\\n  export const SHOW_RENAME_MODAL: IGraphCommand = {\\n    id: \'xflow:rename-node-modal\',\\n    label: \'\u6253\u5f00\u91cd\u547d\u540d\u5f39\u7a97\',\\n    category,\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/flow/demos/basic/cmd-extensions/cmd-export.ts?dumi-raw-code\n/* harmony default export */ var cmd_exportdumi_raw_code = ("import type { ICmdHooks as IHooks } from \'@antv/xflow\'\\nimport type { HookHub } from \'@antv/xflow-hook\'\\nimport type { IArgsBase, ICommandHandler } from \'@antv/xflow\'\\nimport { inject, injectable } from \'mana-syringe\'\\nimport { ICommandContextProvider } from \'@antv/xflow\'\\nimport { CustomCommands } from \'./constants\'\\nimport { DataUri } from \'@antv/x6\'\\n\\ntype ICommand = ICommandHandler<\\n  NsExportGraphCmd.IArgs,\\n  NsExportGraphCmd.IResult,\\n  NsExportGraphCmd.ICmdHooks\\n>\\n\\nexport namespace NsExportGraphCmd {\\n  /** Command: \u7528\u4e8e\u6ce8\u518cnamed factory */\\n  export const command = CustomCommands.EXPORT_GRAPH\\n  /** hook name */\\n  export const hookKey = \'exportGraph\'\\n  /** hook \u53c2\u6570\u7c7b\u578b */\\n  export type IArgs = IArgsBase\\n  /** hook handler \u8fd4\u56de\u7c7b\u578b */\\n  export interface IResult {}\\n  /** hooks \u7c7b\u578b */\\n  export interface ICmdHooks extends IHooks {\\n    exportGraph: HookHub<IArgs, IResult>\\n  }\\n}\\n\\n@injectable()\\n/** \u521b\u5efa\u8282\u70b9\u547d\u4ee4 */\\nexport class ExportGraphCmd implements ICommand {\\n  /** api */\\n  @inject(ICommandContextProvider) contextProvider: ICommand[\'contextProvider\']\\n\\n  execute = async () => {\\n    const ctx = this.contextProvider()\\n    const { args, hooks: runtimeHook } = ctx.getArgs()\\n    const hooks = ctx.getHooks()\\n\\n    const result = await hooks.exportGraph.call(args, async args => {\\n      const graph = await ctx.getX6Graph()\\n      graph.toPNG((dataUri: string) => {\\n        DataUri.downloadDataUri(dataUri, \'chart.png\')\\n      })\\n\\n      return {}\\n    })\\n\\n    ctx.setResult(result)\\n    return this\\n  }\\n\\n  /** undo cmd */\\n  undo = async () => {\\n    if (this.isUndoable()) {\\n      const ctx = this.contextProvider()\\n      ctx.undo()\\n    }\\n    return this\\n  }\\n\\n  /** redo cmd */\\n  redo = async () => {\\n    if (!this.isUndoable()) {\\n      await this.execute()\\n    }\\n    return this\\n  }\\n\\n  isUndoable(): boolean {\\n    const ctx = this.contextProvider()\\n    return ctx.isUndoable()\\n  }\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/flow/demos/basic/cmd-extensions/cmd-rename-node-modal.tsx?dumi-raw-code\n/* harmony default export */ var cmd_extensions_cmd_rename_node_modaldumi_raw_code = ("import type { FormInstance } from \'antd\'\\nimport React from \'react\'\\nimport { inject, injectable } from \'mana-syringe\'\\nimport { Deferred, ICommandContextProvider } from \'@antv/xflow\'\\nimport { Modal, Form, Input, ConfigProvider } from \'antd\'\\n\\nimport type {\\n  ICmdHooks as IHooks,\\n  NsGraph,\\n  IArgsBase,\\n  IModelService,\\n  ICommandHandler,\\n  IGraphCommandService,\\n  HookHub,\\n} from \'@antv/xflow\'\\n\\nimport { CustomCommands } from \'./constants\'\\n\\nimport \'antd/es/modal/style/index\'\\n\\ntype ICommand = ICommandHandler<\\n  NsRenameNodeCmd.IArgs,\\n  NsRenameNodeCmd.IResult,\\n  NsRenameNodeCmd.ICmdHooks\\n>\\n\\nexport namespace NsRenameNodeCmd {\\n  /** Command: \u7528\u4e8e\u6ce8\u518cnamed factory */\\n  export const command = CustomCommands.SHOW_RENAME_MODAL\\n  /** hook name */\\n  export const hookKey = \'renameNode\'\\n  /** hook \u53c2\u6570\u7c7b\u578b */\\n  export interface IArgs extends IArgsBase {\\n    nodeConfig: NsGraph.INodeConfig\\n    updateNodeNameService: IUpdateNodeNameService\\n  }\\n  export interface IUpdateNodeNameService {\\n    (newName: string, nodeConfig: NsGraph.INodeConfig, meta: NsGraph.IGraphMeta): Promise<{\\n      err: string | null\\n      nodeName: string\\n    }>\\n  }\\n  /** hook handler \u8fd4\u56de\u7c7b\u578b */\\n  export interface IResult {\\n    err: string | null\\n    preNodeName?: string\\n    currenNodetName?: string\\n  }\\n  /** hooks \u7c7b\u578b */\\n  export interface ICmdHooks extends IHooks {\\n    renameNode: HookHub<IArgs, IResult>\\n  }\\n}\\n\\n@injectable()\\n/** \u90e8\u7f72\u753b\u5e03\u6570\u636e */\\nexport class RenameNodeCommand implements ICommand {\\n  /** api */\\n  @inject(ICommandContextProvider) contextProvider: ICommand[\'contextProvider\']\\n\\n  /** \u6267\u884cCmd */\\n  execute = async () => {\\n    const ctx = this.contextProvider()\\n    const { args, hooks: runtimeHook } = ctx.getArgs()\\n    const hooks = ctx.getHooks()\\n    const result = await hooks.renameNode.call(args, async args => {\\n      const { nodeConfig, graphMeta, commandService, modelService, updateNodeNameService } = args\\n      const preNodeName = nodeConfig.label\\n\\n      const getAppContext: IGetAppCtx = () => {\\n        return {\\n          graphMeta,\\n          modelService,\\n          commandService,\\n          updateNodeNameService,\\n        }\\n      }\\n\\n      const x6Graph = await ctx.getX6Graph()\\n      const cell = x6Graph.getCellById(nodeConfig.id)\\n\\n      if (!cell || !cell.isNode()) {\\n        throw new Error(`${nodeConfig.id} is not a valid node`)\\n      }\\n      /** \u901a\u8fc7modal \u83b7\u53d6 new name */\\n      const newName = await showModal(nodeConfig, getAppContext)\\n      /** \u66f4\u65b0 node name  */\\n      if (newName) {\\n        const cellData = cell.getData<NsGraph.INodeConfig>()\\n        cell.setData({ ...cellData, label: newName } as NsGraph.INodeConfig)\\n        return { err: null, preNodeName, currenNodetName: newName }\\n      }\\n      return { err: null, preNodeName, currenNodetName: \'\' }\\n    })\\n\\n    ctx.setResult(result)\\n    return this\\n  }\\n\\n  /** undo cmd */\\n  undo = async () => {\\n    if (this.isUndoable()) {\\n      const ctx = this.contextProvider()\\n      ctx.undo()\\n    }\\n    return this\\n  }\\n\\n  /** redo cmd */\\n  redo = async () => {\\n    if (!this.isUndoable()) {\\n      await this.execute()\\n    }\\n    return this\\n  }\\n\\n  isUndoable(): boolean {\\n    const ctx = this.contextProvider()\\n    return ctx.isUndoable()\\n  }\\n}\\n\\nexport interface IGetAppCtx {\\n  (): {\\n    graphMeta: NsGraph.IGraphMeta\\n    modelService: IModelService\\n    commandService: IGraphCommandService\\n    updateNodeNameService: NsRenameNodeCmd.IUpdateNodeNameService\\n  }\\n}\\n\\nexport type IModalInstance = ReturnType<typeof Modal.confirm>\\nexport interface IFormProps {\\n  newNodeName: string\\n}\\n\\nconst layout = {\\n  labelCol: { span: 5 },\\n  wrapperCol: { span: 19 },\\n}\\n\\nfunction showModal(node: NsGraph.INodeConfig, getAppContext: IGetAppCtx) {\\n  /** showModal \u8fd4\u56de\u4e00\u4e2aPromise */\\n  const defer = new Deferred<string | void>()\\n\\n  /** modal\u786e\u8ba4\u4fdd\u5b58\u903b\u8f91 */\\n  class ModalCache {\\n    static modal: IModalInstance\\n    static form: FormInstance<IFormProps>\\n  }\\n\\n  /** modal\u786e\u8ba4\u4fdd\u5b58\u903b\u8f91 */\\n  const onOk = async () => {\\n    const { form, modal } = ModalCache\\n    const appContext = getAppContext()\\n    const { updateNodeNameService, graphMeta } = appContext\\n    try {\\n      modal.update({ okButtonProps: { loading: true } })\\n      await form.validateFields()\\n      const values = await form.getFieldsValue()\\n      const newName: string = values.newNodeName\\n      /** \u6267\u884c backend service */\\n      if (updateNodeNameService) {\\n        const { err, nodeName } = await updateNodeNameService(newName, node, graphMeta)\\n        if (err) {\\n          throw new Error(err)\\n        }\\n        defer.resolve(nodeName)\\n      }\\n      /** \u66f4\u65b0\u6210\u529f\u540e\uff0c\u5173\u95edmodal */\\n      onHide()\\n    } catch (error) {\\n      console.error(error)\\n      /** \u5982\u679cresolve\u7a7a\u5b57\u7b26\u4e32\u5219\u4e0d\u66f4\u65b0 */\\n      modal.update({ okButtonProps: { loading: false } })\\n    }\\n  }\\n\\n  /** modal\u9500\u6bc1\u903b\u8f91 */\\n  const onHide = () => {\\n    modal.destroy()\\n    ModalCache.form = null as any\\n    ModalCache.modal = null as any\\n    // container.destory()\\n  }\\n\\n  /** modal\u5185\u5bb9 */\\n  const ModalContent = () => {\\n    const [form] = Form.useForm<IFormProps>()\\n    /** \u7f13\u5b58form\u5b9e\u4f8b */\\n    ModalCache.form = form\\n\\n    return (\\n      <div>\\n        <ConfigProvider>\\n          <Form form={form} {...layout} initialValues={{ newNodeName: node.label }}>\\n            <Form.Item\\n              name=\\"newNodeName\\"\\n              label=\\"\u8282\u70b9\u540d\\"\\n              rules={[\\n                { required: true, message: \'\u8bf7\u8f93\u5165\u65b0\u8282\u70b9\u540d\' },\\n                { min: 3, message: \'\u8282\u70b9\u540d\u4e0d\u80fd\u5c11\u4e8e3\u4e2a\u5b57\u7b26\' },\\n              ]}\\n            >\\n              <Input />\\n            </Form.Item>\\n          </Form>\\n        </ConfigProvider>\\n      </div>\\n    )\\n  }\\n  /** \u521b\u5efamodal dom\u5bb9\u5668 */\\n  // const container = createContainer()\\n  /** \u521b\u5efamodal */\\n  const modal = Modal.confirm({\\n    title: \'\u91cd\u547d\u540d\',\\n    content: <ModalContent />,\\n    // getContainer: () => {\\n    //   return container.element\\n    // },\\n    okButtonProps: {\\n      onClick: e => {\\n        e.stopPropagation()\\n        onOk()\\n      },\\n    },\\n    onCancel: () => {\\n      onHide()\\n    },\\n    afterClose: () => {\\n      onHide()\\n    },\\n  })\\n\\n  /** \u7f13\u5b58modal\u5b9e\u4f8b */\\n  ModalCache.modal = modal\\n\\n  /** showModal \u8fd4\u56de\u4e00\u4e2aPromise\uff0c\u7528\u4e8eawait */\\n  return defer.promise\\n}\\n\\n// const createContainer = () => {\\n//   const div = document.createElement(\'div\')\\n//   div.classList.add(\'xflow-modal-container\')\\n//   window.document.body.append(div)\\n//   return {\\n//     element: div,\\n//     destory: () => {\\n//       window.document.body.removeChild(div)\\n//     },\\n//   }\\n// }");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/flow/demos/basic/config-ctx-service.ts?dumi-raw-code\n/* harmony default export */ var config_ctx_servicedumi_raw_code = ("import type { IModelService } from \'@antv/xflow\'\\nimport { createModelServiceConfig, Disposable } from \'@antv/xflow\'\\n\\nexport namespace NS_LOADING_STATE {\\n  export const id = \'test\'\\n  export interface IState {\\n    loading: boolean\\n  }\\n}\\n\\nexport const useModelServiceConfig = createModelServiceConfig(config => {\\n  config.registerModel(registry => {\\n    return registry.registerModel({\\n      id: NS_LOADING_STATE.id,\\n      getInitialValue: () => ({\\n        loading: true,\\n      }),\\n      watchChange: async self => {\\n        return Disposable.create(() => {})\\n      },\\n    })\\n  })\\n})\\n\\nexport const useLoadingState = async (modelService: IModelService) => {\\n  const ctx = await modelService.awaitModel<NS_LOADING_STATE.IState>(NS_LOADING_STATE.id)\\n  return ctx.getValidValue()\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/flow/demos/basic/config-menu.ts?dumi-raw-code\n/* harmony default export */ var basic_config_menudumi_raw_code = ("import type { NsNodeCmd, NsEdgeCmd, IMenuOptions, NsGraph } from \'@antv/xflow\'\\nimport type { NsRenameNodeCmd } from \'./cmd-extensions/cmd-rename-node-modal\'\\nimport { createCtxMenuConfig, MenuItemType } from \'@antv/xflow\'\\nimport { IconStore, XFlowNodeCommands, XFlowEdgeCommands } from \'@antv/xflow\'\\nimport { DeleteOutlined, EditOutlined, StopOutlined } from \'@ant-design/icons\'\\nimport { CustomCommands } from \'./cmd-extensions/constants\'\\nimport { MockApi } from \'./service\'\\n\\n/** menuitem \u914d\u7f6e */\\nexport namespace NsMenuItemConfig {\\n  /** \u6ce8\u518c\u83dc\u5355\u4f9d\u8d56\u7684icon */\\n  IconStore.set(\'DeleteOutlined\', DeleteOutlined)\\n  IconStore.set(\'EditOutlined\', EditOutlined)\\n  IconStore.set(\'StopOutlined\', StopOutlined)\\n\\n  export const DELETE_EDGE: IMenuOptions = {\\n    id: XFlowEdgeCommands.DEL_EDGE.id,\\n    label: \'\u5220\u9664\u8fb9\',\\n    iconName: \'DeleteOutlined\',\\n    onClick: async ({ target, commandService }) => {\\n      commandService.executeCommand<NsEdgeCmd.DelEdge.IArgs>(XFlowEdgeCommands.DEL_EDGE.id, {\\n        edgeConfig: target.data as NsGraph.IEdgeConfig,\\n      })\\n    },\\n  }\\n\\n  export const DELETE_NODE: IMenuOptions = {\\n    id: XFlowNodeCommands.DEL_NODE.id,\\n    label: \'\u5220\u9664\u8282\u70b9\',\\n    iconName: \'DeleteOutlined\',\\n    onClick: async ({ target, commandService }) => {\\n      commandService.executeCommand<NsNodeCmd.DelNode.IArgs>(XFlowNodeCommands.DEL_NODE.id, {\\n        nodeConfig: { id: target.data.id },\\n      })\\n    },\\n  }\\n\\n  export const EMPTY_MENU: IMenuOptions = {\\n    id: \'EMPTY_MENU_ITEM\',\\n    label: \'\u6682\u65e0\u53ef\u7528\',\\n    isEnabled: false,\\n    iconName: \'DeleteOutlined\',\\n  }\\n\\n  export const RENAME_NODE: IMenuOptions = {\\n    id: CustomCommands.SHOW_RENAME_MODAL.id,\\n    label: \'\\u001d\u91cd\u547d\u540d\',\\n    isVisible: true,\\n    iconName: \'EditOutlined\',\\n    onClick: async ({ target, commandService }) => {\\n      const nodeConfig = target.data as NsGraph.INodeConfig\\n      commandService.executeCommand<NsRenameNodeCmd.IArgs>(CustomCommands.SHOW_RENAME_MODAL.id, {\\n        nodeConfig,\\n        updateNodeNameService: MockApi.renameNode,\\n      })\\n    },\\n  }\\n\\n  export const SEPARATOR: IMenuOptions = {\\n    id: \'separator\',\\n    type: MenuItemType.Separator,\\n  }\\n}\\n\\nexport const useMenuConfig = createCtxMenuConfig(config => {\\n  config.setMenuModelService(async (target, model, modelService, toDispose) => {\\n    const { type, cell } = target\\n    console.log(type)\\n    switch (type) {\\n      /** \u8282\u70b9\u83dc\u5355 */\\n      case \'node\':\\n        model.setValue({\\n          id: \'root\',\\n          type: MenuItemType.Root,\\n          submenu: [NsMenuItemConfig.DELETE_NODE, NsMenuItemConfig.RENAME_NODE],\\n        })\\n        break\\n      /** \u8fb9\u83dc\u5355 */\\n      case \'edge\':\\n        model.setValue({\\n          id: \'root\',\\n          type: MenuItemType.Root,\\n          submenu: [NsMenuItemConfig.DELETE_EDGE],\\n        })\\n        break\\n      /** \u753b\u5e03\u83dc\u5355 */\\n      case \'blank\':\\n        model.setValue({\\n          id: \'root\',\\n          type: MenuItemType.Root,\\n          submenu: [NsMenuItemConfig.EMPTY_MENU],\\n        })\\n        break\\n      /** \u9ed8\u8ba4\u83dc\u5355 */\\n      default:\\n        model.setValue({\\n          id: \'root\',\\n          type: MenuItemType.Root,\\n          submenu: [NsMenuItemConfig.EMPTY_MENU],\\n        })\\n        break\\n    }\\n  })\\n})");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/flow/demos/basic/config-toolbar.ts?dumi-raw-code\n/* harmony default export */ var basic_config_toolbardumi_raw_code = ("import type { IToolbarGroupOptions } from \'@antv/xflow\'\\nimport { IconStore, createToolbarConfig } from \'@antv/xflow\'\\nimport { SaveOutlined, ClearOutlined } from \'@ant-design/icons\'\\nimport { CustomCommands } from \'./cmd-extensions/constants\'\\n\\nnamespace NSToolbarConfig {\\n  IconStore.set(\'SaveOutlined\', SaveOutlined)\\n  IconStore.set(\'ClearOutlined\', ClearOutlined)\\n  export const getMenuOptions = async () => {\\n    const options: IToolbarGroupOptions[] = [\\n      {\\n        name: \'firstGroup\',\\n        items: [\\n          {\\n            iconName: \'ClearOutlined\',\\n            id: CustomCommands.CLEAR_GRAPH.id,\\n            text: CustomCommands.CLEAR_GRAPH.label,\\n            onClick: ({ commandService }) => {\\n              commandService.executeCommand(CustomCommands.CLEAR_GRAPH.id, {})\\n            },\\n          },\\n          {\\n            iconName: \'SaveOutlined\',\\n            id: CustomCommands.EXPORT_GRAPH.id,\\n            text: CustomCommands.EXPORT_GRAPH.label,\\n            onClick: ({ commandService }) => {\\n              commandService.executeCommand(CustomCommands.EXPORT_GRAPH.id, {})\\n            },\\n          },\\n        ],\\n      },\\n    ]\\n    return options\\n  }\\n}\\n\\nexport const useToolbarConfig = createToolbarConfig(toolbarConfig => {\\n  /** \u751f\u4ea7 toolbar item */\\n  toolbarConfig.setToolbarModelService(async toolbarModel => {\\n    const updateToolbarModel = async () => {\\n      const toolbarItems = await NSToolbarConfig.getMenuOptions()\\n      toolbarModel.setValue(toolbar => {\\n        toolbar.mainGroups = toolbarItems\\n      })\\n    }\\n    updateToolbarModel()\\n  })\\n})");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/flow/demos/basic/config-keybinding.ts?dumi-raw-code\n/* harmony default export */ var basic_config_keybindingdumi_raw_code = ("import type { NsNodeCmd, NsGraphCmd, NsEdgeCmd } from \'@antv/xflow\'\\nimport {\\n  createKeybindingConfig,\\n  XFlowNodeCommands,\\n  XFlowEdgeCommands,\\n  XFlowGraphCommands,\\n  MODELS,\\n} from \'@antv/xflow\'\\n\\nexport const useKeybindingConfig = createKeybindingConfig(config => {\\n  // delete\\n  config.setKeybindingFunc(regsitry => {\\n    return regsitry.registerKeybinding([\\n      {\\n        id: \'delete node or edge\',\\n        keybinding: \'backspace\',\\n        callback: async function (item, modelService, cmd, e) {\\n          const cells = await MODELS.SELECTED_CELLS.useValue(modelService)\\n          cells.map(cell => {\\n            if (cell.isNode()) {\\n              return cmd.executeCommand<NsNodeCmd.DelNode.IArgs>(XFlowNodeCommands.DEL_NODE.id, {\\n                nodeConfig: {\\n                  ...cell.getData(),\\n                  id: cell.id,\\n                },\\n              })\\n            }\\n            if (cell.isEdge()) {\\n              return cmd.executeCommand<NsEdgeCmd.DelEdge.IArgs>(XFlowEdgeCommands.DEL_EDGE.id, {\\n                edgeConfig: { ...cell.getData(), id: cell.id },\\n              })\\n            }\\n          })\\n        },\\n      },\\n      {\\n        id: \'copy\',\\n        keybinding: [\'command+c\', \'ctrl+c\'],\\n        callback: async function (item, modelService, cmd, e) {\\n          e.preventDefault()\\n          console.log(item)\\n          cmd.executeCommand<NsGraphCmd.GraphCopySelection.IArgs>(\\n            XFlowGraphCommands.GRAPH_COPY.id,\\n            {},\\n          )\\n        },\\n      },\\n      {\\n        id: \'paste\',\\n        keybinding: [\'command+v\', \'ctrl+v\'],\\n        callback: async function (item, ctx, cmd, e) {\\n          e.preventDefault()\\n          cmd.executeCommand<NsGraphCmd.GraphPasteSelection.IArgs>(\\n            XFlowGraphCommands.GRAPH_PASTE.id,\\n            {},\\n          )\\n        },\\n      },\\n      {\\n        id: \'undo\',\\n        keybinding: [\'meta+z\', \'ctrl+z\'],\\n        callback: async function (item, ctx, cmd, e) {\\n          e.preventDefault()\\n          cmd.executeCommand<NsGraphCmd.GraphHistoryUndo.IArgs>(\\n            XFlowGraphCommands.GRAPH_HISTORY_UNDO.id,\\n            {},\\n          )\\n        },\\n      },\\n      {\\n        id: \'redo\',\\n        keybinding: [\'meta+shift+z\', \'ctrl+shift+z\'],\\n        callback: async function (item, ctx, cmd, e) {\\n          e.preventDefault()\\n          cmd.executeCommand<NsGraphCmd.GraphHistoryRedo.IArgs>(\\n            XFlowGraphCommands.GRAPH_HISTORY_REDO.id,\\n            {},\\n          )\\n        },\\n      },\\n    ])\\n  })\\n})");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/flow/demos/basic/config-dnd-panel.tsx?dumi-raw-code\n/* harmony default export */ var basic_config_dnd_paneldumi_raw_code = ("import { uuidv4 } from \'@antv/xflow\'\\nimport { XFlowNodeCommands } from \'@antv/xflow\'\\nimport { DND_RENDER_ID } from \'./constant\'\\nimport type { NsNodeCmd } from \'@antv/xflow\'\\nimport type { NsNodeTreePanel } from \'@antv/xflow\'\\n\\nexport const onNodeDrop: NsNodeTreePanel.IOnNodeDrop = async (node, commands, contextService) => {\\n  const args: NsNodeCmd.AddNode.IArgs = {\\n    nodeConfig: { ...node, id: uuidv4() },\\n  }\\n  commands.executeCommand(XFlowNodeCommands.ADD_NODE.id, args)\\n}\\n\\nexport const treeDataService: NsNodeTreePanel.ITreeDataService = async (meta, contextService) => {\\n  return [\\n    {\\n      id: \'1\',\\n      label: \'\u6d41\u7a0b1\',\\n      des: \'\u6d41\u7a0b1\u7684\u63cf\u8ff0\',\\n      parentId: \'\',\\n      renderKey: DND_RENDER_ID,\\n      popoverContent: <div> \u6d41\u7a0b1\u7684\u8be6\u7ec6\u8bf4\u660e </div>,\\n    },\\n    {\\n      id: \'2\',\\n      label: \'\u6d41\u7a0b2\',\\n      des: \'\u6d41\u7a0b2\u7684\u63cf\u8ff0\',\\n      parentId: \'\',\\n      renderKey: DND_RENDER_ID,\\n      popoverContent: <div> \u6d41\u7a0b2\u7684\u8be6\u7ec6\u8bf4\u660e </div>,\\n    },\\n    {\\n      id: \'3\',\\n      label: \'\u6d41\u7a0b3\',\\n      des: \'\u6d41\u7a0b3\u7684\u63cf\u8ff0\',\\n      parentId: \'\',\\n      renderKey: DND_RENDER_ID,\\n      popoverContent: <div> \u6d41\u7a0b3\u7684\u8be6\u7ec6\u8bf4\u660e </div>,\\n    },\\n    {\\n      id: \'4\',\\n      label: \'\u6d41\u7a0b4\',\\n      des: \'\u6d41\u7a0b4\u7684\u63cf\u8ff0\',\\n      parentId: \'\',\\n      renderKey: DND_RENDER_ID,\\n      popoverContent: <div> \u6d41\u7a0b4\u7684\u8be6\u7ec6\u8bf4\u660e </div>,\\n    },\\n  ]\\n}\\n\\nexport const searchService: NsNodeTreePanel.ISearchService = async (\\n  treeNodeList: NsNodeTreePanel.ITreeNode[] = [],\\n  keyword: string,\\n) => {\\n  const list = treeNodeList.filter(i => i.isDirectory || i.label.includes(keyword))\\n  console.log(list, keyword, treeNodeList)\\n  return list\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/flow/demos/basic/config-form.tsx?dumi-raw-code\n/* harmony default export */ var basic_config_formdumi_raw_code = ("import type { NsJsonSchemaForm } from \'@antv/xflow\'\\nimport { controlMapService, ControlShapeEnum } from \'./form-controls\'\\nimport { MODELS } from \'@antv/xflow\'\\n\\nexport function delay(ms: number) {\\n  return new Promise(resolve => setTimeout(() => resolve(true), ms))\\n}\\n\\nlet i = 0\\nexport const formSchemaService: NsJsonSchemaForm.IFormSchemaService = async args => {\\n  const { targetData, modelService, targetType } = args\\n  /** \u53ef\u4ee5\u4f7f\u7528\u83b7\u53d6 graphMeta */\\n  const graphMeta = await MODELS.GRAPH_META.useValue(modelService)\\n  console.log(\'formSchemaService\', graphMeta, args)\\n\\n  if (targetType === \'canvas\') {\\n    return {\\n      tabs: [\\n        {\\n          name: \'GraphMeta\',\\n          groups: [],\\n        },\\n      ],\\n    }\\n  }\\n\\n  const nodeSchema: NsJsonSchemaForm.ISchema = {\\n    tabs: [\\n      {\\n        name: \'Tab1\',\\n        groups: [\\n          {\\n            name: \'groupName\',\\n            controls: [\\n              {\\n                label: \'GraphEditor\',\\n                name: \'Tab1-0\',\\n                /** \u4f7f\u7528\u81ea\u5b9a\u4e49shape */\\n                shape: ControlShapeEnum.EDITOR,\\n                disabled: false,\\n                required: true,\\n                tooltip: \'hello world\',\\n                placeholder: \'please write something\',\\n                value: \'\',\\n                defaultValue: \'\', // \u53ef\u4ee5\u8ba4\u4e3a\u662f\u9ed8\u8ba4\u503c\\n                hidden: false,\\n                options: [{ title: \'\', value: \'\' }],\\n                originData: {}, // \u539f\u59cb\u6570\u636e\\n              },\\n              {\\n                label: \'Link\',\\n                name: \'Tab1-1\',\\n                /** \u4f7f\u7528\u81ea\u5b9a\u4e49shape */\\n                shape: ControlShapeEnum.LINKSHAPE,\\n                disabled: false,\\n                required: true,\\n                tooltip: \'hello world\',\\n                extra: \'hello world extra\',\\n                placeholder: \'please write something\',\\n                value: \'\',\\n                defaultValue: \'\', // \u53ef\u4ee5\u8ba4\u4e3a\u662f\u9ed8\u8ba4\u503c\\n                hidden: false,\\n                options: [{ title: \'\', value: \'\' }],\\n                originData: {}, // \u539f\u59cb\u6570\u636e\\n              },\\n              {\\n                label: \'Tab1-2\',\\n                name: \'Tab1-2\', // \u4e5f\u53ef\u4ee5\u662f\u6570\u7ec4\\n                shape: \'Input\',\\n                disabled: false,\\n                required: true,\\n                tooltip: \'hello world\',\\n                extra: \'hello world extra\',\\n                placeholder: \'please write something\',\\n                value: \'\',\\n                defaultValue: \'\', // \u53ef\u4ee5\u8ba4\u4e3a\u662f\u9ed8\u8ba4\u503c\\n\\n                hidden: false,\\n                options: [{ title: \'\', value: \'\' }],\\n                originData: {}, // \u539f\u59cb\u6570\u636e\\n              },\\n              {\\n                label: \'Tab1-3\',\\n                name: \'Tab1-3\', // \u4e5f\u53ef\u4ee5\u662f\u6570\u7ec4\\n                shape: \'Input\',\\n                disabled: false,\\n                required: true,\\n                tooltip: \'hello world\',\\n                extra: \'hello world extra\',\\n                placeholder: \'please write something\',\\n                value: \'\',\\n                defaultValue: \'\', // \u53ef\u4ee5\u8ba4\u4e3a\u662f\u9ed8\u8ba4\u503c\\n\\n                hidden: false,\\n                options: [{ title: \'\', value: \'\' }],\\n                originData: {}, // \u539f\u59cb\u6570\u636e\\n              },\\n              {\\n                label: \'Tab1-4\',\\n                name: \'Tab1-4\', // \u4e5f\u53ef\u4ee5\u662f\u6570\u7ec4\\n                shape: \'Input\',\\n                disabled: false,\\n                required: true,\\n                tooltip: \'hello world\',\\n                extra: \'hello world extra\',\\n                placeholder: \'please write something\',\\n                value: \'\',\\n                defaultValue: \'\', // \u53ef\u4ee5\u8ba4\u4e3a\u662f\u9ed8\u8ba4\u503c\\n\\n                hidden: false,\\n                options: [{ title: \'\', value: \'\' }],\\n                originData: {}, // \u539f\u59cb\u6570\u636e\\n              },\\n            ],\\n          },\\n        ],\\n      },\\n      {\\n        name: \'Tab2\',\\n        groups: [\\n          {\\n            name: \'groupName\',\\n            controls: [\\n              {\\n                name: \'Tab2-1\', // \u4e5f\u53ef\u4ee5\u662f\u6570\u7ec4\\n                label: \'Tab2-1\',\\n                shape: \'Input\',\\n                disabled: false,\\n                required: true,\\n                tooltip: \'hello world\',\\n                extra: \'hello world extra\',\\n                placeholder: \'please write something\',\\n                value: \'\',\\n                defaultValue: \'\', // \u53ef\u4ee5\u8ba4\u4e3a\u662f\u9ed8\u8ba4\u503c\\n\\n                hidden: false,\\n                options: [{ title: \'\', value: \'\' }],\\n                originData: {}, // \u539f\u59cb\u6570\u636e\\n              },\\n              {\\n                label: \'Tab2-2\',\\n                name: \'Tab2-2\', // \u4e5f\u53ef\u4ee5\u662f\u6570\u7ec4\\n                shape: \'Input\',\\n                disabled: false,\\n                required: true,\\n                tooltip: \'hello world\',\\n                extra: \'hello world extra\',\\n                placeholder: \'please write something\',\\n                value: \'\',\\n                defaultValue: \'\', // \u53ef\u4ee5\u8ba4\u4e3a\u662f\u9ed8\u8ba4\u503c\\n\\n                hidden: false,\\n                options: [{ title: \'\', value: \'\' }],\\n                originData: {}, // \u539f\u59cb\u6570\u636e\\n              },\\n              {\\n                label: \'Tab2-3\',\\n                name: \'Tab2-3\', // \u4e5f\u53ef\u4ee5\u662f\u6570\u7ec4\\n                shape: \'Input\',\\n                disabled: false,\\n                required: true,\\n                tooltip: \'hello world\',\\n                extra: \'hello world extra\',\\n                placeholder: \'please write something\',\\n                value: \'\',\\n                defaultValue: \'\', // \u53ef\u4ee5\u8ba4\u4e3a\u662f\u9ed8\u8ba4\u503c\\n                hidden: false,\\n                options: [{ title: \'\', value: \'\' }],\\n                originData: {}, // \u539f\u59cb\u6570\u636e\\n              },\\n            ],\\n          },\\n        ],\\n      },\\n    ],\\n  }\\n\\n  await delay(100)\\n  if (targetData && i === 0) {\\n    i = 1\\n    return nodeSchema\\n  }\\n\\n  if (targetData) {\\n    i = 0\\n    return {\\n      tabs: [\\n        {\\n          name: \'Tab3\',\\n          groups: [],\\n        },\\n      ],\\n    }\\n  }\\n\\n  if (targetData) {\\n    return nodeSchema\\n  }\\n\\n  return {\\n    tabs: [],\\n  }\\n}\\n\\nexport const formValueUpdateService: NsJsonSchemaForm.IFormValueUpdateService = async args => {\\n  console.log(\'formValueUpdateService\', args)\\n}\\n\\nexport { controlMapService }");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/flow/demos/basic/form-controls/index.tsx?dumi-raw-code\n/* harmony default export */ var basic_form_controlsdumi_raw_code = ("import type { NsJsonSchemaForm } from \'@antv/xflow\'\\nimport { EditorShape } from \'./custom-editor\'\\nimport { LinkShape } from \'./link\'\\n\\n/** \u81ea\u5b9a\u4e49form\u63a7\u4ef6 */\\nexport enum ControlShapeEnum {\\n  \'EDITOR\' = \'EDITOR\',\\n  \'LINKSHAPE\' = \'LINKSHAPE\',\\n}\\n\\nexport const controlMapService: NsJsonSchemaForm.IControlMapService = controlMap => {\\n  controlMap.set(ControlShapeEnum.EDITOR, EditorShape)\\n  controlMap.set(ControlShapeEnum.LINKSHAPE, LinkShape)\\n  return controlMap\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/flow/demos/basic/form-controls/custom-editor.tsx?dumi-raw-code\n/* harmony default export */ var basic_form_controls_custom_editordumi_raw_code = ("import React from \'react\'\\nimport { Form, Input } from \'antd\'\\nimport { XFlowGraphCommands, FormItemWrapper, usePanelContext, MODELS } from \'@antv/xflow\'\\nimport type { NsGraphCmd, NsJsonSchemaForm } from \'@antv/xflow\'\\n\\nexport const EditorShape: React.FC<NsJsonSchemaForm.IControlProps> = props => {\\n  const { controlSchema } = props\\n  const { required, tooltip, extra, name, label, placeholder } = controlSchema\\n\\n  return (\\n    <FormItemWrapper schema={controlSchema}>\\n      {({ disabled, hidden, initialValue }) => {\\n        return (\\n          <Form.Item\\n            name={name}\\n            label={label}\\n            initialValue={initialValue}\\n            tooltip={tooltip}\\n            extra={extra}\\n            required={required}\\n            hidden={hidden}\\n          >\\n            {/* \u8fd9\u91cc\u7684\u7ec4\u4ef6\u53ef\u4ee5\u62ff\u5230onChange\u548cvalue */}\\n            <Editor controlSchema={controlSchema} placeholder={placeholder} disabled={disabled} />\\n          </Form.Item>\\n        )\\n      }}\\n    </FormItemWrapper>\\n  )\\n}\\n\\ninterface IEditorProps extends NsJsonSchemaForm.IFormItemProps {\\n  controlSchema: NsJsonSchemaForm.IControlSchema\\n  placeholder?: string\\n  disabled: boolean\\n}\\n\\nconst Editor: React.FC<IEditorProps> = props => {\\n  const { placeholder, disabled, onChange, value } = props\\n  const { commandService, modelService } = usePanelContext()\\n  React.useEffect(() => {\\n    commandService.executeCommand(XFlowGraphCommands.SAVE_GRAPH_DATA.id, {\\n      saveGraphDataService: async (meta, graph) => {\\n        /** \u5f53\u524d\u9009\u4e2d\u8282\u70b9\u6570\u636e */\\n        const nodes = await MODELS.SELECTED_NODES.useValue(modelService)\\n        console.log(nodes)\\n        /** \u62ff\u5230\u6570\u636e\uff0c\u89e6\u53d1onChange*/\\n        onChange(JSON.stringify(graph))\\n        return { err: null, data: graph, meta }\\n      },\\n    } as NsGraphCmd.SaveGraphData.IArgs)\\n  })\\n\\n  return <Input.TextArea value={value} placeholder={placeholder} disabled={disabled} rows={10} />\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/flow/demos/basic/form-controls/link.tsx?dumi-raw-code\n/* harmony default export */ var form_controls_linkdumi_raw_code = ("import type { NsJsonSchemaForm } from \'@antv/xflow\'\\nimport React from \'react\'\\n\\nexport const LinkShape: React.FC<NsJsonSchemaForm.IControlProps> = props => {\\n  const { controlSchema } = props\\n  return (\\n    <div style={{ padding: \'8px 0px\', marginBottom: \'8px\' }}>\\n      <a href={controlSchema.value as string} target=\\"_blank\\">\\n        {controlSchema.label}\\n      </a>\\n    </div>\\n  )\\n}");\n// CONCATENATED MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./docs/tutorial/solutions/flow/demos/basic/index.less?dumi-raw-code\n/* harmony default export */ var solutions_flow_demos_basicdumi_raw_code = (" \\n@body-bg: #f9f9f9;\\n@primaryColor: #1890ff;\\n@light-border: 1px solid #d9d9d9;\\n\\n.user-custom-clz {\\n  position: relative;\\n  height: 600px;\\n  border: @light-border;\\n  .xflow-x6-canvas {\\n    background: @body-bg;\\n  }\\n\\n  .xflow-node-dnd-panel-node-wrapper {\\n    .xflow-dnd-node {\\n      width: 190px;\\n    }\\n  }\\n\\n  .xflow-canvas-dnd-node-tree {\\n    border-right: @light-border;\\n  }\\n\\n  .xflow-workspace-toolbar-top {\\n    border-bottom: @light-border;\\n  }\\n\\n  .xflow-workspace-toolbar-bottom {\\n    text-align: center;\\n    background: #fff;\\n    border-top: @light-border;\\n  }\\n}\\n\\n.xflow-modal-container {\\n  position: fixed;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n  z-index: 1000;\\n}");\n// CONCATENATED MODULE: ./src/.umi-production/dumi/demos/index.ts\n\n\n// @ts-nocheck\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* harmony default export */ var demos = __webpack_exports__["default"] = ({\n  \'edge-add-demos\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee() {\n          return regenerator_default.a.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "Zu1w"));\n\n                case 2:\n                  return _context.abrupt("return", _context.sent.default);\n\n                case 3:\n                case "end":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        function loader() {\n          return _loader.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": demosdumi_raw_code\n        },\n        "form.tsx": {\n          "import": "./form",\n          "content": formdumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": edge_add_demosdumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": "^16.8.0  || ^17.0.0"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "^4.6.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "antd": {\n          "version": "^4.6.3",\n          "css": "antd/dist/antd.css"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "react-dom": {\n          "version": "^16.8.0  || ^17.0.0"\n        }\n      },\n      "className": ["cmd-demo"],\n      "identifier": "edge-add-demos"\n    }\n  },\n  \'edge-back-demos\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader2 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee2() {\n          return regenerator_default.a.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "pkTF"));\n\n                case 2:\n                  return _context2.abrupt("return", _context2.sent.default);\n\n                case 3:\n                case "end":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        function loader() {\n          return _loader2.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": edge_back_demosdumi_raw_code\n        },\n        "form.tsx": {\n          "import": "./form",\n          "content": demos_formdumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": edges_edge_back_demosdumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": "^16.8.0  || ^17.0.0"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "^4.6.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "antd": {\n          "version": "^4.6.3",\n          "css": "antd/dist/antd.css"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "react-dom": {\n          "version": "^16.8.0  || ^17.0.0"\n        }\n      },\n      "className": ["cmd-demo"],\n      "identifier": "edge-back-demos"\n    }\n  },\n  \'edge-delete-demos\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader3 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee3() {\n          return regenerator_default.a.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "hoiL"));\n\n                case 2:\n                  return _context3.abrupt("return", _context3.sent.default);\n\n                case 3:\n                case "end":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        function loader() {\n          return _loader3.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": edge_delete_demosdumi_raw_code\n        },\n        "form.tsx": {\n          "import": "./form",\n          "content": edge_delete_demos_formdumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": edges_edge_delete_demosdumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": "^16.8.0  || ^17.0.0"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "^4.6.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "antd": {\n          "version": "^4.6.3",\n          "css": "antd/dist/antd.css"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "react-dom": {\n          "version": "^16.8.0  || ^17.0.0"\n        }\n      },\n      "className": ["cmd-demo"],\n      "identifier": "edge-delete-demos"\n    }\n  },\n  \'edge-front-demos\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader4 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee4() {\n          return regenerator_default.a.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "PzLw"));\n\n                case 2:\n                  return _context4.abrupt("return", _context4.sent.default);\n\n                case 3:\n                case "end":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        }));\n\n        function loader() {\n          return _loader4.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": edge_front_demosdumi_raw_code\n        },\n        "form.tsx": {\n          "import": "./form",\n          "content": edge_front_demos_formdumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": edges_edge_front_demosdumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": "^16.8.0  || ^17.0.0"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "^4.6.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "antd": {\n          "version": "^4.6.3",\n          "css": "antd/dist/antd.css"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "react-dom": {\n          "version": "^16.8.0  || ^17.0.0"\n        }\n      },\n      "className": ["cmd-demo"],\n      "identifier": "edge-front-demos"\n    }\n  },\n  \'edge-highlight-demos\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader5 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee5() {\n          return regenerator_default.a.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  _context5.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "W4te"));\n\n                case 2:\n                  return _context5.abrupt("return", _context5.sent.default);\n\n                case 3:\n                case "end":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5);\n        }));\n\n        function loader() {\n          return _loader5.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": edge_highlight_demosdumi_raw_code\n        },\n        "form.tsx": {\n          "import": "./form",\n          "content": edge_highlight_demos_formdumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": edges_edge_highlight_demosdumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": "^16.8.0  || ^17.0.0"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "^4.6.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "antd": {\n          "version": "^4.6.3",\n          "css": "antd/dist/antd.css"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "react-dom": {\n          "version": "^16.8.0  || ^17.0.0"\n        }\n      },\n      "className": ["cmd-demo"],\n      "identifier": "edge-highlight-demos"\n    }\n  },\n  \'edge-update-demos\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader6 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee6() {\n          return regenerator_default.a.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  _context6.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "KU79"));\n\n                case 2:\n                  return _context6.abrupt("return", _context6.sent.default);\n\n                case 3:\n                case "end":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6);\n        }));\n\n        function loader() {\n          return _loader6.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": edge_update_demosdumi_raw_code\n        },\n        "form.tsx": {\n          "import": "./form",\n          "content": edge_update_demos_formdumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": edges_edge_update_demosdumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": "^16.8.0  || ^17.0.0"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "^4.6.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "antd": {\n          "version": "^4.6.3",\n          "css": "antd/dist/antd.css"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "react-dom": {\n          "version": "^16.8.0  || ^17.0.0"\n        }\n      },\n      "className": ["cmd-demo"],\n      "identifier": "edge-update-demos"\n    }\n  },\n  \'graph-layout-demos\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader7 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee7() {\n          return regenerator_default.a.wrap(function _callee7$(_context7) {\n            while (1) {\n              switch (_context7.prev = _context7.next) {\n                case 0:\n                  _context7.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "suys"));\n\n                case 2:\n                  return _context7.abrupt("return", _context7.sent.default);\n\n                case 3:\n                case "end":\n                  return _context7.stop();\n              }\n            }\n          }, _callee7);\n        }));\n\n        function loader() {\n          return _loader7.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": graph_layout_demosdumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": graph_graph_layout_demosdumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": "^16.8.0  || ^17.0.0"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "^4.6.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "antd": {\n          "version": "^4.6.3",\n          "css": "antd/dist/antd.css"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "react-dom": {\n          "version": "^16.8.0  || ^17.0.0"\n        }\n      },\n      "identifier": "graph-layout-demos"\n    }\n  },\n  \'graph-render-demos\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader8 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee8() {\n          return regenerator_default.a.wrap(function _callee8$(_context8) {\n            while (1) {\n              switch (_context8.prev = _context8.next) {\n                case 0:\n                  _context8.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "fLTG"));\n\n                case 2:\n                  return _context8.abrupt("return", _context8.sent.default);\n\n                case 3:\n                case "end":\n                  return _context8.stop();\n              }\n            }\n          }, _callee8);\n        }));\n\n        function loader() {\n          return _loader8.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": graph_render_demosdumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": graph_graph_render_demosdumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": "^16.8.0  || ^17.0.0"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "^4.6.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "antd": {\n          "version": "^4.6.3",\n          "css": "antd/dist/antd.css"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "react-dom": {\n          "version": "^16.8.0  || ^17.0.0"\n        }\n      },\n      "identifier": "graph-render-demos"\n    }\n  },\n  \'group-add-basic\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader9 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee9() {\n          return regenerator_default.a.wrap(function _callee9$(_context9) {\n            while (1) {\n              switch (_context9.prev = _context9.next) {\n                case 0:\n                  _context9.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "DiY4"));\n\n                case 2:\n                  return _context9.abrupt("return", _context9.sent.default);\n\n                case 3:\n                case "end":\n                  return _context9.stop();\n              }\n            }\n          }, _callee9);\n        }));\n\n        function loader() {\n          return _loader9.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": basicdumi_raw_code\n        },\n        "form.tsx": {\n          "import": "./form",\n          "content": basic_formdumi_raw_code\n        },\n        "constant.ts": {\n          "import": "./constant",\n          "content": constantdumi_raw_code\n        },\n        "config-graph.tsx": {\n          "import": "./config-graph",\n          "content": config_graphdumi_raw_code\n        },\n        "react-node/index.tsx": {\n          "import": "./react-node",\n          "content": react_nodedumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": group_add_basicdumi_raw_code\n        },\n        "react-group-node/index.tsx": {\n          "import": "./react-group-node",\n          "content": react_group_nodedumi_raw_code\n        },\n        "mock.ts": {\n          "import": "./mock",\n          "content": mockdumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": "^16.8.0  || ^17.0.0"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "^4.6.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "antd": {\n          "version": "^4.6.3",\n          "css": "antd/dist/antd.css"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "react-dom": {\n          "version": "^16.8.0  || ^17.0.0"\n        }\n      },\n      "title": "\u57fa\u7840\u4f7f\u7528",\n      "className": ["add-group-demo"],\n      "description": "<div class=\\"markdown\\"><p>\u628a\u8282\u70b9\u548c\u8fb9\u7ec4\u5408\u6210\u7fa4\u7ec4 <br /></p></div>",\n      "identifier": "group-add-basic"\n    }\n  },\n  \'group-collapse-basic\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader10 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee10() {\n          return regenerator_default.a.wrap(function _callee10$(_context10) {\n            while (1) {\n              switch (_context10.prev = _context10.next) {\n                case 0:\n                  _context10.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "6cNV"));\n\n                case 2:\n                  return _context10.abrupt("return", _context10.sent.default);\n\n                case 3:\n                case "end":\n                  return _context10.stop();\n              }\n            }\n          }, _callee10);\n        }));\n\n        function loader() {\n          return _loader10.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": group_collapse_basicdumi_raw_code\n        },\n        "form.tsx": {\n          "import": "./form",\n          "content": group_collapse_basic_formdumi_raw_code\n        },\n        "config-graph.tsx": {\n          "import": "./config-graph",\n          "content": basic_config_graphdumi_raw_code\n        },\n        "constant.ts": {\n          "import": "./constant",\n          "content": basic_constantdumi_raw_code\n        },\n        "react-node/index.tsx": {\n          "import": "./react-node",\n          "content": basic_react_nodedumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": group_group_collapse_basicdumi_raw_code\n        },\n        "react-group-node/index.tsx": {\n          "import": "./react-group-node",\n          "content": basic_react_group_nodedumi_raw_code\n        },\n        "mock.ts": {\n          "import": "./mock",\n          "content": basic_mockdumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": "^16.8.0  || ^17.0.0"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "^4.6.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "antd": {\n          "version": "^4.6.3",\n          "css": "antd/dist/antd.css"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "react-dom": {\n          "version": "^16.8.0  || ^17.0.0"\n        }\n      },\n      "title": "\u57fa\u7840\u4f7f\u7528",\n      "className": ["add-group-demo"],\n      "description": "<div class=\\"markdown\\"><p>\u6298\u53e0\u6307\u5b9a\u7684\u7fa4\u7ec4</p></div>",\n      "identifier": "group-collapse-basic"\n    }\n  },\n  \'group-del-demos\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader11 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee11() {\n          return regenerator_default.a.wrap(function _callee11$(_context11) {\n            while (1) {\n              switch (_context11.prev = _context11.next) {\n                case 0:\n                  _context11.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "XVLT"));\n\n                case 2:\n                  return _context11.abrupt("return", _context11.sent.default);\n\n                case 3:\n                case "end":\n                  return _context11.stop();\n              }\n            }\n          }, _callee11);\n        }));\n\n        function loader() {\n          return _loader11.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": group_del_demosdumi_raw_code\n        },\n        "form.tsx": {\n          "import": "./form",\n          "content": group_del_demos_formdumi_raw_code\n        },\n        "config-graph.tsx": {\n          "import": "./config-graph",\n          "content": demos_config_graphdumi_raw_code\n        },\n        "constant.ts": {\n          "import": "./constant",\n          "content": demos_constantdumi_raw_code\n        },\n        "react-node/index.tsx": {\n          "import": "./react-node",\n          "content": demos_react_nodedumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": group_group_del_demosdumi_raw_code\n        },\n        "react-group-node/index.tsx": {\n          "import": "./react-group-node",\n          "content": demos_react_group_nodedumi_raw_code\n        },\n        "mock.ts": {\n          "import": "./mock",\n          "content": demos_mockdumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": "^16.8.0  || ^17.0.0"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "^4.6.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "antd": {\n          "version": "^4.6.3",\n          "css": "antd/dist/antd.css"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "react-dom": {\n          "version": "^16.8.0  || ^17.0.0"\n        }\n      },\n      "title": "\u57fa\u7840\u4f7f\u7528",\n      "className": ["cmd-demo"],\n      "description": "<div class=\\"markdown\\"><p>\u89e3\u6563\u6307\u5b9a\u7684\u7fa4\u7ec4</p></div>",\n      "identifier": "group-del-demos"\n    }\n  },\n  \'node-add-demos\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader12 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee12() {\n          return regenerator_default.a.wrap(function _callee12$(_context12) {\n            while (1) {\n              switch (_context12.prev = _context12.next) {\n                case 0:\n                  _context12.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "77Ab"));\n\n                case 2:\n                  return _context12.abrupt("return", _context12.sent.default);\n\n                case 3:\n                case "end":\n                  return _context12.stop();\n              }\n            }\n          }, _callee12);\n        }));\n\n        function loader() {\n          return _loader12.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": node_add_demosdumi_raw_code\n        },\n        "form.tsx": {\n          "import": "./form",\n          "content": node_add_demos_formdumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": nodes_node_add_demosdumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": "^16.8.0  || ^17.0.0"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "^4.6.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "antd": {\n          "version": "^4.6.3",\n          "css": "antd/dist/antd.css"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "react-dom": {\n          "version": "^16.8.0  || ^17.0.0"\n        }\n      },\n      "className": ["cmd-demo"],\n      "identifier": "node-add-demos"\n    }\n  },\n  \'node-back-demos\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader13 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee13() {\n          return regenerator_default.a.wrap(function _callee13$(_context13) {\n            while (1) {\n              switch (_context13.prev = _context13.next) {\n                case 0:\n                  _context13.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "u8p8"));\n\n                case 2:\n                  return _context13.abrupt("return", _context13.sent.default);\n\n                case 3:\n                case "end":\n                  return _context13.stop();\n              }\n            }\n          }, _callee13);\n        }));\n\n        function loader() {\n          return _loader13.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": node_back_demosdumi_raw_code\n        },\n        "form.tsx": {\n          "import": "./form",\n          "content": node_back_demos_formdumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": nodes_node_back_demosdumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": "^16.8.0  || ^17.0.0"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "^4.6.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "antd": {\n          "version": "^4.6.3",\n          "css": "antd/dist/antd.css"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "react-dom": {\n          "version": "^16.8.0  || ^17.0.0"\n        }\n      },\n      "className": ["cmd-demo"],\n      "identifier": "node-back-demos"\n    }\n  },\n  \'node-center-demos\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader14 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee14() {\n          return regenerator_default.a.wrap(function _callee14$(_context14) {\n            while (1) {\n              switch (_context14.prev = _context14.next) {\n                case 0:\n                  _context14.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "rbyC"));\n\n                case 2:\n                  return _context14.abrupt("return", _context14.sent.default);\n\n                case 3:\n                case "end":\n                  return _context14.stop();\n              }\n            }\n          }, _callee14);\n        }));\n\n        function loader() {\n          return _loader14.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": node_center_demosdumi_raw_code\n        },\n        "form.tsx": {\n          "import": "./form",\n          "content": node_center_demos_formdumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": nodes_node_center_demosdumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": "^16.8.0  || ^17.0.0"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "^4.6.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "antd": {\n          "version": "^4.6.3",\n          "css": "antd/dist/antd.css"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "react-dom": {\n          "version": "^16.8.0  || ^17.0.0"\n        }\n      },\n      "className": ["cmd-demo"],\n      "identifier": "node-center-demos"\n    }\n  },\n  \'node-delete-demos\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader15 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee15() {\n          return regenerator_default.a.wrap(function _callee15$(_context15) {\n            while (1) {\n              switch (_context15.prev = _context15.next) {\n                case 0:\n                  _context15.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "W3ZF"));\n\n                case 2:\n                  return _context15.abrupt("return", _context15.sent.default);\n\n                case 3:\n                case "end":\n                  return _context15.stop();\n              }\n            }\n          }, _callee15);\n        }));\n\n        function loader() {\n          return _loader15.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": node_delete_demosdumi_raw_code\n        },\n        "form.tsx": {\n          "import": "./form",\n          "content": node_delete_demos_formdumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": nodes_node_delete_demosdumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": "^16.8.0  || ^17.0.0"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "^4.6.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "antd": {\n          "version": "^4.6.3",\n          "css": "antd/dist/antd.css"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "react-dom": {\n          "version": "^16.8.0  || ^17.0.0"\n        }\n      },\n      "className": ["cmd-demo"],\n      "identifier": "node-delete-demos"\n    }\n  },\n  \'node-front-demos\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader16 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee16() {\n          return regenerator_default.a.wrap(function _callee16$(_context16) {\n            while (1) {\n              switch (_context16.prev = _context16.next) {\n                case 0:\n                  _context16.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "bDTx"));\n\n                case 2:\n                  return _context16.abrupt("return", _context16.sent.default);\n\n                case 3:\n                case "end":\n                  return _context16.stop();\n              }\n            }\n          }, _callee16);\n        }));\n\n        function loader() {\n          return _loader16.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": node_front_demosdumi_raw_code\n        },\n        "form.tsx": {\n          "import": "./form",\n          "content": node_front_demos_formdumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": nodes_node_front_demosdumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": "^16.8.0  || ^17.0.0"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "^4.6.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "antd": {\n          "version": "^4.6.3",\n          "css": "antd/dist/antd.css"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "react-dom": {\n          "version": "^16.8.0  || ^17.0.0"\n        }\n      },\n      "className": ["cmd-demo"],\n      "identifier": "node-front-demos"\n    }\n  },\n  \'node-highlight-demos\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader17 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee17() {\n          return regenerator_default.a.wrap(function _callee17$(_context17) {\n            while (1) {\n              switch (_context17.prev = _context17.next) {\n                case 0:\n                  _context17.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "H0s4"));\n\n                case 2:\n                  return _context17.abrupt("return", _context17.sent.default);\n\n                case 3:\n                case "end":\n                  return _context17.stop();\n              }\n            }\n          }, _callee17);\n        }));\n\n        function loader() {\n          return _loader17.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": node_highlight_demosdumi_raw_code\n        },\n        "form.tsx": {\n          "import": "./form",\n          "content": node_highlight_demos_formdumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": nodes_node_highlight_demosdumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": "^16.8.0  || ^17.0.0"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "^4.6.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "antd": {\n          "version": "^4.6.3",\n          "css": "antd/dist/antd.css"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "react-dom": {\n          "version": "^16.8.0  || ^17.0.0"\n        }\n      },\n      "className": ["cmd-demo"],\n      "identifier": "node-highlight-demos"\n    }\n  },\n  \'node-move-demos\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader18 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee18() {\n          return regenerator_default.a.wrap(function _callee18$(_context18) {\n            while (1) {\n              switch (_context18.prev = _context18.next) {\n                case 0:\n                  _context18.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "KDqh"));\n\n                case 2:\n                  return _context18.abrupt("return", _context18.sent.default);\n\n                case 3:\n                case "end":\n                  return _context18.stop();\n              }\n            }\n          }, _callee18);\n        }));\n\n        function loader() {\n          return _loader18.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": node_move_demosdumi_raw_code\n        },\n        "form.tsx": {\n          "import": "./form",\n          "content": node_move_demos_formdumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": nodes_node_move_demosdumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": "^16.8.0  || ^17.0.0"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "^4.6.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "antd": {\n          "version": "^4.6.3",\n          "css": "antd/dist/antd.css"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "react-dom": {\n          "version": "^16.8.0  || ^17.0.0"\n        }\n      },\n      "className": ["cmd-demo"],\n      "identifier": "node-move-demos"\n    }\n  },\n  \'node-select-demos\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader19 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee19() {\n          return regenerator_default.a.wrap(function _callee19$(_context19) {\n            while (1) {\n              switch (_context19.prev = _context19.next) {\n                case 0:\n                  _context19.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "6Ya1"));\n\n                case 2:\n                  return _context19.abrupt("return", _context19.sent.default);\n\n                case 3:\n                case "end":\n                  return _context19.stop();\n              }\n            }\n          }, _callee19);\n        }));\n\n        function loader() {\n          return _loader19.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": node_select_demosdumi_raw_code\n        },\n        "form.tsx": {\n          "import": "./form",\n          "content": node_select_demos_formdumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": nodes_node_select_demosdumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": "^16.8.0  || ^17.0.0"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "^4.6.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "antd": {\n          "version": "^4.6.3",\n          "css": "antd/dist/antd.css"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "react-dom": {\n          "version": "^16.8.0  || ^17.0.0"\n        }\n      },\n      "className": ["node-select-demo"],\n      "identifier": "node-select-demos"\n    }\n  },\n  \'node-update-demos\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader20 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee20() {\n          return regenerator_default.a.wrap(function _callee20$(_context20) {\n            while (1) {\n              switch (_context20.prev = _context20.next) {\n                case 0:\n                  _context20.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "KKXM"));\n\n                case 2:\n                  return _context20.abrupt("return", _context20.sent.default);\n\n                case 3:\n                case "end":\n                  return _context20.stop();\n              }\n            }\n          }, _callee20);\n        }));\n\n        function loader() {\n          return _loader20.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": node_update_demosdumi_raw_code\n        },\n        "form.tsx": {\n          "import": "./form",\n          "content": node_update_demos_formdumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": nodes_node_update_demosdumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": "^16.8.0  || ^17.0.0"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "^4.6.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "antd": {\n          "version": "^4.6.3",\n          "css": "antd/dist/antd.css"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "react-dom": {\n          "version": "^16.8.0  || ^17.0.0"\n        }\n      },\n      "identifier": "node-update-demos"\n    }\n  },\n  \'canvas-config-form-basic\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader21 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee21() {\n          return regenerator_default.a.wrap(function _callee21$(_context21) {\n            while (1) {\n              switch (_context21.prev = _context21.next) {\n                case 0:\n                  _context21.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "kcdX"));\n\n                case 2:\n                  return _context21.abrupt("return", _context21.sent.default);\n\n                case 3:\n                case "end":\n                  return _context21.stop();\n              }\n            }\n          }, _callee21);\n        }));\n\n        function loader() {\n          return _loader21.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": demos_basicdumi_raw_code\n        },\n        "graph-config.tsx": {\n          "import": "./graph-config",\n          "content": graph_configdumi_raw_code\n        },\n        "mock.ts": {\n          "import": "./mock",\n          "content": demos_basic_mockdumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": canvas_config_form_demos_basicdumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": "^16.8.0  || ^17.0.0"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "^4.6.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "antd": {\n          "version": "^4.6.3",\n          "css": "antd/dist/antd.css"\n        },\n        "react-dom": {\n          "version": "^16.8.0  || ^17.0.0"\n        }\n      },\n      "title": "\u57fa\u7840\u4f7f\u7528",\n      "className": ["json-form-demo"],\n      "description": "<div class=\\"markdown\\"><p>\u4f7f\u7528 formSchemaService \u51fd\u6570\u8fd4\u56de\u7684\u6570\u636e\u4f5c\u4e3aform\u7684schema <br />\\nschema \u4e2d\u7684 shape \u5b57\u6bb5\u51b3\u5b9a\u6e32\u67d3\u7684\u7ec4\u4ef6 <br />\\n\u7528\u6237\u4fee\u6539\u8868\u5355\u9879\u540e\u4f1a\u89e6\u53d1 formValueUpdateService \u7684\u56de\u8c03\uff0c\u56de\u8c03\u4e2d\u53ef\u4ee5\u4fdd\u5b58\u6570\u636e <br /></p></div>",\n      "identifier": "canvas-config-form-basic"\n    }\n  },\n  \'canvas-config-form-custom-shape\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader22 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee22() {\n          return regenerator_default.a.wrap(function _callee22$(_context22) {\n            while (1) {\n              switch (_context22.prev = _context22.next) {\n                case 0:\n                  _context22.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "Fm8e"));\n\n                case 2:\n                  return _context22.abrupt("return", _context22.sent.default);\n\n                case 3:\n                case "end":\n                  return _context22.stop();\n              }\n            }\n          }, _callee22);\n        }));\n\n        function loader() {\n          return _loader22.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": custom_shapedumi_raw_code\n        },\n        "custom-shapes/index.tsx": {\n          "import": "./custom-shapes",\n          "content": custom_shapesdumi_raw_code\n        },\n        "custom-editor.tsx": {\n          "import": "./custom-editor",\n          "content": custom_editordumi_raw_code\n        },\n        "custom-link.tsx": {\n          "import": "./custom-link",\n          "content": custom_linkdumi_raw_code\n        },\n        "graph-config.tsx": {\n          "import": "./graph-config",\n          "content": custom_shape_graph_configdumi_raw_code\n        },\n        "mock.ts": {\n          "import": "./mock",\n          "content": custom_shape_mockdumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": demos_custom_shapedumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": "^16.8.0  || ^17.0.0"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "^4.6.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "antd": {\n          "version": "^4.6.3",\n          "css": "antd/dist/antd.css"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "react-dom": {\n          "version": "^16.8.0  || ^17.0.0"\n        },\n        "@antv/xflow-extension": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow-extension/dist/index.css"\n        },\n        "classnames": {\n          "version": "^2.2.6"\n        },\n        "reflect-metadata": {\n          "version": "^0.1.13"\n        }\n      },\n      "title": "\u57fa\u7840\u4f7f\u7528",\n      "className": ["json-form-demo"],\n      "description": "<div class=\\"markdown\\"><p>\u901a\u8fc7 Schema \u4e2d\u7684 shape \u5b57\u6bb5\u548c controlMapService \u914d\u5408\u53ef\u4ee5\u6e32\u67d3\u81ea\u5b9a\u4e49\u7684\u8868\u5355\u9879\u76ee</p></div>",\n      "identifier": "canvas-config-form-custom-shape"\n    }\n  },\n  \'canvas-config-form-target-type\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader23 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee23() {\n          return regenerator_default.a.wrap(function _callee23$(_context23) {\n            while (1) {\n              switch (_context23.prev = _context23.next) {\n                case 0:\n                  _context23.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "+5ps"));\n\n                case 2:\n                  return _context23.abrupt("return", _context23.sent.default);\n\n                case 3:\n                case "end":\n                  return _context23.stop();\n              }\n            }\n          }, _callee23);\n        }));\n\n        function loader() {\n          return _loader23.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": target_typedumi_raw_code\n        },\n        "graph-config.tsx": {\n          "import": "./graph-config",\n          "content": target_type_graph_configdumi_raw_code\n        },\n        "mock.ts": {\n          "import": "./mock",\n          "content": target_type_mockdumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": demos_target_typedumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": "^16.8.0  || ^17.0.0"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "^4.6.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "antd": {\n          "version": "^4.6.3",\n          "css": "antd/dist/antd.css"\n        },\n        "react-dom": {\n          "version": "^16.8.0  || ^17.0.0"\n        }\n      },\n      "title": "\u914d\u7f6e\u8054\u52a8\u5bf9\u8c61",\n      "className": ["json-form-demo"],\n      "description": "<div class=\\"markdown\\"><p>\u652f\u6301 \'edge\' \u9009\u4e2d\u65f6\u66f4\u65b0\u8868\u5355  <br />\\n\u9ed8\u8ba4\u652f\u6301[\'node\', \'canvas\']\u9009\u4e2d\u65f6\uff0c\u66f4\u65b0\u8868\u5355\u7684\u6e32\u67d3\u3002 <br />\\n\u53ef\u4ee5\u901a\u8fc7 targetType \u5c5e\u6027\u6765\u652f\u6301\u66f4\u591a\u5143\u7d20\u7684\u9009\u4e2d\u65f6\u66f4\u65b0\u8868\u5355\uff1a\'edge\',\'group\' <br /></p></div>",\n      "identifier": "canvas-config-form-target-type"\n    }\n  },\n  \'canvas-config-form-custom-render\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader24 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee24() {\n          return regenerator_default.a.wrap(function _callee24$(_context24) {\n            while (1) {\n              switch (_context24.prev = _context24.next) {\n                case 0:\n                  _context24.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "S1za"));\n\n                case 2:\n                  return _context24.abrupt("return", _context24.sent.default);\n\n                case 3:\n                case "end":\n                  return _context24.stop();\n              }\n            }\n          }, _callee24);\n        }));\n\n        function loader() {\n          return _loader24.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": custom_renderdumi_raw_code\n        },\n        "graph-config.tsx": {\n          "import": "./graph-config",\n          "content": custom_render_graph_configdumi_raw_code\n        },\n        "mock.ts": {\n          "import": "./mock",\n          "content": custom_render_mockdumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": demos_custom_renderdumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": "^16.8.0  || ^17.0.0"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "^4.6.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "antd": {\n          "version": "^4.6.3",\n          "css": "antd/dist/antd.css"\n        },\n        "react-dom": {\n          "version": "^16.8.0  || ^17.0.0"\n        }\n      },\n      "title": "\u81ea\u5b9a\u4e49\u6e32\u67d3",\n      "className": ["json-form-demo"],\n      "description": "<div class=\\"markdown\\"><p>\u652f\u6301\u4f7f\u7528\u81ea\u5b9a\u4e49\u6e32\u67d3\u6765\u652f\u6301\u66f4\u590d\u6742\u7684\u4e1a\u52a1\u573a\u666f <br />\\n\u914d\u7f6e\u4e00\u4e2a\u51fd\u6570\u51b3\u5b9a\u662f\u5426\u7528\u81ea\u5b9a\u4e49\u7ec4\u4ef6\u4ee3\u66ffform\u7684\u6e32\u67d3 <br /></p></div>",\n      "identifier": "canvas-config-form-custom-render"\n    }\n  },\n  \'canvas-keybinding-basic\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader25 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee25() {\n          return regenerator_default.a.wrap(function _callee25$(_context25) {\n            while (1) {\n              switch (_context25.prev = _context25.next) {\n                case 0:\n                  _context25.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "WuEN"));\n\n                case 2:\n                  return _context25.abrupt("return", _context25.sent.default);\n\n                case 3:\n                case "end":\n                  return _context25.stop();\n              }\n            }\n          }, _callee25);\n        }));\n\n        function loader() {\n          return _loader25.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": canvas_keybinding_demos_basicdumi_raw_code\n        },\n        "mock.ts": {\n          "import": "./mock",\n          "content": canvas_keybinding_demos_basic_mockdumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": extension_components_canvas_keybinding_demos_basicdumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": "^16.8.0  || ^17.0.0"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "^4.6.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "antd": {\n          "version": "^4.6.3",\n          "css": "antd/dist/antd.css"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "react-dom": {\n          "version": "^16.8.0  || ^17.0.0"\n        }\n      },\n      "title": "\u57fa\u7840\u4f7f\u7528",\n      "className": ["keyboard-basic-demo"],\n      "description": "<div class=\\"markdown\\"><p>\u901a\u8fc7keybinding\u5b57\u6bb5\u914d\u7f6e\u952e\u76d8\u7684\u5feb\u6377\u952e\uff1a<a href=\\"https://craig.is/killing/mice\\" target=\\"_blank\\">https://craig.is/killing/mice<svg xmlns=\\"http://www.w3.org/2000/svg\\" aria-hidden=\\"\\" x=\\"0px\\" y=\\"0px\\" viewBox=\\"0 0 100 100\\" width=\\"15\\" height=\\"15\\" class=\\"__dumi-default-external-link-icon\\"><path fill=\\"currentColor\\" d=\\"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z\\"></path><polygon fill=\\"currentColor\\" points=\\"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9\\"></polygon></svg></a></p></div>",\n      "identifier": "canvas-keybinding-basic"\n    }\n  },\n  \'canvas-keybinding-command\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader26 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee26() {\n          return regenerator_default.a.wrap(function _callee26$(_context26) {\n            while (1) {\n              switch (_context26.prev = _context26.next) {\n                case 0:\n                  _context26.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "TBvq"));\n\n                case 2:\n                  return _context26.abrupt("return", _context26.sent.default);\n\n                case 3:\n                case "end":\n                  return _context26.stop();\n              }\n            }\n          }, _callee26);\n        }));\n\n        function loader() {\n          return _loader26.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": commanddumi_raw_code\n        },\n        "mock.ts": {\n          "import": "./mock",\n          "content": command_mockdumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": demos_commanddumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": "^16.8.0  || ^17.0.0"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "^4.6.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "antd": {\n          "version": "^4.6.3",\n          "css": "antd/dist/antd.css"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "react-dom": {\n          "version": "^16.8.0  || ^17.0.0"\n        }\n      },\n      "title": "\u89e6\u53d1Command\u547d\u4ee4",\n      "className": ["keyboard-command-demo"],\n      "description": "<div class=\\"markdown\\"><p>\u901a\u8fc7\u8c03\u7528Command\u547d\u4ee4\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u56fe\u7684\u4ea4\u4e92:\u5220\u9664(backspace)/\u590d\u5236(ctrl+c)/\u7c98\u8d34(ctrl+v)</p></div>",\n      "identifier": "canvas-keybinding-command"\n    }\n  },\n  \'canvas-mini-map-basic\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader27 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee27() {\n          return regenerator_default.a.wrap(function _callee27$(_context27) {\n            while (1) {\n              switch (_context27.prev = _context27.next) {\n                case 0:\n                  _context27.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "oiMV"));\n\n                case 2:\n                  return _context27.abrupt("return", _context27.sent.default);\n\n                case 3:\n                case "end":\n                  return _context27.stop();\n              }\n            }\n          }, _callee27);\n        }));\n\n        function loader() {\n          return _loader27.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": canvas_mini_map_demos_basicdumi_raw_code\n        },\n        "mock.ts": {\n          "import": "./mock",\n          "content": canvas_mini_map_demos_basic_mockdumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": extension_components_canvas_mini_map_demos_basicdumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": "^16.8.0  || ^17.0.0"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "^4.6.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "antd": {\n          "version": "^4.6.3",\n          "css": "antd/dist/antd.css"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "react-dom": {\n          "version": "^16.8.0  || ^17.0.0"\n        }\n      },\n      "title": "\u57fa\u7840\u4f7f\u7528",\n      "className": ["canvas-minimap-basic-demo"],\n      "description": "<div class=\\"markdown\\"><p>\u653e\u7f6e\u5728XFlowCanvas\u7ec4\u4ef6\u5185\u90e8\u751f\u6548</p></div>",\n      "identifier": "canvas-mini-map-basic"\n    }\n  },\n  \'canvas-mini-map-color\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader28 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee28() {\n          return regenerator_default.a.wrap(function _callee28$(_context28) {\n            while (1) {\n              switch (_context28.prev = _context28.next) {\n                case 0:\n                  _context28.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "N33m"));\n\n                case 2:\n                  return _context28.abrupt("return", _context28.sent.default);\n\n                case 3:\n                case "end":\n                  return _context28.stop();\n              }\n            }\n          }, _callee28);\n        }));\n\n        function loader() {\n          return _loader28.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": colordumi_raw_code\n        },\n        "mock.ts": {\n          "import": "./mock",\n          "content": color_mockdumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": demos_colordumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": "^16.8.0  || ^17.0.0"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "^4.6.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "antd": {\n          "version": "^4.6.3",\n          "css": "antd/dist/antd.css"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "react-dom": {\n          "version": "^16.8.0  || ^17.0.0"\n        }\n      },\n      "title": "\u914d\u7f6e\u989c\u8272",\n      "className": ["canvas-minimap-color-demo"],\n      "description": "<div class=\\"markdown\\"><p>nodeFillColor(\u8282\u70b9\u989c\u8272)/borderColor(\u89c6\u7a97\u8fb9\u6846\u989c\u8272)/handlerColor(\u8c03\u8282\u6309\u94ae\u989c\u8272)</p></div>",\n      "identifier": "canvas-mini-map-color"\n    }\n  },\n  \'canvas-mini-map-graph-options\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader29 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee29() {\n          return regenerator_default.a.wrap(function _callee29$(_context29) {\n            while (1) {\n              switch (_context29.prev = _context29.next) {\n                case 0:\n                  _context29.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "Oxvr"));\n\n                case 2:\n                  return _context29.abrupt("return", _context29.sent.default);\n\n                case 3:\n                case "end":\n                  return _context29.stop();\n              }\n            }\n          }, _callee29);\n        }));\n\n        function loader() {\n          return _loader29.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": graph_optionsdumi_raw_code\n        },\n        "mock.ts": {\n          "import": "./mock",\n          "content": graph_options_mockdumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": demos_graph_optionsdumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": "^16.8.0  || ^17.0.0"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "^4.6.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "antd": {\n          "version": "^4.6.3",\n          "css": "antd/dist/antd.css"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "react-dom": {\n          "version": "^16.8.0  || ^17.0.0"\n        }\n      },\n      "title": "minimapOptions",\n      "className": ["canvas-minimap-options-demo"],\n      "description": "<div class=\\"markdown\\"><p>\u901a\u8fc7minimapOptions\u914d\u7f6eminiMap, \u6240\u6709\u914d\u7f6e\u9879\u53c2\u8003X6\u6587\u6863\uff1a<a href=\\"https://x6.antv.vision/zh/docs/api/graph/minimap/#enabled\\" target=\\"_blank\\">https://x6.antv.vision/zh/docs/api/graph/minimap/#enabled<svg xmlns=\\"http://www.w3.org/2000/svg\\" aria-hidden=\\"\\" x=\\"0px\\" y=\\"0px\\" viewBox=\\"0 0 100 100\\" width=\\"15\\" height=\\"15\\" class=\\"__dumi-default-external-link-icon\\"><path fill=\\"currentColor\\" d=\\"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z\\"></path><polygon fill=\\"currentColor\\" points=\\"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9\\"></polygon></svg></a></p></div>",\n      "identifier": "canvas-mini-map-graph-options"\n    }\n  },\n  \'canvas-node-panel-basic\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader30 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee30() {\n          return regenerator_default.a.wrap(function _callee30$(_context30) {\n            while (1) {\n              switch (_context30.prev = _context30.next) {\n                case 0:\n                  _context30.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "bTza"));\n\n                case 2:\n                  return _context30.abrupt("return", _context30.sent.default);\n\n                case 3:\n                case "end":\n                  return _context30.stop();\n              }\n            }\n          }, _callee30);\n        }));\n\n        function loader() {\n          return _loader30.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": canvas_node_panel_demos_basicdumi_raw_code\n        },\n        "graph-config.tsx": {\n          "import": "./graph-config",\n          "content": basic_graph_configdumi_raw_code\n        },\n        "mock.ts": {\n          "import": "./mock",\n          "content": canvas_node_panel_demos_basic_mockdumi_raw_code\n        },\n        "dnd-tree-config.tsx": {\n          "import": "./dnd-tree-config",\n          "content": dnd_tree_configdumi_raw_code\n        },\n        "comannd-utils.tsx": {\n          "import": "./comannd-utils",\n          "content": comannd_utilsdumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": extension_components_canvas_node_panel_demos_basicdumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": "^16.8.0  || ^17.0.0"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "^4.6.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "antd": {\n          "version": "^4.6.3",\n          "css": "antd/dist/antd.css"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "react-dom": {\n          "version": "^16.8.0  || ^17.0.0"\n        }\n      },\n      "title": "\u57fa\u7840\u4f7f\u7528",\n      "className": ["dnd-node-demo"],\n      "description": "<div class=\\"markdown\\"><p>treeDataService:\u8fd4\u56de\u5e73\u94fa\u7684\u6811\u7ed3\u6784 <br />\\n\u901a\u8fc7parentId\u5c06node\u7ec4\u7ec7\u5230\u5bf9\u5e94\u6587\u4ef6\u5939\u4e0b, parentId \u4e3a\u7a7a\u7684\u8282\u70b9\u662f\u6587\u4ef6\u5939\u8282\u70b9 <br />\\n\u652f\u6301popoverContent\u5c5e\u6027  <br />\\nonNodeDrop \u56de\u8c03\u65f6\u65f6\uff0c\u8981\u6c42\u4f7f\u7528\u547d\u4ee4\u521b\u5efa\u8282\u70b9  <br /></p></div>",\n      "identifier": "canvas-node-panel-basic"\n    }\n  },\n  \'canvas-node-panel-search\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader31 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee31() {\n          return regenerator_default.a.wrap(function _callee31$(_context31) {\n            while (1) {\n              switch (_context31.prev = _context31.next) {\n                case 0:\n                  _context31.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "/9bf"));\n\n                case 2:\n                  return _context31.abrupt("return", _context31.sent.default);\n\n                case 3:\n                case "end":\n                  return _context31.stop();\n              }\n            }\n          }, _callee31);\n        }));\n\n        function loader() {\n          return _loader31.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": searchdumi_raw_code\n        },\n        "graph-config.tsx": {\n          "import": "./graph-config",\n          "content": search_graph_configdumi_raw_code\n        },\n        "mock.ts": {\n          "import": "./mock",\n          "content": search_mockdumi_raw_code\n        },\n        "dnd-tree-config.tsx": {\n          "import": "./dnd-tree-config",\n          "content": search_dnd_tree_configdumi_raw_code\n        },\n        "comannd-utils.tsx": {\n          "import": "./comannd-utils",\n          "content": search_comannd_utilsdumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": demos_searchdumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": "^16.8.0  || ^17.0.0"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "^4.6.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "antd": {\n          "version": "^4.6.3",\n          "css": "antd/dist/antd.css"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "react-dom": {\n          "version": "^16.8.0  || ^17.0.0"\n        }\n      },\n      "title": "\u652f\u6301\u641c\u7d22",\n      "className": ["dnd-node-demo"],\n      "description": "<div class=\\"markdown\\"><p>\u914d\u7f6e searchService \u4f1a\u652f\u6301\u641c\u7d22 <br /></p></div>",\n      "identifier": "canvas-node-panel-search"\n    }\n  },\n  \'canvas-scale-toolbar-demos\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader32 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee32() {\n          return regenerator_default.a.wrap(function _callee32$(_context32) {\n            while (1) {\n              switch (_context32.prev = _context32.next) {\n                case 0:\n                  _context32.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "91QT"));\n\n                case 2:\n                  return _context32.abrupt("return", _context32.sent.default);\n\n                case 3:\n                case "end":\n                  return _context32.stop();\n              }\n            }\n          }, _callee32);\n        }));\n\n        function loader() {\n          return _loader32.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": canvas_scale_toolbar_demosdumi_raw_code\n        },\n        "mock.ts": {\n          "import": "./mock",\n          "content": canvas_scale_toolbar_demos_mockdumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": extension_components_canvas_scale_toolbar_demosdumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": "^16.8.0  || ^17.0.0"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "^4.6.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "antd": {\n          "version": "^4.6.3",\n          "css": "antd/dist/antd.css"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "react-dom": {\n          "version": "^16.8.0  || ^17.0.0"\n        }\n      },\n      "title": "\u4f7f\u7528\u65b9\u6cd5",\n      "className": ["canvas-scale-toolbar-demo"],\n      "description": "<div class=\\"markdown\\"><p>CanvasScaleToolbar\u7ec4\u4ef6\u7684\u4f7f\u7528\uff0c\u53ea\u9700\u8981\u914d\u7f6e\u4e0bposition\u5c5e\u6027</p></div>",\n      "identifier": "canvas-scale-toolbar-demos"\n    }\n  },\n  \'canvas-snapline-basic\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader33 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee33() {\n          return regenerator_default.a.wrap(function _callee33$(_context33) {\n            while (1) {\n              switch (_context33.prev = _context33.next) {\n                case 0:\n                  _context33.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "4iYd"));\n\n                case 2:\n                  return _context33.abrupt("return", _context33.sent.default);\n\n                case 3:\n                case "end":\n                  return _context33.stop();\n              }\n            }\n          }, _callee33);\n        }));\n\n        function loader() {\n          return _loader33.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": canvas_snapline_demos_basicdumi_raw_code\n        },\n        "mock.ts": {\n          "import": "./mock",\n          "content": canvas_snapline_demos_basic_mockdumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": extension_components_canvas_snapline_demos_basicdumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": "^16.8.0  || ^17.0.0"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "^4.6.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "antd": {\n          "version": "^4.6.3",\n          "css": "antd/dist/antd.css"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "react-dom": {\n          "version": "^16.8.0  || ^17.0.0"\n        }\n      },\n      "title": "\u57fa\u7840\u4f7f\u7528",\n      "className": ["canvas-snapline-basic-demo"],\n      "description": "<div class=\\"markdown\\"><p>\u653e\u7f6e\u5728XFlowCanvas\u7ec4\u4ef6\u5185\u90e8\u751f\u6548</p></div>",\n      "identifier": "canvas-snapline-basic"\n    }\n  },\n  \'canvas-snapline-color\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader34 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee34() {\n          return regenerator_default.a.wrap(function _callee34$(_context34) {\n            while (1) {\n              switch (_context34.prev = _context34.next) {\n                case 0:\n                  _context34.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "moO5"));\n\n                case 2:\n                  return _context34.abrupt("return", _context34.sent.default);\n\n                case 3:\n                case "end":\n                  return _context34.stop();\n              }\n            }\n          }, _callee34);\n        }));\n\n        function loader() {\n          return _loader34.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": canvas_snapline_demos_colordumi_raw_code\n        },\n        "mock.ts": {\n          "import": "./mock",\n          "content": demos_color_mockdumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": extension_components_canvas_snapline_demos_colordumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": "^16.8.0  || ^17.0.0"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "^4.6.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "antd": {\n          "version": "^4.6.3",\n          "css": "antd/dist/antd.css"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "react-dom": {\n          "version": "^16.8.0  || ^17.0.0"\n        }\n      },\n      "title": "\u5bf9\u9f50\u7ebf\u989c\u8272",\n      "className": ["canvas-snapline-color-demo"],\n      "description": "<div class=\\"markdown\\"><p>\u4f7f\u7528color\u5c5e\u6027\u914d\u7f6e\u4e0d\u540c\u7684\u5bf9\u9f50\u7ebf\u989c\u8272</p></div>",\n      "identifier": "canvas-snapline-color"\n    }\n  },\n  \'canvas-toolbar-basic\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader35 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee35() {\n          return regenerator_default.a.wrap(function _callee35$(_context35) {\n            while (1) {\n              switch (_context35.prev = _context35.next) {\n                case 0:\n                  _context35.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "MbdG"));\n\n                case 2:\n                  return _context35.abrupt("return", _context35.sent.default);\n\n                case 3:\n                case "end":\n                  return _context35.stop();\n              }\n            }\n          }, _callee35);\n        }));\n\n        function loader() {\n          return _loader35.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": canvas_toolbar_demos_basicdumi_raw_code\n        },\n        "toolbar-config.tsx": {\n          "import": "./toolbar-config",\n          "content": toolbar_configdumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": extension_components_canvas_toolbar_demos_basicdumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": ">=16.9.0"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "^4.6.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "antd": {\n          "version": "^4.6.3",\n          "css": "antd/dist/antd.css"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "react-dom": {\n          "version": ">=16.9.0"\n        }\n      },\n      "title": "\u57fa\u7840\u4f7f\u7528\u65b9\u6cd5",\n      "className": ["canvas-toolbar-basic"],\n      "description": "<div class=\\"markdown\\"><p>\u901a\u8fc7position\u5b9a\u4f4dToolbar,\u901a\u8fc7config\u5c5e\u6027\u914d\u7f6etoolbar, \u67e5\u770btoolbar-config.tsx\u6587\u4ef6\u4e86\u89e3\u5982\u4f55\u914d\u7f6etoolbar</p></div>",\n      "identifier": "canvas-toolbar-basic"\n    }\n  },\n  \'canvas-toolbar-toolbar-render-item\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader36 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee36() {\n          return regenerator_default.a.wrap(function _callee36$(_context36) {\n            while (1) {\n              switch (_context36.prev = _context36.next) {\n                case 0:\n                  _context36.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "Rt7r"));\n\n                case 2:\n                  return _context36.abrupt("return", _context36.sent.default);\n\n                case 3:\n                case "end":\n                  return _context36.stop();\n              }\n            }\n          }, _callee36);\n        }));\n\n        function loader() {\n          return _loader36.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": toolbar_render_itemdumi_raw_code\n        },\n        "toolbar-config.tsx": {\n          "import": "./toolbar-config",\n          "content": toolbar_render_item_toolbar_configdumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": demos_toolbar_render_itemdumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": ">=16.9.0"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "^4.6.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "antd": {\n          "version": "^4.6.3",\n          "css": "antd/dist/antd.css"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "react-dom": {\n          "version": ">=16.9.0"\n        }\n      },\n      "title": "\u5de5\u5177\u680f\u914d\u7f6e",\n      "className": ["toolbar-render-item"],\n      "description": "<div class=\\"markdown\\"><p>\u652f\u6301text/iconName/tooltip/isEnable/isDisable/active/onClick/render\u5c5e\u6027\u6765\u914d\u7f6eToolbar</p></div>",\n      "identifier": "canvas-toolbar-toolbar-render-item"\n    }\n  },\n  \'canvas-toolbar-toolbar-layout\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader37 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee37() {\n          return regenerator_default.a.wrap(function _callee37$(_context37) {\n            while (1) {\n              switch (_context37.prev = _context37.next) {\n                case 0:\n                  _context37.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "yenX"));\n\n                case 2:\n                  return _context37.abrupt("return", _context37.sent.default);\n\n                case 3:\n                case "end":\n                  return _context37.stop();\n              }\n            }\n          }, _callee37);\n        }));\n\n        function loader() {\n          return _loader37.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": toolbar_layoutdumi_raw_code\n        },\n        "toolbar-config.tsx": {\n          "import": "./toolbar-config",\n          "content": toolbar_layout_toolbar_configdumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": demos_toolbar_layoutdumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": ">=16.0.0"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "^4.6.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "antd": {\n          "version": "^4.6.3",\n          "css": "antd/dist/antd.css"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "react-dom": {\n          "version": ">=16.0.0"\n        }\n      },\n      "title": "\u5de5\u5177\u680f\u5e03\u5c40",\n      "className": ["toolbar-layout"],\n      "description": "<div class=\\"markdown\\"><p>\u652f\u6301\u4e09\u79cd\u5e03\u5c40\uff1a\'vertical\'|\'horizontal\'|\'horizontal-center\'</p></div>",\n      "identifier": "canvas-toolbar-toolbar-layout"\n    }\n  },\n  \'canvas-toolbar-toolbar-model\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader38 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee38() {\n          return regenerator_default.a.wrap(function _callee38$(_context38) {\n            while (1) {\n              switch (_context38.prev = _context38.next) {\n                case 0:\n                  _context38.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "nyl5"));\n\n                case 2:\n                  return _context38.abrupt("return", _context38.sent.default);\n\n                case 3:\n                case "end":\n                  return _context38.stop();\n              }\n            }\n          }, _callee38);\n        }));\n\n        function loader() {\n          return _loader38.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": toolbar_modeldumi_raw_code\n        },\n        "toolbar-config.tsx": {\n          "import": "./toolbar-config",\n          "content": toolbar_model_toolbar_configdumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": demos_toolbar_modeldumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": ">=16.0.0"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "^4.6.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "antd": {\n          "version": "^4.6.3",\n          "css": "antd/dist/antd.css"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "react-dom": {\n          "version": ">=16.0.0"\n        }\n      },\n      "title": "\u5de5\u5177\u680f\u72b6\u6001\u8054\u52a8",\n      "className": ["canvas-toolbar-model"],\n      "description": "<div class=\\"markdown\\"><p>\u901a\u8fc7ModelService\u5b9e\u73b0ToolbarItem\u7684\u53ef\u7528\u72b6\u6001</p></div>",\n      "identifier": "canvas-toolbar-toolbar-model"\n    }\n  },\n  \'canvas-toolbar-toolbar-custom-render\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader39 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee39() {\n          return regenerator_default.a.wrap(function _callee39$(_context39) {\n            while (1) {\n              switch (_context39.prev = _context39.next) {\n                case 0:\n                  _context39.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "DvfK"));\n\n                case 2:\n                  return _context39.abrupt("return", _context39.sent.default);\n\n                case 3:\n                case "end":\n                  return _context39.stop();\n              }\n            }\n          }, _callee39);\n        }));\n\n        function loader() {\n          return _loader39.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": toolbar_custom_renderdumi_raw_code\n        },\n        "toolbar-config.tsx": {\n          "import": "./toolbar-config",\n          "content": toolbar_custom_render_toolbar_configdumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": demos_toolbar_custom_renderdumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": ">=16.9.0"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "^4.6.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "antd": {\n          "version": "^4.6.3",\n          "css": "antd/dist/antd.css"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "react-dom": {\n          "version": ">=16.9.0"\n        }\n      },\n      "title": "\u81ea\u5b9a\u4e49\u6e32\u67d3",\n      "className": ["toolbar-custom-render"],\n      "description": "<div class=\\"markdown\\"><p>\u9009\u4e2d\u8282\u70b9\u65f6\u4f1a\u89e6\u53d1\u81ea\u5b9a\u4e49\u6e32\u67d3\u66ff\u6362ToolbarItem</p></div>",\n      "identifier": "canvas-toolbar-toolbar-custom-render"\n    }\n  },\n  \'context-menu-basic\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader40 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee40() {\n          return regenerator_default.a.wrap(function _callee40$(_context40) {\n            while (1) {\n              switch (_context40.prev = _context40.next) {\n                case 0:\n                  _context40.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "A8/L"));\n\n                case 2:\n                  return _context40.abrupt("return", _context40.sent.default);\n\n                case 3:\n                case "end":\n                  return _context40.stop();\n              }\n            }\n          }, _callee40);\n        }));\n\n        function loader() {\n          return _loader40.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": context_menu_demos_basicdumi_raw_code\n        },\n        "graph-config.tsx": {\n          "import": "./graph-config",\n          "content": demos_basic_graph_configdumi_raw_code\n        },\n        "mock.ts": {\n          "import": "./mock",\n          "content": context_menu_demos_basic_mockdumi_raw_code\n        },\n        "menu-config.tsx": {\n          "import": "./menu-config",\n          "content": menu_configdumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": extension_components_context_menu_demos_basicdumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": ">=16.0.0"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "^4.6.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "antd": {\n          "version": "^4.6.3",\n          "css": "antd/dist/antd.css"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "react-dom": {\n          "version": ">=16.0.0"\n        },\n        "@antv/xflow-extension": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow-extension/dist/index.css"\n        },\n        "classnames": {\n          "version": "^2.2.6"\n        },\n        "reflect-metadata": {\n          "version": "^0.1.13"\n        }\n      },\n      "title": "\u57fa\u7840\u4f7f\u7528\uff08\u53f3\u952e\u5220\u9664\u8282\u70b9/\u5220\u9664\u8fb9/\u753b\u5e03\u83dc\u5355\uff09",\n      "className": ["canvas-menu-basic"],\n      "description": "<div class=\\"markdown\\"><p>\u53ef\u4ee5\u5728\u8282\u70b9/\u8fb9/\u753b\u5e03\u4e0a\u914d\u7f6e\u83dc\u5355 <br />\\n\u83dc\u5355\u914d\u7f6e\u4e2d\u53ef\u4ee5\u914d\u7f6e\u70b9\u51fb\u65f6\u6267\u884c xflow \u547d\u4ee4 <br />\\n\u70b9\u51fb\u67e5\u770b <a href=\\"/api/commands\\">\u6240\u6709\u53ef\u7528\u7684\u547d\u4ee4</a> <br /></p></div>",\n      "identifier": "context-menu-basic"\n    }\n  },\n  \'context-menu-dynamic-config\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader41 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee41() {\n          return regenerator_default.a.wrap(function _callee41$(_context41) {\n            while (1) {\n              switch (_context41.prev = _context41.next) {\n                case 0:\n                  _context41.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "ui7r"));\n\n                case 2:\n                  return _context41.abrupt("return", _context41.sent.default);\n\n                case 3:\n                case "end":\n                  return _context41.stop();\n              }\n            }\n          }, _callee41);\n        }));\n\n        function loader() {\n          return _loader41.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": dynamic_configdumi_raw_code\n        },\n        "graph-config.tsx": {\n          "import": "./graph-config",\n          "content": dynamic_config_graph_configdumi_raw_code\n        },\n        "mock.ts": {\n          "import": "./mock",\n          "content": dynamic_config_mockdumi_raw_code\n        },\n        "menu-config.tsx": {\n          "import": "./menu-config",\n          "content": dynamic_config_menu_configdumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": demos_dynamic_configdumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": ">=16.0.0"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "^4.6.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "antd": {\n          "version": "^4.6.3",\n          "css": "antd/dist/antd.css"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "react-dom": {\n          "version": ">=16.0.0"\n        }\n      },\n      "title": "\u52a8\u6001\u6e32\u67d3\uff1a\u4e0d\u540c\u7684\u8282\u70b9\u6709\u4e0d\u540c\u7684\u83dc\u5355",\n      "className": ["canvas-menu-dynamic-config"],\n      "description": "<div class=\\"markdown\\"><p>\u53ef\u4ee5\u6839\u636e\u4e0d\u540c\u7684\u8282\u70b9\u6570\u636e\uff0c\u52a8\u6001\u7684\u751f\u6210\u4e0d\u540c\u7684Menu Items <br /></p></div>",\n      "identifier": "context-menu-dynamic-config"\n    }\n  },\n  \'context-menu-hotkey\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader42 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee42() {\n          return regenerator_default.a.wrap(function _callee42$(_context42) {\n            while (1) {\n              switch (_context42.prev = _context42.next) {\n                case 0:\n                  _context42.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "BXxw"));\n\n                case 2:\n                  return _context42.abrupt("return", _context42.sent.default);\n\n                case 3:\n                case "end":\n                  return _context42.stop();\n              }\n            }\n          }, _callee42);\n        }));\n\n        function loader() {\n          return _loader42.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": hotkeydumi_raw_code\n        },\n        "graph-config.tsx": {\n          "import": "./graph-config",\n          "content": hotkey_graph_configdumi_raw_code\n        },\n        "mock.ts": {\n          "import": "./mock",\n          "content": hotkey_mockdumi_raw_code\n        },\n        "menu-config.tsx": {\n          "import": "./menu-config",\n          "content": hotkey_menu_configdumi_raw_code\n        },\n        "hotkey-config.tsx": {\n          "import": "./hotkey-config",\n          "content": hotkey_configdumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": demos_hotkeydumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": "^16.8.0  || ^17.0.0"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "^4.6.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "antd": {\n          "version": "^4.6.3",\n          "css": "antd/dist/antd.css"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "react-dom": {\n          "version": "^16.8.0  || ^17.0.0"\n        },\n        "@antv/xflow-extension": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow-extension/dist/index.css"\n        },\n        "classnames": {\n          "version": "^2.2.6"\n        },\n        "reflect-metadata": {\n          "version": "^0.1.13"\n        }\n      },\n      "title": "\u642d\u914d\u5feb\u6377\u952e",\n      "className": ["canvas-menu-hotkey"],\n      "description": "<div class=\\"markdown\\"><p>\u4e0eKeyBindings\u7ec4\u4ef6\u914d\u5408\uff0c\u53ef\u4ee5\u5b9e\u73b0\u5feb\u6377\u952e\u548c\u83dc\u5355\u90fd\u89e6\u53d1Command <br /></p></div>",\n      "identifier": "context-menu-hotkey"\n    }\n  },\n  \'context-menu-custom-render\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader43 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee43() {\n          return regenerator_default.a.wrap(function _callee43$(_context43) {\n            while (1) {\n              switch (_context43.prev = _context43.next) {\n                case 0:\n                  _context43.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "7L2j"));\n\n                case 2:\n                  return _context43.abrupt("return", _context43.sent.default);\n\n                case 3:\n                case "end":\n                  return _context43.stop();\n              }\n            }\n          }, _callee43);\n        }));\n\n        function loader() {\n          return _loader43.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": context_menu_demos_custom_renderdumi_raw_code\n        },\n        "graph-config.tsx": {\n          "import": "./graph-config",\n          "content": demos_custom_render_graph_configdumi_raw_code\n        },\n        "mock.ts": {\n          "import": "./mock",\n          "content": demos_custom_render_mockdumi_raw_code\n        },\n        "menu-config.tsx": {\n          "import": "./menu-config",\n          "content": custom_render_menu_configdumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": extension_components_context_menu_demos_custom_renderdumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": ">=16.0.0"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "^4.6.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "antd": {\n          "version": "^4.6.3",\n          "css": "antd/dist/antd.css"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "react-dom": {\n          "version": ">=16.0.0"\n        },\n        "@antv/xflow-extension": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow-extension/dist/index.css"\n        },\n        "classnames": {\n          "version": "^2.2.6"\n        },\n        "reflect-metadata": {\n          "version": "^0.1.13"\n        }\n      },\n      "title": "\u81ea\u5b9a\u4e49\u6e32\u67d3",\n      "className": ["canvas-custom-render"],\n      "description": "<div class=\\"markdown\\"><p>\u5185\u7f6e\u7684\u83dc\u5355\u8865\u6ee1\u8db3\u65f6\uff0c\u53ef\u4ee5\u914d\u7f6e\u81ea\u5b9a\u4e49\u7ec4\u4ef6 <br /></p></div>",\n      "identifier": "context-menu-custom-render"\n    }\n  },\n  \'workspace-panel-basic\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader44 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee44() {\n          return regenerator_default.a.wrap(function _callee44$(_context44) {\n            while (1) {\n              switch (_context44.prev = _context44.next) {\n                case 0:\n                  _context44.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "Yj0D"));\n\n                case 2:\n                  return _context44.abrupt("return", _context44.sent.default);\n\n                case 3:\n                case "end":\n                  return _context44.stop();\n              }\n            }\n          }, _callee44);\n        }));\n\n        function loader() {\n          return _loader44.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": workspace_panel_demos_basicdumi_raw_code\n        },\n        "custom-panel/index.tsx": {\n          "import": "./custom-panel",\n          "content": custom_paneldumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": extension_components_workspace_panel_demos_basicdumi_raw_code\n        },\n        "graph-config.tsx": {\n          "import": "./graph-config",\n          "content": workspace_panel_demos_basic_graph_configdumi_raw_code\n        },\n        "mock.ts": {\n          "import": "./mock",\n          "content": workspace_panel_demos_basic_mockdumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": "^16.8.0  || ^17.0.0"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "^4.6.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "antd": {\n          "version": "^4.6.3",\n          "css": "antd/dist/antd.css"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "react-dom": {\n          "version": "^16.8.0  || ^17.0.0"\n        }\n      },\n      "title": "\u57fa\u7840\u4f7f\u7528",\n      "className": ["custom-panel-demo"],\n      "description": "<div class=\\"markdown\\"><p>\uff5c \u83b7\u53d6app, \u5206\u522b\u4f7f\u7528Model/Command/X6Graph <br /></p></div>",\n      "identifier": "workspace-panel-basic"\n    }\n  },\n  \'getting-started-demo\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader45 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee45() {\n          return regenerator_default.a.wrap(function _callee45$(_context45) {\n            while (1) {\n              switch (_context45.prev = _context45.next) {\n                case 0:\n                  _context45.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "MSDE"));\n\n                case 2:\n                  return _context45.abrupt("return", _context45.sent.default);\n\n                case 3:\n                case "end":\n                  return _context45.stop();\n              }\n            }\n          }, _callee45);\n        }));\n\n        function loader() {\n          return _loader45.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": demodumi_raw_code\n        },\n        "config-graph.tsx": {\n          "import": "./config-graph",\n          "content": demo_config_graphdumi_raw_code\n        },\n        "react-node/node1.tsx": {\n          "import": "./react-node/node1",\n          "content": node1dumi_raw_code\n        },\n        "node1.less": {\n          "import": "./node1.less",\n          "content": react_node_node1dumi_raw_code\n        },\n        "react-node/node2.tsx": {\n          "import": "./react-node/node2",\n          "content": node2dumi_raw_code\n        },\n        "node2.less": {\n          "import": "./node2.less",\n          "content": react_node_node2dumi_raw_code\n        },\n        "react-edge/edge1.tsx": {\n          "import": "./react-edge/edge1",\n          "content": edge1dumi_raw_code\n        },\n        "edge1.less": {\n          "import": "./edge1.less",\n          "content": react_edge_edge1dumi_raw_code\n        },\n        "react-edge/edge2.tsx": {\n          "import": "./react-edge/edge2",\n          "content": edge2dumi_raw_code\n        },\n        "edge2.less": {\n          "import": "./edge2.less",\n          "content": react_edge_edge2dumi_raw_code\n        },\n        "menu-config.tsx": {\n          "import": "./menu-config",\n          "content": demo_menu_configdumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": getting_started_demodumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": ">=16.0.0"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "antd": {\n          "version": "^4.6.3",\n          "css": "antd/dist/antd.css"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "^4.6.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "react-dom": {\n          "version": ">=16.0.0"\n        },\n        "@antv/xflow-extension": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow-extension/dist/index.css"\n        },\n        "classnames": {\n          "version": "^2.2.6"\n        },\n        "reflect-metadata": {\n          "version": "^0.1.13"\n        }\n      },\n      "className": ["quick-start"],\n      "identifier": "getting-started-demo"\n    }\n  },\n  \'dag-basic\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader46 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee46() {\n          return regenerator_default.a.wrap(function _callee46$(_context46) {\n            while (1) {\n              switch (_context46.prev = _context46.next) {\n                case 0:\n                  _context46.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "Xjk0"));\n\n                case 2:\n                  return _context46.abrupt("return", _context46.sent.default);\n\n                case 3:\n                case "end":\n                  return _context46.stop();\n              }\n            }\n          }, _callee46);\n        }));\n\n        function loader() {\n          return _loader46.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": dag_demos_basicdumi_raw_code\n        },\n        "config-graph.tsx": {\n          "import": "./config-graph",\n          "content": demos_basic_config_graphdumi_raw_code\n        },\n        "constant.ts": {\n          "import": "./constant",\n          "content": demos_basic_constantdumi_raw_code\n        },\n        "react-node/dnd-node.tsx": {\n          "import": "./react-node/dnd-node",\n          "content": dnd_nodedumi_raw_code\n        },\n        "dnd-node.less": {\n          "import": "./dnd-node.less",\n          "content": react_node_dnd_nodedumi_raw_code\n        },\n        "react-node/group.tsx": {\n          "import": "./react-node/group",\n          "content": groupdumi_raw_code\n        },\n        "group.less": {\n          "import": "./group.less",\n          "content": react_node_groupdumi_raw_code\n        },\n        "config-cmd.ts": {\n          "import": "./config-cmd",\n          "content": config_cmddumi_raw_code\n        },\n        "service.ts": {\n          "import": "./service",\n          "content": servicedumi_raw_code\n        },\n        "cmd-extensions/index.ts": {\n          "import": "./cmd-extensions",\n          "content": cmd_extensionsdumi_raw_code\n        },\n        "cmd-async-test.ts": {\n          "import": "./cmd-async-test",\n          "content": cmd_async_testdumi_raw_code\n        },\n        "constants.ts": {\n          "import": "./constants",\n          "content": constantsdumi_raw_code\n        },\n        "cmd-deploy.ts": {\n          "import": "./cmd-deploy",\n          "content": cmd_deploydumi_raw_code\n        },\n        "cmd-rename-node-modal.tsx": {\n          "import": "./cmd-rename-node-modal",\n          "content": cmd_rename_node_modaldumi_raw_code\n        },\n        "config-model-service.ts": {\n          "import": "./config-model-service",\n          "content": config_model_servicedumi_raw_code\n        },\n        "config-menu.ts": {\n          "import": "./config-menu",\n          "content": config_menudumi_raw_code\n        },\n        "cmd-extensions/constants.ts": {\n          "import": "./constants",\n          "content": constantsdumi_raw_code\n        },\n        "config-toolbar.ts": {\n          "import": "./config-toolbar",\n          "content": config_toolbardumi_raw_code\n        },\n        "config-keybinding.ts": {\n          "import": "./config-keybinding",\n          "content": config_keybindingdumi_raw_code\n        },\n        "config-dnd-panel.tsx": {\n          "import": "./config-dnd-panel",\n          "content": config_dnd_paneldumi_raw_code\n        },\n        "config-form.tsx": {\n          "import": "./config-form",\n          "content": config_formdumi_raw_code\n        },\n        "form-controls/index.tsx": {\n          "import": "./form-controls",\n          "content": form_controlsdumi_raw_code\n        },\n        "custom-editor.tsx": {\n          "import": "./custom-editor",\n          "content": form_controls_custom_editordumi_raw_code\n        },\n        "link.tsx": {\n          "import": "./link",\n          "content": linkdumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": solutions_dag_demos_basicdumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": "17.0.2"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "^4.6.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "antd": {\n          "version": "^4.6.3",\n          "css": "antd/dist/antd.css"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "react-dom": {\n          "version": ">=16.9.0"\n        },\n        "@antv/xflow-extension": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow-extension/dist/index.css"\n        },\n        "classnames": {\n          "version": "^2.2.6"\n        },\n        "reflect-metadata": {\n          "version": "^0.1.13"\n        }\n      },\n      "className": ["dag-solution"],\n      "identifier": "dag-basic"\n    }\n  },\n  \'er-demos\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader47 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee47() {\n          return regenerator_default.a.wrap(function _callee47$(_context47) {\n            while (1) {\n              switch (_context47.prev = _context47.next) {\n                case 0:\n                  _context47.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "6svi"));\n\n                case 2:\n                  return _context47.abrupt("return", _context47.sent.default);\n\n                case 3:\n                case "end":\n                  return _context47.stop();\n              }\n            }\n          }, _callee47);\n        }));\n\n        function loader() {\n          return _loader47.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": er_demosdumi_raw_code\n        },\n        "GraphToolbar/index.tsx": {\n          "import": "./GraphToolbar/index",\n          "content": GraphToolbardumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": solutions_er_demosdumi_raw_code\n        },\n        "config-graph.tsx": {\n          "import": "./config-graph",\n          "content": er_demos_config_graphdumi_raw_code\n        },\n        "config-cmd.ts": {\n          "import": "./config-cmd",\n          "content": demos_config_cmddumi_raw_code\n        },\n        "service.ts": {\n          "import": "./service",\n          "content": demos_servicedumi_raw_code\n        },\n        "mock.ts": {\n          "import": "./mock",\n          "content": er_demos_mockdumi_raw_code\n        },\n        "config-keybinding.ts": {\n          "import": "./config-keybinding",\n          "content": demos_config_keybindingdumi_raw_code\n        },\n        "CreateRelationModal/index.tsx": {\n          "import": "./CreateRelationModal",\n          "content": CreateRelationModaldumi_raw_code\n        },\n        "react-node/Entity.tsx": {\n          "import": "./react-node/Entity",\n          "content": Entitydumi_raw_code\n        },\n        "const.ts": {\n          "import": "../const",\n          "content": constdumi_raw_code\n        },\n        "Entity.less": {\n          "import": "./Entity.less",\n          "content": react_node_Entitydumi_raw_code\n        },\n        "react-edge/Relation.tsx": {\n          "import": "./react-edge/Relation",\n          "content": Relationdumi_raw_code\n        },\n        "Relation.less": {\n          "import": "./Relation.less",\n          "content": react_edge_Relationdumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": ">=16.0.0"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "antd": {\n          "version": "4.16.13",\n          "css": "antd/dist/antd.css"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "4.7.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "react-dom": {\n          "version": ">=16.0.0"\n        }\n      },\n      "identifier": "er-demos"\n    }\n  },\n  \'flow-basic\': {\n    component: Object(index_esm["dynamic"])({\n      loader: function () {\n        var _loader48 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee48() {\n          return regenerator_default.a.wrap(function _callee48$(_context48) {\n            while (1) {\n              switch (_context48.prev = _context48.next) {\n                case 0:\n                  _context48.next = 2;\n                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(3), __webpack_require__.e(66), __webpack_require__.e(4)]).then(__webpack_require__.bind(null, "RG0s"));\n\n                case 2:\n                  return _context48.abrupt("return", _context48.sent.default);\n\n                case 3:\n                case "end":\n                  return _context48.stop();\n              }\n            }\n          }, _callee48);\n        }));\n\n        function loader() {\n          return _loader48.apply(this, arguments);\n        }\n\n        return loader;\n      }()\n    }),\n    previewerProps: {\n      "sources": {\n        "_": {\n          "tsx": flow_demos_basicdumi_raw_code\n        },\n        "config-graph.tsx": {\n          "import": "./config-graph",\n          "content": flow_demos_basic_config_graphdumi_raw_code\n        },\n        "react-node/dnd-node.tsx": {\n          "import": "./react-node/dnd-node",\n          "content": basic_react_node_dnd_nodedumi_raw_code\n        },\n        "dnd-node.less": {\n          "import": "./dnd-node.less",\n          "content": demos_basic_react_node_dnd_nodedumi_raw_code\n        },\n        "constant.ts": {\n          "import": "./constant",\n          "content": flow_demos_basic_constantdumi_raw_code\n        },\n        "config-cmd.ts": {\n          "import": "./config-cmd",\n          "content": basic_config_cmddumi_raw_code\n        },\n        "service.ts": {\n          "import": "./service",\n          "content": basic_servicedumi_raw_code\n        },\n        "cmd-extensions/index.ts": {\n          "import": "./cmd-extensions",\n          "content": basic_cmd_extensionsdumi_raw_code\n        },\n        "cmd-clear.ts": {\n          "import": "./cmd-clear",\n          "content": cmd_cleardumi_raw_code\n        },\n        "constants.ts": {\n          "import": "./constants",\n          "content": cmd_extensions_constantsdumi_raw_code\n        },\n        "cmd-export.ts": {\n          "import": "./cmd-export",\n          "content": cmd_exportdumi_raw_code\n        },\n        "cmd-rename-node-modal.tsx": {\n          "import": "./cmd-rename-node-modal",\n          "content": cmd_extensions_cmd_rename_node_modaldumi_raw_code\n        },\n        "config-ctx-service.ts": {\n          "import": "./config-ctx-service",\n          "content": config_ctx_servicedumi_raw_code\n        },\n        "config-menu.ts": {\n          "import": "./config-menu",\n          "content": basic_config_menudumi_raw_code\n        },\n        "cmd-extensions/constants.ts": {\n          "import": "./constants",\n          "content": cmd_extensions_constantsdumi_raw_code\n        },\n        "config-toolbar.ts": {\n          "import": "./config-toolbar",\n          "content": basic_config_toolbardumi_raw_code\n        },\n        "config-keybinding.ts": {\n          "import": "./config-keybinding",\n          "content": basic_config_keybindingdumi_raw_code\n        },\n        "config-dnd-panel.tsx": {\n          "import": "./config-dnd-panel",\n          "content": basic_config_dnd_paneldumi_raw_code\n        },\n        "config-form.tsx": {\n          "import": "./config-form",\n          "content": basic_config_formdumi_raw_code\n        },\n        "form-controls/index.tsx": {\n          "import": "./form-controls",\n          "content": basic_form_controlsdumi_raw_code\n        },\n        "custom-editor.tsx": {\n          "import": "./custom-editor",\n          "content": basic_form_controls_custom_editordumi_raw_code\n        },\n        "link.tsx": {\n          "import": "./link",\n          "content": form_controls_linkdumi_raw_code\n        },\n        "index.less": {\n          "import": "./index.less",\n          "content": solutions_flow_demos_basicdumi_raw_code\n        }\n      },\n      "dependencies": {\n        "react": {\n          "version": "17.0.2"\n        },\n        "@antv/xflow": {\n          "version": "0.3.1-beta.9",\n          "css": "@antv/xflow/dist/index.css"\n        },\n        "@antv/layout": {\n          "version": "^0.0.5"\n        },\n        "@ant-design/icons": {\n          "version": "^4.6.0"\n        },\n        "@antv/x6": {\n          "version": "^1.12.11",\n          "css": "@antv/x6/dist/x6.css"\n        },\n        "@antv/x6-react-components": {\n          "version": "1.1.14-beta.1",\n          "css": "@antv/x6-react-components/dist/index.css"\n        },\n        "@antv/x6-react-shape": {\n          "version": "^1.2.5"\n        },\n        "antd": {\n          "version": "^4.6.3",\n          "css": "antd/dist/antd.css"\n        },\n        "lodash": {\n          "version": "^4.17.20"\n        },\n        "react-dom": {\n          "version": "^16.8.0  || ^17.0.0"\n        },\n        "mana-syringe": {\n          "version": "0.2.2"\n        }\n      },\n      "identifier": "flow-basic"\n    }\n  }\n});\n\n//# sourceURL=webpack:///./src/.umi-production/dumi/demos/index.ts_+_241_modules?')},ekZX:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("jem/");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("q1tI");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var rc_tabs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("V8Cu");\n/* harmony import */ var dumi__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("9kvl");\n/* harmony import */ var dumi_theme__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("2tE6");\n/* harmony import */ var dumi_theme__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(dumi_theme__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _useCodeSandbox__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("BlwA");\n/* harmony import */ var dumi_theme_default_src_builtins_SourceCode__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("SfYC");\n/* harmony import */ var _Previewer_less__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("oeoJ");\n/* harmony import */ var _Previewer_less__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_Previewer_less__WEBPACK_IMPORTED_MODULE_7__);\n\n\n // @ts-ignore\n\n\n\n\n\n\n\n/**\n * get source code type for file\n * @param file    file path\n * @param source  file source object\n */\nfunction getSourceType(file, source) {\n  var _file$match;\n\n  // use file extension as source type first\n  var type = (_file$match = file.match(/\\.(\\w+)$/)) === null || _file$match === void 0 ? void 0 : _file$match[1];\n\n  if (!type) {\n    type = source.tsx ? \'tsx\' : \'jsx\';\n  }\n\n  return type;\n}\n\nvar Previewer = oProps => {\n  var _props$hideActions, _props$hideActions2, _props$hideActions3;\n\n  var demoRef = Object(react__WEBPACK_IMPORTED_MODULE_1__["useRef"])();\n\n  var _useContext = Object(react__WEBPACK_IMPORTED_MODULE_1__["useContext"])(dumi_theme__WEBPACK_IMPORTED_MODULE_4__["context"]),\n      locale = _useContext.locale;\n\n  var props = Object(dumi_theme__WEBPACK_IMPORTED_MODULE_4__["useLocaleProps"])(locale, oProps);\n  var builtinDemoUrl = Object(dumi_theme__WEBPACK_IMPORTED_MODULE_4__["useDemoUrl"])(props.identifier);\n  var demoUrl = props.demoUrl || builtinDemoUrl;\n  var isActive = (dumi__WEBPACK_IMPORTED_MODULE_3__[/* history */ "a"] === null || dumi__WEBPACK_IMPORTED_MODULE_3__[/* history */ "a"] === void 0 ? void 0 : dumi__WEBPACK_IMPORTED_MODULE_3__[/* history */ "a"].location.hash) === "#".concat(props.identifier);\n  var isSingleFile = Object.keys(props.sources).length === 1;\n  var openCSB = Object(_useCodeSandbox__WEBPACK_IMPORTED_MODULE_5__[/* useCodeSandbox */ "a"])((_props$hideActions = props.hideActions) !== null && _props$hideActions !== void 0 && _props$hideActions.includes(\'CSB\') ? null : props);\n  var openRiddle = Object(dumi_theme__WEBPACK_IMPORTED_MODULE_4__["useRiddle"])((_props$hideActions2 = props.hideActions) !== null && _props$hideActions2 !== void 0 && _props$hideActions2.includes(\'RIDDLE\') ? null : props);\n\n  var _useMotions = Object(dumi_theme__WEBPACK_IMPORTED_MODULE_4__["useMotions"])(props.motions || [], demoRef.current),\n      _useMotions2 = Object(_Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(_useMotions, 2),\n      execMotions = _useMotions2[0],\n      isMotionRunning = _useMotions2[1];\n\n  var _useCopy = Object(dumi_theme__WEBPACK_IMPORTED_MODULE_4__["useCopy"])(),\n      _useCopy2 = Object(_Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(_useCopy, 2),\n      copyCode = _useCopy2[0],\n      copyStatus = _useCopy2[1];\n\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_1__["useState"])(() => props.sources._ ? \'_\' : Object.keys(props.sources)[0]),\n      _useState2 = Object(_Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(_useState, 2),\n      currentFile = _useState2[0],\n      setCurrentFile = _useState2[1];\n\n  var _useState3 = Object(react__WEBPACK_IMPORTED_MODULE_1__["useState"])(getSourceType(currentFile, props.sources[currentFile])),\n      _useState4 = Object(_Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(_useState3, 2),\n      sourceType = _useState4[0],\n      setSourceType = _useState4[1];\n\n  var _useState5 = Object(react__WEBPACK_IMPORTED_MODULE_1__["useState"])(Boolean(props.defaultShowCode)),\n      _useState6 = Object(_Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(_useState5, 2),\n      showSource = _useState6[0],\n      setShowSource = _useState6[1];\n\n  var _useState7 = Object(react__WEBPACK_IMPORTED_MODULE_1__["useState"])(Math.random()),\n      _useState8 = Object(_Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(_useState7, 2),\n      iframeKey = _useState8[0],\n      setIframeKey = _useState8[1];\n\n  var currentFileCode = props.sources[currentFile][sourceType] || props.sources[currentFile].content;\n  var playgroundUrl = Object(dumi_theme__WEBPACK_IMPORTED_MODULE_4__["useTSPlaygroundUrl"])(locale, currentFileCode);\n  var iframeRef = Object(react__WEBPACK_IMPORTED_MODULE_1__["useRef"])();\n\n  var _usePrefersColor = Object(dumi_theme__WEBPACK_IMPORTED_MODULE_4__["usePrefersColor"])(),\n      _usePrefersColor2 = Object(_Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(_usePrefersColor, 1),\n      color = _usePrefersColor2[0]; // re-render iframe if prefers color changed\n\n\n  Object(react__WEBPACK_IMPORTED_MODULE_1__["useEffect"])(() => {\n    setIframeKey(Math.random());\n  }, [color]);\n\n  function handleFileChange(filename) {\n    setCurrentFile(filename);\n    setSourceType(getSourceType(filename, props.sources[filename]));\n  }\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {\n    style: props.style,\n    className: [props.className, \'__dumi-default-previewer\', isActive ? \'__dumi-default-previewer-target\' : \'\'].filter(Boolean).join(\' \'),\n    id: props.identifier,\n    "data-debug": props.debug || undefined,\n    "data-iframe": props.iframe || undefined\n  }, props.iframe && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {\n    className: "__dumi-default-previewer-browser-nav"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {\n    ref: demoRef,\n    className: "__dumi-default-previewer-demo",\n    style: {\n      transform: props.transform ? \'translate(0, 0)\' : undefined,\n      padding: props.compact || props.iframe && props.compact !== false ? \'0\' : undefined,\n      background: props.background\n    }\n  }, props.iframe ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("iframe", {\n    title: "dumi-previewer",\n    style: {\n      // both compatible with unit or non-unit, such as 100, 100px, 100vh\n      height: String(props.iframe).replace(/(\\d)$/, \'$1px\')\n    },\n    key: iframeKey,\n    src: demoUrl,\n    ref: iframeRef\n  }) : props.children), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {\n    className: "__dumi-default-previewer-desc",\n    "data-title": props.title\n  }, props.title && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(dumi_theme__WEBPACK_IMPORTED_MODULE_4__["AnchorLink"], {\n    to: "#".concat(props.identifier)\n  }, props.title), props.description && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {\n    // eslint-disable-next-line\n    dangerouslySetInnerHTML: {\n      __html: props.description\n    }\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {\n    className: "__dumi-default-previewer-actions"\n  }, openCSB && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("button", {\n    title: "Open demo on CodeSandbox.io",\n    className: "__dumi-default-icon",\n    role: "codesandbox",\n    onClick: openCSB\n  }), openRiddle && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("button", {\n    title: "Open demo on Riddle",\n    className: "__dumi-default-icon",\n    role: "riddle",\n    onClick: openRiddle\n  }), props.motions && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("button", {\n    title: "Execute motions",\n    className: "__dumi-default-icon",\n    role: "motions",\n    disabled: isMotionRunning,\n    onClick: () => execMotions()\n  }), props.iframe && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("button", {\n    title: "Reload demo iframe page",\n    className: "__dumi-default-icon",\n    role: "refresh",\n    onClick: () => setIframeKey(Math.random())\n  }), !((_props$hideActions3 = props.hideActions) !== null && _props$hideActions3 !== void 0 && _props$hideActions3.includes(\'EXTERNAL\')) && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(dumi_theme__WEBPACK_IMPORTED_MODULE_4__["Link"], {\n    target: "_blank",\n    to: demoUrl\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("button", {\n    title: "Open demo in new tab",\n    className: "__dumi-default-icon",\n    role: "open-demo",\n    type: "button"\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("span", null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("button", {\n    title: "Copy source code",\n    className: "__dumi-default-icon",\n    role: "copy",\n    "data-status": copyStatus,\n    onClick: () => copyCode(currentFileCode)\n  }), sourceType === \'tsx\' && showSource && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(dumi_theme__WEBPACK_IMPORTED_MODULE_4__["Link"], {\n    target: "_blank",\n    to: playgroundUrl\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("button", {\n    title: "Get JSX via TypeScript Playground",\n    className: "__dumi-default-icon",\n    role: "change-tsx",\n    type: "button"\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("button", {\n    title: "Toggle source code panel",\n    className: "__dumi-default-icon".concat(showSource ? \' __dumi-default-btn-expand\' : \'\'),\n    role: "source",\n    type: "button",\n    onClick: () => setShowSource(!showSource)\n  })), showSource && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {\n    className: "__dumi-default-previewer-source-wrapper"\n  }, !isSingleFile && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(rc_tabs__WEBPACK_IMPORTED_MODULE_2__[/* default */ "b"], {\n    className: "__dumi-default-previewer-source-tab",\n    prefixCls: "__dumi-default-tabs",\n    moreIcon: "\\xB7\\xB7\\xB7",\n    defaultActiveKey: currentFile,\n    onChange: handleFileChange\n  }, Object.keys(props.sources).map(filename => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(rc_tabs__WEBPACK_IMPORTED_MODULE_2__[/* TabPane */ "a"], {\n    tab: filename === \'_\' ? "index.".concat(getSourceType(filename, props.sources[filename])) : filename,\n    key: filename\n  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {\n    className: "__dumi-default-previewer-source"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(dumi_theme_default_src_builtins_SourceCode__WEBPACK_IMPORTED_MODULE_6__[/* default */ "a"], {\n    code: currentFileCode,\n    lang: sourceType,\n    showCopy: false\n  }))));\n};\n\n/* harmony default export */ __webpack_exports__["default"] = (Previewer);\n\n//# sourceURL=webpack:///./.dumi/theme/builtins/Previewer.tsx?')},oeoJ:function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./.dumi/theme/builtins/Previewer.less?")},x2v5:function(module){eval('module.exports = JSON.parse("{}");\n\n//# sourceURL=webpack:///./src/.umi-production/dumi/apis.json?')}}]);