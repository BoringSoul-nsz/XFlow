(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{"+5ps":function(module,__webpack_exports__,__webpack_require__){"use strict";eval(`// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "useGraphConfig", function() { return /* binding */ useGraphConfig; });

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/objectSpread2.js
var objectSpread2 = __webpack_require__("BcGY");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__("KOBo");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__("RY7m");
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("q1tI");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ../xflow/es/index.js + 271 modules
var es = __webpack_require__("mqVf");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/lodash/lodash.js
var lodash = __webpack_require__("nsO7");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-config-form/demos/target-type/mock.ts

 // NodeConfig

var NODE_COMMON_PROPS = {
  width: 160,
  height: 32
}; // NodeConfig

var EDGE_COMMON_PROPS = {
  attrs: {
    line: {
      targetMarker: {
        name: 'block',
        width: 4,
        height: 8
      },
      strokeDasharray: '',
      stroke: '#A2B1C3',
      strokeWidth: 1
    }
  }
}; // mock data

var getGraphData = () => {
  var nodes = [Object(objectSpread2["a" /* default */])({
    id: 'node1',
    label: '\u7B97\u6CD5\u8282\u70B9-1'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node2',
    label: '\u7B97\u6CD5\u8282\u70B9-2'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node3',
    label: '\u7B97\u6CD5\u8282\u70B9-3'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node4',
    label: '\u7B97\u6CD5\u8282\u70B9-4'
  }, NODE_COMMON_PROPS)];
  var edges = [Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node2',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node2-input-1'
  }, EDGE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node3',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node3-input-1'
  }, EDGE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node4',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node4-input-1'
  }, EDGE_COMMON_PROPS)];
  return {
    nodes: nodes,
    edges: edges
  };
};
// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-config-form/demos/target-type/graph-config.tsx




var onLoad = /*#__PURE__*/function () {
  var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(app) {
    var res, _res$contextProvider$, graphData;

    return regenerator_default.a.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_LAYOUT.id, {
              layoutType: 'dagre',
              layoutOptions: {
                type: 'dagre',

                /** \u5E03\u5C40\u65B9\u5411 */
                rankdir: 'TB',

                /** \u8282\u70B9\u95F4\u8DDD */
                nodesep: 60,

                /** \u5C42\u95F4\u8DDD */
                ranksep: 30
              },
              graphData: getGraphData()
            });

          case 2:
            res = _context.sent;
            _res$contextProvider$ = res.contextProvider().getResult(), graphData = _res$contextProvider$.graphData; // render

            _context.next = 6;
            return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_RENDER.id, {
              graphData: graphData
            });

          case 6:
            _context.next = 8;
            return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_ZOOM.id, {
              factor: 'real'
            });

          case 8:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function onLoad(_x) {
    return _ref.apply(this, arguments);
  };
}();
// EXTERNAL MODULE: ../xflow/dist/index.css
var dist = __webpack_require__("1MRj");

// EXTERNAL MODULE: ./docs/tutorial/extension-components/canvas-config-form/demos/target-type/index.less
var target_type = __webpack_require__("D+MW");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-config-form/demos/target-type/index.tsx




/**
 * title: \u914D\u7F6E\u8054\u52A8\u5BF9\u8C61
 * desc: |
 *  \u652F\u6301 'edge' \u9009\u4E2D\u65F6\u66F4\u65B0\u8868\u5355  <br>
 *  \u9ED8\u8BA4\u652F\u6301['node', 'canvas']\u9009\u4E2D\u65F6\uFF0C\u66F4\u65B0\u8868\u5355\u7684\u6E32\u67D3\u3002 <br>
 *  \u53EF\u4EE5\u901A\u8FC7 targetType \u5C5E\u6027\u6765\u652F\u6301\u66F4\u591A\u5143\u7D20\u7684\u9009\u4E2D\u65F6\u66F4\u65B0\u8868\u5355\uFF1A'edge','group' <br>
 */






/**  Demo Props  */

/**  graphConfig\uFF1A\u914D\u7F6EGraph  */
var useGraphConfig = Object(es["M" /* createGraphConfig */])(graphConfig => {
  graphConfig.setDefaultNodeRender(props => {
    return /*#__PURE__*/react_default.a.createElement("div", {
      className: "react-node"
    }, " ", props.data.label, " ");
  });
});
var NsJsonForm;

(function (_NsJsonForm) {
  /** ControlShape\u7684Enum */
  var ControlShape = es["z" /* NsJsonSchemaForm */].ControlShape;
  /** \u4FDD\u5B58form\u7684values */

  var formValueUpdateService = _NsJsonForm.formValueUpdateService = /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(args) {
      var values, commandService, targetData, updateNode, updateEdge, data;
      return regenerator_default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              values = args.values, commandService = args.commandService, targetData = args.targetData;

              updateNode = node => {
                return commandService.executeCommand(es["J" /* XFlowNodeCommands */].UPDATE_NODE.id, {
                  nodeConfig: node
                });
              };

              updateEdge = edge => {
                return commandService.executeCommand(es["G" /* XFlowEdgeCommands */].UPDATE_EDGE.id, {
                  edgeConfig: edge
                });
              };

              data = Object(objectSpread2["a" /* default */])({}, targetData);
              values.forEach(val => {
                Object(lodash["set"])(data, val.name, val.value);
              });
              console.log('formValueUpdateService  values:', values, data);

              if (args.targetType === 'edge') {
                updateEdge(data);
              } else if (args.targetType === 'node') {
                updateNode(data);
              }

            case 7:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function (_x) {
      return _ref.apply(this, arguments);
    };
  }();

  var formSchemaService = _NsJsonForm.formSchemaService = /*#__PURE__*/function () {
    var _ref2 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee2(args) {
      var targetData, targetType;
      return regenerator_default.a.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              targetData = args.targetData, targetType = args.targetType;
              console.log("formSchemaService args:", args);

              if (targetData) {
                _context2.next = 4;
                break;
              }

              return _context2.abrupt("return", {
                tabs: [{
                  /** Tab\u7684title */
                  name: '\u753B\u5E03\u914D\u7F6E',
                  groups: []
                }]
              });

            case 4:
              if (!(targetType === 'edge')) {
                _context2.next = 6;
                break;
              }

              return _context2.abrupt("return", {
                /** \u914D\u7F6E\u4E00\u4E2ATab */
                tabs: [{
                  /** Tab\u7684title */
                  name: '\u8FB9\u914D\u7F6E',
                  groups: [{
                    name: 'group1',
                    controls: [{
                      name: 'label',
                      label: 'Edge Label',
                      shape: ControlShape.INPUT,
                      value: targetData.label
                    }]
                  }]
                }]
              });

            case 6:
              return _context2.abrupt("return", {
                /** \u914D\u7F6E\u4E00\u4E2ATab */
                tabs: [{
                  /** Tab\u7684title */
                  name: '\u8282\u70B9\u914D\u7F6E',
                  groups: [{
                    name: 'group1',
                    controls: [{
                      name: 'label',
                      label: '\u8282\u70B9Label',
                      shape: ControlShape.INPUT,
                      value: targetData.label
                    }, {
                      name: 'x',
                      label: 'x',
                      shape: ControlShape.FLOAT,
                      value: targetData.x
                    }, {
                      name: 'y',
                      label: 'y',
                      shape: ControlShape.FLOAT,
                      value: targetData.y
                    }]
                  }]
                }]
              });

            case 7:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    }));

    return function (_x2) {
      return _ref2.apply(this, arguments);
    };
  }();
})(NsJsonForm || (NsJsonForm = {}));

var XFlowDemo = props => {
  var graphConfig = useGraphConfig(props);
  return /*#__PURE__*/react_default.a.createElement(es["B" /* XFlow */], {
    onLoad: onLoad,
    className: "xflow-workspace"
  }, /*#__PURE__*/react_default.a.createElement(es["D" /* XFlowCanvas */], {
    config: graphConfig,
    position: {
      top: 0,
      bottom: 0,
      left: 0,
      right: 290
    }
  }), /*#__PURE__*/react_default.a.createElement(es["r" /* JsonSchemaForm */], {
    targetType: ['node', 'edge', 'canvas'],
    formSchemaService: NsJsonForm.formSchemaService,
    formValueUpdateService: NsJsonForm.formValueUpdateService,
    position: {
      top: 0,
      bottom: 0,
      right: 0,
      width: 290
    }
  }));
};

/* harmony default export */ var demos_target_type = __webpack_exports__["default"] = (XFlowDemo);

//# sourceURL=webpack:///./docs/tutorial/extension-components/canvas-config-form/demos/target-type/index.tsx_+_2_modules?`)},"/9bf":function(module,__webpack_exports__,__webpack_require__){"use strict";eval(`// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("q1tI");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ../xflow/es/index.js + 271 modules
var es = __webpack_require__("mqVf");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__("KOBo");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__("RY7m");
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/objectSpread2.js
var objectSpread2 = __webpack_require__("BcGY");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-node-panel/demos/search/mock.ts

 // NodeConfig

var NODE_COMMON_PROPS = {
  width: 160,
  height: 32
}; // NodeConfig

var EDGE_COMMON_PROPS = {
  attrs: {
    line: {
      targetMarker: {
        name: 'block',
        width: 4,
        height: 8
      },
      strokeDasharray: '',
      stroke: '#A2B1C3',
      strokeWidth: 1
    }
  }
}; // mock data

var getGraphData = () => {
  var nodes = [Object(objectSpread2["a" /* default */])({
    id: 'node1',
    label: '\u7B97\u6CD5\u8282\u70B9-1'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node2',
    label: '\u7B97\u6CD5\u8282\u70B9-2'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node3',
    label: '\u7B97\u6CD5\u8282\u70B9-3'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node4',
    label: '\u7B97\u6CD5\u8282\u70B9-4'
  }, NODE_COMMON_PROPS)];
  var edges = [Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node2',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node2-input-1'
  }, EDGE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node3',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node3-input-1'
  }, EDGE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node4',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node4-input-1'
  }, EDGE_COMMON_PROPS)];
  return {
    nodes: nodes,
    edges: edges
  };
};
// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-node-panel/demos/search/graph-config.tsx






var onLoad = /*#__PURE__*/function () {
  var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(app) {
    var res, _res$contextProvider$, graphData;

    return regenerator_default.a.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_LAYOUT.id, {
              layoutType: 'dagre',
              layoutOptions: {
                type: 'dagre',

                /** \u5E03\u5C40\u65B9\u5411 */
                rankdir: 'TB',

                /** \u8282\u70B9\u95F4\u8DDD */
                nodesep: 60,

                /** \u5C42\u95F4\u8DDD */
                ranksep: 30
              },
              graphData: getGraphData()
            });

          case 2:
            res = _context.sent;
            _res$contextProvider$ = res.contextProvider().getResult(), graphData = _res$contextProvider$.graphData; // render

            _context.next = 6;
            return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_RENDER.id, {
              graphData: graphData
            });

          case 6:
            _context.next = 8;
            return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_ZOOM.id, {
              factor: 'real'
            });

          case 8:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function onLoad(_x) {
    return _ref.apply(this, arguments);
  };
}();
/**  graphConfig\uFF1A\u914D\u7F6EGraph  */

var useGraphConfig = Object(es["M" /* createGraphConfig */])(graphConfig => {
  graphConfig.setDefaultNodeRender(props => {
    return /*#__PURE__*/react_default.a.createElement("div", {
      className: "react-dnd-node"
    }, " ", props.data.label, " ");
  });
});
// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-node-panel/demos/search/comannd-utils.tsx


var addNode = (cmd, nodeConfig) => {
  return cmd.executeCommand(es["J" /* XFlowNodeCommands */].ADD_NODE.id, {
    nodeConfig: Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({}, nodeConfig), {}, {
      id: Object(es["X" /* uuidv4 */])(),
      width: 190,
      height: 32
    })
  });
};
// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-node-panel/demos/search/dnd-tree-config.tsx





var DND_RENDER_ID = 'DND_RENDER_ID';
var onNodeDrop = /*#__PURE__*/function () {
  var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(nodeConfig, commandService, modelService) {
    return regenerator_default.a.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            addNode(commandService, nodeConfig);

          case 1:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function onNodeDrop(_x, _x2, _x3) {
    return _ref.apply(this, arguments);
  };
}();
var treeDataService = /*#__PURE__*/function () {
  var _ref2 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee2(meta, modelService) {
    return regenerator_default.a.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            return _context2.abrupt("return", [{
              id: '1',
              label: '\u6570\u636E\u8BFB\u5199',
              parentId: '',
              renderKey: es["E" /* XFlowConstants */].XFLOW_DEFAULT_NODE
            }, {
              id: '2',
              label: '\u7B97\u6CD5\u7EC4\u4EF61',
              parentId: '1',
              width: 190,
              height: 32,
              renderKey: es["E" /* XFlowConstants */].XFLOW_DEFAULT_NODE,
              popoverContent: /*#__PURE__*/react_default.a.createElement("div", null, " test ")
            }, {
              id: '3',
              label: '\u7B97\u6CD5\u7EC4\u4EF62',
              parentId: '1',
              renderKey: es["E" /* XFlowConstants */].XFLOW_DEFAULT_NODE
            }, {
              id: '4',
              label: '\u7B97\u6CD5\u7EC4\u4EF63',
              parentId: '1',
              renderKey: es["E" /* XFlowConstants */].XFLOW_DEFAULT_NODE
            }, {
              id: '5',
              label: '\u6570\u636E\u52A0\u5DE5',
              parentId: '',
              renderKey: es["E" /* XFlowConstants */].XFLOW_DEFAULT_NODE
            }, {
              id: '6',
              label: '\u7B97\u6CD5\u7EC4\u4EF64',
              parentId: '5',
              renderKey: es["E" /* XFlowConstants */].XFLOW_DEFAULT_NODE
            }, {
              id: '7',
              label: '\u7B97\u6CD5\u7EC4\u4EF65',
              parentId: '5',
              renderKey: es["E" /* XFlowConstants */].XFLOW_DEFAULT_NODE
            }, {
              id: '8',
              label: '\u7B97\u6CD5\u7EC4\u4EF66',
              parentId: '5',
              renderKey: es["E" /* XFlowConstants */].XFLOW_DEFAULT_NODE
            }, {
              id: '9',
              label: '\u6A21\u578B\u8BAD\u7EC3',
              parentId: '',
              renderKey: es["E" /* XFlowConstants */].XFLOW_DEFAULT_NODE
            }, {
              id: '10',
              label: '\u7B97\u6CD5\u7EC4\u4EF67',
              parentId: '9',
              renderKey: es["E" /* XFlowConstants */].XFLOW_DEFAULT_NODE
            }, {
              id: '11',
              label: '\u7B97\u6CD5\u7EC4\u4EF68',
              parentId: '9',
              renderKey: es["E" /* XFlowConstants */].XFLOW_DEFAULT_NODE
            }, {
              id: '12',
              label: '\u7B97\u6CD5\u7EC4\u4EF69',
              parentId: '9',
              renderKey: es["E" /* XFlowConstants */].XFLOW_DEFAULT_NODE
            }]);

          case 1:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));

  return function treeDataService(_x4, _x5) {
    return _ref2.apply(this, arguments);
  };
}();
var searchService = /*#__PURE__*/function () {
  var _ref3 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee3() {
    var treeNodeList,
        keyword,
        list,
        _args3 = arguments;
    return regenerator_default.a.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            treeNodeList = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : [];
            keyword = _args3.length > 1 ? _args3[1] : undefined;
            list = treeNodeList.filter(i => i.isDirectory || i.label.includes(keyword));
            console.log(list, keyword, treeNodeList);
            return _context3.abrupt("return", list);

          case 5:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  }));

  return function searchService() {
    return _ref3.apply(this, arguments);
  };
}();
// EXTERNAL MODULE: ./docs/tutorial/extension-components/canvas-node-panel/demos/search/index.less
var search = __webpack_require__("VJBD");

// EXTERNAL MODULE: ../xflow/dist/index.css
var dist = __webpack_require__("1MRj");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-node-panel/demos/search/index.tsx
/**
 * title: \u652F\u6301\u641C\u7D22
 * desc: |
 *  \u914D\u7F6E searchService \u4F1A\u652F\u6301\u641C\u7D22 <br>
 */








var XFlowDemo = props => {
  var graphConfig = useGraphConfig(props);
  return /*#__PURE__*/react_default.a.createElement(es["B" /* XFlow */], {
    onLoad: onLoad,
    className: "xflow-workspace"
  }, /*#__PURE__*/react_default.a.createElement(es["w" /* NodeTreePanel */], {
    searchService: searchService,
    onNodeDrop: onNodeDrop,
    treeDataService: treeDataService,
    position: {
      top: 0,
      bottom: 0,
      left: 0,
      width: 290
    }
  }), /*#__PURE__*/react_default.a.createElement(es["D" /* XFlowCanvas */], {
    config: graphConfig,
    position: {
      top: 0,
      bottom: 0,
      left: 290,
      right: 0
    }
  }));
};

/* harmony default export */ var demos_search = __webpack_exports__["default"] = (XFlowDemo);

//# sourceURL=webpack:///./docs/tutorial/extension-components/canvas-node-panel/demos/search/index.tsx_+_4_modules?`)},"4iYd":function(module,__webpack_exports__,__webpack_require__){"use strict";eval(`// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "useGraphConfig", function() { return /* binding */ useGraphConfig; });

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__("KOBo");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__("RY7m");
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("q1tI");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ../xflow/es/index.js + 271 modules
var es = __webpack_require__("mqVf");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/objectSpread2.js
var objectSpread2 = __webpack_require__("BcGY");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-snapline/demos/basic/mock.ts

 // NodeConfig

var NODE_COMMON_PROPS = {
  width: 160,
  height: 32
}; // NodeConfig

var EDGE_COMMON_PROPS = {
  attrs: {
    line: {
      targetMarker: {
        name: 'block',
        width: 4,
        height: 8
      },
      strokeDasharray: '',
      stroke: '#A2B1C3',
      strokeWidth: 1
    }
  }
}; // mock data

var getGraphData = () => {
  var nodes = [Object(objectSpread2["a" /* default */])({
    id: 'node1',
    label: '\u7B97\u6CD5\u8282\u70B9-1'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node2',
    label: '\u7B97\u6CD5\u8282\u70B9-2'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node3',
    label: '\u7B97\u6CD5\u8282\u70B9-3'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node4',
    label: '\u7B97\u6CD5\u8282\u70B9-4'
  }, NODE_COMMON_PROPS)];
  var edges = [Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node2',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node2-input-1'
  }, EDGE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node3',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node3-input-1'
  }, EDGE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node4',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node4-input-1'
  }, EDGE_COMMON_PROPS)];
  return {
    nodes: nodes,
    edges: edges
  };
};
// EXTERNAL MODULE: ./docs/tutorial/extension-components/canvas-snapline/demos/basic/index.less
var basic = __webpack_require__("LzTH");

// EXTERNAL MODULE: ../xflow/dist/index.css
var dist = __webpack_require__("1MRj");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-snapline/demos/basic/index.tsx



/**
 * title: \u57FA\u7840\u4F7F\u7528
 * desc:  \u653E\u7F6E\u5728XFlowCanvas\u7EC4\u4EF6\u5185\u90E8\u751F\u6548
 */





/**  Demo Props  */

/**  graphConfig\uFF1A\u914D\u7F6EGraph  */
var useGraphConfig = Object(es["M" /* createGraphConfig */])(graphConfig => {
  graphConfig.setDefaultNodeRender(props => {
    return /*#__PURE__*/react_default.a.createElement("div", {
      className: "react-node"
    }, " ", props.data.label, " ");
  });
});

var XFlowDemo = props => {
  var graphConfig = useGraphConfig(props);

  var onLoad = /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(app) {
      var res, _res$contextProvider$, graphData;

      return regenerator_default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_LAYOUT.id, {
                layoutType: 'dagre',
                layoutOptions: {
                  type: 'dagre',

                  /** \u5E03\u5C40\u65B9\u5411 */
                  rankdir: 'TB',

                  /** \u8282\u70B9\u95F4\u8DDD */
                  nodesep: 60,

                  /** \u5C42\u95F4\u8DDD */
                  ranksep: 30
                },
                graphData: getGraphData()
              });

            case 2:
              res = _context.sent;
              _res$contextProvider$ = res.contextProvider().getResult(), graphData = _res$contextProvider$.graphData; // render

              _context.next = 6;
              return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_RENDER.id, {
                graphData: graphData
              });

            case 6:
              _context.next = 8;
              return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_ZOOM.id, {
                factor: 'real'
              });

            case 8:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function onLoad(_x) {
      return _ref.apply(this, arguments);
    };
  }();

  return /*#__PURE__*/react_default.a.createElement(es["B" /* XFlow */], {
    onLoad: onLoad,
    className: "xflow-workspace"
  }, /*#__PURE__*/react_default.a.createElement(es["D" /* XFlowCanvas */], {
    config: graphConfig,
    position: {
      top: 0,
      bottom: 0,
      left: 0,
      right: 0
    }
  }, /*#__PURE__*/react_default.a.createElement(es["e" /* CanvasSnapline */], null)));
};

/* harmony default export */ var demos_basic = __webpack_exports__["default"] = (XFlowDemo);

//# sourceURL=webpack:///./docs/tutorial/extension-components/canvas-snapline/demos/basic/index.tsx_+_1_modules?`)},"6Ya1":function(module,__webpack_exports__,__webpack_require__){"use strict";eval(`// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "width", function() { return /* binding */ width; });
__webpack_require__.d(__webpack_exports__, "height", function() { return /* binding */ height; });
__webpack_require__.d(__webpack_exports__, "useGraphConfig", function() { return /* binding */ useGraphConfig; });

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__("KOBo");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__("RY7m");
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("q1tI");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ../xflow/es/index.js + 271 modules
var es = __webpack_require__("mqVf");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 3 modules
var slicedToArray = __webpack_require__("jem/");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/input/index.js + 11 modules
var input = __webpack_require__("BmDy");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/switch/index.js + 1 modules
var es_switch = __webpack_require__("wb8e");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/form/index.js + 15 modules
var es_form = __webpack_require__("UL5a");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/message/index.js + 3 modules
var message = __webpack_require__("DuHN");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/card/index.js + 2 modules
var card = __webpack_require__("jMRu");

// CONCATENATED MODULE: ./docs/api/commands/nodes/node-select/demos/form.tsx







var formItems = [{
  name: 'nodeIds',
  label: 'nodeIds',
  rules: [{
    required: true
  }],
  render: input["a" /* default */],
  renderProps: {
    disabled: true
  }
}, {
  name: 'resetSelection',
  label: 'resetSelection',
  rules: [{
    required: true
  }],
  render: es_switch["a" /* default */],
  itemProps: {
    valuePropName: 'checked'
  }
}];
var nodeIdx = 1;
var CmdForm = () => {
  var app = Object(es["W" /* useXFlowApp */])();

  var _Form$useForm = es_form["a" /* default */].useForm(),
      _Form$useForm2 = Object(slicedToArray["a" /* default */])(_Form$useForm, 1),
      form = _Form$useForm2[0];

  var onFinish = /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(values) {
      var args;
      return regenerator_default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              args = {
                nodeIds: [values.nodeIds],
                resetSelection: values.resetSelection
              };
              app.commandService.executeCommand(es["J" /* XFlowNodeCommands */].SELECT_NODE.id, args);
              console.log('executeCommand with args :', args);
              message["b" /* default */].success("".concat(es["J" /* XFlowNodeCommands */].DEL_NODE.label, ": \\u547D\\u4EE4\\u6267\\u884C\\u6210\\u529F")); // \u8F6E\u6D41\u9009\u4E2D

              if (nodeIdx < 3) {
                nodeIdx += 1;
              } else {
                nodeIdx = 1;
              }

              form.setFieldsValue({
                nodeIds: "node".concat(nodeIdx)
              });

            case 6:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function onFinish(_x) {
      return _ref.apply(this, arguments);
    };
  }();

  return /*#__PURE__*/react_default.a.createElement(es["n" /* FormBuilder */], {
    layout: "vertical",
    form: form,
    formItems: formItems,
    onFinish: onFinish,
    initialValues: {
      nodeIds: "node".concat(nodeIdx),
      resetSelection: true
    }
  });
};
var FormPanel = () => {
  return /*#__PURE__*/react_default.a.createElement(es["A" /* WorkspacePanel */], {
    position: {
      top: 0,
      left: 0,
      bottom: 0,
      width: 230
    },
    className: "panel"
  }, /*#__PURE__*/react_default.a.createElement(card["a" /* default */], {
    title: "NodeConfig Options",
    size: "small",
    bordered: false
  }, /*#__PURE__*/react_default.a.createElement(CmdForm, null)));
};
// EXTERNAL MODULE: ./docs/api/commands/nodes/node-select/demos/index.less
var demos = __webpack_require__("LMeG");

// CONCATENATED MODULE: ./docs/api/commands/nodes/node-select/demos/index.tsx






var width = 120;
var height = 40;
/**  graphConfig hook  */

var useGraphConfig = Object(es["M" /* createGraphConfig */])(graphConfig => {
  graphConfig.setX6Config({
    grid: true
  });
  graphConfig.setDefaultNodeRender(props => {
    return /*#__PURE__*/react_default.a.createElement("div", {
      className: "react-node"
    }, " ", props.data.label, " ");
  });
});

var NodeAddDemo = () => {
  var graphConfig = useGraphConfig();

  var onLoad = /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(app) {
      return regenerator_default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              app.executeCommand(es["J" /* XFlowNodeCommands */].ADD_NODE.id, {
                nodeConfig: {
                  id: 'node1',
                  x: 100,
                  y: 30,
                  label: 'Hello World 1',
                  width,
                  height
                }
              });
              app.executeCommand(es["J" /* XFlowNodeCommands */].ADD_NODE.id, {
                nodeConfig: {
                  id: 'node2',
                  x: 50,
                  y: 150,
                  label: 'Hello World 2',
                  width,
                  height
                }
              });
              app.executeCommand(es["J" /* XFlowNodeCommands */].ADD_NODE.id, {
                nodeConfig: {
                  id: 'node3',
                  x: 200,
                  y: 150,
                  label: 'Hello World 3',
                  width,
                  height
                }
              });
              return _context.abrupt("return", app);

            case 4:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function onLoad(_x) {
      return _ref.apply(this, arguments);
    };
  }();

  return /*#__PURE__*/react_default.a.createElement(es["B" /* XFlow */], {
    onLoad: onLoad,
    className: "xflow-workspace"
  }, /*#__PURE__*/react_default.a.createElement(FormPanel, null), /*#__PURE__*/react_default.a.createElement(es["D" /* XFlowCanvas */], {
    className: "app-main-content",
    config: graphConfig,
    position: {
      top: 0,
      left: 230,
      right: 0,
      bottom: 0
    }
  }));
};

/* harmony default export */ var node_select_demos = __webpack_exports__["default"] = (NodeAddDemo);

//# sourceURL=webpack:///./docs/api/commands/nodes/node-select/demos/index.tsx_+_1_modules?`)},"6cNV":function(module,__webpack_exports__,__webpack_require__){"use strict";eval(`// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("q1tI");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ../xflow/es/index.js + 271 modules
var es = __webpack_require__("mqVf");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__("KOBo");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 3 modules
var slicedToArray = __webpack_require__("jem/");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__("RY7m");
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/input/index.js + 11 modules
var input = __webpack_require__("BmDy");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/form/index.js + 15 modules
var es_form = __webpack_require__("UL5a");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/message/index.js + 3 modules
var message = __webpack_require__("DuHN");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/button/index.js
var es_button = __webpack_require__("SCaQ");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/card/index.js + 2 modules
var card = __webpack_require__("jMRu");

// CONCATENATED MODULE: ./docs/api/commands/group/group-collapse/basic/form.tsx







var formItems = [{
  name: 'nodeId',
  label: 'nodeId',
  rules: [{
    required: true
  }],
  renderProps: {
    disabled: true
  },
  render: input["a" /* default */]
}, {
  name: 'isCollapsed',
  label: 'isCollapsed',
  rules: [{
    required: true
  }],
  renderProps: {
    disabled: true
  },
  render: input["a" /* default */]
}];
var CmdForm = () => {
  var app = Object(es["W" /* useXFlowApp */])();

  var _Form$useForm = es_form["a" /* default */].useForm(),
      _Form$useForm2 = Object(slicedToArray["a" /* default */])(_Form$useForm, 1),
      form = _Form$useForm2[0];

  var _React$useState = react_default.a.useState(false),
      _React$useState2 = Object(slicedToArray["a" /* default */])(_React$useState, 2),
      isCollpase = _React$useState2[0],
      setCollapsed = _React$useState2[1];

  react_default.a.useEffect(() => {
    var setFormValue = /*#__PURE__*/function () {
      var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee() {
        var graph, nodes;
        return regenerator_default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return Object(es["R" /* delay */])(1000);

              case 2:
                _context.next = 4;
                return app.getGraphInstance();

              case 4:
                graph = _context.sent;
                nodes = graph.getCells().filter(c => c.getProp('isGroup'));

                if (nodes[0]) {
                  form.setFieldsValue({
                    nodeId: nodes[0].id
                  });
                }

              case 7:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      return function setFormValue() {
        return _ref.apply(this, arguments);
      };
    }();

    setFormValue();
  }, [app, form]);

  var onFinish = /*#__PURE__*/function () {
    var _ref2 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee2(values) {
      return regenerator_default.a.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              console.log(values);
              setCollapsed(values.isCollapsed === true);
              _context2.next = 4;
              return app.commandService.executeCommand(es["I" /* XFlowGroupCommands */].COLLAPSE_GROUP.id, {
                nodeId: values.nodeId,
                isCollapsed: values.isCollapsed
              });

            case 4:
              form.setFieldsValue({
                isCollapsed: !values.isCollapsed
              });
              message["b" /* default */].success("".concat(es["I" /* XFlowGroupCommands */].COLLAPSE_GROUP.label, ": \\u547D\\u4EE4\\u6267\\u884C\\u6210\\u529F"));

            case 6:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    }));

    return function onFinish(_x) {
      return _ref2.apply(this, arguments);
    };
  }();

  return /*#__PURE__*/react_default.a.createElement(es["n" /* FormBuilder */], {
    form: form,
    formItems: formItems,
    onFinish: onFinish,
    initialValues: {
      nodeId: null,
      isCollapsed: true
    },
    submitButton: /*#__PURE__*/react_default.a.createElement(es_button["a" /* default */], {
      type: "primary",
      htmlType: "submit",
      style: {
        width: '100%'
      }
    }, "\\u6267\\u884C", isCollpase ? '\u5C55\u5F00' : '\u6298\u53E0', "\\u547D\\u4EE4")
  });
};
var FormPanel = () => {
  return /*#__PURE__*/react_default.a.createElement(es["A" /* WorkspacePanel */], {
    position: {
      top: 0,
      left: 0,
      bottom: 0,
      width: 230
    },
    className: "panel"
  }, /*#__PURE__*/react_default.a.createElement(card["a" /* default */], {
    title: "Group Options",
    size: "small",
    bordered: false
  }, /*#__PURE__*/react_default.a.createElement(CmdForm, null)));
};
// CONCATENATED MODULE: ./docs/api/commands/group/group-collapse/basic/constant.ts
var DND_NODE_RENDER_ID = 'DND_NDOE';
var GROUP_NODE_RENDER_ID = 'GROUP_NODE_RENDER_ID';
var GROUP_COLLAPSED_SIZE = {
  width: 160,
  height: 40
};
// EXTERNAL MODULE: ./docs/api/commands/group/group-collapse/basic/react-node/index.less
var react_node = __webpack_require__("eKmg");

// CONCATENATED MODULE: ./docs/api/commands/group/group-collapse/basic/react-node/index.tsx


var DndNode = props => {
  return /*#__PURE__*/react_default.a.createElement("div", {
    className: "xflow-dnd-node"
  }, props.data.label);
};
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/PlusSquareOutlined.js + 1 modules
var PlusSquareOutlined = __webpack_require__("29vH");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/MinusSquareOutlined.js + 1 modules
var MinusSquareOutlined = __webpack_require__("xCK6");

// EXTERNAL MODULE: ./docs/api/commands/group/group-collapse/basic/react-group-node/index.less
var react_group_node = __webpack_require__("HjDz");

// CONCATENATED MODULE: ./docs/api/commands/group/group-collapse/basic/react-group-node/index.tsx




var GroupNode = props => {
  var cell = props.cell;
  var app = Object(es["W" /* useXFlowApp */])();
  var isCollapse = cell.getProp('isCollapsed') || false;

  var onExpand = e => {
    app.executeCommand(es["I" /* XFlowGroupCommands */].COLLAPSE_GROUP.id, {
      nodeId: cell.id,
      isCollapsed: false
    });
  };

  var onCollapse = e => {
    app.executeCommand(es["I" /* XFlowGroupCommands */].COLLAPSE_GROUP.id, {
      nodeId: cell.id,
      isCollapsed: true,
      gap: 3
    });
  };

  return /*#__PURE__*/react_default.a.createElement("div", {
    className: "xflow-group-node"
  }, /*#__PURE__*/react_default.a.createElement("div", {
    className: "xflow-group-header"
  }, /*#__PURE__*/react_default.a.createElement("div", {
    className: "header-left"
  }, props.data.label), /*#__PURE__*/react_default.a.createElement("div", {
    className: "header-right"
  }, isCollapse && /*#__PURE__*/react_default.a.createElement(PlusSquareOutlined["a" /* default */], {
    onClick: onExpand
  }), !isCollapse && /*#__PURE__*/react_default.a.createElement(MinusSquareOutlined["a" /* default */], {
    onClick: onCollapse
  }))));
};
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/objectSpread2.js
var objectSpread2 = __webpack_require__("BcGY");

// CONCATENATED MODULE: ./docs/api/commands/group/group-collapse/basic/mock.ts


 // NodeConfig

var NODE_COMMON_PROPS = {
  width: 160,
  height: 40,
  renderKey: DND_NODE_RENDER_ID
}; // NodeConfig

var EDGE_COMMON_PROPS = {
  attrs: {
    line: {
      targetMarker: {
        name: 'block',
        width: 4,
        height: 8
      },
      strokeDasharray: '',
      stroke: '#A2B1C3',
      strokeWidth: 1
    }
  }
}; // mock data

var getGraphData = () => {
  var nodes = [Object(objectSpread2["a" /* default */])({
    id: 'node1',
    label: '\u7B97\u6CD5\u8282\u70B9-1'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node2',
    label: '\u7B97\u6CD5\u8282\u70B9-2'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node3',
    label: '\u7B97\u6CD5\u8282\u70B9-3'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node4',
    label: '\u7B97\u6CD5\u8282\u70B9-4'
  }, NODE_COMMON_PROPS)];
  var edges = [Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node2',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node2-input-1'
  }, EDGE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node3',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node3-input-1'
  }, EDGE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node4',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node4-input-1'
  }, EDGE_COMMON_PROPS)];
  return {
    nodes: [...nodes],
    edges: edges
  };
};
// CONCATENATED MODULE: ./docs/api/commands/group/group-collapse/basic/config-graph.tsx








var onLoad = /*#__PURE__*/function () {
  var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(app) {
    var res, _res$contextProvider$, graphData;

    return regenerator_default.a.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_LAYOUT.id, {
              layoutType: 'dagre',
              layoutOptions: {
                type: 'dagre',

                /** \u5E03\u5C40\u65B9\u5411 */
                rankdir: 'TB',

                /** \u8282\u70B9\u95F4\u8DDD */
                nodesep: 60,

                /** \u5C42\u95F4\u8DDD */
                ranksep: 30
              },
              graphData: getGraphData()
            });

          case 2:
            res = _context.sent;
            _res$contextProvider$ = res.contextProvider().getResult(), graphData = _res$contextProvider$.graphData; // render

            _context.next = 6;
            return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_RENDER.id, {
              graphData: graphData
            });

          case 6:
            _context.next = 8;
            return app.executeCommand(es["I" /* XFlowGroupCommands */].ADD_GROUP.id, {
              nodeConfig: {
                id: 'group1',
                label: 'Group1',
                groupChildren: ['node1', 'node2', 'node3', 'node4'],
                isCollapsed: false,
                renderKey: GROUP_NODE_RENDER_ID,
                groupCollapsedSize: GROUP_COLLAPSED_SIZE
              }
            });

          case 8:
            _context.next = 10;
            return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_ZOOM.id, {
              factor: 'real'
            });

          case 10:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function onLoad(_x) {
    return _ref.apply(this, arguments);
  };
}();
/**  graphConfig\uFF1A\u914D\u7F6EGraph  */

var useGraphConfig = Object(es["M" /* createGraphConfig */])(graphConfig => {
  /**  graphConfig\uFF1A\u914D\u7F6ENode\u8282\u70B9\u7EC4\u4EF6  */
  graphConfig.setNodeRender(DND_NODE_RENDER_ID, DndNode);
  /**  graphConfig\uFF1A\u914D\u7F6EGroup\u8282\u70B9\u7EC4\u4EF6 h  */

  graphConfig.setNodeRender(GROUP_NODE_RENDER_ID, GroupNode);
});
// EXTERNAL MODULE: ./docs/api/commands/group/group-collapse/basic/index.less
var basic = __webpack_require__("o1oI");

// CONCATENATED MODULE: ./docs/api/commands/group/group-collapse/basic/index.tsx
/**
 * title: \u57FA\u7840\u4F7F\u7528
 * desc: |
 *  \u6298\u53E0\u6307\u5B9A\u7684\u7FA4\u7EC4
 */





/**  Demo Props  */

var XFlowDemo = props => {
  var graphConfig = useGraphConfig(props);
  return /*#__PURE__*/react_default.a.createElement(es["B" /* XFlow */], {
    onLoad: onLoad,
    className: "xflow-workspace"
  }, /*#__PURE__*/react_default.a.createElement(FormPanel, null), /*#__PURE__*/react_default.a.createElement(es["D" /* XFlowCanvas */], {
    config: graphConfig,
    position: {
      top: 0,
      left: 230,
      right: 0,
      bottom: 0
    }
  }));
};

/* harmony default export */ var group_collapse_basic = __webpack_exports__["default"] = (XFlowDemo);

//# sourceURL=webpack:///./docs/api/commands/group/group-collapse/basic/index.tsx_+_6_modules?`)},"6svi":function(module,__webpack_exports__,__webpack_require__){"use strict";eval(`// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js + 1 modules
var objectWithoutProperties = __webpack_require__("Uwx9");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__("KOBo");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 3 modules
var slicedToArray = __webpack_require__("jem/");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__("BoRD");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__("RY7m");
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("q1tI");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ../xflow/es/index.js + 271 modules
var es = __webpack_require__("mqVf");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/PlusCircleOutlined.js + 1 modules
var PlusCircleOutlined = __webpack_require__("Uhj0");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/LinkOutlined.js + 1 modules
var LinkOutlined = __webpack_require__("5BO1");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/DeleteOutlined.js + 1 modules
var DeleteOutlined = __webpack_require__("UmCv");

// EXTERNAL MODULE: ./docs/tutorial/solutions/er/demos/GraphToolbar/index.less
var GraphToolbar = __webpack_require__("K7If");

// CONCATENATED MODULE: ./docs/tutorial/solutions/er/demos/GraphToolbar/index.tsx









var GraphToolbar_GraphToolbar = props => {
  var onAddNodeClick = props.onAddNodeClick,
      onDeleteNodeClick = props.onDeleteNodeClick,
      onConnectEdgeClick = props.onConnectEdgeClick;

  var _React$useState = react_default.a.useState([]),
      _React$useState2 = Object(slicedToArray["a" /* default */])(_React$useState, 2),
      selectedNodes = _React$useState2[0],
      setSelectedNodes = _React$useState2[1];
  /** \u76D1\u542C\u753B\u5E03\u4E2D\u9009\u4E2D\u7684\u8282\u70B9 */


  var watchModelService = /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee2() {
      var appRef, modelService, model;
      return regenerator_default.a.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              appRef = Object(es["W" /* useXFlowApp */])();
              modelService = appRef && (appRef === null || appRef === void 0 ? void 0 : appRef.modelService);

              if (!modelService) {
                _context2.next = 7;
                break;
              }

              _context2.next = 5;
              return es["t" /* MODELS */].SELECTED_NODES.getModel(modelService);

            case 5:
              model = _context2.sent;
              model.watch( /*#__PURE__*/Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee() {
                var nodes;
                return regenerator_default.a.wrap(function _callee$(_context) {
                  while (1) {
                    switch (_context.prev = _context.next) {
                      case 0:
                        _context.next = 2;
                        return es["t" /* MODELS */].SELECTED_NODES.useValue(modelService);

                      case 2:
                        nodes = _context.sent;
                        setSelectedNodes(nodes);

                      case 4:
                      case "end":
                        return _context.stop();
                    }
                  }
                }, _callee);
              })));

            case 7:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    }));

    return function watchModelService() {
      return _ref.apply(this, arguments);
    };
  }();

  watchModelService();
  return /*#__PURE__*/react_default.a.createElement("div", {
    className: "xflow-er-solution-toolbar"
  }, /*#__PURE__*/react_default.a.createElement("div", {
    className: "icon",
    onClick: () => onAddNodeClick()
  }, /*#__PURE__*/react_default.a.createElement("span", null, "\\u6DFB\\u52A0\\u8282\\u70B9"), /*#__PURE__*/react_default.a.createElement(PlusCircleOutlined["a" /* default */], null)), /*#__PURE__*/react_default.a.createElement("div", {
    className: "icon",
    onClick: () => onConnectEdgeClick()
  }, /*#__PURE__*/react_default.a.createElement("span", null, "\\u6DFB\\u52A0\\u5173\\u7CFB"), /*#__PURE__*/react_default.a.createElement(LinkOutlined["a" /* default */], null)), /*#__PURE__*/react_default.a.createElement("div", {
    className: "icon ".concat((selectedNodes === null || selectedNodes === void 0 ? void 0 : selectedNodes.length) > 0 ? '' : 'disabled'),
    onClick: () => onDeleteNodeClick()
  }, /*#__PURE__*/react_default.a.createElement("span", null, "\\u5220\\u9664\\u8282\\u70B9"), /*#__PURE__*/react_default.a.createElement(DeleteOutlined["a" /* default */], null)));
};

/* harmony default export */ var demos_GraphToolbar = (GraphToolbar_GraphToolbar);
// CONCATENATED MODULE: ./docs/tutorial/solutions/er/demos/config-graph.tsx

var useGraphConfig = Object(es["M" /* createGraphConfig */])(config => {
  /** \u9884\u8BBEXFlow\u753B\u5E03\u914D\u7F6E\u9879 */
  config.setX6Config({
    grid: true,
    scroller: {
      enabled: true
    },
    scaling: {
      min: 0.2,
      max: 3
    },
    connecting: {
      /** \u8FDE\u7EBF\u8FC7\u7A0B\u4E2D\u8DDD\u79BB\u76EE\u6807\u8282\u70B950px\u65F6\u81EA\u52A8\u5438\u9644 */
      snap: {
        radius: 50
      },
      connector: {
        name: 'rounded',
        args: {
          radius: 50
        }
      },
      router: {
        name: 'er'
      },

      /** \u4E0D\u5141\u8BB8\u8FDE\u63A5\u5230\u753B\u5E03\u7A7A\u767D\u4F4D\u7F6E, \u5373\u6CA1\u6709\u76EE\u6807\u8282\u70B9\u65F6\u8FDE\u7EBF\u4F1A\u81EA\u52A8\u6D88\u5931 */
      allowBlank: false
    }
  });
});
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/objectSpread2.js
var objectSpread2 = __webpack_require__("BcGY");

// CONCATENATED MODULE: ./docs/tutorial/solutions/er/demos/mock.ts
var mockProperties = [{
  propertyId: 'propertyId1',
  propertyName: '\u4E1A\u52A1\u65E5\u671F',
  propertyType: 'string',
  isPK: true
}, {
  propertyId: 'propertyId2',
  propertyName: '\u4EA4\u6613\u53F71',
  propertyType: 'bigint',
  isFK: true
}, {
  propertyId: 'propertyId3',
  propertyName: '\u6700\u957F\u663E\u793A\u7684\u8868\u5355\u540D\u6700\u957F\u663E\u793A\u7684\u8868\u5355\u540D',
  propertyType: 'string'
}, {
  propertyId: 'propertyId4',
  propertyName: '\u4EA4\u6613\u652F\u4ED8\u5916\u952E',
  propertyType: 'string'
}, {
  propertyId: 'propertyId5',
  propertyName: '\u5356\u5BB6\u652F\u4ED8\u65E5\u671F',
  propertyType: 'string'
}, {
  propertyId: 'propertyId6',
  propertyName: '\u7F51\u5546\u94F6\u884C',
  propertyType: 'string'
}, {
  propertyId: 'propertyId7',
  propertyName: '\u4E1A\u52A1\u65E5\u671F',
  propertyType: 'string'
}, {
  propertyId: 'propertyId8',
  propertyName: '\u4E1A\u52A1\u65E5\u671F111',
  propertyType: 'string'
}, {
  propertyId: 'propertyId9',
  propertyName: '\u4E1A\u52A1\u65E5\u671F222',
  propertyType: 'string'
}, {
  propertyId: 'propertyId10',
  propertyName: '\u4E1A\u52A1\u65E5\u671F333',
  propertyType: 'string'
}];
var mockEntityData = [{
  id: 'fact1',
  x: 450,
  y: 150,
  width: 214,
  height: 252,
  entityId: 'fact1',
  entityName: '\u4E8B\u5B9E\u88681',
  entityType: 'FACT',
  properties: mockProperties
}, {
  id: 'fact2',
  x: 0,
  y: -20,
  width: 214,
  height: 252,
  entityId: 'fact2',
  entityName: '\u4E8B\u5B9E\u88682',
  entityType: 'FACT',
  properties: mockProperties
}, {
  id: 'dim1',
  x: 0,
  y: 300,
  width: 214,
  height: 252,
  entityId: 'dim1',
  entityName: '\u7EF4\u5EA6\u88681',
  entityType: 'DIM',
  properties: mockProperties
}, {
  id: 'other1',
  x: 180,
  y: 500,
  width: 214,
  height: 252,
  entityId: 'other1',
  entityName: '\u5176\u4ED6\u88681',
  entityType: 'OTHER',
  properties: mockProperties
}, {
  id: 'other2',
  x: 810,
  y: 0,
  width: 214,
  height: 252,
  entityId: 'other2',
  entityName: '\u5176\u4ED6\u88682',
  entityType: 'OTHER',
  properties: mockProperties
}];
var mockRelationData = [{
  id: 'fact1-fact2',
  source: 'fact1',
  target: 'fact2'
}, {
  id: 'fact1-dim1',
  source: 'fact1',
  target: 'dim1'
}];
// CONCATENATED MODULE: ./docs/tutorial/solutions/er/demos/service.ts




/** mock\u540E\u7AEF\u63A5\u53E3\u8C03\u7528 */

var MockApi;

(function (_MockApi) {
  var loadGraphData = _MockApi.loadGraphData = /*#__PURE__*/Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee() {
    var promise, res;
    return regenerator_default.a.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            promise = new Promise(resolve => {
              setTimeout(() => {
                /** \u94FE\u63A5\u6869\u6837\u5F0F\u914D\u7F6E, \u5C06\u5177\u6709\u76F8\u540C\u884C\u4E3A\u548C\u5916\u89C2\u7684\u94FE\u63A5\u6869\u5F52\u4E3A\u540C\u4E00\u7EC4 */
                var portAttrs = {
                  circle: {
                    r: 7,
                    stroke: '#31d0c6',
                    strokeWidth: 2,
                    fill: '#fff',

                    /** \u94FE\u63A5\u6869\u5728\u8FDE\u7EBF\u4EA4\u4E92\u65F6\u53EF\u4EE5\u88AB\u8FDE\u63A5\u4E0A */
                    magnet: true
                  }
                };
                var nodes = mockEntityData === null || mockEntityData === void 0 ? void 0 : mockEntityData.map(entity => {
                  var nodeConfig = Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({}, entity), {}, {
                    renderKey: 'NODE1',
                    ports: {
                      groups: {
                        top: {
                          position: 'top',
                          attrs: portAttrs
                        },
                        right: {
                          position: 'right',
                          attrs: portAttrs
                        },
                        bottom: {
                          position: 'bottom',
                          attrs: portAttrs
                        },
                        left: {
                          position: 'left',
                          attrs: portAttrs
                        }
                      },
                      items: [{
                        id: 'top_port',
                        group: 'top'
                      }, {
                        id: 'right_port',
                        group: 'right'
                      }, {
                        id: 'bottom_port',
                        group: 'bottom'
                      }, {
                        id: 'left_port',
                        group: 'left'
                      }]
                    }
                  });

                  return nodeConfig;
                });
                var edges = mockRelationData === null || mockRelationData === void 0 ? void 0 : mockRelationData.map(relation => {
                  var edgeConfig = Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({}, relation), {}, {
                    renderKey: 'EDGE1',
                    edgeContentWidth: 20,
                    edgeContentHeigt: 20,

                    /** \u8BBE\u7F6E\u8FDE\u7EBF\u6837\u5F0F */
                    attrs: {
                      line: {
                        stroke: '#d8d8d8',
                        strokeWidth: 1,
                        targetMarker: {
                          name: 'classic'
                        }
                      }
                    }
                  });

                  return edgeConfig;
                });
                var graphData = {
                  nodes,
                  edges
                };
                resolve(graphData);
              }, 100);
            });
            _context.next = 3;
            return promise;

          case 3:
            res = _context.sent;
            return _context.abrupt("return", res);

          case 5:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  var addNode = _MockApi.addNode = /*#__PURE__*/function () {
    var _ref2 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee2(args) {
      var nodeConfig, promise, res;
      return regenerator_default.a.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              nodeConfig = args.nodeConfig;
              promise = new Promise(resolve => {
                setTimeout(() => {
                  resolve(Object(objectSpread2["a" /* default */])({}, nodeConfig));
                }, 1000);
              });
              _context2.next = 4;
              return promise;

            case 4:
              res = _context2.sent;
              return _context2.abrupt("return", res);

            case 6:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    }));

    return function (_x) {
      return _ref2.apply(this, arguments);
    };
  }();

  var delNode = _MockApi.delNode = /*#__PURE__*/function () {
    var _ref3 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee3(args) {
      var nodeConfig, promise, res;
      return regenerator_default.a.wrap(function _callee3$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              nodeConfig = args.nodeConfig;
              promise = new Promise(resolve => {
                setTimeout(() => {
                  resolve(true);
                }, 1000);
              });
              _context3.next = 4;
              return promise;

            case 4:
              res = _context3.sent;
              return _context3.abrupt("return", res);

            case 6:
            case "end":
              return _context3.stop();
          }
        }
      }, _callee3);
    }));

    return function (_x2) {
      return _ref3.apply(this, arguments);
    };
  }();

  var addEdge = _MockApi.addEdge = /*#__PURE__*/function () {
    var _ref4 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee4(args) {
      var edgeConfig, promise, res;
      return regenerator_default.a.wrap(function _callee4$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              edgeConfig = args.edgeConfig;
              promise = new Promise(resolve => {
                setTimeout(() => {
                  resolve(Object(objectSpread2["a" /* default */])({}, edgeConfig));
                }, 1000);
              });
              _context4.next = 4;
              return promise;

            case 4:
              res = _context4.sent;
              return _context4.abrupt("return", res);

            case 6:
            case "end":
              return _context4.stop();
          }
        }
      }, _callee4);
    }));

    return function (_x3) {
      return _ref4.apply(this, arguments);
    };
  }();

  var delEdge = _MockApi.delEdge = /*#__PURE__*/function () {
    var _ref5 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee5(args) {
      var edgeConfig, promise, res;
      return regenerator_default.a.wrap(function _callee5$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:
              edgeConfig = args.edgeConfig;
              promise = new Promise(resolve => {
                setTimeout(() => {
                  resolve(true);
                }, 1000);
              });
              _context5.next = 4;
              return promise;

            case 4:
              res = _context5.sent;
              return _context5.abrupt("return", res);

            case 6:
            case "end":
              return _context5.stop();
          }
        }
      }, _callee5);
    }));

    return function (_x4) {
      return _ref5.apply(this, arguments);
    };
  }();
})(MockApi || (MockApi = {}));
// CONCATENATED MODULE: ./docs/tutorial/solutions/er/demos/config-cmd.ts




var useCmdConfig = Object(es["K" /* createCmdConfig */])(config => {
  /** \u8BBE\u7F6Ehook */
  config.setRegisterHookFn(hooks => {
    var list = [hooks.addNode.registerHook({
      name: 'addNodeHook',
      handler: function () {
        var _handler = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(args) {
          return regenerator_default.a.wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  args.createNodeService = MockApi.addNode;

                case 1:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee);
        }));

        function handler(_x) {
          return _handler.apply(this, arguments);
        }

        return handler;
      }()
    }), hooks.addEdge.registerHook({
      name: 'addEdgeHook',
      handler: function () {
        var _handler2 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee2(args) {
          return regenerator_default.a.wrap(function _callee2$(_context2) {
            while (1) {
              switch (_context2.prev = _context2.next) {
                case 0:
                  args.createEdgeService = MockApi.addEdge;

                case 1:
                case "end":
                  return _context2.stop();
              }
            }
          }, _callee2);
        }));

        function handler(_x2) {
          return _handler2.apply(this, arguments);
        }

        return handler;
      }()
    })];
    var toDispose = new es["i" /* DisposableCollection */]();
    toDispose.pushAll(list);
    return toDispose;
  });
});
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@antv/x6/es/index.js + 462 modules
var x6_es = __webpack_require__("xShM");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/message/index.js + 3 modules
var message = __webpack_require__("DuHN");

// CONCATENATED MODULE: ./docs/tutorial/solutions/er/demos/config-keybinding.ts






/** \u5FEB\u6377\u952E */

var ShortCut;

(function (ShortCut) {
  ShortCut["DELETE"] = "Backspace";
  ShortCut["CmdDelete"] = "Cmd+Delete";
  ShortCut["CtrlDelete"] = "Ctrl+Delete";
})(ShortCut || (ShortCut = {}));

var useKeybindingConfig = Object(es["O" /* createKeybindingConfig */])(config => {
  config.setKeybindingFunc(registry => {
    return registry.registerKeybinding([{
      id: 'delete',
      keybinding: ShortCut.DELETE,
      callback: function () {
        var _callback = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(item, modelService, commandService, e) {
          var target, cells, nodes, edges;
          return regenerator_default.a.wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  /** \u5982\u679C\u662Finput\u7684delete\u4E8B\u4EF6, \u5219\u4E0D\u8D70\u5220\u9664\u7684\u56DE\u8C03 */
                  target = e && (e === null || e === void 0 ? void 0 : e.target);

                  if (!(target && target.tagName && target.tagName.toLowerCase() === 'input')) {
                    _context.next = 3;
                    break;
                  }

                  return _context.abrupt("return");

                case 3:
                  _context.next = 5;
                  return es["t" /* MODELS */].SELECTED_CELLS.useValue(modelService);

                case 5:
                  cells = _context.sent;
                  nodes = cells === null || cells === void 0 ? void 0 : cells.filter(cell => cell.isNode());
                  edges = cells === null || cells === void 0 ? void 0 : cells.filter(cell => cell.isEdge());

                  if ((edges === null || edges === void 0 ? void 0 : edges.length) > 0) {
                    deleteEdges(commandService, edges);
                  }

                  if ((nodes === null || nodes === void 0 ? void 0 : nodes.length) > 0) {
                    deleteNodes(commandService, nodes);
                  }

                case 10:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee);
        }));

        function callback(_x, _x2, _x3, _x4) {
          return _callback.apply(this, arguments);
        }

        return callback;
      }()
    }, {
      id: 'deleteAll',
      keybinding: x6_es["k" /* Platform */].IS_MAC ? ShortCut.CmdDelete : ShortCut.CtrlDelete,
      callback: function () {
        var _callback2 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee2(item, modelService, commandService, e) {
          var cells, nodes, edges;
          return regenerator_default.a.wrap(function _callee2$(_context2) {
            while (1) {
              switch (_context2.prev = _context2.next) {
                case 0:
                  _context2.next = 2;
                  return es["t" /* MODELS */].SELECTED_CELLS.useValue(modelService);

                case 2:
                  cells = _context2.sent;
                  nodes = cells === null || cells === void 0 ? void 0 : cells.filter(cell => cell.isNode());
                  edges = cells === null || cells === void 0 ? void 0 : cells.filter(cell => cell.isEdge());
                  deleteEdges(commandService, edges);
                  deleteNodes(commandService, nodes);

                case 7:
                case "end":
                  return _context2.stop();
              }
            }
          }, _callee2);
        }));

        function callback(_x5, _x6, _x7, _x8) {
          return _callback2.apply(this, arguments);
        }

        return callback;
      }()
    }]);
  });
});
var deleteNodes = /*#__PURE__*/function () {
  var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee3(commandService, nodes) {
    var promiseList, res;
    return regenerator_default.a.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            promiseList = nodes === null || nodes === void 0 ? void 0 : nodes.map(node => {
              return commandService.executeCommand(es["J" /* XFlowNodeCommands */].DEL_NODE.id, {
                nodeConfig: Object(objectSpread2["a" /* default */])({}, node.getData())
              });
            });
            _context3.next = 3;
            return Promise.all(promiseList);

          case 3:
            res = _context3.sent;

            if (res.length > 0) {
              message["b" /* default */].success('\u5220\u9664\u8282\u70B9\u6210\u529F\uFF01');
            }

          case 5:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  }));

  return function deleteNodes(_x9, _x10) {
    return _ref.apply(this, arguments);
  };
}();
var deleteEdges = /*#__PURE__*/function () {
  var _ref2 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee4(commandServce, edges) {
    var _edges$filter;

    var promiseList, res;
    return regenerator_default.a.wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            promiseList = edges === null || edges === void 0 ? void 0 : (_edges$filter = edges.filter(edge => edge.isEdge())) === null || _edges$filter === void 0 ? void 0 : _edges$filter.map(edge => {
              return commandServce.executeCommand(es["G" /* XFlowEdgeCommands */].DEL_EDGE.id, {
                edgeConfig: Object(objectSpread2["a" /* default */])({}, edge.getData())
              });
            });
            _context4.next = 3;
            return Promise.all(promiseList);

          case 3:
            res = _context4.sent;

            if (res.length > 0) {
              message["b" /* default */].success('\u5220\u9664\u8FDE\u7EBF\u6210\u529F\uFF01');
            }

          case 5:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4);
  }));

  return function deleteEdges(_x11, _x12) {
    return _ref2.apply(this, arguments);
  };
}();
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/form/index.js + 15 modules
var es_form = __webpack_require__("UL5a");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/modal/index.js + 8 modules
var modal = __webpack_require__("/zI6");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/radio/index.js + 5 modules
var es_radio = __webpack_require__("NwOV");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/input/index.js + 11 modules
var input = __webpack_require__("BmDy");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/lodash/lodash.js
var lodash = __webpack_require__("nsO7");
var lodash_default = /*#__PURE__*/__webpack_require__.n(lodash);

// CONCATENATED MODULE: ./docs/tutorial/solutions/er/demos/const.ts
var GraphMode;

(function (GraphMode) {
  GraphMode["INFO"] = "INFO";
  GraphMode["DETAIL"] = "DETAIL";
})(GraphMode || (GraphMode = {}));

var EntityType;

(function (EntityType) {
  EntityType["FACT"] = "FACT";
  EntityType["DIM"] = "DIM";
  EntityType["OTHER"] = "OTHER";
})(EntityType || (EntityType = {}));

var EntityTypeDisplay = {
  [EntityType.FACT]: '\u4E8B\u5B9E\u8868',
  [EntityType.DIM]: '\u7EF4\u5EA6\u8868',
  [EntityType.OTHER]: '\u5176\u4ED6\u8868'
};
// EXTERNAL MODULE: ./docs/tutorial/solutions/er/demos/CreateNodeModal/index.less
var CreateNodeModal = __webpack_require__("g7ws");

// CONCATENATED MODULE: ./docs/tutorial/solutions/er/demos/CreateNodeModal/index.tsx








var formItemLayout = {
  labelCol: {
    xs: {
      span: 24
    },
    sm: {
      span: 6
    }
  },
  wrapperCol: {
    xs: {
      span: 24
    },
    sm: {
      span: 16
    }
  }
};

/** \u521B\u5EFA\u6A21\u578B\u5F39\u7A97 */
var CreateEntityModal = props => {
  var visible = props.visible,
      onOk = props.onOk,
      _onCancel = props.onCancel;

  var _React$useState = react_default.a.useState(false),
      _React$useState2 = Object(slicedToArray["a" /* default */])(_React$useState, 2),
      confirmLoading = _React$useState2[0],
      setConfirmLoading = _React$useState2[1];

  var _React$useState3 = react_default.a.useState(EntityType.FACT),
      _React$useState4 = Object(slicedToArray["a" /* default */])(_React$useState3, 2),
      currentEntityType = _React$useState4[0],
      setCurrentEntityType = _React$useState4[1];

  var _Form$useForm = es_form["a" /* default */].useForm(),
      _Form$useForm2 = Object(slicedToArray["a" /* default */])(_Form$useForm, 1),
      form = _Form$useForm2[0];

  var hanldeOk = () => {
    form.validateFields().then(values => {
      var callback = result => {
        setConfirmLoading(false);

        if (result) {
          _onCancel();
        }
      };

      setConfirmLoading(true);
      onOk(Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({}, values), {}, {
        cb: callback
      }));
    });
  };

  var onChange = e => {
    /** \u5207\u6362\u6A21\u578B\u7C7B\u578B\u91CD\u7F6E\u8868\u5355 */
    form.resetFields();
    setCurrentEntityType(e.target.value);
  };

  return /*#__PURE__*/react_default.a.createElement(modal["a" /* default */], {
    title: "\\u521B\\u5EFA\\u6A21\\u578B",
    visible: visible,
    confirmLoading: confirmLoading,
    wrapClassName: "create-entity-container",
    okText: "\\u786E\\u5B9A",
    cancelText: "\\u53D6\\u6D88",
    onOk: hanldeOk,
    onCancel: () => _onCancel(),
    mask: false,
    centered: true,
    destroyOnClose: true
  }, /*#__PURE__*/react_default.a.createElement(es_form["a" /* default */], {
    form: form
  }, /*#__PURE__*/react_default.a.createElement(es_form["a" /* default */].Item, Object(esm_extends["a" /* default */])({}, formItemLayout, {
    name: "entityType",
    label: "\\u6A21\\u578B\\u7C7B\\u578B",
    rules: [{
      required: true
    }],
    initialValue: currentEntityType
  }), /*#__PURE__*/react_default.a.createElement(es_radio["a" /* default */].Group, {
    onChange: onChange
  }, lodash_default.a.map(EntityType, type => {
    return /*#__PURE__*/react_default.a.createElement(es_radio["a" /* default */], {
      value: type,
      key: type
    }, EntityTypeDisplay[type]);
  }))), /*#__PURE__*/react_default.a.createElement(es_form["a" /* default */].Item, Object(esm_extends["a" /* default */])({}, formItemLayout, {
    name: "displayName",
    label: "\\u4E2D\\u6587\\u540D",
    rules: [{
      required: true,
      validator: (rule, v, callback) => {
        if (!v) {
          callback('\u8BF7\u8F93\u5165\u4E2D\u6587\u540D\u79F0');
        }

        var reg1 = new RegExp("^[a-zA-Z0-9_]*$");

        if (reg1.test(v)) {
          callback('\u5FC5\u987B\u5305\u542B\u4E2D\u6587');
        }

        var reg2 = new RegExp('^[\\\\u4e00-\\\\u9fa5a-zA-Z0-9_]*$');

        if (reg2.test(v)) {
          callback();
        } else {
          callback('\u53EA\u80FD\u5305\u542B\u4E2D\u6587\u3001\u5B57\u7B26\u3001\u6570\u5B57\u3001\u4E0B\u5212\u7EBF');
        }
      }
    }],
    initialValue: '\u7528\u6237\u521B\u5EFA\u7684\u8868'
  }), /*#__PURE__*/react_default.a.createElement(input["a" /* default */], {
    placeholder: "\\u8BF7\\u8F93\\u5165\\u4E2D\\u6587\\u540D\\u79F0",
    autoComplete: "off"
  })), /*#__PURE__*/react_default.a.createElement(es_form["a" /* default */].Item, Object(esm_extends["a" /* default */])({}, formItemLayout, {
    name: "name",
    label: "\\u82F1\\u6587\\u540D",
    rules: [{
      required: true,
      validator: (rule, v, callback) => {
        if (!v) {
          callback('\u8BF7\u8F93\u5165\u82F1\u6587\u540D');
        } else if (v.includes(' ')) {
          callback('\u4E0D\u80FD\u5305\u542B\u7A7A\u683C');
        }

        var reg = new RegExp("^[a-zA-Z0-9_]*$");

        if (reg.test(v)) {
          callback();
        } else {
          callback('\u53EA\u80FD\u5305\u542B\u6570\u5B57\u3001\u5B57\u7B26\u3001\u4E0B\u5212\u7EBF');
        }
      }
    }],
    initialValue: 'customNode'
  }), /*#__PURE__*/react_default.a.createElement(input["a" /* default */], {
    placeholder: "\\u8BF7\\u8F93\\u5165\\u82F1\\u6587\\u540D",
    autoComplete: "off"
  }))));
};

/* harmony default export */ var demos_CreateNodeModal = (CreateEntityModal);
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/select/index.js + 10 modules
var es_select = __webpack_require__("x2dm");

// CONCATENATED MODULE: ./docs/tutorial/solutions/er/demos/CreateRelationModal/index.tsx





var CreateRelationModal_formItemLayout = {
  labelCol: {
    xs: {
      span: 24
    },
    sm: {
      span: 6
    }
  },
  wrapperCol: {
    xs: {
      span: 24
    },
    sm: {
      span: 16
    }
  }
};

var CreateRelationModal = props => {
  var visible = props.visible,
      sourceEntity = props.sourceEntity,
      targetEntity = props.targetEntity,
      onOk = props.onOk,
      onCancel = props.onCancel;

  var _useState = Object(react["useState"])(false),
      _useState2 = Object(slicedToArray["a" /* default */])(_useState, 2),
      confirmLoading = _useState2[0],
      setConfirmLoading = _useState2[1];

  var _Form$useForm = es_form["a" /* default */].useForm(),
      _Form$useForm2 = Object(slicedToArray["a" /* default */])(_Form$useForm, 1),
      form = _Form$useForm2[0];

  var handleOK = () => {
    form.validateFields().then(values => {
      setConfirmLoading(true);

      var cb = () => {
        setConfirmLoading(false);
      };

      onOk(Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({}, values), {}, {
        cb
      }));
    });
  };

  return /*#__PURE__*/react_default.a.createElement(modal["a" /* default */], {
    title: "\\u5173\\u8054\\u6A21\\u578B",
    visible: visible,
    confirmLoading: confirmLoading,
    wrapClassName: "create-relation-container",
    okText: "\\u786E\\u5B9A",
    cancelText: "\\u53D6\\u6D88",
    onOk: handleOK,
    onCancel: onCancel,
    mask: false,
    centered: true,
    destroyOnClose: true
  }, /*#__PURE__*/react_default.a.createElement(es_form["a" /* default */], {
    form: form
  }, /*#__PURE__*/react_default.a.createElement(es_form["a" /* default */].Item, Object(esm_extends["a" /* default */])({}, CreateRelationModal_formItemLayout, {
    name: "SOURCE_GUID",
    label: "SOURCE_GUID",
    rules: [{
      required: true
    }],
    initialValue: "".concat((sourceEntity === null || sourceEntity === void 0 ? void 0 : sourceEntity.entityName) || '', "(").concat((sourceEntity === null || sourceEntity === void 0 ? void 0 : sourceEntity.entityId) || '', ")")
  }), /*#__PURE__*/react_default.a.createElement(input["a" /* default */], null)), /*#__PURE__*/react_default.a.createElement(es_form["a" /* default */].Item, Object(esm_extends["a" /* default */])({}, CreateRelationModal_formItemLayout, {
    name: "TARGET_GUID",
    label: "TARGET_GUID",
    rules: [{
      required: true
    }],
    initialValue: "".concat((targetEntity === null || targetEntity === void 0 ? void 0 : targetEntity.entityName) || '', "(").concat((targetEntity === null || targetEntity === void 0 ? void 0 : targetEntity.entityId) || '', ")")
  }), /*#__PURE__*/react_default.a.createElement(input["a" /* default */], null)), /*#__PURE__*/react_default.a.createElement(es_form["a" /* default */].Item, Object(esm_extends["a" /* default */])({}, CreateRelationModal_formItemLayout, {
    name: "RELATION_TYPE",
    label: "\\u9009\\u62E9\\u5173\\u8054\\u5173\\u7CFB",
    rules: [{
      required: true
    }],
    initialValue: 'N:1'
  }), /*#__PURE__*/react_default.a.createElement(es_select["a" /* default */], {
    placeholder: "\\u8BF7\\u9009\\u62E9\\u5173\\u8054\\u5173\\u7CFB"
  }, /*#__PURE__*/react_default.a.createElement(es_select["a" /* default */].Option, {
    value: "N:1"
  }, "\\u591A\\u5BF9\\u4E00"), /*#__PURE__*/react_default.a.createElement(es_select["a" /* default */].Option, {
    value: "1:N"
  }, "\\u4E00\\u5BF9\\u591A")))));
};

/* harmony default export */ var demos_CreateRelationModal = (CreateRelationModal);
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/BarsOutlined.js + 1 modules
var BarsOutlined = __webpack_require__("h/wu");

// EXTERNAL MODULE: ./docs/tutorial/solutions/er/demos/react-node/Entity.less
var Entity = __webpack_require__("2Yg5");

// CONCATENATED MODULE: ./docs/tutorial/solutions/er/demos/react-node/Entity.tsx





var Entity_Entity = props => {
  var _entity$properties;

  var entity = props === null || props === void 0 ? void 0 : props.data;

  var getCls = () => {
    if ((entity === null || entity === void 0 ? void 0 : entity.entityType) === EntityType.FACT) {
      return 'fact';
    }

    if ((entity === null || entity === void 0 ? void 0 : entity.entityType) === EntityType.DIM) {
      return 'dim';
    }

    if ((entity === null || entity === void 0 ? void 0 : entity.entityType) === EntityType.OTHER) {
      return 'other';
    }

    return '';
  };

  return /*#__PURE__*/react_default.a.createElement("div", {
    className: "entity-container ".concat(getCls())
  }, /*#__PURE__*/react_default.a.createElement("div", {
    className: "content ".concat(getCls())
  }, /*#__PURE__*/react_default.a.createElement("div", {
    className: "head"
  }, /*#__PURE__*/react_default.a.createElement("div", null, /*#__PURE__*/react_default.a.createElement(BarsOutlined["a" /* default */], {
    className: "type"
  }), /*#__PURE__*/react_default.a.createElement("span", null, entity === null || entity === void 0 ? void 0 : entity.entityName)), /*#__PURE__*/react_default.a.createElement("div", {
    className: "del-icon",
    onClick: () => props.deleteNode(entity === null || entity === void 0 ? void 0 : entity.id)
  }, /*#__PURE__*/react_default.a.createElement(DeleteOutlined["a" /* default */], null))), /*#__PURE__*/react_default.a.createElement("div", {
    className: "body"
  }, entity === null || entity === void 0 ? void 0 : (_entity$properties = entity.properties) === null || _entity$properties === void 0 ? void 0 : _entity$properties.map(property => {
    return /*#__PURE__*/react_default.a.createElement("div", {
      className: "body-item",
      key: property.propertyId
    }, /*#__PURE__*/react_default.a.createElement("div", {
      className: "name"
    }, (property === null || property === void 0 ? void 0 : property.isPK) && /*#__PURE__*/react_default.a.createElement("span", {
      className: "pk"
    }, "PK"), (property === null || property === void 0 ? void 0 : property.isFK) && /*#__PURE__*/react_default.a.createElement("span", {
      className: "fk"
    }, "FK"), property === null || property === void 0 ? void 0 : property.propertyName), /*#__PURE__*/react_default.a.createElement("div", {
      className: "type"
    }, property.propertyType));
  }))));
};

/* harmony default export */ var react_node_Entity = (Entity_Entity);
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/tooltip/index.js + 1 modules
var tooltip = __webpack_require__("9xBf");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/popconfirm/index.js
var popconfirm = __webpack_require__("NjSG");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/popover/index.js
var popover = __webpack_require__("excc");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/ScissorOutlined.js + 1 modules
var ScissorOutlined = __webpack_require__("H4RT");

// EXTERNAL MODULE: ./docs/tutorial/solutions/er/demos/react-edge/Relation.less
var Relation = __webpack_require__("5EOj");

// CONCATENATED MODULE: ./docs/tutorial/solutions/er/demos/react-edge/Relation.tsx





var Relation_Relation = props => {
  var relation = props === null || props === void 0 ? void 0 : props.data;

  var renderRelationOperationItem = relation => {
    var sourcePropertyName = relation === null || relation === void 0 ? void 0 : relation.source;
    var targetPropertyName = relation === null || relation === void 0 ? void 0 : relation.target;
    return /*#__PURE__*/react_default.a.createElement("div", {
      className: "relation-operation-item",
      key: relation.id
    }, /*#__PURE__*/react_default.a.createElement("div", {
      className: "relation-operation-item-content"
    }, /*#__PURE__*/react_default.a.createElement(tooltip["a" /* default */], {
      placement: "top",
      title: sourcePropertyName
    }, /*#__PURE__*/react_default.a.createElement("span", {
      className: "relation-property-source"
    }, sourcePropertyName)), "(N:1)", /*#__PURE__*/react_default.a.createElement(tooltip["a" /* default */], {
      placement: "top",
      title: targetPropertyName
    }, /*#__PURE__*/react_default.a.createElement("span", {
      className: "relation-property-target"
    }, targetPropertyName))), /*#__PURE__*/react_default.a.createElement(popconfirm["a" /* default */], {
      placement: "leftTop",
      title: "\\u4F60\\u786E\\u5B9A\\u8981\\u5220\\u9664\\u8BE5\\u5173\\u7CFB\\u5417",
      okText: "\\u786E\\u5B9A",
      cancelText: "\\u53D6\\u6D88",
      onConfirm: () => {
        props === null || props === void 0 ? void 0 : props.deleteRelation(relation.id);
      }
    }, /*#__PURE__*/react_default.a.createElement(ScissorOutlined["a" /* default */], null)));
  };

  var renderPopoverContent = () => {
    return /*#__PURE__*/react_default.a.createElement("div", {
      className: "relation-operation-container"
    }, renderRelationOperationItem(relation));
  };

  return /*#__PURE__*/react_default.a.createElement(popover["a" /* default */], {
    trigger: 'hover',
    content: renderPopoverContent(),
    overlayClassName: "relation-operation-popover"
  }, /*#__PURE__*/react_default.a.createElement("div", {
    className: "relation-count-container"
  }, 1));
};

/* harmony default export */ var react_edge_Relation = (Relation_Relation);
// EXTERNAL MODULE: ./docs/tutorial/solutions/er/demos/index.less
var demos = __webpack_require__("HEaf");

// CONCATENATED MODULE: ./docs/tutorial/solutions/er/demos/index.tsx












/** \u914D\u7F6E\u753B\u5E03 */


/** \u914D\u7F6ECommand */


/** \u914D\u7F6E\u5FEB\u6377\u952E */








/** Mock\u6240\u6709\u4E0E\u670D\u52A1\u7AEF\u4EA4\u4E92\u7684\u63A5\u53E3 */



/** \u9F20\u6807\u7684\u5F15\u7528 */
var cursorTipRef;
/** \u9F20\u6807\u5728\u753B\u5E03\u7684\u4F4D\u7F6E */

var cursorLocation;

var Demo = props => {
  /** XFlow\u5E94\u7528\u5B9E\u4F8B */
  var app = Object(es["W" /* useXFlowApp */])();
  /** \u753B\u5E03\u914D\u7F6E\u9879 */

  var graphConfig = useGraphConfig();
  /** \u9884\u8BBEXFlow\u753B\u5E03\u9700\u8981\u6E32\u67D3\u7684React\u8282\u70B9 / \u8FB9 */

  graphConfig.setNodeRender('NODE1', props => {
    return /*#__PURE__*/react_default.a.createElement(react_node_Entity, Object(esm_extends["a" /* default */])({}, props, {
      deleteNode: handleDeleteNode
    }));
  });
  graphConfig.setEdgeRender('EDGE1', props => {
    return /*#__PURE__*/react_default.a.createElement(react_edge_Relation, Object(esm_extends["a" /* default */])({}, props, {
      deleteRelation: handleDeleteEdge
    }));
  });
  /** \u547D\u4EE4\u914D\u7F6E\u9879 */

  var cmdConfig = useCmdConfig();
  /** \u5FEB\u6377\u952E\u914D\u7F6E\u9879 */

  var keybindingConfig = useKeybindingConfig();
  /** \u662F\u5426\u753B\u5E03\u5904\u4E8E\u53EF\u4EE5\u65B0\u5EFA\u8282\u70B9\u72B6\u6001 */

  var _useState = Object(react["useState"])('NORMAL'),
      _useState2 = Object(slicedToArray["a" /* default */])(_useState, 2),
      graphStatuts = _useState2[0],
      setGraphStatus = _useState2[1];
  /** \u662F\u5426\u5C55\u793A\u65B0\u5EFA\u8282\u70B9\u5F39\u7A97 */


  var _useState3 = Object(react["useState"])(false),
      _useState4 = Object(slicedToArray["a" /* default */])(_useState3, 2),
      isShowCreateNodeModal = _useState4[0],
      setIsShowCreateNodeModal = _useState4[1];
  /** \u662F\u5426\u5C55\u793A\u65B0\u5EFA\u5173\u8054\u5173\u7CFB\u5F39\u7A97 */


  var _useState5 = Object(react["useState"])(false),
      _useState6 = Object(slicedToArray["a" /* default */])(_useState5, 2),
      isShowCreateRelationModal = _useState6[0],
      setIsShowCreateRelationModal = _useState6[1];
  /** \u8FDE\u7EBFsource\u6570\u636E */


  var _useState7 = Object(react["useState"])(undefined),
      _useState8 = Object(slicedToArray["a" /* default */])(_useState7, 2),
      relationSourceData = _useState8[0],
      setRelationSourceData = _useState8[1];
  /** \u8FDE\u7EBFtarget\u6570\u636E */


  var _useState9 = Object(react["useState"])(undefined),
      _useState10 = Object(slicedToArray["a" /* default */])(_useState9, 2),
      relationTargetData = _useState10[0],
      setRelationTargetData = _useState10[1];
  /** XFlow\u521D\u59CB\u5316\u5B8C\u6210\u7684\u56DE\u8C03 */


  var onLoad = /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(app) {
      var graph, graphData;
      return regenerator_default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return app.getGraphInstance();

            case 2:
              graph = _context.sent;
              graph.zoom(-0.2);
              /** Mock\u4ECE\u670D\u52A1\u7AEF\u83B7\u53D6\u6570\u636E */

              _context.next = 6;
              return MockApi.loadGraphData();

            case 6:
              graphData = _context.sent;
              _context.next = 9;
              return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_RENDER.id, {
                graphData
              });

            case 9:
              _context.next = 11;
              return watchEvent(app);

            case 11:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function onLoad(_x) {
      return _ref.apply(this, arguments);
    };
  }();
  /** \u76D1\u542C\u4E8B\u4EF6 */


  var watchEvent = /*#__PURE__*/function () {
    var _ref2 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee2(appRef) {
      var graph;
      return regenerator_default.a.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              if (!appRef) {
                _context2.next = 9;
                break;
              }

              _context2.next = 3;
              return appRef.getGraphInstance();

            case 3:
              graph = _context2.sent;
              graph.on('node:mousedown', _ref3 => {
                var _node$getData;

                var e = _ref3.e,
                    x = _ref3.x,
                    y = _ref3.y,
                    node = _ref3.node,
                    view = _ref3.view;
                appRef.executeCommand(es["J" /* XFlowNodeCommands */].FRONT_NODE.id, {
                  nodeId: node === null || node === void 0 ? void 0 : (_node$getData = node.getData()) === null || _node$getData === void 0 ? void 0 : _node$getData.id
                });
              });
              graph.on('edge:connected', _ref4 => {
                var _edge$getSourceNode, _edge$getTargetNode;

                var edge = _ref4.edge;
                var relationSourceData = edge === null || edge === void 0 ? void 0 : (_edge$getSourceNode = edge.getSourceNode()) === null || _edge$getSourceNode === void 0 ? void 0 : _edge$getSourceNode.data;
                var relationTargetData = edge === null || edge === void 0 ? void 0 : (_edge$getTargetNode = edge.getTargetNode()) === null || _edge$getTargetNode === void 0 ? void 0 : _edge$getTargetNode.data;
                setRelationSourceData(relationSourceData);
                setRelationTargetData(relationTargetData);
                setIsShowCreateRelationModal(true);
                /** \u62D6\u62FD\u8FC7\u7A0B\u4E2D\u4F1A\u751F\u6210\u4E00\u6761\u65E0\u5B9E\u9645\u4E1A\u52A1\u542B\u4E49\u7684\u7EBF, \u9700\u8981\u624B\u52A8\u5220\u9664 */

                var edgeData = edge === null || edge === void 0 ? void 0 : edge.getData();

                if (!edgeData) {
                  appRef.executeCommand(es["G" /* XFlowEdgeCommands */].DEL_EDGE.id, {
                    x6Edge: edge
                  });
                }
              });
              graph.on('node:mouseenter', _ref5 => {
                var e = _ref5.e,
                    node = _ref5.node,
                    view = _ref5.view;
                changePortsVisible(true);
              });
              graph.on('node:mouseleave', _ref6 => {
                var e = _ref6.e,
                    node = _ref6.node,
                    view = _ref6.view;
                changePortsVisible(false);
              });
              graph.on('edge:click', _ref7 => {
                var edge = _ref7.edge;
                edge.toFront();
              });

            case 9:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    }));

    return function watchEvent(_x2) {
      return _ref2.apply(this, arguments);
    };
  }();

  var changePortsVisible = visible => {
    var ports = document.body.querySelectorAll('.x6-port-body');

    for (var i = 0, len = ports.length; i < len; i = i + 1) {
      ports[i].style.visibility = visible ? 'visible' : 'hidden';
    }
  };
  /** \u521B\u5EFA\u753B\u5E03\u8282\u70B9 */


  var handleCreateNode = /*#__PURE__*/function () {
    var _ref8 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee3(values) {
      var cb, rest, graph, graphLoc, res;
      return regenerator_default.a.wrap(function _callee3$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              cb = values.cb, rest = Object(objectWithoutProperties["a" /* default */])(values, ["cb"]);
              _context3.next = 3;
              return app.getGraphInstance();

            case 3:
              graph = _context3.sent;

              /** div\u5757\u9F20\u6807\u7684\u4F4D\u7F6E\u8F6C\u6362\u4E3A\u753B\u5E03\u7684\u4F4D\u7F6E */
              graphLoc = graph.clientToLocal(cursorLocation.x, cursorLocation.y - 200);
              _context3.next = 7;
              return app.executeCommand(es["J" /* XFlowNodeCommands */].ADD_NODE.id, {
                nodeConfig: {
                  id: 'customNode',
                  x: graphLoc.x,
                  y: graphLoc.y,
                  width: 214,
                  height: 252,
                  renderKey: 'NODE1',
                  entityId: values === null || values === void 0 ? void 0 : values.name,
                  entityName: values === null || values === void 0 ? void 0 : values.displayName,
                  entityType: 'FACT'
                }
              });

            case 7:
              res = _context3.sent;

              if (res) {
                cb && cb();
                setIsShowCreateNodeModal(false);
                message["b" /* default */].success('\u6DFB\u52A0\u8282\u70B9\u6210\u529F!');
              }

            case 9:
            case "end":
              return _context3.stop();
          }
        }
      }, _callee3);
    }));

    return function handleCreateNode(_x3) {
      return _ref8.apply(this, arguments);
    };
  }();
  /** \u5220\u9664\u753B\u5E03\u8282\u70B9 */


  var handleDeleteNode = /*#__PURE__*/function () {
    var _ref9 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee4(nodeId) {
      var res;
      return regenerator_default.a.wrap(function _callee4$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              _context4.next = 2;
              return app.executeCommand(es["J" /* XFlowNodeCommands */].DEL_NODE.id, {
                nodeConfig: {
                  id: nodeId
                }
              });

            case 2:
              res = _context4.sent;

              if (res) {
                message["b" /* default */].success('\u5220\u9664\u8282\u70B9\u6210\u529F!');
              }

            case 4:
            case "end":
              return _context4.stop();
          }
        }
      }, _callee4);
    }));

    return function handleDeleteNode(_x4) {
      return _ref9.apply(this, arguments);
    };
  }();
  /** \u521B\u5EFA\u5173\u8054\u5173\u7CFB */


  var handleCreateEdge = /*#__PURE__*/function () {
    var _ref10 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee5(values) {
      var cb, rest, res;
      return regenerator_default.a.wrap(function _callee5$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:
              cb = values.cb, rest = Object(objectWithoutProperties["a" /* default */])(values, ["cb"]);
              _context5.next = 3;
              return app.executeCommand(es["G" /* XFlowEdgeCommands */].ADD_EDGE.id, {
                edgeConfig: {
                  id: 'fact1-other2',
                  source: 'fact1',
                  target: 'other2',
                  renderKey: 'EDGE1',
                  edgeContentWidth: 20,
                  edgeContentHeigt: 20,

                  /** \u8BBE\u7F6E\u8FDE\u7EBF\u6837\u5F0F */
                  attrs: {
                    line: {
                      stroke: '#d8d8d8',
                      strokeWidth: 1,
                      targetMarker: {
                        name: 'classic'
                      }
                    }
                  }
                }
              });

            case 3:
              res = _context5.sent;

              if (res) {
                cb && cb();
                setIsShowCreateRelationModal(false);
                message["b" /* default */].success('\u6DFB\u52A0\u8FDE\u7EBF\u6210\u529F!');
              }

            case 5:
            case "end":
              return _context5.stop();
          }
        }
      }, _callee5);
    }));

    return function handleCreateEdge(_x5) {
      return _ref10.apply(this, arguments);
    };
  }();
  /** \u5220\u9664\u5173\u8054\u5173\u7CFB */


  var handleDeleteEdge = /*#__PURE__*/function () {
    var _ref11 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee6(relationId) {
      var res;
      return regenerator_default.a.wrap(function _callee6$(_context6) {
        while (1) {
          switch (_context6.prev = _context6.next) {
            case 0:
              _context6.next = 2;
              return app.executeCommand(es["G" /* XFlowEdgeCommands */].DEL_EDGE.id, {
                edgeConfig: {
                  id: relationId
                }
              });

            case 2:
              res = _context6.sent;

              if (res) {
                message["b" /* default */].success('\u5220\u9664\u8FDE\u7EBF\u6210\u529F!');
              }

            case 4:
            case "end":
              return _context6.stop();
          }
        }
      }, _callee6);
    }));

    return function handleDeleteEdge(_x6) {
      return _ref11.apply(this, arguments);
    };
  }();
  /** \u8BBE\u7F6E\u9F20\u6807\u6837\u5F0F */


  var configCursorTip = _ref12 => {
    var left = _ref12.left,
        top = _ref12.top,
        display = _ref12.display;
    cursorTipRef.style.left = left;
    cursorTipRef.style.top = top;
    cursorTipRef.style.display = display;
  };

  return /*#__PURE__*/react_default.a.createElement("div", {
    onMouseMove: e => {
      if (graphStatuts === 'CREATE') {
        configCursorTip({
          left: "".concat(e.pageX, "px"),
          top: "".concat(e.pageY - 180, "px"),
          display: 'block'
        });
      }
    },
    onMouseDown: e => {
      if (graphStatuts === 'CREATE') {
        cursorLocation = {
          x: e.pageX,
          y: e.pageY
        };
        setIsShowCreateNodeModal(true);
        configCursorTip({
          left: '0px',
          top: '0px',
          display: 'none'
        });
        setGraphStatus('NORMAL');
      }
    },
    onMouseLeave: e => {
      if (graphStatuts === 'CREATE') {
        configCursorTip({
          left: '0px',
          top: '0px',
          display: 'none'
        });
      }
    }
  }, /*#__PURE__*/react_default.a.createElement(es["B" /* XFlow */], {
    className: "xflow-er-solution-container",
    commandConfig: cmdConfig,
    onLoad: onLoad
  }, /*#__PURE__*/react_default.a.createElement(demos_GraphToolbar, {
    onAddNodeClick: () => {
      message["b" /* default */].info('\u9F20\u6807\u79FB\u52A8\u5230\u753B\u5E03\u7A7A\u767D\u4F4D\u7F6E, \u518D\u6B21\u70B9\u51FB\u9F20\u6807\u5B8C\u6210\u521B\u5EFA', 2);
      setGraphStatus('CREATE');
    },
    onDeleteNodeClick: /*#__PURE__*/Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee7() {
      var modelService, nodes;
      return regenerator_default.a.wrap(function _callee7$(_context7) {
        while (1) {
          switch (_context7.prev = _context7.next) {
            case 0:
              modelService = app.modelService;
              _context7.next = 3;
              return es["t" /* MODELS */].SELECTED_NODES.useValue(modelService);

            case 3:
              nodes = _context7.sent;
              nodes.forEach(node => {
                handleDeleteNode(node === null || node === void 0 ? void 0 : node.id);
              });

            case 5:
            case "end":
              return _context7.stop();
          }
        }
      }, _callee7);
    })),
    onConnectEdgeClick: () => {
      setIsShowCreateRelationModal(true);
    }
  }), /*#__PURE__*/react_default.a.createElement(es["D" /* XFlowCanvas */], {
    config: graphConfig
  }, /*#__PURE__*/react_default.a.createElement(es["b" /* CanvasMiniMap */], {
    nodeFillColor: "#ced4de",
    minimapOptions: {}
  }), /*#__PURE__*/react_default.a.createElement(es["d" /* CanvasScaleToolbar */], {
    position: {
      top: 12,
      left: 20
    }
  }), /*#__PURE__*/react_default.a.createElement(es["e" /* CanvasSnapline */], null)), /*#__PURE__*/react_default.a.createElement(es["s" /* KeyBindings */], {
    config: keybindingConfig
  }), graphStatuts === 'CREATE' && /*#__PURE__*/react_default.a.createElement("div", {
    className: "cursor-tip-container",
    ref: _ref14 => {
      _ref14 && (cursorTipRef = _ref14);
    }
  }, /*#__PURE__*/react_default.a.createElement("div", {
    className: "draft-entity-container"
  }, /*#__PURE__*/react_default.a.createElement("div", null, "\\u672A\\u547D\\u540D\\u6A21\\u578B"))), /*#__PURE__*/react_default.a.createElement(demos_CreateNodeModal, {
    visible: isShowCreateNodeModal,
    onOk: handleCreateNode,
    onCancel: () => {
      setIsShowCreateNodeModal(false);
    }
  }), /*#__PURE__*/react_default.a.createElement(demos_CreateRelationModal, {
    visible: isShowCreateRelationModal,
    sourceEntity: relationSourceData,
    targetEntity: relationTargetData,
    onOk: handleCreateEdge,
    onCancel: () => {
      setIsShowCreateRelationModal(false);
    }
  })));
};

/* harmony default export */ var er_demos = __webpack_exports__["default"] = (props => /*#__PURE__*/react_default.a.createElement(es["C" /* XFlowAppProvider */], null, /*#__PURE__*/react_default.a.createElement(Demo, props)));

//# sourceURL=webpack:///./docs/tutorial/solutions/er/demos/index.tsx_+_11_modules?`)},"77Ab":function(module,__webpack_exports__,__webpack_require__){"use strict";eval(`// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "useGraphConfig", function() { return /* binding */ useGraphConfig; });

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__("KOBo");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__("RY7m");
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("q1tI");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ../xflow/es/index.js + 271 modules
var es = __webpack_require__("mqVf");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 3 modules
var slicedToArray = __webpack_require__("jem/");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/input/index.js + 11 modules
var input = __webpack_require__("BmDy");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/form/index.js + 15 modules
var es_form = __webpack_require__("UL5a");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/message/index.js + 3 modules
var message = __webpack_require__("DuHN");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/card/index.js + 2 modules
var card = __webpack_require__("jMRu");

// CONCATENATED MODULE: ./docs/api/commands/nodes/node-add/demos/form.tsx







var width = 100;
var height = 40;
var formItems = [{
  name: 'id',
  label: 'id',
  rules: [{
    required: true
  }],
  render: input["a" /* default */]
}, {
  name: 'label',
  label: 'label',
  rules: [{
    required: true
  }],
  render: input["a" /* default */]
}, {
  name: 'x',
  label: 'x',
  render: input["a" /* default */]
}, {
  name: 'y',
  label: 'y',
  render: input["a" /* default */]
}, {
  name: 'width',
  label: 'width',
  render: input["a" /* default */]
}, {
  name: 'height',
  label: 'height',
  render: input["a" /* default */]
}];
var nodeId = 1;
var CmdForm = () => {
  var _usePanelContext = Object(es["V" /* usePanelContext */])(),
      commandService = _usePanelContext.commandService;

  var _Form$useForm = es_form["a" /* default */].useForm(),
      _Form$useForm2 = Object(slicedToArray["a" /* default */])(_Form$useForm, 1),
      form = _Form$useForm2[0];

  react_default.a.useEffect(() => {
    nodeId = 1;
  }, []);

  var onFinish = /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(values) {
      return regenerator_default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              commandService.executeCommand(es["J" /* XFlowNodeCommands */].ADD_NODE.id, {
                nodeConfig: values
              });
              nodeId += 1;
              form.setFieldsValue({
                id: 'node_' + nodeId,
                x: Object(es["S" /* randomInt */])(20, 600),
                y: Object(es["S" /* randomInt */])(50, 270),
                width,
                height,
                label: 'Node_' + nodeId
              });
              message["b" /* default */].success("".concat(es["J" /* XFlowNodeCommands */].ADD_NODE.label, ": \\u547D\\u4EE4\\u6267\\u884C\\u6210\\u529F"));

            case 4:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function onFinish(_x) {
      return _ref.apply(this, arguments);
    };
  }();

  return /*#__PURE__*/react_default.a.createElement(es["n" /* FormBuilder */], {
    form: form,
    formItems: formItems,
    onFinish: onFinish,
    initialValues: {
      id: 'node_' + nodeId,
      x: Object(es["S" /* randomInt */])(20, 100),
      y: Object(es["S" /* randomInt */])(50, 150),
      width,
      height,
      label: 'Node_' + nodeId
    }
  });
};
var FormPanel = () => {
  return /*#__PURE__*/react_default.a.createElement(es["A" /* WorkspacePanel */], {
    position: {
      top: 0,
      left: 0,
      bottom: 0,
      width: 230
    },
    className: "panel"
  }, /*#__PURE__*/react_default.a.createElement(card["a" /* default */], {
    title: "NodeConfig Options",
    size: "small",
    bordered: false
  }, /*#__PURE__*/react_default.a.createElement(CmdForm, null)));
};
// EXTERNAL MODULE: ./docs/api/commands/nodes/node-add/demos/index.less
var demos = __webpack_require__("ZtLe");

// CONCATENATED MODULE: ./docs/api/commands/nodes/node-add/demos/index.tsx






/**  graphConfig hook  */

var useGraphConfig = Object(es["M" /* createGraphConfig */])(graphConfig => {
  graphConfig.setX6Config({
    grid: true
  });
  graphConfig.setDefaultNodeRender(props => {
    return /*#__PURE__*/react_default.a.createElement("div", {
      className: "react-node"
    }, " ", props.data.label, " ");
  });
});

var NodeAddDemo = () => {
  var graphConfig = useGraphConfig();

  var onLoad = /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(app) {
      return regenerator_default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              // \u5728appReadyCallback\u4E2D\u53EF\u4EE5\u901A\u8FC7app\u6267\u884Ccommand
              app.executeCommand(es["J" /* XFlowNodeCommands */].ADD_NODE.id, {
                nodeConfig: {
                  id: 'node1',
                  x: 100,
                  y: 30,
                  label: 'Hello World',
                  width: width,
                  height: height
                }
              });
              return _context.abrupt("return", app);

            case 2:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function onLoad(_x) {
      return _ref.apply(this, arguments);
    };
  }();

  return /*#__PURE__*/react_default.a.createElement(es["B" /* XFlow */], {
    meta: {
      flowId: 'add-node-demo'
    },
    onLoad: onLoad,
    className: "xflow-workspace"
  }, /*#__PURE__*/react_default.a.createElement(FormPanel, null), /*#__PURE__*/react_default.a.createElement(es["D" /* XFlowCanvas */], {
    className: "app-main-content",
    config: graphConfig,
    position: {
      top: 0,
      left: 230,
      right: 0,
      bottom: 0
    }
  }));
};

/* harmony default export */ var node_add_demos = __webpack_exports__["default"] = (NodeAddDemo);

//# sourceURL=webpack:///./docs/api/commands/nodes/node-add/demos/index.tsx_+_1_modules?`)},"7L2j":function(module,__webpack_exports__,__webpack_require__){"use strict";eval(`// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("q1tI");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ../xflow/es/index.js + 271 modules
var es = __webpack_require__("mqVf");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__("KOBo");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__("RY7m");
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/objectSpread2.js
var objectSpread2 = __webpack_require__("BcGY");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/context-menu/demos/custom-render/mock.ts

 // NodeConfig

var NODE_COMMON_PROPS = {
  width: 160,
  height: 32
}; // NodeConfig

var EDGE_COMMON_PROPS = {
  attrs: {
    line: {
      targetMarker: {
        name: 'block',
        width: 4,
        height: 8
      },
      strokeDasharray: '',
      stroke: '#A2B1C3',
      strokeWidth: 1
    }
  }
}; // mock data

var getGraphData = () => {
  var nodes = [Object(objectSpread2["a" /* default */])({
    id: 'node1',
    label: '\u7B97\u6CD5\u8282\u70B9-1'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node2',
    label: '\u7B97\u6CD5\u8282\u70B9-2'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node3',
    label: '\u7B97\u6CD5\u8282\u70B9-3'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node4',
    label: '\u7B97\u6CD5\u8282\u70B9-4'
  }, NODE_COMMON_PROPS)];
  var edges = [Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node2',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node2-input-1'
  }, EDGE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node3',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node3-input-1'
  }, EDGE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node4',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node4-input-1'
  }, EDGE_COMMON_PROPS)];
  return {
    nodes: nodes,
    edges: edges
  };
};
// CONCATENATED MODULE: ./docs/tutorial/extension-components/context-menu/demos/custom-render/graph-config.tsx






var onLoad = /*#__PURE__*/function () {
  var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(app) {
    var res, _res$contextProvider$, graphData;

    return regenerator_default.a.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_LAYOUT.id, {
              layoutType: 'dagre',
              layoutOptions: {
                type: 'dagre',

                /** \u5E03\u5C40\u65B9\u5411 */
                rankdir: 'TB',

                /** \u8282\u70B9\u95F4\u8DDD */
                nodesep: 60,

                /** \u5C42\u95F4\u8DDD */
                ranksep: 30
              },
              graphData: getGraphData()
            });

          case 2:
            res = _context.sent;
            _res$contextProvider$ = res.contextProvider().getResult(), graphData = _res$contextProvider$.graphData; // render

            _context.next = 6;
            return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_RENDER.id, {
              graphData: graphData
            });

          case 6:
            _context.next = 8;
            return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_ZOOM.id, {
              factor: 'real'
            });

          case 8:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function onLoad(_x) {
    return _ref.apply(this, arguments);
  };
}();
/**  graphConfig\uFF1A\u914D\u7F6EGraph  */

var useGraphConfig = Object(es["M" /* createGraphConfig */])(graphConfig => {
  graphConfig.setDefaultNodeRender(props => {
    return /*#__PURE__*/react_default.a.createElement("div", {
      className: "react-node"
    }, " ", props.data.label, " ");
  });
});
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/DeleteOutlined.js + 1 modules
var DeleteOutlined = __webpack_require__("UmCv");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/EditOutlined.js + 1 modules
var EditOutlined = __webpack_require__("xdJY");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/StopOutlined.js + 1 modules
var StopOutlined = __webpack_require__("PJfV");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/context-menu/demos/custom-render/menu-config.tsx







/** menuitem \u914D\u7F6E */

var NsCustomMenuItems;

(function (_NsCustomMenuItems) {
  /** \u6CE8\u518C\u83DC\u5355\u4F9D\u8D56\u7684icon */
  es["q" /* IconStore */].set('DeleteOutlined', DeleteOutlined["a" /* default */]);
  es["q" /* IconStore */].set('EditOutlined', EditOutlined["a" /* default */]);
  es["q" /* IconStore */].set('StopOutlined', StopOutlined["a" /* default */]);
  var DELETE_EDGE = _NsCustomMenuItems.DELETE_EDGE = {
    id: es["G" /* XFlowEdgeCommands */].DEL_EDGE.id,
    label: '\u5220\u9664\u8FB9',
    hotkey: 'Delete',
    iconName: 'DeleteOutlined',
    onClick: function () {
      var _onClick = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee2(_ref2) {
        var target, commandService;
        return regenerator_default.a.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                target = _ref2.target, commandService = _ref2.commandService;
                commandService.executeCommand(es["G" /* XFlowEdgeCommands */].DEL_EDGE.id, {
                  edgeConfig: target.data
                });

              case 2:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      function onClick(_x5) {
        return _onClick.apply(this, arguments);
      }

      return onClick;
    }()
  };
  var DELETE_NODE = _NsCustomMenuItems.DELETE_NODE = {
    id: es["J" /* XFlowNodeCommands */].DEL_NODE.id,
    label: '\u5220\u9664\u8282\u70B9',
    iconName: 'DeleteOutlined',
    hotkey: 'Delete',
    onClick: function () {
      var _onClick2 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee3(_ref3) {
        var target, commandService;
        return regenerator_default.a.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                target = _ref3.target, commandService = _ref3.commandService;
                commandService.executeCommand(es["J" /* XFlowNodeCommands */].DEL_NODE.id, {
                  nodeConfig: {
                    id: target.data.id
                  }
                });

              case 2:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3);
      }));

      function onClick(_x6) {
        return _onClick2.apply(this, arguments);
      }

      return onClick;
    }()
  };
  var NODE_LINK = _NsCustomMenuItems.NODE_LINK = {
    id: 'NODE_LINK',
    label: 'NODE_LINK',
    render: _ref4 => {
      var children = _ref4.children;
      return /*#__PURE__*/react_default.a.createElement("a", {
        target: "_blank",
        href: "https://x6.antv.vision/",
        style: {
          padding: '0 16px'
        }
      }, "\\u4E00\\u4E2A\\u81EA\\u5B9A\\u4E49\\u6E32\\u67D3\\u7684\\u8FDE\\u63A5");
    }
  };
  var EMPTY_MENU = _NsCustomMenuItems.EMPTY_MENU = {
    id: 'EMPTY_MENU_ITEM',
    label: '\u6682\u65E0\u53EF\u7528',
    isEnabled: false,
    iconName: 'DeleteOutlined',
    onClick: function () {
      var _onClick3 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee4(_ref5) {
        var target, commandService;
        return regenerator_default.a.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                target = _ref5.target, commandService = _ref5.commandService;
                commandService.executeCommand(es["J" /* XFlowNodeCommands */].DEL_NODE.id, {
                  nodeConfig: {
                    id: target.data.id
                  }
                });

              case 2:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4);
      }));

      function onClick(_x7) {
        return _onClick3.apply(this, arguments);
      }

      return onClick;
    }()
  };
  var SEPARATOR = _NsCustomMenuItems.SEPARATOR = {
    id: 'separator',
    type: es["v" /* MenuItemType */].Separator
  };
})(NsCustomMenuItems || (NsCustomMenuItems = {}));

var useMenuConfig = Object(es["L" /* createCtxMenuConfig */])(config => {
  config.setMenuModelService( /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(data, model, modelService, toDispose) {
      var type, cell;
      return regenerator_default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              type = data.type, cell = data.cell;
              console.log(type);
              _context.t0 = type;
              _context.next = _context.t0 === 'node' ? 5 : _context.t0 === 'edge' ? 7 : _context.t0 === 'blank' ? 9 : 11;
              break;

            case 5:
              model.setValue({
                id: 'root',
                type: es["v" /* MenuItemType */].Root,
                submenu: [NsCustomMenuItems.DELETE_NODE, NsCustomMenuItems.SEPARATOR, NsCustomMenuItems.NODE_LINK]
              });
              return _context.abrupt("break", 13);

            case 7:
              model.setValue({
                id: 'root',
                type: es["v" /* MenuItemType */].Root,
                submenu: [NsCustomMenuItems.DELETE_EDGE]
              });
              return _context.abrupt("break", 13);

            case 9:
              model.setValue({
                id: 'root',
                type: es["v" /* MenuItemType */].Root,
                submenu: [NsCustomMenuItems.EMPTY_MENU]
              });
              return _context.abrupt("break", 13);

            case 11:
              model.setValue({
                id: 'root',
                type: es["v" /* MenuItemType */].Root,
                submenu: [NsCustomMenuItems.EMPTY_MENU]
              });
              return _context.abrupt("break", 13);

            case 13:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function (_x, _x2, _x3, _x4) {
      return _ref.apply(this, arguments);
    };
  }());
});
// EXTERNAL MODULE: ./docs/tutorial/extension-components/context-menu/demos/custom-render/index.less
var custom_render = __webpack_require__("yZTE");

// EXTERNAL MODULE: ../xflow/dist/index.css
var dist = __webpack_require__("1MRj");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/context-menu/demos/custom-render/index.tsx
/**
 *  title: \u81EA\u5B9A\u4E49\u6E32\u67D3
 *  desc: |
 *    \u5185\u7F6E\u7684\u83DC\u5355\u8865\u6EE1\u8DB3\u65F6\uFF0C\u53EF\u4EE5\u914D\u7F6E\u81EA\u5B9A\u4E49\u7EC4\u4EF6 <br>
 */






/**  Demo Props  */

var XFlowDemo = props => {
  var graphConfig = useGraphConfig(props);
  var menucConfig = useMenuConfig(props);
  return /*#__PURE__*/react_default.a.createElement(es["B" /* XFlow */], {
    onLoad: onLoad,
    className: "xflow-workspace"
  }, /*#__PURE__*/react_default.a.createElement(es["D" /* XFlowCanvas */], {
    config: graphConfig,
    position: {
      top: 0,
      bottom: 0,
      left: 0,
      right: 0
    }
  }, /*#__PURE__*/react_default.a.createElement(es["a" /* CanvasContextMenu */], {
    config: menucConfig
  })));
};

/* harmony default export */ var demos_custom_render = __webpack_exports__["default"] = (XFlowDemo);

//# sourceURL=webpack:///./docs/tutorial/extension-components/context-menu/demos/custom-render/index.tsx_+_3_modules?`)},"91QT":function(module,__webpack_exports__,__webpack_require__){"use strict";eval(`// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "useGraphConfig", function() { return /* binding */ useGraphConfig; });

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__("KOBo");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__("RY7m");
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("q1tI");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ../xflow/es/index.js + 271 modules
var es = __webpack_require__("mqVf");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/objectSpread2.js
var objectSpread2 = __webpack_require__("BcGY");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-scale-toolbar/demos/mock.ts

 // NodeConfig

var NODE_COMMON_PROPS = {
  width: 160,
  height: 32
}; // NodeConfig

var EDGE_COMMON_PROPS = {
  attrs: {
    line: {
      targetMarker: {
        name: 'block',
        width: 4,
        height: 8
      },
      strokeDasharray: '',
      stroke: '#909090',
      strokeWidth: 1
    }
  }
}; // mock data

var getGraphData = () => {
  var nodes = [Object(objectSpread2["a" /* default */])({
    id: 'node1',
    label: '\u7B97\u6CD5\u8282\u70B9-1'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node2',
    label: '\u7B97\u6CD5\u8282\u70B9-2'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node3',
    label: '\u7B97\u6CD5\u8282\u70B9-3'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node4',
    label: '\u7B97\u6CD5\u8282\u70B9-4'
  }, NODE_COMMON_PROPS)];
  var edges = [Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node2',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node2-input-1'
  }, EDGE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node3',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node3-input-1'
  }, EDGE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node4',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node4-input-1'
  }, EDGE_COMMON_PROPS)];
  return {
    nodes: nodes,
    edges: edges
  };
};
// EXTERNAL MODULE: ./docs/tutorial/extension-components/canvas-scale-toolbar/demos/index.less
var demos = __webpack_require__("zvaq");

// EXTERNAL MODULE: ../xflow/dist/index.css
var dist = __webpack_require__("1MRj");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-scale-toolbar/demos/index.tsx



/**
 * title: \u4F7F\u7528\u65B9\u6CD5
 * desc: CanvasScaleToolbar\u7EC4\u4EF6\u7684\u4F7F\u7528\uFF0C\u53EA\u9700\u8981\u914D\u7F6E\u4E0Bposition\u5C5E\u6027
 */






/**  Demo Props  */

/**  graphConfig\uFF1A\u914D\u7F6EGraph  */
var useGraphConfig = Object(es["M" /* createGraphConfig */])(graphConfig => {
  graphConfig.setDefaultNodeRender(props => {
    return /*#__PURE__*/react_default.a.createElement("div", {
      className: "react-node"
    }, " ", props.data.label, " ");
  });
});

var XFlowDemo = props => {
  var graphConfig = useGraphConfig(props);

  var onLoad = /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(app) {
      var res, _res$contextProvider$, graphData;

      return regenerator_default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_LAYOUT.id, {
                layoutType: 'dagre',
                layoutOptions: {
                  type: 'dagre',

                  /** \u5E03\u5C40\u65B9\u5411 */
                  rankdir: 'TB',

                  /** \u8282\u70B9\u95F4\u8DDD */
                  nodesep: 60,

                  /** \u5C42\u95F4\u8DDD */
                  ranksep: 30
                },
                graphData: getGraphData()
              });

            case 2:
              res = _context.sent;
              _res$contextProvider$ = res.contextProvider().getResult(), graphData = _res$contextProvider$.graphData; // render

              _context.next = 6;
              return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_RENDER.id, {
                graphData: graphData
              });

            case 6:
              _context.next = 8;
              return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_ZOOM.id, {
                factor: 'real'
              });

            case 8:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function onLoad(_x) {
      return _ref.apply(this, arguments);
    };
  }();

  return /*#__PURE__*/react_default.a.createElement(es["B" /* XFlow */], {
    onLoad: onLoad,
    className: "xflow-workspace"
  }, /*#__PURE__*/react_default.a.createElement(es["D" /* XFlowCanvas */], {
    config: graphConfig,
    position: {
      top: 0,
      bottom: 0,
      left: 0,
      right: 0
    }
  }, /*#__PURE__*/react_default.a.createElement(es["d" /* CanvasScaleToolbar */], {
    position: {
      top: 12,
      left: 12
    }
  })));
};

/* harmony default export */ var canvas_scale_toolbar_demos = __webpack_exports__["default"] = (XFlowDemo);

//# sourceURL=webpack:///./docs/tutorial/extension-components/canvas-scale-toolbar/demos/index.tsx_+_1_modules?`)},"A8/L":function(module,__webpack_exports__,__webpack_require__){"use strict";eval(`// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("q1tI");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ../xflow/es/index.js + 271 modules
var es = __webpack_require__("mqVf");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__("KOBo");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__("RY7m");
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/objectSpread2.js
var objectSpread2 = __webpack_require__("BcGY");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/context-menu/demos/basic/mock.ts

 // NodeConfig

var NODE_COMMON_PROPS = {
  width: 160,
  height: 32
}; // NodeConfig

var EDGE_COMMON_PROPS = {
  attrs: {
    line: {
      targetMarker: {
        name: 'block',
        width: 4,
        height: 8
      },
      strokeDasharray: '',
      stroke: '#A2B1C3',
      strokeWidth: 1
    }
  }
}; // mock data

var getGraphData = () => {
  var nodes = [Object(objectSpread2["a" /* default */])({
    id: 'node1',
    label: '\u7B97\u6CD5\u8282\u70B9-1'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node2',
    label: '\u7B97\u6CD5\u8282\u70B9-2'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node3',
    label: '\u7B97\u6CD5\u8282\u70B9-3'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node4',
    label: '\u7B97\u6CD5\u8282\u70B9-4'
  }, NODE_COMMON_PROPS)];
  var edges = [Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node2',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node2-input-1'
  }, EDGE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node3',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node3-input-1'
  }, EDGE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node4',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node4-input-1'
  }, EDGE_COMMON_PROPS)];
  return {
    nodes: nodes,
    edges: edges
  };
};
// CONCATENATED MODULE: ./docs/tutorial/extension-components/context-menu/demos/basic/graph-config.tsx






var onLoad = /*#__PURE__*/function () {
  var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(app) {
    var res, _res$contextProvider$, graphData;

    return regenerator_default.a.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_LAYOUT.id, {
              layoutType: 'dagre',
              layoutOptions: {
                type: 'dagre',

                /** \u5E03\u5C40\u65B9\u5411 */
                rankdir: 'TB',

                /** \u8282\u70B9\u95F4\u8DDD */
                nodesep: 60,

                /** \u5C42\u95F4\u8DDD */
                ranksep: 30
              },
              graphData: getGraphData()
            });

          case 2:
            res = _context.sent;
            _res$contextProvider$ = res.contextProvider().getResult(), graphData = _res$contextProvider$.graphData; // render

            _context.next = 6;
            return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_RENDER.id, {
              graphData: graphData
            });

          case 6:
            _context.next = 8;
            return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_ZOOM.id, {
              factor: 'real'
            });

          case 8:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function onLoad(_x) {
    return _ref.apply(this, arguments);
  };
}();
/**  graphConfig\uFF1A\u914D\u7F6EGraph  */

var useGraphConfig = Object(es["M" /* createGraphConfig */])(graphConfig => {
  graphConfig.setDefaultNodeRender(props => {
    return /*#__PURE__*/react_default.a.createElement("div", {
      className: "react-node"
    }, " ", props.data.label, " ");
  });
});
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/DeleteOutlined.js + 1 modules
var DeleteOutlined = __webpack_require__("UmCv");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/EditOutlined.js + 1 modules
var EditOutlined = __webpack_require__("xdJY");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/StopOutlined.js + 1 modules
var StopOutlined = __webpack_require__("PJfV");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/context-menu/demos/basic/menu-config.tsx






/** menuitem \u914D\u7F6E */

var NsCustomMenuItems;

(function (_NsCustomMenuItems) {
  /** \u6CE8\u518C\u83DC\u5355\u4F9D\u8D56\u7684icon */
  es["q" /* IconStore */].set('DeleteOutlined', DeleteOutlined["a" /* default */]);
  es["q" /* IconStore */].set('EditOutlined', EditOutlined["a" /* default */]);
  es["q" /* IconStore */].set('StopOutlined', StopOutlined["a" /* default */]);
  var DELETE_EDGE = _NsCustomMenuItems.DELETE_EDGE = {
    id: es["G" /* XFlowEdgeCommands */].DEL_EDGE.id,
    label: '\u5220\u9664\u8FB9',
    hotkey: 'Delete',
    iconName: 'DeleteOutlined',
    onClick: function () {
      var _onClick = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee2(_ref2) {
        var target, commandService;
        return regenerator_default.a.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                target = _ref2.target, commandService = _ref2.commandService;
                commandService.executeCommand(es["G" /* XFlowEdgeCommands */].DEL_EDGE.id, {
                  edgeConfig: target.data
                });

              case 2:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      function onClick(_x5) {
        return _onClick.apply(this, arguments);
      }

      return onClick;
    }()
  };
  var DELETE_NODE = _NsCustomMenuItems.DELETE_NODE = {
    id: es["J" /* XFlowNodeCommands */].DEL_NODE.id,
    label: '\u5220\u9664\u8282\u70B9',
    iconName: 'DeleteOutlined',
    hotkey: 'Delete',
    onClick: function () {
      var _onClick2 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee3(_ref3) {
        var target, commandService;
        return regenerator_default.a.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                target = _ref3.target, commandService = _ref3.commandService;
                commandService.executeCommand(es["J" /* XFlowNodeCommands */].DEL_NODE.id, {
                  nodeConfig: {
                    id: target.data.id
                  }
                });

              case 2:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3);
      }));

      function onClick(_x6) {
        return _onClick2.apply(this, arguments);
      }

      return onClick;
    }()
  };
  var EMPTY_MENU = _NsCustomMenuItems.EMPTY_MENU = {
    id: 'EMPTY_MENU_ITEM',
    label: '\u6682\u65E0\u53EF\u7528',
    isEnabled: false,
    iconName: 'DeleteOutlined',
    onClick: function () {
      var _onClick3 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee4(_ref4) {
        var target, commandService;
        return regenerator_default.a.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                target = _ref4.target, commandService = _ref4.commandService;
                commandService.executeCommand(es["J" /* XFlowNodeCommands */].DEL_NODE.id, {
                  nodeConfig: {
                    id: target.data.id
                  }
                });

              case 2:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4);
      }));

      function onClick(_x7) {
        return _onClick3.apply(this, arguments);
      }

      return onClick;
    }()
  };
  var SEPARATOR = _NsCustomMenuItems.SEPARATOR = {
    id: 'separator',
    type: es["v" /* MenuItemType */].Separator
  };
})(NsCustomMenuItems || (NsCustomMenuItems = {}));

var useMenuConfig = Object(es["L" /* createCtxMenuConfig */])(config => {
  config.setMenuModelService( /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(data, model, modelService, toDispose) {
      var type, cell;
      return regenerator_default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              type = data.type, cell = data.cell;
              console.log(type);
              _context.t0 = type;
              _context.next = _context.t0 === 'node' ? 5 : _context.t0 === 'edge' ? 7 : _context.t0 === 'blank' ? 9 : 11;
              break;

            case 5:
              model.setValue({
                id: 'root',
                type: es["v" /* MenuItemType */].Root,
                submenu: [NsCustomMenuItems.DELETE_NODE]
              });
              return _context.abrupt("break", 13);

            case 7:
              model.setValue({
                id: 'root',
                type: es["v" /* MenuItemType */].Root,
                submenu: [NsCustomMenuItems.DELETE_EDGE]
              });
              return _context.abrupt("break", 13);

            case 9:
              model.setValue({
                id: 'root',
                type: es["v" /* MenuItemType */].Root,
                submenu: [NsCustomMenuItems.EMPTY_MENU]
              });
              return _context.abrupt("break", 13);

            case 11:
              model.setValue({
                id: 'root',
                type: es["v" /* MenuItemType */].Root,
                submenu: [NsCustomMenuItems.EMPTY_MENU]
              });
              return _context.abrupt("break", 13);

            case 13:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function (_x, _x2, _x3, _x4) {
      return _ref.apply(this, arguments);
    };
  }());
});
// EXTERNAL MODULE: ./docs/tutorial/extension-components/context-menu/demos/basic/index.less
var basic = __webpack_require__("iu/z");

// EXTERNAL MODULE: ../xflow/dist/index.css
var dist = __webpack_require__("1MRj");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/context-menu/demos/basic/index.tsx
/**
 *  title: \u57FA\u7840\u4F7F\u7528\uFF08\u53F3\u952E\u5220\u9664\u8282\u70B9/\u5220\u9664\u8FB9/\u753B\u5E03\u83DC\u5355\uFF09
 *  desc: |
 *    \u53EF\u4EE5\u5728\u8282\u70B9/\u8FB9/\u753B\u5E03\u4E0A\u914D\u7F6E\u83DC\u5355 <br>
 *    \u83DC\u5355\u914D\u7F6E\u4E2D\u53EF\u4EE5\u914D\u7F6E\u70B9\u51FB\u65F6\u6267\u884C xflow \u547D\u4EE4 <br>
 *    \u70B9\u51FB\u67E5\u770B [\u6240\u6709\u53EF\u7528\u7684\u547D\u4EE4](/api/commands) <br>
 */






/**  Demo Props  */

var XFlowDemo = props => {
  var graphConfig = useGraphConfig(props);
  var menucConfig = useMenuConfig(props);
  return /*#__PURE__*/react_default.a.createElement(es["B" /* XFlow */], {
    onLoad: onLoad,
    className: "xflow-workspace"
  }, /*#__PURE__*/react_default.a.createElement(es["D" /* XFlowCanvas */], {
    config: graphConfig,
    position: {
      top: 0,
      bottom: 0,
      left: 0,
      right: 0
    }
  }, /*#__PURE__*/react_default.a.createElement(es["a" /* CanvasContextMenu */], {
    config: menucConfig
  })));
};

/* harmony default export */ var demos_basic = __webpack_exports__["default"] = (XFlowDemo);

//# sourceURL=webpack:///./docs/tutorial/extension-components/context-menu/demos/basic/index.tsx_+_3_modules?`)},BXxw:function(module,__webpack_exports__,__webpack_require__){"use strict";eval(`// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("q1tI");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ../xflow/es/index.js + 271 modules
var es = __webpack_require__("mqVf");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__("KOBo");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__("RY7m");
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/objectSpread2.js
var objectSpread2 = __webpack_require__("BcGY");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/context-menu/demos/hotkey/mock.ts

 // NodeConfig

var NODE_COMMON_PROPS = {
  width: 160,
  height: 32
}; // NodeConfig

var EDGE_COMMON_PROPS = {
  attrs: {
    line: {
      targetMarker: {
        name: 'block',
        width: 4,
        height: 8
      },
      strokeDasharray: '',
      stroke: '#A2B1C3',
      strokeWidth: 1
    }
  }
}; // mock data

var getGraphData = () => {
  var nodes = [Object(objectSpread2["a" /* default */])({
    id: 'node1',
    label: '\u7B97\u6CD5\u8282\u70B9-1'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node2',
    label: '\u7B97\u6CD5\u8282\u70B9-2'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node3',
    label: '\u7B97\u6CD5\u8282\u70B9-3'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node4',
    label: '\u7B97\u6CD5\u8282\u70B9-4'
  }, NODE_COMMON_PROPS)];
  var edges = [Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node2',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node2-input-1'
  }, EDGE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node3',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node3-input-1'
  }, EDGE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node4',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node4-input-1'
  }, EDGE_COMMON_PROPS)];
  return {
    nodes: nodes,
    edges: edges
  };
};
// CONCATENATED MODULE: ./docs/tutorial/extension-components/context-menu/demos/hotkey/graph-config.tsx






var onLoad = /*#__PURE__*/function () {
  var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(app) {
    var res, _res$contextProvider$, graphData;

    return regenerator_default.a.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_LAYOUT.id, {
              layoutType: 'dagre',
              layoutOptions: {
                type: 'dagre',

                /** \u5E03\u5C40\u65B9\u5411 */
                rankdir: 'TB',

                /** \u8282\u70B9\u95F4\u8DDD */
                nodesep: 60,

                /** \u5C42\u95F4\u8DDD */
                ranksep: 30
              },
              graphData: getGraphData()
            });

          case 2:
            res = _context.sent;
            _res$contextProvider$ = res.contextProvider().getResult(), graphData = _res$contextProvider$.graphData; // render

            _context.next = 6;
            return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_RENDER.id, {
              graphData: graphData
            });

          case 6:
            _context.next = 8;
            return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_ZOOM.id, {
              factor: 'real'
            });

          case 8:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function onLoad(_x) {
    return _ref.apply(this, arguments);
  };
}();
/**  graphConfig\uFF1A\u914D\u7F6EGraph  */

var useGraphConfig = Object(es["M" /* createGraphConfig */])(graphConfig => {
  graphConfig.setDefaultNodeRender(props => {
    return /*#__PURE__*/react_default.a.createElement("div", {
      className: "react-node"
    }, " ", props.data.label, " ");
  });
});
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/DeleteOutlined.js + 1 modules
var DeleteOutlined = __webpack_require__("UmCv");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/EditOutlined.js + 1 modules
var EditOutlined = __webpack_require__("xdJY");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/StopOutlined.js + 1 modules
var StopOutlined = __webpack_require__("PJfV");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/context-menu/demos/hotkey/menu-config.tsx






var useMenuConfig = Object(es["L" /* createCtxMenuConfig */])(config => {
  config.setMenuModelService( /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(data, model, modelService, toDispose) {
      var type, cell;
      return regenerator_default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              type = data.type, cell = data.cell;
              console.log(type);
              _context.t0 = type;
              _context.next = _context.t0 === 'node' ? 5 : _context.t0 === 'edge' ? 7 : _context.t0 === 'blank' ? 9 : 11;
              break;

            case 5:
              model.setValue({
                id: 'root',
                type: es["v" /* MenuItemType */].Root,
                submenu: [NsCustomMenuItems.DELETE_NODE]
              });
              return _context.abrupt("break", 13);

            case 7:
              model.setValue({
                id: 'root',
                type: es["v" /* MenuItemType */].Root,
                submenu: [NsCustomMenuItems.DELETE_EDGE]
              });
              return _context.abrupt("break", 13);

            case 9:
              model.setValue({
                id: 'root',
                type: es["v" /* MenuItemType */].Root,
                submenu: [NsCustomMenuItems.EMPTY_MENU]
              });
              return _context.abrupt("break", 13);

            case 11:
              model.setValue({
                id: 'root',
                type: es["v" /* MenuItemType */].Root,
                submenu: [NsCustomMenuItems.EMPTY_MENU]
              });
              return _context.abrupt("break", 13);

            case 13:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function (_x, _x2, _x3, _x4) {
      return _ref.apply(this, arguments);
    };
  }());
});
/** menuitem \u914D\u7F6E */

var NsCustomMenuItems;

(function (_NsCustomMenuItems) {
  /** \u6CE8\u518C\u83DC\u5355\u4F9D\u8D56\u7684icon */
  es["q" /* IconStore */].set('DeleteOutlined', DeleteOutlined["a" /* default */]);
  es["q" /* IconStore */].set('EditOutlined', EditOutlined["a" /* default */]);
  es["q" /* IconStore */].set('StopOutlined', StopOutlined["a" /* default */]);
  var DELETE_EDGE = _NsCustomMenuItems.DELETE_EDGE = {
    id: es["G" /* XFlowEdgeCommands */].DEL_EDGE.id,
    label: '\u5220\u9664\u8FB9',
    hotkey: 'Delete',
    iconName: 'DeleteOutlined',
    onClick: function () {
      var _onClick = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee2(_ref2) {
        var target, commandService;
        return regenerator_default.a.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                target = _ref2.target, commandService = _ref2.commandService;
                commandService.executeCommand(es["G" /* XFlowEdgeCommands */].DEL_EDGE.id, {
                  edgeConfig: target.data
                });

              case 2:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      function onClick(_x5) {
        return _onClick.apply(this, arguments);
      }

      return onClick;
    }()
  };
  var DELETE_NODE = _NsCustomMenuItems.DELETE_NODE = {
    id: es["J" /* XFlowNodeCommands */].DEL_NODE.id,
    label: '\u5220\u9664\u8282\u70B9',
    iconName: 'DeleteOutlined',
    hotkey: 'Delete',
    onClick: function () {
      var _onClick2 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee3(_ref3) {
        var target, commandService;
        return regenerator_default.a.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                target = _ref3.target, commandService = _ref3.commandService;
                commandService.executeCommand(es["J" /* XFlowNodeCommands */].DEL_NODE.id, {
                  nodeConfig: {
                    id: target.data.id
                  }
                });

              case 2:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3);
      }));

      function onClick(_x6) {
        return _onClick2.apply(this, arguments);
      }

      return onClick;
    }()
  };
  var EMPTY_MENU = _NsCustomMenuItems.EMPTY_MENU = {
    id: 'EMPTY_MENU_ITEM',
    label: '\u6682\u65E0\u53EF\u7528',
    isEnabled: false,
    iconName: 'DeleteOutlined',
    onClick: function () {
      var _onClick3 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee4(_ref4) {
        var target, commandService;
        return regenerator_default.a.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                target = _ref4.target, commandService = _ref4.commandService;
                commandService.executeCommand(es["J" /* XFlowNodeCommands */].DEL_NODE.id, {
                  nodeConfig: {
                    id: target.data.id
                  }
                });

              case 2:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4);
      }));

      function onClick(_x7) {
        return _onClick3.apply(this, arguments);
      }

      return onClick;
    }()
  };
  var SEPARATOR = _NsCustomMenuItems.SEPARATOR = {
    id: 'separator',
    type: es["v" /* MenuItemType */].Separator
  };
})(NsCustomMenuItems || (NsCustomMenuItems = {}));
// CONCATENATED MODULE: ./docs/tutorial/extension-components/context-menu/demos/hotkey/hotkey-config.tsx





/**  keybindings  */
var useKeybindingConfig = Object(es["O" /* createKeybindingConfig */])((config, getProps) => {
  config.setKeybindingFunc(reg => {
    return reg.registerKeybinding([{
      id: 'delete node or edge',
      keybinding: 'backspace',
      callback: function () {
        var _callback = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(item, modelService, cmd, e) {
          var cells, nodes, edges, delEdge, delNode;
          return regenerator_default.a.wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  _context.next = 2;
                  return es["t" /* MODELS */].SELECTED_CELLS.useValue(modelService);

                case 2:
                  cells = _context.sent;
                  nodes = cells.filter(cell => cell.isEdge());
                  edges = cells.filter(cell => cell.isNode()); // \u8C03\u7528\u5220\u9664Edge\u7684Command

                  delEdge = cell => {
                    return cmd.executeCommand(es["G" /* XFlowEdgeCommands */].DEL_EDGE.id, {
                      edgeConfig: Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({}, cell.getData()), {}, {
                        id: cell.id
                      })
                    });
                  }; // \u8C03\u7528\u5220\u9664Node\u7684Command


                  delNode = cell => {
                    return cmd.executeCommand(es["J" /* XFlowNodeCommands */].DEL_NODE.id, {
                      nodeConfig: Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({}, cell.getData()), {}, {
                        id: cell.id
                      })
                    });
                  };

                  if (cells.length === 0) {
                    console.warn('\u6CA1\u6709\u9009\u4E2D\u7684\u8282\u70B9');
                  } // \u5148\u5220\u9664edges


                  _context.next = 10;
                  return Promise.all(nodes.map(cell => delEdge(cell)));

                case 10:
                  _context.next = 12;
                  return Promise.all(edges.map(cell => delNode(cell)));

                case 12:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee);
        }));

        function callback(_x, _x2, _x3, _x4) {
          return _callback.apply(this, arguments);
        }

        return callback;
      }()
    }]);
  });
});
// EXTERNAL MODULE: ./docs/tutorial/extension-components/context-menu/demos/hotkey/index.less
var hotkey = __webpack_require__("ZInU");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/context-menu/demos/hotkey/index.tsx
/**
 *  title: \u642D\u914D\u5FEB\u6377\u952E
 *  desc: |
 *    \u4E0EKeyBindings\u7EC4\u4EF6\u914D\u5408\uFF0C\u53EF\u4EE5\u5B9E\u73B0\u5FEB\u6377\u952E\u548C\u83DC\u5355\u90FD\u89E6\u53D1Command <br>
 */






/**  Demo Props  */

var XFlowDemo = props => {
  var graphConfig = useGraphConfig(props);
  var menucConfig = useMenuConfig(props);
  var keybindingConfig = useKeybindingConfig(props);
  return /*#__PURE__*/react_default.a.createElement(es["B" /* XFlow */], {
    onLoad: onLoad,
    className: "xflow-workspace"
  }, /*#__PURE__*/react_default.a.createElement(es["D" /* XFlowCanvas */], {
    config: graphConfig,
    position: {
      top: 0,
      bottom: 0,
      left: 0,
      right: 0
    }
  }, /*#__PURE__*/react_default.a.createElement(es["a" /* CanvasContextMenu */], {
    config: menucConfig
  }), /*#__PURE__*/react_default.a.createElement(es["s" /* KeyBindings */], {
    config: keybindingConfig
  })));
};

/* harmony default export */ var demos_hotkey = __webpack_exports__["default"] = (XFlowDemo);

//# sourceURL=webpack:///./docs/tutorial/extension-components/context-menu/demos/hotkey/index.tsx_+_4_modules?`)},DiY4:function(module,__webpack_exports__,__webpack_require__){"use strict";eval(`// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("q1tI");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ../xflow/es/index.js + 271 modules
var es = __webpack_require__("mqVf");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/objectSpread2.js
var objectSpread2 = __webpack_require__("BcGY");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__("KOBo");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 3 modules
var slicedToArray = __webpack_require__("jem/");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__("RY7m");
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/input/index.js + 11 modules
var input = __webpack_require__("BmDy");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/form/index.js + 15 modules
var es_form = __webpack_require__("UL5a");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/message/index.js + 3 modules
var message = __webpack_require__("DuHN");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/button/index.js
var es_button = __webpack_require__("SCaQ");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/card/index.js + 2 modules
var card = __webpack_require__("jMRu");

// CONCATENATED MODULE: ./docs/api/commands/group/group-add/basic/constant.ts
var DND_NODE_RENDER_ID = 'DND_NDOE';
var GROUP_NODE_RENDER_ID = 'GROUP_NODE_RENDER_ID';
var GROUP_COLLAPSED_SIZE = {
  width: 160,
  height: 40
};
// CONCATENATED MODULE: ./docs/api/commands/group/group-add/basic/form.tsx









var width = 100;
var height = 40;

/**
  // \u5B50\u8282\u70B9\u5143\u7D20\u96C6\u5408  
  groupChildren?: string[]
  // group Header 
  groupHeaderHeight?: number
  // group \u5185\u8FB9\u8DDD  
  groupPadding?: number
 */
var formItems = [{
  name: 'id',
  label: 'id',
  rules: [{
    required: true
  }],
  renderProps: {
    disabled: true
  },
  render: input["a" /* default */]
}, {
  name: 'groupChildren',
  label: 'groupChildren',
  rules: [{
    required: true
  }],
  renderProps: {
    disabled: true
  },
  render: input["a" /* default */]
}, {
  name: 'renderKey',
  label: 'renderKey',
  rules: [{
    required: true
  }],
  renderProps: {
    disabled: true
  },
  render: input["a" /* default */]
}, {
  name: 'groupHeaderHeight',
  label: 'groupHeaderHeight',
  rules: [{
    required: true
  }],
  render: input["a" /* default */]
}, {
  name: 'groupPadding',
  label: 'groupPadding',
  render: input["a" /* default */]
}, {
  name: 'label',
  label: 'label',
  render: input["a" /* default */]
}];
var CmdForm = () => {
  var _usePanelContext = Object(es["V" /* usePanelContext */])(),
      commandService = _usePanelContext.commandService;

  var _Form$useForm = es_form["a" /* default */].useForm(),
      _Form$useForm2 = Object(slicedToArray["a" /* default */])(_Form$useForm, 1),
      form = _Form$useForm2[0];

  var _React$useState = react_default.a.useState(false),
      _React$useState2 = Object(slicedToArray["a" /* default */])(_React$useState, 2),
      hasGroup = _React$useState2[0],
      setGroup = _React$useState2[1];

  var onFinish = /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(values) {
      var nodeConfig;
      return regenerator_default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              nodeConfig = Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({}, values), {}, {
                groupHeaderHeight: parseInt(values.groupHeaderHeight, 10),
                groupPadding: parseInt(values.groupPadding, 10),
                groupCollapsedSize: GROUP_COLLAPSED_SIZE
              });
              setGroup(true);
              console.log(nodeConfig);
              _context.next = 5;
              return commandService.executeCommand(es["I" /* XFlowGroupCommands */].ADD_GROUP.id, {
                nodeConfig: nodeConfig
              });

            case 5:
              message["b" /* default */].success("".concat(es["I" /* XFlowGroupCommands */].ADD_GROUP.label, ": \\u547D\\u4EE4\\u6267\\u884C\\u6210\\u529F"));

            case 6:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function onFinish(_x) {
      return _ref.apply(this, arguments);
    };
  }();

  return /*#__PURE__*/react_default.a.createElement(es["n" /* FormBuilder */], {
    form: form,
    formItems: formItems,
    onFinish: onFinish,
    initialValues: {
      id: Object(es["X" /* uuidv4 */])(),
      groupChildren: ['node1', 'node2', 'node3', 'node4'],
      label: 'Group_1',
      groupHeaderHeight: 40,
      groupPadding: 12,
      renderKey: GROUP_NODE_RENDER_ID
    },
    submitButton: /*#__PURE__*/react_default.a.createElement(es_button["a" /* default */], {
      type: "primary",
      htmlType: "submit",
      style: {
        width: '100%'
      },
      disabled: hasGroup
    }, "\\u6267\\u884C\\u547D\\u4EE4")
  });
};
var FormPanel = () => {
  return /*#__PURE__*/react_default.a.createElement(es["A" /* WorkspacePanel */], {
    position: {
      top: 0,
      left: 0,
      bottom: 0,
      width: 230
    },
    className: "panel"
  }, /*#__PURE__*/react_default.a.createElement(card["a" /* default */], {
    title: "Group Options",
    size: "small",
    bordered: false
  }, /*#__PURE__*/react_default.a.createElement(CmdForm, null)));
};
// EXTERNAL MODULE: ./docs/api/commands/group/group-add/basic/react-node/index.less
var react_node = __webpack_require__("bFnv");

// CONCATENATED MODULE: ./docs/api/commands/group/group-add/basic/react-node/index.tsx


var DndNode = props => {
  return /*#__PURE__*/react_default.a.createElement("div", {
    className: "xflow-dnd-node"
  }, props.data.label);
};
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/PlusSquareOutlined.js + 1 modules
var PlusSquareOutlined = __webpack_require__("29vH");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/MinusSquareOutlined.js + 1 modules
var MinusSquareOutlined = __webpack_require__("xCK6");

// EXTERNAL MODULE: ./docs/api/commands/group/group-add/basic/react-group-node/index.less
var react_group_node = __webpack_require__("IQNr");

// CONCATENATED MODULE: ./docs/api/commands/group/group-add/basic/react-group-node/index.tsx




var GroupNode = props => {
  var cell = props.cell;
  var app = Object(es["W" /* useXFlowApp */])();
  var isCollapsed = props.data.isCollapsed || false;

  var onExpand = e => {
    app.executeCommand(es["I" /* XFlowGroupCommands */].COLLAPSE_GROUP.id, {
      nodeId: cell.id,
      isCollapsed: false
    });
  };

  var onCollapse = e => {
    app.executeCommand(es["I" /* XFlowGroupCommands */].COLLAPSE_GROUP.id, {
      nodeId: cell.id,
      isCollapsed: true,
      gap: 3
    });
  };

  return /*#__PURE__*/react_default.a.createElement("div", {
    className: "xflow-group-node"
  }, /*#__PURE__*/react_default.a.createElement("div", {
    className: "xflow-group-header"
  }, /*#__PURE__*/react_default.a.createElement("div", {
    className: "header-left"
  }, props.data.label), /*#__PURE__*/react_default.a.createElement("div", {
    className: "header-right"
  }, isCollapsed && /*#__PURE__*/react_default.a.createElement(PlusSquareOutlined["a" /* default */], {
    onClick: onExpand
  }), !isCollapsed && /*#__PURE__*/react_default.a.createElement(MinusSquareOutlined["a" /* default */], {
    onClick: onCollapse
  }))));
};
// CONCATENATED MODULE: ./docs/api/commands/group/group-add/basic/mock.ts


 // NodeConfig

var NODE_COMMON_PROPS = {
  width: 160,
  height: 40,
  renderKey: DND_NODE_RENDER_ID
}; // NodeConfig

var EDGE_COMMON_PROPS = {
  attrs: {
    line: {
      targetMarker: {
        name: 'block',
        width: 4,
        height: 8
      },
      strokeDasharray: '',
      stroke: '#A2B1C3',
      strokeWidth: 1
    }
  }
}; // mock data

var getGraphData = () => {
  var nodes = [Object(objectSpread2["a" /* default */])({
    id: 'node1',
    label: '\u7B97\u6CD5\u8282\u70B9-1'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node2',
    label: '\u7B97\u6CD5\u8282\u70B9-2'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node3',
    label: '\u7B97\u6CD5\u8282\u70B9-3'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node4',
    label: '\u7B97\u6CD5\u8282\u70B9-4'
  }, NODE_COMMON_PROPS)];
  var edges = [Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node2',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node2-input-1'
  }, EDGE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node3',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node3-input-1'
  }, EDGE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node4',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node4-input-1'
  }, EDGE_COMMON_PROPS)];
  return {
    nodes: nodes,
    edges: edges
  };
};
// CONCATENATED MODULE: ./docs/api/commands/group/group-add/basic/config-graph.tsx








var onLoad = /*#__PURE__*/function () {
  var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(app) {
    var res, _res$contextProvider$, graphData;

    return regenerator_default.a.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_LAYOUT.id, {
              layoutType: 'dagre',
              layoutOptions: {
                type: 'dagre',

                /** \u5E03\u5C40\u65B9\u5411 */
                rankdir: 'TB',

                /** \u8282\u70B9\u95F4\u8DDD */
                nodesep: 60,

                /** \u5C42\u95F4\u8DDD */
                ranksep: 30
              },
              graphData: getGraphData()
            });

          case 2:
            res = _context.sent;
            _res$contextProvider$ = res.contextProvider().getResult(), graphData = _res$contextProvider$.graphData; // render

            _context.next = 6;
            return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_RENDER.id, {
              graphData: graphData
            });

          case 6:
            _context.next = 8;
            return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_ZOOM.id, {
              factor: 'real'
            });

          case 8:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function onLoad(_x) {
    return _ref.apply(this, arguments);
  };
}();
/**  graphConfig\uFF1A\u914D\u7F6EGraph  */

var useGraphConfig = Object(es["M" /* createGraphConfig */])(graphConfig => {
  /**  graphConfig\uFF1A\u914D\u7F6ENode\u8282\u70B9\u7EC4\u4EF6  */
  graphConfig.setNodeRender(DND_NODE_RENDER_ID, DndNode);
  /**  graphConfig\uFF1A\u914D\u7F6EGroup\u8282\u70B9\u7EC4\u4EF6 h  */

  graphConfig.setNodeRender(GROUP_NODE_RENDER_ID, GroupNode);
});
// EXTERNAL MODULE: ./docs/api/commands/group/group-add/basic/index.less
var basic = __webpack_require__("+l5t");

// CONCATENATED MODULE: ./docs/api/commands/group/group-add/basic/index.tsx
/**
 * title: \u57FA\u7840\u4F7F\u7528
 * desc: |
 *   \u628A\u8282\u70B9\u548C\u8FB9\u7EC4\u5408\u6210\u7FA4\u7EC4 <br>
 */





/**  Demo Props  */

var XFlowDemo = props => {
  var graphConfig = useGraphConfig(props);
  return /*#__PURE__*/react_default.a.createElement(es["B" /* XFlow */], {
    onLoad: onLoad,
    className: "xflow-workspace"
  }, /*#__PURE__*/react_default.a.createElement(FormPanel, null), /*#__PURE__*/react_default.a.createElement(es["D" /* XFlowCanvas */], {
    config: graphConfig,
    position: {
      top: 0,
      left: 230,
      right: 0,
      bottom: 0
    }
  }));
};

/* harmony default export */ var group_add_basic = __webpack_exports__["default"] = (XFlowDemo);

//# sourceURL=webpack:///./docs/api/commands/group/group-add/basic/index.tsx_+_6_modules?`)},DvfK:function(module,__webpack_exports__,__webpack_require__){"use strict";eval(`// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "useGraphConfig", function() { return /* binding */ useGraphConfig; });

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__("KOBo");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__("RY7m");
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("q1tI");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ../xflow/es/index.js + 271 modules
var es = __webpack_require__("mqVf");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/PlusCircleOutlined.js + 1 modules
var PlusCircleOutlined = __webpack_require__("Uhj0");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/DeleteOutlined.js + 1 modules
var DeleteOutlined = __webpack_require__("UmCv");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/SaveOutlined.js + 1 modules
var SaveOutlined = __webpack_require__("GcFv");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/button/index.js
var es_button = __webpack_require__("SCaQ");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-toolbar/demos/toolbar-custom-render/toolbar-config.tsx







var NSToolbarConfig;
/** toolbar\u4F9D\u8D56\u7684\u914D\u7F6E\u9879 */

(function (_NSToolbarConfig) {
  /** \u6CE8\u518Cicon \u7C7B\u578B */
  es["q" /* IconStore */].set('PlusCircleOutlined', PlusCircleOutlined["a" /* default */]);
  es["q" /* IconStore */].set('DeleteOutlined', DeleteOutlined["a" /* default */]);
  es["q" /* IconStore */].set('SaveOutlined', SaveOutlined["a" /* default */]);
  /** toolbar\u4F9D\u8D56\u7684\u72B6\u6001 */

  var getToolbarState = _NSToolbarConfig.getToolbarState = /*#__PURE__*/function () {
    var _ref4 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee4(modelService) {
      var nodes;
      return regenerator_default.a.wrap(function _callee4$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              _context4.next = 2;
              return es["t" /* MODELS */].SELECTED_NODES.useValue(modelService);

            case 2:
              nodes = _context4.sent;
              return _context4.abrupt("return", {
                isNodeSelected: nodes.length > 0
              });

            case 4:
            case "end":
              return _context4.stop();
          }
        }
      }, _callee4);
    }));

    return function (_x6) {
      return _ref4.apply(this, arguments);
    };
  }();

  var getToolbarItems = _NSToolbarConfig.getToolbarItems = /*#__PURE__*/function () {
    var _ref5 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee5(state) {
      var toolbarGroup1;
      return regenerator_default.a.wrap(function _callee5$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:
              toolbarGroup1 = [];
              toolbarGroup1.push({
                id: es["J" /* XFlowNodeCommands */].MOVE_NODE.id,
                text: '\u9009\u4E2D\u8282\u70B9\u65F6\u4F1A\u4F7F\u7528\u81EA\u5B9A\u4E49\u6E32\u67D3',
                iconName: 'DeleteOutlined',
                tooltip: '\u9009\u4E2D\u8282\u70B9\u65F6\u4F1A\u89E6\u53D1\u81EA\u5B9A\u4E49\u6E32\u67D3',
                isEnabled: state.isNodeSelected
              });
              return _context5.abrupt("return", [{
                name: 'toolbar',
                items: toolbarGroup1
              }]);

            case 3:
            case "end":
              return _context5.stop();
          }
        }
      }, _callee5);
    }));

    return function (_x7) {
      return _ref5.apply(this, arguments);
    };
  }();
})(NSToolbarConfig || (NSToolbarConfig = {}));

var useToolbarConfig = Object(es["Q" /* createToolbarConfig */])(toolbarConfig => {
  /** \u751F\u4EA7 toolbar item */
  toolbarConfig.setToolbarModelService( /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee2(toolbarModel, modelService, toDispose) {
      var updateToolbarState, model, d;
      return regenerator_default.a.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              // \u66F4\u65B0toolbar model
              updateToolbarState = /*#__PURE__*/function () {
                var _ref2 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee() {
                  var toolbarState, toolbarItems;
                  return regenerator_default.a.wrap(function _callee$(_context) {
                    while (1) {
                      switch (_context.prev = _context.next) {
                        case 0:
                          _context.next = 2;
                          return NSToolbarConfig.getToolbarState(modelService);

                        case 2:
                          toolbarState = _context.sent;
                          _context.next = 5;
                          return NSToolbarConfig.getToolbarItems(toolbarState);

                        case 5:
                          toolbarItems = _context.sent;
                          toolbarModel.setValue(toolbar => {
                            toolbar.mainGroups = toolbarItems;
                          });

                        case 7:
                        case "end":
                          return _context.stop();
                      }
                    }
                  }, _callee);
                }));

                return function updateToolbarState() {
                  return _ref2.apply(this, arguments);
                };
              }(); // \u76D1\u542C\u5BF9\u5E94\u7684model


              _context2.next = 3;
              return es["t" /* MODELS */].SELECTED_NODES.getModel(modelService);

            case 3:
              model = _context2.sent;
              d = model.watch(() => {
                updateToolbarState();
              });
              toDispose.push(d);

            case 6:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    }));

    return function (_x, _x2, _x3) {
      return _ref.apply(this, arguments);
    };
  }());
  toolbarConfig.setCustomToolbarRender( /*#__PURE__*/function () {
    var _ref3 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee3(modelService, updateComponent) {
      var model;
      return regenerator_default.a.wrap(function _callee3$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              _context3.next = 2;
              return es["t" /* MODELS */].SELECTED_NODES.getModel(modelService);

            case 2:
              model = _context3.sent;
              model.watch(nodes => {
                if (nodes.length > 0) {
                  var CustomRender = () => /*#__PURE__*/react_default.a.createElement("div", {
                    className: "custom-toolbar"
                  }, /*#__PURE__*/react_default.a.createElement(es_button["a" /* default */], null, " \\u652F\\u6301\\u81EA\\u5B9A\\u4E49\\u6E32\\u67D3 "));

                  updateComponent(CustomRender);
                } else {
                  updateComponent(null);
                }
              });
              return _context3.abrupt("return", null);

            case 5:
            case "end":
              return _context3.stop();
          }
        }
      }, _callee3);
    }));

    return function (_x4, _x5) {
      return _ref3.apply(this, arguments);
    };
  }());
});
// EXTERNAL MODULE: ./docs/tutorial/extension-components/canvas-toolbar/demos/toolbar-custom-render/index.less
var toolbar_custom_render = __webpack_require__("aQxa");

// EXTERNAL MODULE: ../xflow/dist/index.css
var dist = __webpack_require__("1MRj");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-toolbar/demos/toolbar-custom-render/index.tsx



/**
 * title: \u81EA\u5B9A\u4E49\u6E32\u67D3
 * desc: \u9009\u4E2D\u8282\u70B9\u65F6\u4F1A\u89E6\u53D1\u81EA\u5B9A\u4E49\u6E32\u67D3\u66FF\u6362ToolbarItem
 */






/**  Demo Props  */

/**  graphConfig\uFF1A\u914D\u7F6EGraph  */
var useGraphConfig = Object(es["M" /* createGraphConfig */])(graphConfig => {
  graphConfig.setDefaultNodeRender(props => {
    return /*#__PURE__*/react_default.a.createElement("div", {
      className: "react-node"
    }, " ", props.data.label, " ");
  });
});

var XFlowDemo = props => {
  var graphConfig = useGraphConfig(props);
  var toolbarConfig = useToolbarConfig(props);

  var onLoad = /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(app) {
      return regenerator_default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              console.log(app);
              app.executeCommand(es["J" /* XFlowNodeCommands */].ADD_NODE.id, {
                nodeConfig: {
                  id: "Node-1",
                  label: "Node-1",
                  x: 100,
                  y: 50,
                  width: 160,
                  height: 32
                }
              });
              app.executeCommand(es["J" /* XFlowNodeCommands */].ADD_NODE.id, {
                nodeConfig: {
                  id: "Node-2",
                  label: "Node-2",
                  x: 110,
                  y: 60,
                  width: 160,
                  height: 32
                }
              });
              app.executeCommand(es["J" /* XFlowNodeCommands */].ADD_NODE.id, {
                nodeConfig: {
                  id: "Node-3",
                  label: "Node-3",
                  x: 120,
                  y: 70,
                  width: 160,
                  height: 32
                }
              });

            case 4:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function onLoad(_x) {
      return _ref.apply(this, arguments);
    };
  }();

  return /*#__PURE__*/react_default.a.createElement(es["B" /* XFlow */], {
    onLoad: onLoad,
    className: "xflow-workspace"
  }, /*#__PURE__*/react_default.a.createElement(es["f" /* CanvasToolbar */], {
    layout: "horizontal",
    config: toolbarConfig,
    position: {
      top: 0,
      left: 0,
      right: 0,
      height: 40
    }
  }), /*#__PURE__*/react_default.a.createElement(es["D" /* XFlowCanvas */], {
    config: graphConfig,
    position: {
      top: 40,
      bottom: 0,
      left: 0,
      right: 0
    }
  }));
};

/* harmony default export */ var demos_toolbar_custom_render = __webpack_exports__["default"] = (XFlowDemo);

//# sourceURL=webpack:///./docs/tutorial/extension-components/canvas-toolbar/demos/toolbar-custom-render/index.tsx_+_1_modules?`)},Fm8e:function(module,__webpack_exports__,__webpack_require__){"use strict";eval(`// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "useGraphConfig", function() { return /* binding */ useGraphConfig; });

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__("KOBo");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__("RY7m");
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("q1tI");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ../xflow/es/index.js + 271 modules
var es = __webpack_require__("mqVf");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/input/index.js + 11 modules
var input = __webpack_require__("BmDy");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/form/index.js + 15 modules
var es_form = __webpack_require__("UL5a");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-config-form/demos/custom-shape/custom-shapes/custom-editor.tsx






var Editor = props => {
  var placeholder = props.placeholder,
      disabled = props.disabled,
      onChange = props.onChange,
      value = props.value;

  var _useXFlowApp = Object(es["W" /* useXFlowApp */])(),
      commandService = _useXFlowApp.commandService,
      modelService = _useXFlowApp.modelService;

  react_default.a.useEffect(() => {
    commandService.executeCommand(es["H" /* XFlowGraphCommands */].SAVE_GRAPH_DATA.id, {
      saveGraphDataService: function () {
        var _saveGraphDataService = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(meta, graph) {
          var nodes;
          return regenerator_default.a.wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  _context.next = 2;
                  return es["t" /* MODELS */].SELECTED_NODES.useValue(modelService);

                case 2:
                  nodes = _context.sent;
                  console.log(graph);
                  /** \u62FF\u5230\u6570\u636E\uFF0C\u89E6\u53D1onChange*/

                  onChange(JSON.stringify(graph));
                  return _context.abrupt("return", {
                    err: null,
                    data: graph,
                    meta
                  });

                case 6:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee);
        }));

        function saveGraphDataService(_x, _x2) {
          return _saveGraphDataService.apply(this, arguments);
        }

        return saveGraphDataService;
      }()
    });
  });
  return /*#__PURE__*/react_default.a.createElement(input["a" /* default */].TextArea, {
    value: value,
    placeholder: placeholder,
    disabled: disabled,
    rows: 10
  });
};

var EditorShape = props => {
  var controlSchema = props.controlSchema;
  var required = controlSchema.required,
      tooltip = controlSchema.tooltip,
      extra = controlSchema.extra,
      name = controlSchema.name,
      label = controlSchema.label,
      placeholder = controlSchema.placeholder;
  return /*#__PURE__*/react_default.a.createElement(es["o" /* FormItemWrapper */], {
    schema: controlSchema
  }, _ref => {
    var disabled = _ref.disabled,
        hidden = _ref.hidden,
        initialValue = _ref.initialValue;
    return /*#__PURE__*/react_default.a.createElement(es_form["a" /* default */].Item, {
      name: name,
      label: label,
      initialValue: initialValue,
      tooltip: tooltip,
      extra: extra,
      required: required,
      hidden: hidden
    }, /*#__PURE__*/react_default.a.createElement(Editor, {
      controlSchema: controlSchema,
      placeholder: placeholder,
      disabled: disabled
    }));
  });
};
// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-config-form/demos/custom-shape/custom-shapes/custom-link.tsx

var LinkShape = props => {
  var controlSchema = props.controlSchema;
  return /*#__PURE__*/react_default.a.createElement("div", {
    style: {
      padding: '8px 0px',
      marginBottom: '8px'
    }
  }, /*#__PURE__*/react_default.a.createElement("a", {
    href: controlSchema.value,
    target: "_blank"
  }, controlSchema.label));
};
// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-config-form/demos/custom-shape/custom-shapes/index.tsx


/** \u81EA\u5B9A\u4E49form\u63A7\u4EF6 */

var ControlShapeEnum;

(function (ControlShapeEnum) {
  ControlShapeEnum["EDITOR_SHAPE"] = "EDITOR";
  ControlShapeEnum["LINK_SHAPE"] = "LINKSHAPE";
})(ControlShapeEnum || (ControlShapeEnum = {}));

var controlMapService = controlMap => {
  controlMap.set(ControlShapeEnum.EDITOR_SHAPE, EditorShape);
  controlMap.set(ControlShapeEnum.LINK_SHAPE, LinkShape);
  return controlMap;
};
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/objectSpread2.js
var objectSpread2 = __webpack_require__("BcGY");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-config-form/demos/custom-shape/mock.ts

 // NodeConfig

var NODE_COMMON_PROPS = {
  width: 160,
  height: 32
}; // NodeConfig

var EDGE_COMMON_PROPS = {
  attrs: {
    line: {
      targetMarker: {
        name: 'block',
        width: 4,
        height: 8
      },
      strokeDasharray: '',
      stroke: '#A2B1C3',
      strokeWidth: 1
    }
  }
}; // mock data

var getGraphData = () => {
  var nodes = [Object(objectSpread2["a" /* default */])({
    id: 'node1',
    label: '\u7B97\u6CD5\u8282\u70B9-1'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node2',
    label: '\u7B97\u6CD5\u8282\u70B9-2'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node3',
    label: '\u7B97\u6CD5\u8282\u70B9-3'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node4',
    label: '\u7B97\u6CD5\u8282\u70B9-4'
  }, NODE_COMMON_PROPS)];
  var edges = [Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node2',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node2-input-1'
  }, EDGE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node3',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node3-input-1'
  }, EDGE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node4',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node4-input-1'
  }, EDGE_COMMON_PROPS)];
  return {
    nodes: nodes,
    edges: edges
  };
};
// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-config-form/demos/custom-shape/graph-config.tsx




var onLoad = /*#__PURE__*/function () {
  var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(app) {
    var res, _res$contextProvider$, graphData;

    return regenerator_default.a.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_LAYOUT.id, {
              layoutType: 'dagre',
              layoutOptions: {
                type: 'dagre',

                /** \u5E03\u5C40\u65B9\u5411 */
                rankdir: 'TB',

                /** \u8282\u70B9\u95F4\u8DDD */
                nodesep: 60,

                /** \u5C42\u95F4\u8DDD */
                ranksep: 30
              },
              graphData: getGraphData()
            });

          case 2:
            res = _context.sent;
            _res$contextProvider$ = res.contextProvider().getResult(), graphData = _res$contextProvider$.graphData; // render

            _context.next = 6;
            return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_RENDER.id, {
              graphData: graphData
            });

          case 6:
            _context.next = 8;
            return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_ZOOM.id, {
              factor: 'real'
            });

          case 8:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function onLoad(_x) {
    return _ref.apply(this, arguments);
  };
}();
// EXTERNAL MODULE: ../xflow/dist/index.css
var dist = __webpack_require__("1MRj");

// EXTERNAL MODULE: ./docs/tutorial/extension-components/canvas-config-form/demos/custom-shape/index.less
var custom_shape = __webpack_require__("24Qu");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-config-form/demos/custom-shape/index.tsx



/**
 * title: \u57FA\u7840\u4F7F\u7528
 * desc: |
 *  \u901A\u8FC7 Schema \u4E2D\u7684 shape \u5B57\u6BB5\u548C controlMapService \u914D\u5408\u53EF\u4EE5\u6E32\u67D3\u81EA\u5B9A\u4E49\u7684\u8868\u5355\u9879\u76EE
 */






/**  Demo Props  */

/**  graphConfig\uFF1A\u914D\u7F6EGraph  */
var useGraphConfig = Object(es["M" /* createGraphConfig */])(graphConfig => {
  graphConfig.setDefaultNodeRender(props => {
    return /*#__PURE__*/react_default.a.createElement("div", {
      className: "react-node"
    }, " ", props.data.label, " ");
  });
});
var NsJsonForm;

(function (_NsJsonForm) {
  var formSchemaService = _NsJsonForm.formSchemaService = /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(args) {
      var targetData;
      return regenerator_default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              targetData = args.targetData;
              console.log("formSchemaService args:", args);

              if (targetData) {
                _context.next = 4;
                break;
              }

              return _context.abrupt("return", {
                tabs: [{
                  /** Tab\u7684title */
                  name: '\u753B\u5E03\u914D\u7F6E',
                  groups: [{
                    name: 'group1',
                    controls: [{
                      name: 'link',
                      label: '\u8FD9\u662F\u4E00\u4E2A\u81EA\u5B9A\u4E49\u7684Shape',
                      shape: ControlShapeEnum.LINK_SHAPE
                    }, {
                      name: 'graph-json',
                      label: '\u81EA\u5B9A\u4E49Shape: \u5C55\u793AGraph\u7684JSON\u6570\u636E',
                      shape: ControlShapeEnum.EDITOR_SHAPE
                    }]
                  }]
                }]
              });

            case 4:
              return _context.abrupt("return", {
                /** \u914D\u7F6E\u4E00\u4E2ATab */
                tabs: [{
                  /** Tab\u7684title */
                  name: '\u8282\u70B9\u914D\u7F6E',
                  groups: []
                }]
              });

            case 5:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function (_x) {
      return _ref.apply(this, arguments);
    };
  }();
})(NsJsonForm || (NsJsonForm = {}));

var XFlowDemo = props => {
  var graphConfig = useGraphConfig(props);
  return /*#__PURE__*/react_default.a.createElement(es["B" /* XFlow */], {
    onLoad: onLoad,
    className: "xflow-workspace"
  }, /*#__PURE__*/react_default.a.createElement(es["D" /* XFlowCanvas */], {
    config: graphConfig,
    position: {
      top: 0,
      bottom: 0,
      left: 0,
      right: 290
    }
  }), /*#__PURE__*/react_default.a.createElement(es["r" /* JsonSchemaForm */], {
    controlMapService: controlMapService,
    formSchemaService: NsJsonForm.formSchemaService,
    footerPosition: {
      bottom: 0,
      left: 0,
      right: 0,
      height: 0
    },
    position: {
      top: 0,
      bottom: 0,
      right: 0,
      width: 290
    }
  }));
};

/* harmony default export */ var demos_custom_shape = __webpack_exports__["default"] = (XFlowDemo);

//# sourceURL=webpack:///./docs/tutorial/extension-components/canvas-config-form/demos/custom-shape/index.tsx_+_5_modules?`)},H0s4:function(module,__webpack_exports__,__webpack_require__){"use strict";eval(`// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "useGraphConfig", function() { return /* binding */ useGraphConfig; });

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__("KOBo");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__("RY7m");
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("q1tI");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ../xflow/es/index.js + 271 modules
var es = __webpack_require__("mqVf");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/objectSpread2.js
var objectSpread2 = __webpack_require__("BcGY");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 3 modules
var slicedToArray = __webpack_require__("jem/");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/input/index.js + 11 modules
var input = __webpack_require__("BmDy");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/input-number/index.js + 11 modules
var input_number = __webpack_require__("gJMY");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/form/index.js + 15 modules
var es_form = __webpack_require__("UL5a");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/message/index.js + 3 modules
var message = __webpack_require__("DuHN");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/card/index.js + 2 modules
var card = __webpack_require__("jMRu");

// CONCATENATED MODULE: ./docs/api/commands/nodes/node-highlight/demos/form.tsx








var width = 100;
var height = 40;
var formItems = [{
  name: 'nodeId',
  label: 'nodeId',
  rules: [{
    required: true
  }],
  render: input["a" /* default */]
}, {
  name: 'stroke',
  label: 'stroke',
  rules: [{
    required: true
  }],
  render: input["a" /* default */]
}, {
  name: 'strokeWidth',
  label: 'strokeWidth',
  render: input_number["a" /* default */],
  renderProps: {
    min: 1,
    max: 7
  }
}];
var CmdForm = () => {
  var _usePanelContext = Object(es["V" /* usePanelContext */])(),
      commandService = _usePanelContext.commandService;

  var _Form$useForm = es_form["a" /* default */].useForm(),
      _Form$useForm2 = Object(slicedToArray["a" /* default */])(_Form$useForm, 1),
      form = _Form$useForm2[0];

  var onFinish = /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(values) {
      return regenerator_default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              commandService.executeCommand(es["J" /* XFlowNodeCommands */].HIGHLIGHT_NODE.id, Object(objectSpread2["a" /* default */])({}, values));
              console.log('XFlowNodeCommands.HIGHLIGHT_NODE.id', values);
              message["b" /* default */].success("".concat(es["J" /* XFlowNodeCommands */].HIGHLIGHT_NODE.label, ": \\u547D\\u4EE4\\u6267\\u884C\\u6210\\u529F"));

            case 3:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function onFinish(_x) {
      return _ref.apply(this, arguments);
    };
  }();

  return /*#__PURE__*/react_default.a.createElement(es["n" /* FormBuilder */], {
    form: form,
    formItems: formItems,
    onFinish: onFinish,
    initialValues: {
      nodeId: 'node1',
      stroke: '#873bf4',
      strokeWidth: 3
    }
  });
};
var FormPanel = () => {
  return /*#__PURE__*/react_default.a.createElement(es["A" /* WorkspacePanel */], {
    position: {
      top: 0,
      left: 0,
      bottom: 0,
      width: 230
    },
    className: "panel"
  }, /*#__PURE__*/react_default.a.createElement(card["a" /* default */], {
    title: "NodeConfig Options",
    size: "small",
    bordered: false
  }, /*#__PURE__*/react_default.a.createElement(CmdForm, null)));
};
// EXTERNAL MODULE: ./docs/api/commands/nodes/node-highlight/demos/index.less
var demos = __webpack_require__("GOo8");

// CONCATENATED MODULE: ./docs/api/commands/nodes/node-highlight/demos/index.tsx






/**  graphConfig hook  */

var useGraphConfig = Object(es["M" /* createGraphConfig */])(graphConfig => {
  graphConfig.setX6Config({
    grid: true
  });
  graphConfig.setDefaultNodeRender(props => {
    return /*#__PURE__*/react_default.a.createElement("div", {
      className: "react-node"
    }, " ", props.data.label, " ");
  });
});

var NodeAddDemo = () => {
  var graphConfig = useGraphConfig();

  var onLoad = /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(app) {
      return regenerator_default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              // \u5728appReadyCallback\u4E2D\u53EF\u4EE5\u901A\u8FC7app\u6267\u884Ccommand
              app.executeCommand(es["J" /* XFlowNodeCommands */].ADD_NODE.id, {
                nodeConfig: {
                  id: 'node1',
                  x: 100,
                  y: 30,
                  shape: 'rect',
                  label: 'Hello World',
                  width: width,
                  height: height
                }
              });
              return _context.abrupt("return", app);

            case 2:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function onLoad(_x) {
      return _ref.apply(this, arguments);
    };
  }();

  return /*#__PURE__*/react_default.a.createElement(es["B" /* XFlow */], {
    meta: {
      flowId: 'add-node-demo'
    },
    onLoad: onLoad,
    className: "xflow-workspace"
  }, /*#__PURE__*/react_default.a.createElement(FormPanel, null), /*#__PURE__*/react_default.a.createElement(es["D" /* XFlowCanvas */], {
    className: "app-main-content",
    config: graphConfig,
    position: {
      top: 0,
      left: 230,
      right: 0,
      bottom: 0
    }
  }));
};

/* harmony default export */ var node_highlight_demos = __webpack_exports__["default"] = (NodeAddDemo);

//# sourceURL=webpack:///./docs/api/commands/nodes/node-highlight/demos/index.tsx_+_1_modules?`)},KDqh:function(module,__webpack_exports__,__webpack_require__){"use strict";eval(`// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "useGraphConfig", function() { return /* binding */ useGraphConfig; });

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__("KOBo");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__("RY7m");
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("q1tI");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ../xflow/es/index.js + 271 modules
var es = __webpack_require__("mqVf");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 3 modules
var slicedToArray = __webpack_require__("jem/");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/input/index.js + 11 modules
var input = __webpack_require__("BmDy");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/form/index.js + 15 modules
var es_form = __webpack_require__("UL5a");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/message/index.js + 3 modules
var message = __webpack_require__("DuHN");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/button/index.js
var es_button = __webpack_require__("SCaQ");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/card/index.js + 2 modules
var card = __webpack_require__("jMRu");

// CONCATENATED MODULE: ./docs/api/commands/nodes/node-move/demos/form.tsx







var formItems = [{
  name: 'id',
  label: 'id',
  rules: [{
    required: true
  }],
  render: input["a" /* default */],
  renderProps: {
    disabled: true
  }
}, {
  name: 'dx',
  label: 'position.dx',
  rules: [{
    required: true
  }],
  render: input["a" /* default */]
}, {
  name: 'dy',
  label: 'position.dy',
  rules: [{
    required: true
  }],
  render: input["a" /* default */]
}];
var CmdForm = () => {
  var app = Object(es["W" /* useXFlowApp */])();

  var _Form$useForm = es_form["a" /* default */].useForm(),
      _Form$useForm2 = Object(slicedToArray["a" /* default */])(_Form$useForm, 1),
      form = _Form$useForm2[0];

  var _useModelAsync = Object(es["U" /* useModelAsync */])({
    getModel: function () {
      var _getModel = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee() {
        return regenerator_default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt("return", es["t" /* MODELS */].SELECTED_NODE.getModel(app.modelService));

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      function getModel() {
        return _getModel.apply(this, arguments);
      }

      return getModel;
    }(),
    initialState: null
  }),
      _useModelAsync2 = Object(slicedToArray["a" /* default */])(_useModelAsync, 1),
      selectNode = _useModelAsync2[0];

  react_default.a.useEffect(() => {
    if (selectNode) {
      var node = selectNode.getData();
      form.setFieldsValue({
        id: node.id,
        dx: '20',
        dy: '20'
      });
    }
  }, [form, selectNode]);

  var onFinish = /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee2(values) {
      return regenerator_default.a.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              app.commandService.executeCommand(es["J" /* XFlowNodeCommands */].MOVE_NODE.id, {
                id: values.id,
                position: {
                  dx: parseInt(values.dx, 10),
                  dy: parseInt(values.dy, 10)
                }
              });
              message["b" /* default */].success("".concat(es["J" /* XFlowNodeCommands */].CENTER_NODE.label, ": \\u547D\\u4EE4\\u6267\\u884C\\u6210\\u529F"));

            case 2:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    }));

    return function onFinish(_x) {
      return _ref.apply(this, arguments);
    };
  }();

  return /*#__PURE__*/react_default.a.createElement(es["n" /* FormBuilder */], {
    form: form,
    formItems: formItems,
    onFinish: onFinish,
    initialValues: {
      id: null,
      dx: '10',
      dy: '10'
    },
    submitButton: /*#__PURE__*/react_default.a.createElement(es_button["a" /* default */], {
      type: "primary",
      htmlType: "submit",
      style: {
        width: '100%'
      },
      disabled: !selectNode
    }, "\\u9009\\u4E2D\\u8282\\u70B9\\u6267\\u884C\\u547D\\u4EE4")
  });
};
var FormPanel = () => {
  return /*#__PURE__*/react_default.a.createElement(es["A" /* WorkspacePanel */], {
    position: {
      top: 0,
      left: 0,
      bottom: 0,
      width: 230
    },
    className: "panel"
  }, /*#__PURE__*/react_default.a.createElement(card["a" /* default */], {
    title: "NodeConfig Options",
    size: "small",
    bordered: false
  }, /*#__PURE__*/react_default.a.createElement(CmdForm, null)));
};
// EXTERNAL MODULE: ./docs/api/commands/nodes/node-move/demos/index.less
var demos = __webpack_require__("m1Ez");

// CONCATENATED MODULE: ./docs/api/commands/nodes/node-move/demos/index.tsx






/**  graphConfig hook  */

var useGraphConfig = Object(es["M" /* createGraphConfig */])(graphConfig => {
  graphConfig.setX6Config({
    grid: true
  });
  graphConfig.setDefaultNodeRender(props => {
    return /*#__PURE__*/react_default.a.createElement("div", {
      className: "react-node"
    }, " ", props.data.label, " ");
  });
});

var NodeAddDemo = () => {
  var graphConfig = useGraphConfig();

  var onLoad = /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(app) {
      return regenerator_default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              app.executeCommand(es["J" /* XFlowNodeCommands */].ADD_NODE.id, {
                nodeConfig: {
                  id: 'node1',
                  x: 100,
                  y: 30,
                  label: 'Hello World 1',
                  width: 160,
                  height: 32
                }
              });
              return _context.abrupt("return", app);

            case 2:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function onLoad(_x) {
      return _ref.apply(this, arguments);
    };
  }();

  return /*#__PURE__*/react_default.a.createElement(es["B" /* XFlow */], {
    onLoad: onLoad,
    className: "xflow-workspace"
  }, /*#__PURE__*/react_default.a.createElement(FormPanel, null), /*#__PURE__*/react_default.a.createElement(es["D" /* XFlowCanvas */], {
    className: "app-main-content",
    config: graphConfig,
    position: {
      top: 0,
      left: 230,
      right: 0,
      bottom: 0
    }
  }));
};

/* harmony default export */ var node_move_demos = __webpack_exports__["default"] = (NodeAddDemo);

//# sourceURL=webpack:///./docs/api/commands/nodes/node-move/demos/index.tsx_+_1_modules?`)},KKXM:function(module,__webpack_exports__,__webpack_require__){"use strict";eval(`// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "useGraphConfig", function() { return /* binding */ useGraphConfig; });

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__("KOBo");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__("RY7m");
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("q1tI");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ../xflow/es/index.js + 271 modules
var es = __webpack_require__("mqVf");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/objectSpread2.js
var objectSpread2 = __webpack_require__("BcGY");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 3 modules
var slicedToArray = __webpack_require__("jem/");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/input/index.js + 11 modules
var input = __webpack_require__("BmDy");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/form/index.js + 15 modules
var es_form = __webpack_require__("UL5a");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/message/index.js + 3 modules
var message = __webpack_require__("DuHN");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/button/index.js
var es_button = __webpack_require__("SCaQ");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/card/index.js + 2 modules
var card = __webpack_require__("jMRu");

// CONCATENATED MODULE: ./docs/api/commands/nodes/node-update/demos/form.tsx








var formItems = [{
  name: 'id',
  label: 'id',
  rules: [{
    required: true
  }],
  render: input["a" /* default */],
  renderProps: {
    disabled: true
  }
}, {
  name: 'label',
  label: 'label',
  rules: [{
    required: true
  }],
  render: input["a" /* default */]
}, {
  name: 'x',
  label: 'x',
  rules: [{
    required: true
  }],
  render: input["a" /* default */]
}, {
  name: 'y',
  label: 'y',
  rules: [{
    required: true
  }],
  render: input["a" /* default */]
}];
var CmdForm = () => {
  var app = Object(es["W" /* useXFlowApp */])();

  var _Form$useForm = es_form["a" /* default */].useForm(),
      _Form$useForm2 = Object(slicedToArray["a" /* default */])(_Form$useForm, 1),
      form = _Form$useForm2[0];

  var _useModelAsync = Object(es["U" /* useModelAsync */])({
    getModel: function () {
      var _getModel = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee() {
        return regenerator_default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt("return", es["t" /* MODELS */].SELECTED_NODE.getModel(app.modelService));

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      function getModel() {
        return _getModel.apply(this, arguments);
      }

      return getModel;
    }(),
    initialState: null
  }),
      _useModelAsync2 = Object(slicedToArray["a" /* default */])(_useModelAsync, 1),
      selectNode = _useModelAsync2[0];

  react_default.a.useEffect(() => {
    if (selectNode) {
      var nodeConfig = selectNode.getData();
      form.setFieldsValue({
        id: nodeConfig.id,
        label: nodeConfig.label,
        x: nodeConfig.x,
        y: nodeConfig.y
      });
    }
  }, [form, selectNode]);

  var onFinish = /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee2(values) {
      var nodeConfig;
      return regenerator_default.a.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              nodeConfig = selectNode.getData();
              app.commandService.executeCommand(es["J" /* XFlowNodeCommands */].UPDATE_NODE.id, {
                nodeConfig: Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({}, nodeConfig), values)
              });
              message["b" /* default */].success("".concat(es["J" /* XFlowNodeCommands */].DEL_NODE.label, ": \\u547D\\u4EE4\\u6267\\u884C\\u6210\\u529F"));

            case 3:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    }));

    return function onFinish(_x) {
      return _ref.apply(this, arguments);
    };
  }();

  return /*#__PURE__*/react_default.a.createElement(es["n" /* FormBuilder */], {
    form: form,
    formItems: formItems,
    onFinish: onFinish,
    initialValues: {
      id: null,
      label: null,
      x: null,
      y: null
    },
    submitButton: /*#__PURE__*/react_default.a.createElement(es_button["a" /* default */], {
      type: "primary",
      htmlType: "submit",
      style: {
        width: '100%'
      },
      disabled: !selectNode
    }, "\\u9009\\u4E2D\\u8282\\u70B9\\u6267\\u884C\\u547D\\u4EE4")
  });
};
var FormPanel = () => {
  return /*#__PURE__*/react_default.a.createElement(es["A" /* WorkspacePanel */], {
    position: {
      top: 0,
      left: 0,
      bottom: 0,
      width: 230
    },
    className: "panel"
  }, /*#__PURE__*/react_default.a.createElement(card["a" /* default */], {
    title: "NodeConfig Options",
    size: "small",
    bordered: false
  }, /*#__PURE__*/react_default.a.createElement(CmdForm, null)));
};
// EXTERNAL MODULE: ./docs/api/commands/nodes/node-update/demos/index.less
var demos = __webpack_require__("RTcG");

// CONCATENATED MODULE: ./docs/api/commands/nodes/node-update/demos/index.tsx






var useGraphConfig = Object(es["M" /* createGraphConfig */])(graphConfig => {
  graphConfig.setX6Config({
    grid: true
  });
  graphConfig.setDefaultNodeRender(props => {
    return /*#__PURE__*/react_default.a.createElement("div", {
      className: "react-node"
    }, " ", props.data.label, " ");
  });
});

var Demo = () => {
  var onLoad = /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(app) {
      return regenerator_default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              app.executeCommand(es["J" /* XFlowNodeCommands */].ADD_NODE.id, {
                nodeConfig: {
                  id: 'node1',
                  x: 280,
                  y: 130,
                  width: 120,
                  height: 40,
                  label: 'Hello World'
                }
              });

            case 1:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function onLoad(_x) {
      return _ref.apply(this, arguments);
    };
  }();

  return /*#__PURE__*/react_default.a.createElement(es["B" /* XFlow */], {
    onLoad: onLoad,
    className: "xflow-node-update-demo",
    meta: {
      flowId: 'node-update-demo'
    }
  }, /*#__PURE__*/react_default.a.createElement(FormPanel, null), /*#__PURE__*/react_default.a.createElement(es["D" /* XFlowCanvas */], {
    config: useGraphConfig(),
    position: {
      top: 0,
      left: 230,
      right: 0,
      bottom: 0
    }
  }));
};

/* harmony default export */ var node_update_demos = __webpack_exports__["default"] = (Demo);

//# sourceURL=webpack:///./docs/api/commands/nodes/node-update/demos/index.tsx_+_1_modules?`)},KU79:function(module,__webpack_exports__,__webpack_require__){"use strict";eval(`__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useGraphConfig", function() { return useGraphConfig; });
/* harmony import */ var _Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("KOBo");
/* harmony import */ var _Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("RY7m");
/* harmony import */ var _Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("q1tI");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _antv_xflow__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("mqVf");
/* harmony import */ var _index_less__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("FtWD");
/* harmony import */ var _index_less__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_index_less__WEBPACK_IMPORTED_MODULE_4__);






var useGraphConfig = Object(_antv_xflow__WEBPACK_IMPORTED_MODULE_3__[/* createGraphConfig */ "M"])(config => {
  config.setX6Config({
    grid: true
  });
  config.setNodeRender('NODE1', props => {
    var _props$data;

    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("div", {
      className: "react-node"
    }, (_props$data = props.data) === null || _props$data === void 0 ? void 0 : _props$data.info);
  });
  config.setEdgeRender('EDGE1', props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("div", {
    className: "react-edge"
  }, props.data.info));
});
var appRef;

var Demo = () => {
  var onLoad = /*#__PURE__*/function () {
    var _ref = Object(_Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])( /*#__PURE__*/_Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee(app) {
      var nodes, edges, graphData;
      return _Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              appRef = app;
              nodes = [{
                id: 'root11',
                x: 200,
                y: 50,
                width: 120,
                height: 40,
                renderKey: 'NODE1',
                info: 'React\u8282\u70B91'
              }, {
                id: 'down11',
                x: 550,
                y: 50,
                width: 120,
                height: 40,
                renderKey: 'NODE1',
                info: 'React\u8282\u70B92'
              }, {
                id: 'root12',
                x: 200,
                y: 120,
                width: 120,
                height: 40,
                renderKey: 'NODE1',
                info: 'React\u8282\u70B91'
              }, {
                id: 'down12',
                x: 550,
                y: 120,
                width: 120,
                height: 40,
                renderKey: 'NODE1',
                info: 'React\u8282\u70B92'
              }];
              edges = [{
                id: 'root11-down11',
                source: 'root11',
                target: 'down11',
                label: 'text'
              }, {
                id: 'root12-down12',
                source: 'root12',
                target: 'down12',
                edgeContentWidth: 60,
                edgeContentHeigt: 30,
                info: 'text',
                renderKey: 'EDGE1'
              }];
              graphData = {
                nodes,
                edges
              };
              /** \u6267\u884C\u753B\u5E03\u6E32\u67D3\u547D\u4EE4 */

              app.executeCommand(_antv_xflow__WEBPACK_IMPORTED_MODULE_3__[/* XFlowGraphCommands */ "H"].GRAPH_RENDER.id, {
                graphData
              });

            case 5:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function onLoad(_x) {
      return _ref.apply(this, arguments);
    };
  }();

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_antv_xflow__WEBPACK_IMPORTED_MODULE_3__[/* XFlow */ "B"], {
    onLoad: onLoad,
    className: "xflow-edge-update-demo"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("div", {
    className: "btn"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("div", {
    className: "div",
    onClick: () => {
      appRef.executeCommand(_antv_xflow__WEBPACK_IMPORTED_MODULE_3__[/* XFlowEdgeCommands */ "G"].UPDATE_EDGE.id, {
        edgeConfig: {
          id: 'root11-down11',
          label: 'new-text'
        }
      });
    }
  }, '\u66F4\u65B0\u8FDE\u7EBF\u4E0Alabel\u7684\u5185\u5BB9'), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("div", {
    className: "div",
    onClick: () => {
      appRef.executeCommand(_antv_xflow__WEBPACK_IMPORTED_MODULE_3__[/* XFlowEdgeCommands */ "G"].UPDATE_EDGE.id, {
        edgeConfig: {
          id: 'root12-down12',
          source: 'root12',
          target: 'down12',
          edgeContentWidth: 60,
          edgeContentHeigt: 30,
          info: 'new-text',
          renderKey: 'EDGE1'
        }
      });
    }
  }, '\u66F4\u65B0\u8FDE\u7EBF\u4E0Areact\u8282\u70B9\u7684\u5185\u5BB9')), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_antv_xflow__WEBPACK_IMPORTED_MODULE_3__[/* XFlowCanvas */ "D"], {
    config: useGraphConfig()
  }));
};

/* harmony default export */ __webpack_exports__["default"] = (Demo);

//# sourceURL=webpack:///./docs/api/commands/edges/edge-update/demos/index.tsx?`)},MROq:function(module,exports,__webpack_require__){eval(`var map = {
	"./af": "8GSH",
	"./af.js": "8GSH",
	"./ar": "NcOb",
	"./ar-dz": "1ors",
	"./ar-dz.js": "1ors",
	"./ar-kw": "Sc1Y",
	"./ar-kw.js": "Sc1Y",
	"./ar-ly": "GzvP",
	"./ar-ly.js": "GzvP",
	"./ar-ma": "hH25",
	"./ar-ma.js": "hH25",
	"./ar-sa": "u2jB",
	"./ar-sa.js": "u2jB",
	"./ar-tn": "5Mza",
	"./ar-tn.js": "5Mza",
	"./ar.js": "NcOb",
	"./az": "ZVVJ",
	"./az.js": "ZVVJ",
	"./be": "kQaN",
	"./be.js": "kQaN",
	"./bg": "+n5x",
	"./bg.js": "+n5x",
	"./bm": "TTiN",
	"./bm.js": "TTiN",
	"./bn": "aIF2",
	"./bn-bd": "lTqY",
	"./bn-bd.js": "lTqY",
	"./bn.js": "aIF2",
	"./bo": "QWb5",
	"./bo.js": "QWb5",
	"./br": "iQoZ",
	"./br.js": "iQoZ",
	"./bs": "EL7g",
	"./bs.js": "EL7g",
	"./ca": "vd/2",
	"./ca.js": "vd/2",
	"./cs": "K+3W",
	"./cs.js": "K+3W",
	"./cv": "Jt3X",
	"./cv.js": "Jt3X",
	"./cy": "sWi3",
	"./cy.js": "sWi3",
	"./da": "YcFX",
	"./da.js": "YcFX",
	"./de": "BKZ+",
	"./de-at": "Oq9h",
	"./de-at.js": "Oq9h",
	"./de-ch": "hHY4",
	"./de-ch.js": "hHY4",
	"./de.js": "BKZ+",
	"./dv": "w8Ej",
	"./dv.js": "w8Ej",
	"./el": "tSbB",
	"./el.js": "tSbB",
	"./en-au": "HgyJ",
	"./en-au.js": "HgyJ",
	"./en-ca": "ZyTy",
	"./en-ca.js": "ZyTy",
	"./en-gb": "exaB",
	"./en-gb.js": "exaB",
	"./en-ie": "yKzn",
	"./en-ie.js": "yKzn",
	"./en-il": "TB59",
	"./en-il.js": "TB59",
	"./en-in": "S70V",
	"./en-in.js": "S70V",
	"./en-nz": "iDxo",
	"./en-nz.js": "iDxo",
	"./en-sg": "zS0P",
	"./en-sg.js": "zS0P",
	"./eo": "4bvN",
	"./eo.js": "4bvN",
	"./es": "GNPT",
	"./es-do": "R7mU",
	"./es-do.js": "R7mU",
	"./es-mx": "FkqR",
	"./es-mx.js": "FkqR",
	"./es-us": "Nstw",
	"./es-us.js": "Nstw",
	"./es.js": "GNPT",
	"./et": "ZOjb",
	"./et.js": "ZOjb",
	"./eu": "kFC9",
	"./eu.js": "kFC9",
	"./fa": "8Cju",
	"./fa.js": "8Cju",
	"./fi": "vcN1",
	"./fi.js": "vcN1",
	"./fil": "3g1g",
	"./fil.js": "3g1g",
	"./fo": "8Ygf",
	"./fo.js": "8Ygf",
	"./fr": "Y8Ij",
	"./fr-ca": "t+Zl",
	"./fr-ca.js": "t+Zl",
	"./fr-ch": "SPXN",
	"./fr-ch.js": "SPXN",
	"./fr.js": "Y8Ij",
	"./fy": "T3MF",
	"./fy.js": "T3MF",
	"./ga": "NowM",
	"./ga.js": "NowM",
	"./gd": "GJYX",
	"./gd.js": "GJYX",
	"./gl": "MdC8",
	"./gl.js": "MdC8",
	"./gom-deva": "QJjq",
	"./gom-deva.js": "QJjq",
	"./gom-latn": "5j0y",
	"./gom-latn.js": "5j0y",
	"./gu": "fY0S",
	"./gu.js": "fY0S",
	"./he": "ACAV",
	"./he.js": "ACAV",
	"./hi": "3WqV",
	"./hi.js": "3WqV",
	"./hr": "OnNk",
	"./hr.js": "OnNk",
	"./hu": "EQmw",
	"./hu.js": "EQmw",
	"./hy-am": "MNf7",
	"./hy-am.js": "MNf7",
	"./id": "0yow",
	"./id.js": "0yow",
	"./is": "TmOJ",
	"./is.js": "TmOJ",
	"./it": "xD/0",
	"./it-ch": "foQf",
	"./it-ch.js": "foQf",
	"./it.js": "xD/0",
	"./ja": "jOnb",
	"./ja.js": "jOnb",
	"./jv": "lOtj",
	"./jv.js": "lOtj",
	"./ka": "BAN/",
	"./ka.js": "BAN/",
	"./kk": "iNiw",
	"./kk.js": "iNiw",
	"./km": "TUxt",
	"./km.js": "TUxt",
	"./kn": "hQzt",
	"./kn.js": "hQzt",
	"./ko": "ZNZT",
	"./ko.js": "ZNZT",
	"./ku": "S0Tg",
	"./ku.js": "S0Tg",
	"./ky": "JO+T",
	"./ky.js": "JO+T",
	"./lb": "vn/h",
	"./lb.js": "vn/h",
	"./lo": "gnIm",
	"./lo.js": "gnIm",
	"./lt": "6PD3",
	"./lt.js": "6PD3",
	"./lv": "YKe2",
	"./lv.js": "YKe2",
	"./me": "d3TR",
	"./me.js": "d3TR",
	"./mi": "hTlv",
	"./mi.js": "hTlv",
	"./mk": "ffVN",
	"./mk.js": "ffVN",
	"./ml": "ejL1",
	"./ml.js": "ejL1",
	"./mn": "RIsM",
	"./mn.js": "RIsM",
	"./mr": "CPJk",
	"./mr.js": "CPJk",
	"./ms": "d5Hy",
	"./ms-my": "t4T9",
	"./ms-my.js": "t4T9",
	"./ms.js": "d5Hy",
	"./mt": "1KVU",
	"./mt.js": "1KVU",
	"./my": "LsNb",
	"./my.js": "LsNb",
	"./nb": "h+U8",
	"./nb.js": "h+U8",
	"./ne": "2JSI",
	"./ne.js": "2JSI",
	"./nl": "jsZ8",
	"./nl-be": "+h6j",
	"./nl-be.js": "+h6j",
	"./nl.js": "jsZ8",
	"./nn": "mh29",
	"./nn.js": "mh29",
	"./oc-lnc": "zX+o",
	"./oc-lnc.js": "zX+o",
	"./pa-in": "O6bP",
	"./pa-in.js": "O6bP",
	"./pl": "8Bez",
	"./pl.js": "8Bez",
	"./pt": "DDip",
	"./pt-br": "uHm5",
	"./pt-br.js": "uHm5",
	"./pt.js": "DDip",
	"./ro": "baBi",
	"./ro.js": "baBi",
	"./ru": "ecsu",
	"./ru.js": "ecsu",
	"./sd": "e9KM",
	"./sd.js": "e9KM",
	"./se": "CZRU",
	"./se.js": "CZRU",
	"./si": "TO58",
	"./si.js": "TO58",
	"./sk": "K+Lk",
	"./sk.js": "K+Lk",
	"./sl": "QK6v",
	"./sl.js": "QK6v",
	"./sq": "v3Qg",
	"./sq.js": "v3Qg",
	"./sr": "Ndyf",
	"./sr-cyrl": "PGvg",
	"./sr-cyrl.js": "PGvg",
	"./sr.js": "Ndyf",
	"./ss": "2B8G",
	"./ss.js": "2B8G",
	"./sv": "WF5B",
	"./sv.js": "WF5B",
	"./sw": "4VvY",
	"./sw.js": "4VvY",
	"./ta": "dw3T",
	"./ta.js": "dw3T",
	"./te": "4MAb",
	"./te.js": "4MAb",
	"./tet": "/hi0",
	"./tet.js": "/hi0",
	"./tg": "PoVJ",
	"./tg.js": "PoVJ",
	"./th": "OY2w",
	"./th.js": "OY2w",
	"./tk": "zO4H",
	"./tk.js": "zO4H",
	"./tl-ph": "UC+K",
	"./tl-ph.js": "UC+K",
	"./tlh": "cWLW",
	"./tlh.js": "cWLW",
	"./tr": "EqYs",
	"./tr.js": "EqYs",
	"./tzl": "fN8o",
	"./tzl.js": "fN8o",
	"./tzm": "6cYq",
	"./tzm-latn": "pdAN",
	"./tzm-latn.js": "pdAN",
	"./tzm.js": "6cYq",
	"./ug-cn": "J+SV",
	"./ug-cn.js": "J+SV",
	"./uk": "6Olw",
	"./uk.js": "6Olw",
	"./ur": "QNGR",
	"./ur.js": "QNGR",
	"./uz": "hLzJ",
	"./uz-latn": "KqOT",
	"./uz-latn.js": "KqOT",
	"./uz.js": "hLzJ",
	"./vi": "EnIJ",
	"./vi.js": "EnIJ",
	"./x-pseudo": "W7dU",
	"./x-pseudo.js": "W7dU",
	"./yo": "QDhB",
	"./yo.js": "QDhB",
	"./zh-cn": "bjMe",
	"./zh-cn.js": "bjMe",
	"./zh-hk": "JFCg",
	"./zh-hk.js": "JFCg",
	"./zh-mo": "5BRa",
	"./zh-mo.js": "5BRa",
	"./zh-tw": "xBDH",
	"./zh-tw.js": "xBDH"
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = "MROq";

//# sourceURL=webpack:////Users/lyn/github/xflow-github/node_modules/moment/locale_sync_^\\.\\/.*$?`)},MSDE:function(module,__webpack_exports__,__webpack_require__){"use strict";eval(`// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__("KOBo");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 3 modules
var slicedToArray = __webpack_require__("jem/");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__("RY7m");
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("q1tI");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ../xflow/es/index.js + 271 modules
var es = __webpack_require__("mqVf");

// EXTERNAL MODULE: ./docs/tutorial/getting-started/demo/react-node/node1.less
var node1 = __webpack_require__("kdK0");

// CONCATENATED MODULE: ./docs/tutorial/getting-started/demo/react-node/node1.tsx



var Node1 = props => {
  /**
   * 1. \u8282\u70B9\u7684\u6570\u636E\u3001\u4F4D\u7F6E\u4FE1\u606F\u901A\u8FC7props\u53D6
   * 2. \u5F53\u8282\u70B9\u88AB\u89E6\u53D1\u66F4\u65B0\u65F6, props\u8FD4\u56DE\u7684\u6570\u636E\u4E5F\u4F1A\u52A8\u6001\u66F4\u65B0, \u89E6\u53D1\u8282\u70B9\u91CD\u65B0\u6E32\u67D3
   */
  return /*#__PURE__*/react_default.a.createElement("div", {
    className: "node1-container"
  }, /*#__PURE__*/react_default.a.createElement("div", null, 'React\u8282\u70B91'));
};

/* harmony default export */ var react_node_node1 = (Node1);
// EXTERNAL MODULE: ./docs/tutorial/getting-started/demo/react-node/node2.less
var node2 = __webpack_require__("iXYd");

// CONCATENATED MODULE: ./docs/tutorial/getting-started/demo/react-node/node2.tsx




var Node2 = props => {
  var ctx = Object(es["T" /* useAppContext */])();
  return /*#__PURE__*/react_default.a.createElement("div", {
    className: "node2-container"
  }, /*#__PURE__*/react_default.a.createElement("div", null, 'React\u8282\u70B92'));
};

/* harmony default export */ var react_node_node2 = (Node2);
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/tooltip/index.js + 1 modules
var tooltip = __webpack_require__("9xBf");

// EXTERNAL MODULE: ./docs/tutorial/getting-started/demo/react-edge/edge1.less
var edge1 = __webpack_require__("JluQ");

// CONCATENATED MODULE: ./docs/tutorial/getting-started/demo/react-edge/edge1.tsx





var Edge1 = props => {
  var ctx = Object(es["T" /* useAppContext */])(); // console.log('edge useAppContext', ctx);
  // console.log('edge props:', props);

  return /*#__PURE__*/react_default.a.createElement("div", {
    className: "edge1-container"
  }, /*#__PURE__*/react_default.a.createElement(tooltip["a" /* default */], {
    title: "\\u8FD9\\u662F\\u8FDE\\u7EBF\\u4E0A\\u6E32\\u67D3\\u7684React\\u5185\\u5BB9" // defaultVisible={true}

  }, /*#__PURE__*/react_default.a.createElement("div", null, "hover\\u6211")));
};

/* harmony default export */ var react_edge_edge1 = (Edge1);
// EXTERNAL MODULE: ./docs/tutorial/getting-started/demo/react-edge/edge2.less
var edge2 = __webpack_require__("FdDH");

// CONCATENATED MODULE: ./docs/tutorial/getting-started/demo/react-edge/edge2.tsx



var Edge2 = props => {
  return /*#__PURE__*/react_default.a.createElement("div", {
    className: "edge2-container"
  }, "React2");
};

/* harmony default export */ var react_edge_edge2 = (Edge2);
// CONCATENATED MODULE: ./docs/tutorial/getting-started/demo/config-graph.tsx


/** \u81EA\u5B9A\u4E49React\u8282\u70B9/\u8FB9 */





var useGraphConfig = Object(es["M" /* createGraphConfig */])(config => {
  /** \u8BBE\u7F6EXFlow\u753B\u5E03\u914D\u7F6E\u9879 */
  config.setX6Config({
    /** \u753B\u5E03\u7F51\u683C */
    grid: true,

    /** \u753B\u5E03\u7F29\u653E\u7B49\u7EA7 */
    scaling: {
      min: 0.2,
      max: 3
    }
    /** \u753B\u5E03\u6EDA\u8F6E\u7F29\u653E */
    // mousewheel: {
    //   enabled: true,
    //   /** \u5C06\u9F20\u6807\u4F4D\u7F6E\u4F5C\u4E3A\u4E2D\u5FC3\u7F29\u653E */
    //   zoomAtMousePosition: true,
    // },

  });
  /** \u8BBE\u7F6EXFlow\u753B\u5E03\u9700\u8981\u6E32\u67D3\u7684React\u8282\u70B9/\u8FB9 */

  config.setNodeRender('NODE1', props => /*#__PURE__*/react_default.a.createElement(react_node_node1, props));
  config.setNodeRender('NODE2', react_node_node2);
  config.setEdgeRender('EDGE1', props => /*#__PURE__*/react_default.a.createElement(react_edge_edge1, props));
  config.setEdgeRender('EDGE2', props => /*#__PURE__*/react_default.a.createElement(react_edge_edge2, props));
});
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/message/index.js + 3 modules
var message = __webpack_require__("DuHN");

// EXTERNAL MODULE: ./docs/tutorial/getting-started/demo/index.less
var demo = __webpack_require__("fgE+");

// EXTERNAL MODULE: ../xflow/dist/index.css
var dist = __webpack_require__("1MRj");

// CONCATENATED MODULE: ./docs/tutorial/getting-started/demo/index.tsx




/** \u56FE\u6838\u5FC3\u7EC4\u4EF6 & \u7C7B\u578B\u5B9A\u4E49 */


/** \u56FE\u7684\u5404\u79CD\u6269\u5C55\u4EA4\u4E92\u7EC4\u4EF6 */


/** \u56FE\u7684\u914D\u7F6E\u9879 */






var Demo = () => {
  /** \u753B\u5E03\u914D\u7F6E */
  var graphConfig = useGraphConfig();
  /** \u753B\u5E03\u6E32\u67D3\u6570\u636E */

  var _useState = Object(react["useState"])(undefined),
      _useState2 = Object(slicedToArray["a" /* default */])(_useState, 2),
      graphData = _useState2[0],
      setGraphData = _useState2[1];
  /** XFlow\u521D\u59CB\u5316\u5B8C\u6210\u7684\u56DE\u8C03 */


  var onLoad = /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(app) {
      var nodes, edges, newGraphData, graph;
      return regenerator_default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              nodes = [{
                id: 'root1',
                width: 150,
                height: 40,
                renderKey: 'NODE1',
                info: {
                  text: 'root1'
                }
              }, {
                id: 'down1',
                width: 150,
                height: 40,
                renderKey: 'NODE2',
                info: {
                  text: 'down1'
                }
              }, {
                id: 'down2',
                width: 150,
                height: 40,
                renderKey: 'NODE2',
                info: {
                  text: 'down2'
                }
              }, {
                id: 'down3',
                width: 150,
                height: 40,
                renderKey: 'NODE2',
                info: {
                  text: 'down3'
                }
              }];
              edges = [{
                id: 'root1-down1',
                source: 'root1',
                target: 'down1',
                renderKey: 'EDGE1',
                edgeContentWidth: 60,
                edgeContentHeigt: 30,
                info: {
                  line: 'root1-down1'
                }
              }, {
                id: 'root1-down2',
                source: 'root1',
                target: 'down2',
                renderKey: 'EDGE2',
                edgeContentWidth: 60,
                edgeContentHeigt: 30,
                info: {
                  line: 'root1-down2'
                }
              }, {
                id: 'root1-down3',
                source: 'root1',
                target: 'down3',
                label: '1:N(\u7EAF\u6587\u672C)',
                info: {
                  line: 'root1-down3'
                }
              }];
              newGraphData = {
                nodes,
                edges
              };
              setGraphData(newGraphData);
              _context.next = 6;
              return app.getGraphInstance();

            case 6:
              graph = _context.sent;
              graph.on('node:click', _ref2 => {
                var node = _ref2.node;
                var nodeData = node.getData();
                message["b" /* default */].success("".concat(nodeData.id, "\\u8282\\u70B9\\u88AB\\u70B9\\u51FB\\u4E86"));
              });
              graph.on('edge:click', _ref3 => {
                var edge = _ref3.edge;
                edge.toFront();
                var edgeData = edge.getData();
                message["b" /* default */].success("".concat(edgeData.id, "\\u8FDE\\u7EBF\\u88AB\\u70B9\\u51FB\\u4E86"));
              });

            case 9:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function onLoad(_x) {
      return _ref.apply(this, arguments);
    };
  }();

  return /*#__PURE__*/react_default.a.createElement(es["B" /* XFlow */], {
    className: "xflow-user-container",
    graphData: graphData,
    graphLayout: {
      layoutType: 'dagre',
      layoutOptions: {
        type: 'dagre',
        rankdir: 'TB',
        nodesep: 60,
        ranksep: 40
      }
    },
    onLoad: onLoad,
    isAutoCenter: true
  }, /*#__PURE__*/react_default.a.createElement(es["D" /* XFlowCanvas */], {
    config: graphConfig
  }, /*#__PURE__*/react_default.a.createElement(es["d" /* CanvasScaleToolbar */], {
    position: {
      top: 12,
      left: 12
    }
  }), /*#__PURE__*/react_default.a.createElement(es["b" /* CanvasMiniMap */], {
    miniMapClz: "xflow-custom-minimap",
    nodeFillColor: "#ccc",
    minimapOptions: {
      width: 200,
      height: 120
    },
    position: {
      top: 12,
      right: 12
    }
  }), /*#__PURE__*/react_default.a.createElement(es["e" /* CanvasSnapline */], {
    color: "#1890ff"
  })));
};

/* harmony default export */ var getting_started_demo = __webpack_exports__["default"] = (Demo);

//# sourceURL=webpack:///./docs/tutorial/getting-started/demo/index.tsx_+_5_modules?`)},MbdG:function(module,__webpack_exports__,__webpack_require__){"use strict";eval(`// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "useGraphConfig", function() { return /* binding */ useGraphConfig; });

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__("KOBo");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__("RY7m");
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("q1tI");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ../xflow/es/index.js + 271 modules
var es = __webpack_require__("mqVf");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/PlusCircleOutlined.js + 1 modules
var PlusCircleOutlined = __webpack_require__("Uhj0");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/DeleteOutlined.js + 1 modules
var DeleteOutlined = __webpack_require__("UmCv");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/SaveOutlined.js + 1 modules
var SaveOutlined = __webpack_require__("GcFv");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/message/index.js + 3 modules
var message = __webpack_require__("DuHN");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-toolbar/demos/basic/toolbar-config.tsx






var NsConfig;

(function (_NsConfig) {
  /** \u6CE8\u518Cicon \u7C7B\u578B */
  es["q" /* IconStore */].set('PlusCircleOutlined', PlusCircleOutlined["a" /* default */]);
  es["q" /* IconStore */].set('DeleteOutlined', DeleteOutlined["a" /* default */]);
  es["q" /* IconStore */].set('SaveOutlined', SaveOutlined["a" /* default */]);
  /** nodeId */

  /** nodeId */
  var id = 1;
  /** \u83B7\u53D6toobar\u914D\u7F6E\u9879 */

  var getToolbarItems = _NsConfig.getToolbarItems = /*#__PURE__*/Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee5() {
    var toolbarGroup1, toolbarGroup2;
    return regenerator_default.a.wrap(function _callee5$(_context5) {
      while (1) {
        switch (_context5.prev = _context5.next) {
          case 0:
            toolbarGroup1 = [];
            toolbarGroup2 = [];
            /** \u4FDD\u5B58\u6570\u636E */

            /** \u4FDD\u5B58\u6570\u636E */
            toolbarGroup1.push({
              id: es["J" /* XFlowNodeCommands */].ADD_NODE.id,
              iconName: 'PlusCircleOutlined',
              tooltip: '\u6DFB\u52A0\u8282\u70B9',
              onClick: function () {
                var _onClick = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee2(_ref3) {
                  var commandService, nodeName;
                  return regenerator_default.a.wrap(function _callee2$(_context2) {
                    while (1) {
                      switch (_context2.prev = _context2.next) {
                        case 0:
                          commandService = _ref3.commandService;
                          nodeName = "Node-".concat(id);
                          commandService.executeCommand(es["J" /* XFlowNodeCommands */].ADD_NODE.id, {
                            nodeConfig: {
                              id: nodeName,
                              label: nodeName,
                              x: 100 + id * 5,
                              y: 50 + id * 5,
                              width: 160,
                              height: 32
                            }
                          });
                          id += 1;

                        case 4:
                        case "end":
                          return _context2.stop();
                      }
                    }
                  }, _callee2);
                }));

                function onClick(_x2) {
                  return _onClick.apply(this, arguments);
                }

                return onClick;
              }()
            });
            toolbarGroup1.push({
              id: es["J" /* XFlowNodeCommands */].MOVE_NODE.id,
              iconName: 'DeleteOutlined',
              tooltip: '\u5220\u9664\u8282\u70B9',
              isEnabled: false
            });
            /** \u4FDD\u5B58\u6570\u636E */

            /** \u4FDD\u5B58\u6570\u636E */
            toolbarGroup2.push({
              id: es["H" /* XFlowGraphCommands */].SAVE_GRAPH_DATA.id,
              iconName: 'SaveOutlined',
              tooltip: '\u4FDD\u5B58\u6570\u636E',
              onClick: function () {
                var _onClick2 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee4(_ref4) {
                  var commandService;
                  return regenerator_default.a.wrap(function _callee4$(_context4) {
                    while (1) {
                      switch (_context4.prev = _context4.next) {
                        case 0:
                          commandService = _ref4.commandService;
                          commandService.executeCommand(es["H" /* XFlowGraphCommands */].SAVE_GRAPH_DATA.id, {
                            saveGraphDataService: function () {
                              var _saveGraphDataService = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee3(meta, data) {
                                return regenerator_default.a.wrap(function _callee3$(_context3) {
                                  while (1) {
                                    switch (_context3.prev = _context3.next) {
                                      case 0:
                                        console.log(data);
                                        message["b" /* default */].success('nodes count:' + data.nodes.length);

                                      case 2:
                                      case "end":
                                        return _context3.stop();
                                    }
                                  }
                                }, _callee3);
                              }));

                              function saveGraphDataService(_x4, _x5) {
                                return _saveGraphDataService.apply(this, arguments);
                              }

                              return saveGraphDataService;
                            }()
                          });

                        case 2:
                        case "end":
                          return _context4.stop();
                      }
                    }
                  }, _callee4);
                }));

                function onClick(_x3) {
                  return _onClick2.apply(this, arguments);
                }

                return onClick;
              }()
            });
            return _context5.abrupt("return", [{
              name: 'nodeGroup',
              items: toolbarGroup1
            }, {
              name: 'graphGroup',
              items: toolbarGroup2
            }]);

          case 6:
          case "end":
            return _context5.stop();
        }
      }
    }, _callee5);
  }));
})(NsConfig || (NsConfig = {}));
/** wrap\u51FA\u4E00\u4E2Ahook */


var useToolbarConfig = Object(es["Q" /* createToolbarConfig */])(toolbarConfig => {
  /** \u751F\u4EA7 toolbar item */
  toolbarConfig.setToolbarModelService( /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(toolbarModel) {
      var toolbarItems;
      return regenerator_default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return NsConfig.getToolbarItems();

            case 2:
              toolbarItems = _context.sent;
              toolbarModel.setValue(toolbar => {
                toolbar.mainGroups = toolbarItems;
              });

            case 4:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function (_x) {
      return _ref.apply(this, arguments);
    };
  }());
});
// EXTERNAL MODULE: ./docs/tutorial/extension-components/canvas-toolbar/demos/basic/index.less
var basic = __webpack_require__("k1AC");

// EXTERNAL MODULE: ../xflow/dist/index.css
var dist = __webpack_require__("1MRj");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-toolbar/demos/basic/index.tsx



/**
 * title: \u57FA\u7840\u4F7F\u7528\u65B9\u6CD5
 * desc: \u901A\u8FC7position\u5B9A\u4F4DToolbar,\u901A\u8FC7config\u5C5E\u6027\u914D\u7F6Etoolbar, \u67E5\u770Btoolbar-config.tsx\u6587\u4EF6\u4E86\u89E3\u5982\u4F55\u914D\u7F6Etoolbar
 */





/**  Demo Props  */

/**  graphConfig\uFF1A\u914D\u7F6EGraph  */
var useGraphConfig = Object(es["M" /* createGraphConfig */])(graphConfig => {
  graphConfig.setDefaultNodeRender(props => {
    return /*#__PURE__*/react_default.a.createElement("div", {
      className: "react-node"
    }, " ", props.data.label, " ");
  });
});

var XFlowDemo = props => {
  var graphConfig = useGraphConfig(props);
  var toolbarConfig = useToolbarConfig(props);

  var onLoad = /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(app) {
      return regenerator_default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              console.log(app);

            case 1:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function onLoad(_x) {
      return _ref.apply(this, arguments);
    };
  }();

  return /*#__PURE__*/react_default.a.createElement(es["B" /* XFlow */], {
    onLoad: onLoad,
    className: "xflow-workspace"
  }, /*#__PURE__*/react_default.a.createElement(es["f" /* CanvasToolbar */], {
    layout: "horizontal",
    config: toolbarConfig,
    position: {
      top: 0,
      left: 0,
      right: 0,
      height: 40
    }
  }), /*#__PURE__*/react_default.a.createElement(es["D" /* XFlowCanvas */], {
    config: graphConfig,
    position: {
      top: 40,
      bottom: 0,
      left: 0,
      right: 0
    }
  }));
};

/* harmony default export */ var demos_basic = __webpack_exports__["default"] = (XFlowDemo);

//# sourceURL=webpack:///./docs/tutorial/extension-components/canvas-toolbar/demos/basic/index.tsx_+_1_modules?`)},N33m:function(module,__webpack_exports__,__webpack_require__){"use strict";eval(`// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "useGraphConfig", function() { return /* binding */ useGraphConfig; });

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__("KOBo");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__("RY7m");
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("q1tI");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ../xflow/es/index.js + 271 modules
var es = __webpack_require__("mqVf");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/objectSpread2.js
var objectSpread2 = __webpack_require__("BcGY");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-mini-map/demos/color/mock.ts

 // NodeConfig

var NODE_COMMON_PROPS = {
  width: 160,
  height: 32
}; // NodeConfig

var EDGE_COMMON_PROPS = {
  attrs: {
    line: {
      targetMarker: {
        name: 'block',
        width: 4,
        height: 8
      },
      strokeDasharray: '',
      stroke: '#A2B1C3',
      strokeWidth: 1
    }
  }
}; // mock data

var getGraphData = () => {
  var nodes = [Object(objectSpread2["a" /* default */])({
    id: 'node1',
    label: '\u7B97\u6CD5\u8282\u70B9-1'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node2',
    label: '\u7B97\u6CD5\u8282\u70B9-2'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node3',
    label: '\u7B97\u6CD5\u8282\u70B9-3'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node4',
    label: '\u7B97\u6CD5\u8282\u70B9-4'
  }, NODE_COMMON_PROPS)];
  var edges = [Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node2',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node2-input-1'
  }, EDGE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node3',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node3-input-1'
  }, EDGE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node4',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node4-input-1'
  }, EDGE_COMMON_PROPS)];
  return {
    nodes: nodes,
    edges: edges
  };
};
// EXTERNAL MODULE: ../xflow/dist/index.css
var dist = __webpack_require__("1MRj");

// EXTERNAL MODULE: ./docs/tutorial/extension-components/canvas-mini-map/demos/color/index.less
var color = __webpack_require__("x6ZJ");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-mini-map/demos/color/index.tsx



/**
 * title: \u914D\u7F6E\u989C\u8272
 * desc:  nodeFillColor(\u8282\u70B9\u989C\u8272)/borderColor(\u89C6\u7A97\u8FB9\u6846\u989C\u8272)/handlerColor(\u8C03\u8282\u6309\u94AE\u989C\u8272)
 */





/**  Demo Props  */

/**  graphConfig\uFF1A\u914D\u7F6EGraph  */
var useGraphConfig = Object(es["M" /* createGraphConfig */])(graphConfig => {
  graphConfig.setDefaultNodeRender(props => {
    return /*#__PURE__*/react_default.a.createElement("div", {
      className: "react-node"
    }, " ", props.data.label, " ");
  });
});

var XFlowDemo = props => {
  var graphConfig = useGraphConfig(props);

  var onLoad = /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(app) {
      var res, _res$contextProvider$, graphData;

      return regenerator_default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_LAYOUT.id, {
                layoutType: 'dagre',
                layoutOptions: {
                  type: 'dagre',

                  /** \u5E03\u5C40\u65B9\u5411 */
                  rankdir: 'TB',

                  /** \u8282\u70B9\u95F4\u8DDD */
                  nodesep: 60,

                  /** \u5C42\u95F4\u8DDD */
                  ranksep: 30
                },
                graphData: getGraphData()
              });

            case 2:
              res = _context.sent;
              _res$contextProvider$ = res.contextProvider().getResult(), graphData = _res$contextProvider$.graphData; // render

              _context.next = 6;
              return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_RENDER.id, {
                graphData: graphData
              });

            case 6:
              _context.next = 8;
              return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_ZOOM.id, {
                factor: 'real'
              });

            case 8:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function onLoad(_x) {
      return _ref.apply(this, arguments);
    };
  }();

  return /*#__PURE__*/react_default.a.createElement(es["B" /* XFlow */], {
    onLoad: onLoad,
    className: "xflow-workspace"
  }, /*#__PURE__*/react_default.a.createElement(es["D" /* XFlowCanvas */], {
    config: graphConfig,
    position: {
      top: 0,
      bottom: 0,
      left: 0,
      right: 0
    }
  }, /*#__PURE__*/react_default.a.createElement(es["b" /* CanvasMiniMap */], {
    position: {
      top: 12,
      left: 12
    },
    nodeFillColor: "#873bf4",
    borderColor: "#873bf4",
    handlerColor: "#873bf4"
  })));
};

/* harmony default export */ var demos_color = __webpack_exports__["default"] = (XFlowDemo);

//# sourceURL=webpack:///./docs/tutorial/extension-components/canvas-mini-map/demos/color/index.tsx_+_1_modules?`)},Oxvr:function(module,__webpack_exports__,__webpack_require__){"use strict";eval(`// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "useGraphConfig", function() { return /* binding */ useGraphConfig; });

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__("KOBo");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__("RY7m");
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("q1tI");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ../xflow/es/index.js + 271 modules
var es = __webpack_require__("mqVf");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/objectSpread2.js
var objectSpread2 = __webpack_require__("BcGY");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-mini-map/demos/graph-options/mock.ts

 // NodeConfig

var NODE_COMMON_PROPS = {
  width: 160,
  height: 32
}; // NodeConfig

var EDGE_COMMON_PROPS = {
  attrs: {
    line: {
      targetMarker: {
        name: 'block',
        width: 4,
        height: 8
      },
      strokeDasharray: '',
      stroke: '#A2B1C3',
      strokeWidth: 1
    }
  }
}; // mock data

var getGraphData = () => {
  var nodes = [Object(objectSpread2["a" /* default */])({
    id: 'node1',
    label: '\u7B97\u6CD5\u8282\u70B9-1'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node2',
    label: '\u7B97\u6CD5\u8282\u70B9-2'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node3',
    label: '\u7B97\u6CD5\u8282\u70B9-3'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node4',
    label: '\u7B97\u6CD5\u8282\u70B9-4'
  }, NODE_COMMON_PROPS)];
  var edges = [Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node2',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node2-input-1'
  }, EDGE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node3',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node3-input-1'
  }, EDGE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node4',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node4-input-1'
  }, EDGE_COMMON_PROPS)];
  return {
    nodes: nodes,
    edges: edges
  };
};
// EXTERNAL MODULE: ../xflow/dist/index.css
var dist = __webpack_require__("1MRj");

// EXTERNAL MODULE: ./docs/tutorial/extension-components/canvas-mini-map/demos/graph-options/index.less
var graph_options = __webpack_require__("V4Po");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-mini-map/demos/graph-options/index.tsx



/**
 * title: minimapOptions
 * desc: \u901A\u8FC7minimapOptions\u914D\u7F6EminiMap, \u6240\u6709\u914D\u7F6E\u9879\u53C2\u8003X6\u6587\u6863\uFF1Ahttps://x6.antv.vision/zh/docs/api/graph/minimap/#enabled
 */





/**  Demo Props  */

/**  graphConfig\uFF1A\u914D\u7F6EGraph  */
var useGraphConfig = Object(es["M" /* createGraphConfig */])(graphConfig => {
  graphConfig.setDefaultNodeRender(props => {
    return /*#__PURE__*/react_default.a.createElement("div", {
      className: "react-node"
    }, " ", props.data.label, " ");
  });
});

var XFlowDemo = props => {
  var graphConfig = useGraphConfig(props);

  var onLoad = /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(app) {
      var res, _res$contextProvider$, graphData;

      return regenerator_default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_LAYOUT.id, {
                layoutType: 'dagre',
                layoutOptions: {
                  type: 'dagre',

                  /** \u5E03\u5C40\u65B9\u5411 */
                  rankdir: 'TB',

                  /** \u8282\u70B9\u95F4\u8DDD */
                  nodesep: 60,

                  /** \u5C42\u95F4\u8DDD */
                  ranksep: 30
                },
                graphData: getGraphData()
              });

            case 2:
              res = _context.sent;
              _res$contextProvider$ = res.contextProvider().getResult(), graphData = _res$contextProvider$.graphData; // render

              _context.next = 6;
              return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_RENDER.id, {
                graphData: graphData
              });

            case 6:
              _context.next = 8;
              return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_ZOOM.id, {
                factor: 'real'
              });

            case 8:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function onLoad(_x) {
      return _ref.apply(this, arguments);
    };
  }();

  return /*#__PURE__*/react_default.a.createElement(es["B" /* XFlow */], {
    onLoad: onLoad,
    className: "xflow-workspace"
  }, /*#__PURE__*/react_default.a.createElement(es["D" /* XFlowCanvas */], {
    config: graphConfig,
    position: {
      top: 0,
      bottom: 0,
      left: 0,
      right: 0
    }
  }, /*#__PURE__*/react_default.a.createElement(es["b" /* CanvasMiniMap */], {
    position: {
      top: 12,
      left: 12
    },
    minimapOptions: {
      width: 200,
      height: 200
    }
  })));
};

/* harmony default export */ var demos_graph_options = __webpack_exports__["default"] = (XFlowDemo);

//# sourceURL=webpack:///./docs/tutorial/extension-components/canvas-mini-map/demos/graph-options/index.tsx_+_1_modules?`)},Rt7r:function(module,__webpack_exports__,__webpack_require__){"use strict";eval(`// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "useGraphConfig", function() { return /* binding */ useGraphConfig; });

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__("KOBo");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__("RY7m");
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("q1tI");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ../xflow/es/index.js + 271 modules
var es = __webpack_require__("mqVf");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/PlusCircleOutlined.js + 1 modules
var PlusCircleOutlined = __webpack_require__("Uhj0");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/DeleteOutlined.js + 1 modules
var DeleteOutlined = __webpack_require__("UmCv");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/SaveOutlined.js + 1 modules
var SaveOutlined = __webpack_require__("GcFv");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/popconfirm/index.js
var popconfirm = __webpack_require__("NjSG");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-toolbar/demos/toolbar-render-item/toolbar-config.tsx







var NSToolbarConfig;

(function (_NSToolbarConfig) {
  /** \u6CE8\u518Cicon \u7C7B\u578B */
  es["q" /* IconStore */].set('PlusCircleOutlined', PlusCircleOutlined["a" /* default */]);
  es["q" /* IconStore */].set('DeleteOutlined', DeleteOutlined["a" /* default */]);
  es["q" /* IconStore */].set('SaveOutlined', SaveOutlined["a" /* default */]);

  var getToolbarItems = _NSToolbarConfig.getToolbarItems = /*#__PURE__*/Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee2() {
    var textToolbarGroup, iconToolbarGroup;
    return regenerator_default.a.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            textToolbarGroup = [];
            iconToolbarGroup = [];
            /** \u4FDD\u5B58\u6570\u636E */

            /** \u4FDD\u5B58\u6570\u636E */
            textToolbarGroup.push({
              id: es["J" /* XFlowNodeCommands */].MOVE_NODE.id + 'text only',
              text: '\u6DFB\u52A0\u8282\u70B9',
              tooltip: '\u6DFB\u52A0\u8282\u70B9\uFF0Ctext=\u6DFB\u52A0\u8282\u70B9, group1'
            });
            textToolbarGroup.push({
              id: es["J" /* XFlowNodeCommands */].MOVE_NODE.id + 'text',
              iconName: 'PlusCircleOutlined',
              text: '\u6DFB\u52A0\u8282\u70B9',
              tooltip: '\u6DFB\u52A0\u8282\u70B9\uFF0Ctext + iconName, group1 '
            });
            iconToolbarGroup.push({
              id: es["J" /* XFlowNodeCommands */].ADD_NODE.id + 'iconName',
              iconName: 'PlusCircleOutlined',
              tooltip: '\u6DFB\u52A0\u8282\u70B9\uFF0C\u53EA\u914D\u7F6E iconName=PlusCircleOutlined, group2  '
            });
            iconToolbarGroup.push({
              id: es["J" /* XFlowNodeCommands */].MOVE_NODE.id + 'tooltip',
              iconName: 'PlusCircleOutlined',
              tooltip: '\u6DFB\u52A0\u8282\u70B9\uFF0C tooltip \u914D\u7F6E, group2'
            });
            iconToolbarGroup.push({
              id: es["J" /* XFlowNodeCommands */].MOVE_NODE.id + 'disabled',
              iconName: 'PlusCircleOutlined',
              tooltip: '\u6DFB\u52A0\u8282\u70B9\uFF0C isEnabled=false, group2',
              isEnabled: false
            });
            iconToolbarGroup.push({
              id: es["J" /* XFlowNodeCommands */].MOVE_NODE.id + 'visible',
              iconName: 'PlusCircleOutlined',
              tooltip: '\u6DFB\u52A0\u8282\u70B9 isVisible=true, group2',
              isVisible: false
            });
            iconToolbarGroup.push({
              id: es["J" /* XFlowNodeCommands */].MOVE_NODE.id + 'active',
              iconName: 'PlusCircleOutlined',
              tooltip: '\u6DFB\u52A0\u8282\u70B9 active=true, group2',
              active: true
            });
            iconToolbarGroup.push({
              id: es["J" /* XFlowNodeCommands */].MOVE_NODE.id + 'custom render',
              iconName: 'PlusCircleOutlined',
              tooltip: '\u6DFB\u52A0\u8282\u70B9 \u81EA\u5B9A\u4E49\u6E32\u67D3\u6DFB\u52A0\u4E00\u4E2APopconfirm, group2',
              onClick: args => {
                console.log('toolbar onClick args', args);
              },
              render: props => {
                return /*#__PURE__*/react_default.a.createElement(popconfirm["a" /* default */], {
                  title: "are you sure",
                  onConfirm: () => {
                    props.onClick();
                  }
                }, props.children);
              }
            });
            return _context2.abrupt("return", [{
              name: 'textToolbarGroup',
              items: textToolbarGroup
            }, {
              name: 'iconToolbarGroup',
              items: iconToolbarGroup
            }]);

          case 11:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));

  var getExtraToolbarItems = _NSToolbarConfig.getExtraToolbarItems = /*#__PURE__*/Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee3() {
    var toolbarGroup;
    return regenerator_default.a.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            toolbarGroup = [];
            /** \u4FDD\u5B58\u6570\u636E */

            /** \u4FDD\u5B58\u6570\u636E */
            toolbarGroup.push({
              id: es["J" /* XFlowNodeCommands */].MOVE_NODE.id + 'text only',
              text: '\u6DFB\u52A0\u8282\u70B9',
              tooltip: '\u6DFB\u52A0\u8282\u70B9\uFF0C\u914D\u7F6EextraGroups'
            });
            return _context3.abrupt("return", [{
              name: 'extra',
              items: toolbarGroup
            }]);

          case 3:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  }));
})(NSToolbarConfig || (NSToolbarConfig = {}));

var useToolbarConfig = Object(es["Q" /* createToolbarConfig */])(toolbarConfig => {
  /** \u751F\u4EA7 toolbar item */
  toolbarConfig.setToolbarModelService( /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(toolbarModel) {
      var toolbarItems, extraToolbarItems;
      return regenerator_default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return NSToolbarConfig.getToolbarItems();

            case 2:
              toolbarItems = _context.sent;
              _context.next = 5;
              return NSToolbarConfig.getExtraToolbarItems();

            case 5:
              extraToolbarItems = _context.sent;
              toolbarModel.setValue(toolbar => {
                toolbar.mainGroups = toolbarItems;
                toolbar.extraGroups = extraToolbarItems;
              });

            case 7:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function (_x) {
      return _ref.apply(this, arguments);
    };
  }());
});
// EXTERNAL MODULE: ./docs/tutorial/extension-components/canvas-toolbar/demos/toolbar-render-item/index.less
var toolbar_render_item = __webpack_require__("TFew");

// EXTERNAL MODULE: ../xflow/dist/index.css
var dist = __webpack_require__("1MRj");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-toolbar/demos/toolbar-render-item/index.tsx



/**
 * title: \u5DE5\u5177\u680F\u914D\u7F6E
 * desc: \u652F\u6301text/iconName/tooltip/isEnable/isDisable/active/onClick/render\u5C5E\u6027\u6765\u914D\u7F6EToolbar
 */





/**  Demo Props  */

/**  graphConfig\uFF1A\u914D\u7F6EGraph  */
var useGraphConfig = Object(es["M" /* createGraphConfig */])(graphConfig => {
  graphConfig.setDefaultNodeRender(props => {
    return /*#__PURE__*/react_default.a.createElement("div", {
      className: "react-node"
    }, " ", props.data.label, " ");
  });
});

var XFlowDemo = props => {
  var graphConfig = useGraphConfig(props);
  var toolbarConfig = useToolbarConfig(props);

  var onLoad = /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(app) {
      return regenerator_default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              console.log(app);

            case 1:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function onLoad(_x) {
      return _ref.apply(this, arguments);
    };
  }();

  return /*#__PURE__*/react_default.a.createElement(es["B" /* XFlow */], {
    onLoad: onLoad,
    className: "xflow-workspace"
  }, /*#__PURE__*/react_default.a.createElement(es["f" /* CanvasToolbar */], {
    layout: "horizontal",
    config: toolbarConfig,
    position: {
      top: 0,
      left: 0,
      right: 0,
      height: 40
    }
  }), /*#__PURE__*/react_default.a.createElement(es["D" /* XFlowCanvas */], {
    config: graphConfig,
    position: {
      top: 40,
      bottom: 0,
      left: 0,
      right: 0
    }
  }));
};

/* harmony default export */ var demos_toolbar_render_item = __webpack_exports__["default"] = (XFlowDemo);

//# sourceURL=webpack:///./docs/tutorial/extension-components/canvas-toolbar/demos/toolbar-render-item/index.tsx_+_1_modules?`)},S1za:function(module,__webpack_exports__,__webpack_require__){"use strict";eval(`// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "useGraphConfig", function() { return /* binding */ useGraphConfig; });

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/objectSpread2.js
var objectSpread2 = __webpack_require__("BcGY");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__("KOBo");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__("RY7m");
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("q1tI");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ../xflow/es/index.js + 271 modules
var es = __webpack_require__("mqVf");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/lodash/lodash.js
var lodash = __webpack_require__("nsO7");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-config-form/demos/custom-render/mock.ts

 // NodeConfig

var NODE_COMMON_PROPS = {
  width: 160,
  height: 32
}; // NodeConfig

var EDGE_COMMON_PROPS = {
  attrs: {
    line: {
      targetMarker: {
        name: 'block',
        width: 4,
        height: 8
      },
      strokeDasharray: '',
      stroke: '#A2B1C3',
      strokeWidth: 1
    }
  }
}; // mock data

var getGraphData = () => {
  var nodes = [Object(objectSpread2["a" /* default */])({
    id: 'node1',
    label: '\u7B97\u6CD5\u8282\u70B9-1'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node2',
    label: '\u7B97\u6CD5\u8282\u70B9-2'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node3',
    label: '\u7B97\u6CD5\u8282\u70B9-3'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node4',
    label: '\u7B97\u6CD5\u8282\u70B9-4'
  }, NODE_COMMON_PROPS)];
  var edges = [Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node2',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node2-input-1'
  }, EDGE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node3',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node3-input-1'
  }, EDGE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node4',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node4-input-1'
  }, EDGE_COMMON_PROPS)];
  return {
    nodes: nodes,
    edges: edges
  };
};
// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-config-form/demos/custom-render/graph-config.tsx




var onLoad = /*#__PURE__*/function () {
  var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(app) {
    var res, _res$contextProvider$, graphData;

    return regenerator_default.a.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_LAYOUT.id, {
              layoutType: 'dagre',
              layoutOptions: {
                type: 'dagre',

                /** \u5E03\u5C40\u65B9\u5411 */
                rankdir: 'TB',

                /** \u8282\u70B9\u95F4\u8DDD */
                nodesep: 60,

                /** \u5C42\u95F4\u8DDD */
                ranksep: 30
              },
              graphData: getGraphData()
            });

          case 2:
            res = _context.sent;
            _res$contextProvider$ = res.contextProvider().getResult(), graphData = _res$contextProvider$.graphData; // render

            _context.next = 6;
            return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_RENDER.id, {
              graphData: graphData
            });

          case 6:
            _context.next = 8;
            return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_ZOOM.id, {
              factor: 'real'
            });

          case 8:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function onLoad(_x) {
    return _ref.apply(this, arguments);
  };
}();
// EXTERNAL MODULE: ../xflow/dist/index.css
var dist = __webpack_require__("1MRj");

// EXTERNAL MODULE: ./docs/tutorial/extension-components/canvas-config-form/demos/custom-render/index.less
var custom_render = __webpack_require__("CSKL");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-config-form/demos/custom-render/index.tsx




/**
 * title: \u81EA\u5B9A\u4E49\u6E32\u67D3
 * desc: |
 *   \u652F\u6301\u4F7F\u7528\u81EA\u5B9A\u4E49\u6E32\u67D3\u6765\u652F\u6301\u66F4\u590D\u6742\u7684\u4E1A\u52A1\u573A\u666F <br>
 *   \u914D\u7F6E\u4E00\u4E2A\u51FD\u6570\u51B3\u5B9A\u662F\u5426\u7528\u81EA\u5B9A\u4E49\u7EC4\u4EF6\u4EE3\u66FFform\u7684\u6E32\u67D3 <br>
 */






/**  Demo Props  */

/**  graphConfig\uFF1A\u914D\u7F6EGraph  */
var useGraphConfig = Object(es["M" /* createGraphConfig */])(graphConfig => {
  graphConfig.setDefaultNodeRender(props => {
    return /*#__PURE__*/react_default.a.createElement("div", {
      className: "react-node"
    }, " ", props.data.label, " ");
  });
});
var NsJsonForm;

(function (_NsJsonForm) {
  /** ControlShape\u7684Enum */
  var ControlShape = es["z" /* NsJsonSchemaForm */].ControlShape;
  /** \u4FDD\u5B58form\u7684values */

  var formValueUpdateService = _NsJsonForm.formValueUpdateService = /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(args) {
      var values, commandService, targetData, updateNode, nodeConfig;
      return regenerator_default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              values = args.values, commandService = args.commandService, targetData = args.targetData;

              updateNode = node => {
                return commandService.executeCommand(es["J" /* XFlowNodeCommands */].UPDATE_NODE.id, {
                  nodeConfig: node
                });
              };

              console.log('formValueUpdateService  values:', values);
              nodeConfig = Object(objectSpread2["a" /* default */])({}, targetData);
              values.forEach(val => {
                Object(lodash["set"])(nodeConfig, val.name, val.value);
              });
              updateNode(nodeConfig);

            case 6:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function (_x) {
      return _ref.apply(this, arguments);
    };
  }();

  var getCustomRenderComponent = _NsJsonForm.getCustomRenderComponent = (targetType, targetData) => {
    console.log(targetType, targetData);

    if (targetType === 'node') {
      return () => /*#__PURE__*/react_default.a.createElement("div", {
        className: "custom-form-component"
      }, " node: ", targetData.label, " custom componnet ");
    }

    if (targetType === 'canvas') {
      return () => /*#__PURE__*/react_default.a.createElement("div", {
        className: "custom-form-component"
      }, " canvas custom componnet ");
    }
  };

  var formSchemaService = _NsJsonForm.formSchemaService = /*#__PURE__*/function () {
    var _ref2 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee2(args) {
      var targetData;
      return regenerator_default.a.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              targetData = args.targetData;
              console.log("formSchemaService args:", args);

              if (targetData) {
                _context2.next = 4;
                break;
              }

              return _context2.abrupt("return", {
                tabs: [{
                  /** Tab\u7684title */
                  name: '\u753B\u5E03\u914D\u7F6E',
                  groups: []
                }]
              });

            case 4:
              return _context2.abrupt("return", {
                /** \u914D\u7F6E\u4E00\u4E2ATab */
                tabs: [{
                  /** Tab\u7684title */
                  name: '\u8282\u70B9\u914D\u7F6E',
                  groups: [{
                    name: 'group1',
                    controls: [{
                      name: 'label',
                      label: '\u8282\u70B9Label',
                      shape: ControlShape.INPUT,
                      value: targetData.label
                    }, {
                      name: 'x',
                      label: 'x',
                      shape: ControlShape.FLOAT,
                      value: targetData.x
                    }, {
                      name: 'y',
                      label: 'y',
                      shape: ControlShape.FLOAT,
                      value: targetData.y
                    }]
                  }]
                }]
              });

            case 5:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    }));

    return function (_x2) {
      return _ref2.apply(this, arguments);
    };
  }();
})(NsJsonForm || (NsJsonForm = {}));

var XFlowDemo = props => {
  var graphConfig = useGraphConfig(props);
  return /*#__PURE__*/react_default.a.createElement(es["B" /* XFlow */], {
    onLoad: onLoad,
    className: "xflow-workspace"
  }, /*#__PURE__*/react_default.a.createElement(es["D" /* XFlowCanvas */], {
    config: graphConfig,
    position: {
      top: 0,
      bottom: 0,
      left: 0,
      right: 290
    }
  }), /*#__PURE__*/react_default.a.createElement(es["r" /* JsonSchemaForm */], {
    formSchemaService: NsJsonForm.formSchemaService,
    getCustomRenderComponent: NsJsonForm.getCustomRenderComponent,
    position: {
      top: 0,
      bottom: 0,
      right: 0,
      width: 290
    }
  }));
};

/* harmony default export */ var demos_custom_render = __webpack_exports__["default"] = (XFlowDemo);

//# sourceURL=webpack:///./docs/tutorial/extension-components/canvas-config-form/demos/custom-render/index.tsx_+_2_modules?`)},TBvq:function(module,__webpack_exports__,__webpack_require__){"use strict";eval(`// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "useGraphConfig", function() { return /* binding */ useGraphConfig; });
__webpack_require__.d(__webpack_exports__, "useKeybindingConfig", function() { return /* binding */ useKeybindingConfig; });

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/objectSpread2.js
var objectSpread2 = __webpack_require__("BcGY");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__("KOBo");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__("RY7m");
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("q1tI");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ../xflow/es/index.js + 271 modules
var es = __webpack_require__("mqVf");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-keybinding/demos/command/mock.ts

 // NodeConfig

var NODE_COMMON_PROPS = {
  width: 160,
  height: 32
}; // NodeConfig

var EDGE_COMMON_PROPS = {
  attrs: {
    line: {
      targetMarker: {
        name: 'block',
        width: 4,
        height: 8
      },
      strokeDasharray: '',
      stroke: '#A2B1C3',
      strokeWidth: 1
    }
  }
}; // mock data

var getGraphData = () => {
  var nodes = [Object(objectSpread2["a" /* default */])({
    id: 'node1',
    label: '\u7B97\u6CD5\u8282\u70B9-1'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node2',
    label: '\u7B97\u6CD5\u8282\u70B9-2'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node3',
    label: '\u7B97\u6CD5\u8282\u70B9-3'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node4',
    label: '\u7B97\u6CD5\u8282\u70B9-4'
  }, NODE_COMMON_PROPS)];
  var edges = [Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node2',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node2-input-1'
  }, EDGE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node3',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node3-input-1'
  }, EDGE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node4',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node4-input-1'
  }, EDGE_COMMON_PROPS)];
  return {
    nodes: nodes,
    edges: edges
  };
};
// EXTERNAL MODULE: ./docs/tutorial/extension-components/canvas-keybinding/demos/command/index.less
var command = __webpack_require__("bIaT");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-keybinding/demos/command/index.tsx




/**
 * title: \u89E6\u53D1Command\u547D\u4EE4
 * desc:  \u901A\u8FC7\u8C03\u7528Command\u547D\u4EE4\u53EF\u4EE5\u5B9E\u73B0\u5BF9\u56FE\u7684\u4EA4\u4E92:\u5220\u9664(backspace)/\u590D\u5236(ctrl+c)/\u7C98\u8D34(ctrl+v)
 */





/**  graphConfig\uFF1A\u914D\u7F6EGraph  */
var useGraphConfig = Object(es["M" /* createGraphConfig */])(graphConfig => {
  graphConfig.setDefaultNodeRender(props => {
    return /*#__PURE__*/react_default.a.createElement("div", {
      className: "react-node"
    }, " ", props.data.label, " ");
  });
});
/**  keybindings  */

var useKeybindingConfig = Object(es["O" /* createKeybindingConfig */])((config, getProps) => {
  config.setKeybindingFunc(reg => {
    return reg.registerKeybinding([{
      id: 'delete node or edge',
      keybinding: 'backspace',
      callback: function () {
        var _callback = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(item, modelService, cmd, e) {
          var cells, nodes, edges, delEdge, delNode;
          return regenerator_default.a.wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  _context.next = 2;
                  return es["t" /* MODELS */].SELECTED_CELLS.useValue(modelService);

                case 2:
                  cells = _context.sent;
                  nodes = cells.filter(cell => cell.isEdge());
                  edges = cells.filter(cell => cell.isNode()); // \u8C03\u7528\u5220\u9664Edge\u7684Command

                  delEdge = cell => {
                    return cmd.executeCommand(es["G" /* XFlowEdgeCommands */].DEL_EDGE.id, {
                      edgeConfig: Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({}, cell.getData()), {}, {
                        id: cell.id
                      })
                    });
                  }; // \u8C03\u7528\u5220\u9664Node\u7684Command


                  delNode = cell => {
                    return cmd.executeCommand(es["J" /* XFlowNodeCommands */].DEL_NODE.id, {
                      nodeConfig: Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({}, cell.getData()), {}, {
                        id: cell.id
                      })
                    });
                  };

                  if (cells.length === 0) {
                    console.warn('\u6CA1\u6709\u9009\u4E2D\u7684\u8282\u70B9');
                  } // \u5148\u5220\u9664edges


                  _context.next = 10;
                  return Promise.all(nodes.map(cell => delEdge(cell)));

                case 10:
                  _context.next = 12;
                  return Promise.all(edges.map(cell => delNode(cell)));

                case 12:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee);
        }));

        function callback(_x, _x2, _x3, _x4) {
          return _callback.apply(this, arguments);
        }

        return callback;
      }()
    }, {
      id: 'copy',
      keybinding: ['command+c', 'ctrl+c'],
      callback: function () {
        var _callback2 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee2(item, modelService, cmd, e) {
          return regenerator_default.a.wrap(function _callee2$(_context2) {
            while (1) {
              switch (_context2.prev = _context2.next) {
                case 0:
                  e.preventDefault();
                  console.log(item);
                  cmd.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_COPY.id, {});

                case 3:
                case "end":
                  return _context2.stop();
              }
            }
          }, _callee2);
        }));

        function callback(_x5, _x6, _x7, _x8) {
          return _callback2.apply(this, arguments);
        }

        return callback;
      }()
    }, {
      id: 'paste',
      keybinding: ['command+v', 'ctrl+v'],
      callback: function () {
        var _callback3 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee3(item, modelService, cmd, e) {
          return regenerator_default.a.wrap(function _callee3$(_context3) {
            while (1) {
              switch (_context3.prev = _context3.next) {
                case 0:
                  e.preventDefault();
                  cmd.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_PASTE.id, {});

                case 2:
                case "end":
                  return _context3.stop();
              }
            }
          }, _callee3);
        }));

        function callback(_x9, _x10, _x11, _x12) {
          return _callback3.apply(this, arguments);
        }

        return callback;
      }()
    }]);
  });
});

var XFlowDemo = props => {
  var graphConfig = useGraphConfig(props);
  var keybindingConfig = useKeybindingConfig(props);

  var onLoad = /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee4(app) {
      var res, _res$contextProvider$, graphData;

      return regenerator_default.a.wrap(function _callee4$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              _context4.next = 2;
              return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_LAYOUT.id, {
                layoutType: 'dagre',
                layoutOptions: {
                  type: 'dagre',

                  /** \u5E03\u5C40\u65B9\u5411 */
                  rankdir: 'TB',

                  /** \u8282\u70B9\u95F4\u8DDD */
                  nodesep: 60,

                  /** \u5C42\u95F4\u8DDD */
                  ranksep: 30
                },
                graphData: getGraphData()
              });

            case 2:
              res = _context4.sent;
              _res$contextProvider$ = res.contextProvider().getResult(), graphData = _res$contextProvider$.graphData; // render

              _context4.next = 6;
              return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_RENDER.id, {
                graphData: graphData
              });

            case 6:
              _context4.next = 8;
              return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_ZOOM.id, {
                factor: 'real'
              });

            case 8:
            case "end":
              return _context4.stop();
          }
        }
      }, _callee4);
    }));

    return function onLoad(_x13) {
      return _ref.apply(this, arguments);
    };
  }();

  return /*#__PURE__*/react_default.a.createElement(es["B" /* XFlow */], {
    onLoad: onLoad,
    className: "xflow-workspace"
  }, /*#__PURE__*/react_default.a.createElement(es["D" /* XFlowCanvas */], {
    config: graphConfig,
    position: {
      top: 0,
      bottom: 0,
      left: 0,
      right: 0
    }
  }, /*#__PURE__*/react_default.a.createElement(es["s" /* KeyBindings */], {
    config: keybindingConfig
  })));
};

/* harmony default export */ var demos_command = __webpack_exports__["default"] = (XFlowDemo);

//# sourceURL=webpack:///./docs/tutorial/extension-components/canvas-keybinding/demos/command/index.tsx_+_1_modules?`)},W3ZF:function(module,__webpack_exports__,__webpack_require__){"use strict";eval(`// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "useGraphConfig", function() { return /* binding */ useGraphConfig; });

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__("KOBo");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__("RY7m");
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("q1tI");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ../xflow/es/index.js + 271 modules
var es = __webpack_require__("mqVf");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 3 modules
var slicedToArray = __webpack_require__("jem/");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/input/index.js + 11 modules
var input = __webpack_require__("BmDy");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/form/index.js + 15 modules
var es_form = __webpack_require__("UL5a");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/message/index.js + 3 modules
var message = __webpack_require__("DuHN");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/button/index.js
var es_button = __webpack_require__("SCaQ");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/card/index.js + 2 modules
var card = __webpack_require__("jMRu");

// CONCATENATED MODULE: ./docs/api/commands/nodes/node-delete/demos/form.tsx







var width = 100;
var height = 40;
var formItems = [{
  name: 'id',
  label: 'node id',
  rules: [{
    required: true
  }],
  render: input["a" /* default */],
  renderProps: {
    disabled: true
  }
}, {
  name: 'nodeConfig',
  label: 'nodeConfig',
  rules: [{
    required: true
  }],
  render: input["a" /* default */].TextArea,
  renderProps: {
    rows: 5,
    disabled: true
  }
}];
var CmdForm = () => {
  var app = Object(es["W" /* useXFlowApp */])();

  var _Form$useForm = es_form["a" /* default */].useForm(),
      _Form$useForm2 = Object(slicedToArray["a" /* default */])(_Form$useForm, 1),
      form = _Form$useForm2[0];

  var _useModelAsync = Object(es["U" /* useModelAsync */])({
    getModel: function () {
      var _getModel = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee() {
        return regenerator_default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt("return", es["t" /* MODELS */].SELECTED_NODE.getModel(app.modelService));

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      function getModel() {
        return _getModel.apply(this, arguments);
      }

      return getModel;
    }(),
    initialState: null
  }),
      _useModelAsync2 = Object(slicedToArray["a" /* default */])(_useModelAsync, 1),
      selectNode = _useModelAsync2[0];

  react_default.a.useEffect(() => {
    if (selectNode) {
      var node = selectNode.getData();
      form.setFieldsValue({
        id: node.id,
        nodeConfig: JSON.stringify(node)
      });
    }
  }, [form, selectNode]);

  var onFinish = /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee2(values) {
      return regenerator_default.a.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              app.commandService.executeCommand(es["J" /* XFlowNodeCommands */].DEL_NODE.id, {
                nodeConfig: JSON.parse(values.nodeConfig)
              });
              form.setFieldsValue({
                id: null,
                nodeConfig: null
              });
              message["b" /* default */].success("".concat(es["J" /* XFlowNodeCommands */].DEL_NODE.label, ": \\u547D\\u4EE4\\u6267\\u884C\\u6210\\u529F"));

            case 3:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    }));

    return function onFinish(_x) {
      return _ref.apply(this, arguments);
    };
  }();

  return /*#__PURE__*/react_default.a.createElement(es["n" /* FormBuilder */], {
    layout: "vertical",
    form: form,
    formItems: formItems,
    onFinish: onFinish,
    initialValues: {
      id: null,
      nodeConfig: null
    },
    submitButton: /*#__PURE__*/react_default.a.createElement(es_button["a" /* default */], {
      type: "primary",
      htmlType: "submit",
      style: {
        width: '100%'
      },
      disabled: !selectNode
    }, "\\u9009\\u4E2D\\u8282\\u70B9\\u6267\\u884C\\u547D\\u4EE4")
  });
};
var FormPanel = () => {
  return /*#__PURE__*/react_default.a.createElement(es["A" /* WorkspacePanel */], {
    position: {
      top: 0,
      left: 0,
      bottom: 0,
      width: 230
    },
    className: "panel"
  }, /*#__PURE__*/react_default.a.createElement(card["a" /* default */], {
    title: "NodeConfig Options",
    size: "small",
    bordered: false
  }, /*#__PURE__*/react_default.a.createElement(CmdForm, null)));
};
// EXTERNAL MODULE: ./docs/api/commands/nodes/node-delete/demos/index.less
var demos = __webpack_require__("HbMZ");

// CONCATENATED MODULE: ./docs/api/commands/nodes/node-delete/demos/index.tsx






/**  graphConfig hook  */

var useGraphConfig = Object(es["M" /* createGraphConfig */])(graphConfig => {
  graphConfig.setX6Config({
    grid: true
  });
  graphConfig.setDefaultNodeRender(props => {
    return /*#__PURE__*/react_default.a.createElement("div", {
      className: "react-node"
    }, " ", props.data.label, " ");
  });
});

var NodeAddDemo = () => {
  var graphConfig = useGraphConfig();

  var onLoad = /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(app) {
      return regenerator_default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              app.executeCommand(es["J" /* XFlowNodeCommands */].ADD_NODE.id, {
                nodeConfig: {
                  id: 'node1',
                  x: 100,
                  y: 30,
                  label: 'Hello World 1',
                  width: width,
                  height: height
                }
              });
              app.executeCommand(es["J" /* XFlowNodeCommands */].ADD_NODE.id, {
                nodeConfig: {
                  id: 'node2',
                  x: 50,
                  y: 150,
                  label: 'Hello World 2',
                  width: width,
                  height: height
                }
              });
              app.executeCommand(es["J" /* XFlowNodeCommands */].ADD_NODE.id, {
                nodeConfig: {
                  id: 'node3',
                  x: 200,
                  y: 150,
                  label: 'Hello World 3',
                  width: width,
                  height: height
                }
              });
              return _context.abrupt("return", app);

            case 4:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function onLoad(_x) {
      return _ref.apply(this, arguments);
    };
  }();

  return /*#__PURE__*/react_default.a.createElement(es["B" /* XFlow */], {
    onLoad: onLoad,
    className: "xflow-workspace"
  }, /*#__PURE__*/react_default.a.createElement(FormPanel, null), /*#__PURE__*/react_default.a.createElement(es["D" /* XFlowCanvas */], {
    className: "app-main-content",
    config: graphConfig,
    position: {
      top: 0,
      left: 230,
      right: 0,
      bottom: 0
    }
  }));
};

/* harmony default export */ var node_delete_demos = __webpack_exports__["default"] = (NodeAddDemo);

//# sourceURL=webpack:///./docs/api/commands/nodes/node-delete/demos/index.tsx_+_1_modules?`)},W4te:function(module,__webpack_exports__,__webpack_require__){"use strict";eval(`__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useGraphConfig", function() { return useGraphConfig; });
/* harmony import */ var _Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("KOBo");
/* harmony import */ var _Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("RY7m");
/* harmony import */ var _Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("q1tI");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _antv_xflow__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("mqVf");
/* harmony import */ var _index_less__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("wE9M");
/* harmony import */ var _index_less__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_index_less__WEBPACK_IMPORTED_MODULE_4__);






var useGraphConfig = Object(_antv_xflow__WEBPACK_IMPORTED_MODULE_3__[/* createGraphConfig */ "M"])(config => {
  config.setX6Config({
    grid: true
  });
  config.setNodeRender('NODE1', props => {
    var _props$data;

    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("div", {
      className: "react-node"
    }, (_props$data = props.data) === null || _props$data === void 0 ? void 0 : _props$data.info);
  });
});
var appRef;

var Demo = () => {
  var onLoad = /*#__PURE__*/function () {
    var _ref = Object(_Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])( /*#__PURE__*/_Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee(app) {
      var nodes, edges, graphData, graphInstance;
      return _Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              appRef = app;
              nodes = [{
                id: 'root1',
                x: 200,
                y: 50,
                width: 120,
                height: 40,
                renderKey: 'NODE1',
                info: 'React\u8282\u70B91'
              }, {
                id: 'down1',
                x: 550,
                y: 50,
                width: 120,
                height: 40,
                renderKey: 'NODE1',
                info: 'React\u8282\u70B92'
              }, {
                id: 'down2',
                x: 550,
                y: 150,
                width: 120,
                height: 40,
                renderKey: 'NODE1',
                info: 'React\u8282\u70B92'
              }];
              edges = [{
                id: 'root1-down1',
                source: 'root1',
                target: 'down1',
                label: '1:N'
              }, {
                id: 'root1-down2',
                source: 'root1',
                target: 'down2',
                label: 'N:N'
              }];
              graphData = {
                nodes,
                edges
              };
              app.executeCommand(_antv_xflow__WEBPACK_IMPORTED_MODULE_3__[/* XFlowGraphCommands */ "H"].GRAPH_RENDER.id, {
                graphData
              });
              _context.next = 7;
              return app.getGraphInstance();

            case 7:
              graphInstance = _context.sent;
              graphInstance.on('edge:click', _ref2 => {
                var edge = _ref2.edge;
                var edgeData = edge === null || edge === void 0 ? void 0 : edge.getData();
                app.executeCommand(_antv_xflow__WEBPACK_IMPORTED_MODULE_3__[/* XFlowEdgeCommands */ "G"].HIGHLIGHT_EDGE.id, {
                  edgeId: edgeData.id,
                  strokeColor: '#873bf4',
                  strokeWidth: 4
                });
              });

            case 9:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function onLoad(_x) {
      return _ref.apply(this, arguments);
    };
  }();

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_antv_xflow__WEBPACK_IMPORTED_MODULE_3__[/* XFlow */ "B"], {
    onLoad: onLoad,
    className: "xflow-edge-highlight-demo"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("div", {
    className: "btn"
  }, '\u8BF7\u7528\u9F20\u6807\u70B9\u51FB\u8FDE\u7EBF, \u4F1A\u89E6\u53D1\u8FDE\u7EBF\u9AD8\u4EAE'), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_antv_xflow__WEBPACK_IMPORTED_MODULE_3__[/* XFlowCanvas */ "D"], {
    config: useGraphConfig()
  }));
};

/* harmony default export */ __webpack_exports__["default"] = (Demo);

//# sourceURL=webpack:///./docs/api/commands/edges/edge-highlight/demos/index.tsx?`)},WuEN:function(module,__webpack_exports__,__webpack_require__){"use strict";eval(`// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "useGraphConfig", function() { return /* binding */ useGraphConfig; });
__webpack_require__.d(__webpack_exports__, "useKeybindingConfig", function() { return /* binding */ useKeybindingConfig; });

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__("KOBo");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__("RY7m");
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("q1tI");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ../xflow/es/index.js + 271 modules
var es = __webpack_require__("mqVf");

// EXTERNAL MODULE: ../xflow/dist/index.css
var dist = __webpack_require__("1MRj");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/objectSpread2.js
var objectSpread2 = __webpack_require__("BcGY");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-keybinding/demos/basic/mock.ts

 // NodeConfig

var NODE_COMMON_PROPS = {
  width: 160,
  height: 32
}; // NodeConfig

var EDGE_COMMON_PROPS = {
  attrs: {
    line: {
      targetMarker: {
        name: 'block',
        width: 4,
        height: 8
      },
      strokeDasharray: '',
      stroke: '#A2B1C3',
      strokeWidth: 1
    }
  }
}; // mock data

var getGraphData = () => {
  var nodes = [Object(objectSpread2["a" /* default */])({
    id: 'node1',
    label: '\u7B97\u6CD5\u8282\u70B9-1'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node2',
    label: '\u7B97\u6CD5\u8282\u70B9-2'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node3',
    label: '\u7B97\u6CD5\u8282\u70B9-3'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node4',
    label: '\u7B97\u6CD5\u8282\u70B9-4'
  }, NODE_COMMON_PROPS)];
  var edges = [Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node2',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node2-input-1'
  }, EDGE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node3',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node3-input-1'
  }, EDGE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node4',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node4-input-1'
  }, EDGE_COMMON_PROPS)];
  return {
    nodes: nodes,
    edges: edges
  };
};
// EXTERNAL MODULE: ./docs/tutorial/extension-components/canvas-keybinding/demos/basic/index.less
var basic = __webpack_require__("FGph");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-keybinding/demos/basic/index.tsx



/**
 * title: \u57FA\u7840\u4F7F\u7528
 * desc:  \u901A\u8FC7keybinding\u5B57\u6BB5\u914D\u7F6E\u952E\u76D8\u7684\u5FEB\u6377\u952E\uFF1Ahttps://craig.is/killing/mice
 */





/**  Demo Props  */

/**  graphConfig\uFF1A\u914D\u7F6EGraph  */
var useGraphConfig = Object(es["M" /* createGraphConfig */])(graphConfig => {
  graphConfig.setDefaultNodeRender(props => {
    return /*#__PURE__*/react_default.a.createElement("div", {
      className: "react-node"
    }, " ", props.data.label, " ");
  });
});
/**  keybindings  */

var useKeybindingConfig = Object(es["O" /* createKeybindingConfig */])(config => {
  config.setKeybindingFunc(reg => {
    return reg.registerKeybinding([{
      id: 'basic',
      keybinding: ['command+c', 'ctrl+c'],
      callback: function () {
        var _callback = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(item, modelService, cmd, e) {
          return regenerator_default.a.wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  console.log('keyboard event is triggered', e);

                case 1:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee);
        }));

        function callback(_x, _x2, _x3, _x4) {
          return _callback.apply(this, arguments);
        }

        return callback;
      }()
    }]);
  });
});

var XFlowDemo = props => {
  var graphConfig = useGraphConfig(props);
  var keybindingConfig = useKeybindingConfig(props);

  var onLoad = /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee2(app) {
      var res, _res$contextProvider$, graphData;

      return regenerator_default.a.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              _context2.next = 2;
              return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_LAYOUT.id, {
                layoutType: 'dagre',
                layoutOptions: {
                  type: 'dagre',

                  /** \u5E03\u5C40\u65B9\u5411 */
                  rankdir: 'TB',

                  /** \u8282\u70B9\u95F4\u8DDD */
                  nodesep: 60,

                  /** \u5C42\u95F4\u8DDD */
                  ranksep: 30
                },
                graphData: getGraphData()
              });

            case 2:
              res = _context2.sent;
              _res$contextProvider$ = res.contextProvider().getResult(), graphData = _res$contextProvider$.graphData; // render

              _context2.next = 6;
              return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_RENDER.id, {
                graphData: graphData
              });

            case 6:
              _context2.next = 8;
              return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_ZOOM.id, {
                factor: 'real'
              });

            case 8:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    }));

    return function onLoad(_x5) {
      return _ref.apply(this, arguments);
    };
  }();

  return /*#__PURE__*/react_default.a.createElement(es["B" /* XFlow */], {
    onLoad: onLoad,
    className: "xflow-workspace"
  }, /*#__PURE__*/react_default.a.createElement(es["D" /* XFlowCanvas */], {
    config: graphConfig,
    position: {
      top: 0,
      bottom: 0,
      left: 0,
      right: 0
    }
  }, /*#__PURE__*/react_default.a.createElement(es["s" /* KeyBindings */], {
    config: keybindingConfig
  })));
};

/* harmony default export */ var demos_basic = __webpack_exports__["default"] = (XFlowDemo);

//# sourceURL=webpack:///./docs/tutorial/extension-components/canvas-keybinding/demos/basic/index.tsx_+_1_modules?`)},XVLT:function(module,__webpack_exports__,__webpack_require__){"use strict";eval(`// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("q1tI");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ../xflow/es/index.js + 271 modules
var es = __webpack_require__("mqVf");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/objectSpread2.js
var objectSpread2 = __webpack_require__("BcGY");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__("KOBo");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 3 modules
var slicedToArray = __webpack_require__("jem/");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__("RY7m");
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/input/index.js + 11 modules
var input = __webpack_require__("BmDy");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/form/index.js + 15 modules
var es_form = __webpack_require__("UL5a");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/message/index.js + 3 modules
var message = __webpack_require__("DuHN");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/button/index.js
var es_button = __webpack_require__("SCaQ");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/card/index.js + 2 modules
var card = __webpack_require__("jMRu");

// CONCATENATED MODULE: ./docs/api/commands/group/group-del/demos/form.tsx








var formItems = [{
  name: 'id',
  label: 'id',
  rules: [{
    required: true
  }],
  renderProps: {
    disabled: true
  },
  render: input["a" /* default */]
}];
var CmdForm = () => {
  var app = Object(es["W" /* useXFlowApp */])();

  var _Form$useForm = es_form["a" /* default */].useForm(),
      _Form$useForm2 = Object(slicedToArray["a" /* default */])(_Form$useForm, 1),
      form = _Form$useForm2[0];

  var _React$useState = react_default.a.useState(false),
      _React$useState2 = Object(slicedToArray["a" /* default */])(_React$useState, 2),
      hasGroup = _React$useState2[0],
      setGroup = _React$useState2[1];

  react_default.a.useEffect(() => {
    var setFormValue = /*#__PURE__*/function () {
      var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee() {
        var graph, nodes;
        return regenerator_default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return Object(es["R" /* delay */])(1000);

              case 2:
                _context.next = 4;
                return app.getGraphInstance();

              case 4:
                graph = _context.sent;
                nodes = graph.getCells().filter(c => c.getProp('isGroup'));
                console.log(nodes, graph.getCells());

                if (nodes[0]) {
                  form.setFieldsValue({
                    id: nodes[0].id
                  });
                }

              case 8:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      return function setFormValue() {
        return _ref.apply(this, arguments);
      };
    }();

    setFormValue();
  }, [app, form]);

  var onFinish = /*#__PURE__*/function () {
    var _ref2 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee2(values) {
      var nodeConfig;
      return regenerator_default.a.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              nodeConfig = Object(objectSpread2["a" /* default */])({}, values);
              setGroup(true);
              console.log(nodeConfig);
              _context2.next = 5;
              return app.commandService.executeCommand(es["I" /* XFlowGroupCommands */].DEL_GROUP.id, {
                nodeConfig: nodeConfig
              });

            case 5:
              message["b" /* default */].success("".concat(es["I" /* XFlowGroupCommands */].DEL_GROUP.label, ": \\u547D\\u4EE4\\u6267\\u884C\\u6210\\u529F"));

            case 6:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    }));

    return function onFinish(_x) {
      return _ref2.apply(this, arguments);
    };
  }();

  return /*#__PURE__*/react_default.a.createElement(es["n" /* FormBuilder */], {
    form: form,
    formItems: formItems,
    onFinish: onFinish,
    initialValues: {
      id: null
    },
    submitButton: /*#__PURE__*/react_default.a.createElement(es_button["a" /* default */], {
      type: "primary",
      htmlType: "submit",
      style: {
        width: '100%'
      },
      disabled: hasGroup
    }, "\\u6267\\u884C\\u547D\\u4EE4")
  });
};
var FormPanel = () => {
  return /*#__PURE__*/react_default.a.createElement(es["A" /* WorkspacePanel */], {
    position: {
      top: 0,
      left: 0,
      bottom: 0,
      width: 230
    },
    className: "panel"
  }, /*#__PURE__*/react_default.a.createElement(card["a" /* default */], {
    title: "Group Options",
    size: "small",
    bordered: false
  }, /*#__PURE__*/react_default.a.createElement(CmdForm, null)));
};
// CONCATENATED MODULE: ./docs/api/commands/group/group-del/demos/constant.ts
var DND_NODE_RENDER_ID = 'DND_NDOE';
var GROUP_NODE_RENDER_ID = 'GROUP_NODE_RENDER_ID';
var GROUP_COLLAPSED_SIZE = {
  width: 160,
  height: 40
};
// EXTERNAL MODULE: ./docs/api/commands/group/group-del/demos/react-node/index.less
var react_node = __webpack_require__("0JH4");

// CONCATENATED MODULE: ./docs/api/commands/group/group-del/demos/react-node/index.tsx


var DndNode = props => {
  return /*#__PURE__*/react_default.a.createElement("div", {
    className: "xflow-dnd-node"
  }, props.data.label);
};
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/PlusSquareOutlined.js + 1 modules
var PlusSquareOutlined = __webpack_require__("29vH");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/MinusSquareOutlined.js + 1 modules
var MinusSquareOutlined = __webpack_require__("xCK6");

// EXTERNAL MODULE: ./docs/api/commands/group/group-del/demos/react-group-node/index.less
var react_group_node = __webpack_require__("OBe/");

// CONCATENATED MODULE: ./docs/api/commands/group/group-del/demos/react-group-node/index.tsx




var GroupNode = props => {
  var cell = props.cell;
  var app = Object(es["W" /* useXFlowApp */])();
  var isCollapse = cell.getProp('isCollapsed') || false;

  var onExpand = e => {
    app.executeCommand(es["I" /* XFlowGroupCommands */].COLLAPSE_GROUP.id, {
      nodeId: cell.id,
      isCollapsed: false
    });
  };

  var onCollapse = e => {
    app.executeCommand(es["I" /* XFlowGroupCommands */].COLLAPSE_GROUP.id, {
      nodeId: cell.id,
      isCollapsed: true,
      gap: 3
    });
  };

  return /*#__PURE__*/react_default.a.createElement("div", {
    className: "xflow-group-node"
  }, /*#__PURE__*/react_default.a.createElement("div", {
    className: "xflow-group-header"
  }, /*#__PURE__*/react_default.a.createElement("div", {
    className: "header-left"
  }, props.data.label), /*#__PURE__*/react_default.a.createElement("div", {
    className: "header-right"
  }, isCollapse && /*#__PURE__*/react_default.a.createElement(PlusSquareOutlined["a" /* default */], {
    onClick: onExpand
  }), !isCollapse && /*#__PURE__*/react_default.a.createElement(MinusSquareOutlined["a" /* default */], {
    onClick: onCollapse
  }))));
};
// CONCATENATED MODULE: ./docs/api/commands/group/group-del/demos/mock.ts


 // NodeConfig

var NODE_COMMON_PROPS = {
  width: 160,
  height: 40,
  renderKey: DND_NODE_RENDER_ID
}; // NodeConfig

var EDGE_COMMON_PROPS = {
  attrs: {
    line: {
      targetMarker: {
        name: 'block',
        width: 4,
        height: 8
      },
      strokeDasharray: '',
      stroke: '#A2B1C3',
      strokeWidth: 1
    }
  }
}; // mock data

var getGraphData = () => {
  var nodes = [Object(objectSpread2["a" /* default */])({
    id: 'node1',
    label: '\u7B97\u6CD5\u8282\u70B9-1'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node2',
    label: '\u7B97\u6CD5\u8282\u70B9-2'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node3',
    label: '\u7B97\u6CD5\u8282\u70B9-3'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node4',
    label: '\u7B97\u6CD5\u8282\u70B9-4'
  }, NODE_COMMON_PROPS)];
  var edges = [Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node2',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node2-input-1'
  }, EDGE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node3',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node3-input-1'
  }, EDGE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node4',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node4-input-1'
  }, EDGE_COMMON_PROPS)];
  return {
    nodes: [...nodes],
    edges: edges
  };
};
// CONCATENATED MODULE: ./docs/api/commands/group/group-del/demos/config-graph.tsx








var onLoad = /*#__PURE__*/function () {
  var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(app) {
    var res, _res$contextProvider$, graphData;

    return regenerator_default.a.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_LAYOUT.id, {
              layoutType: 'dagre',
              layoutOptions: {
                type: 'dagre',

                /** \u5E03\u5C40\u65B9\u5411 */
                rankdir: 'TB',

                /** \u8282\u70B9\u95F4\u8DDD */
                nodesep: 60,

                /** \u5C42\u95F4\u8DDD */
                ranksep: 30
              },
              graphData: getGraphData()
            });

          case 2:
            res = _context.sent;
            _res$contextProvider$ = res.contextProvider().getResult(), graphData = _res$contextProvider$.graphData; // render

            _context.next = 6;
            return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_RENDER.id, {
              graphData: graphData
            });

          case 6:
            _context.next = 8;
            return app.executeCommand(es["I" /* XFlowGroupCommands */].ADD_GROUP.id, {
              nodeConfig: {
                id: 'group1',
                label: 'Group1',
                groupChildren: ['node1', 'node2', 'node3', 'node4'],
                isCollapsed: false,
                renderKey: GROUP_NODE_RENDER_ID,
                groupCollapsedSize: GROUP_COLLAPSED_SIZE
              }
            });

          case 8:
            _context.next = 10;
            return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_ZOOM.id, {
              factor: 'real'
            });

          case 10:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function onLoad(_x) {
    return _ref.apply(this, arguments);
  };
}();
/**  graphConfig\uFF1A\u914D\u7F6EGraph  */

var useGraphConfig = Object(es["M" /* createGraphConfig */])(graphConfig => {
  /**  graphConfig\uFF1A\u914D\u7F6ENode\u8282\u70B9\u7EC4\u4EF6  */
  graphConfig.setNodeRender(DND_NODE_RENDER_ID, DndNode);
  /**  graphConfig\uFF1A\u914D\u7F6EGroup\u8282\u70B9\u7EC4\u4EF6 h  */

  graphConfig.setNodeRender(GROUP_NODE_RENDER_ID, GroupNode);
});
// EXTERNAL MODULE: ../xflow/dist/index.css
var dist = __webpack_require__("1MRj");

// EXTERNAL MODULE: ./docs/api/commands/group/group-del/demos/index.less
var demos = __webpack_require__("+0cN");

// CONCATENATED MODULE: ./docs/api/commands/group/group-del/demos/index.tsx
/**
 * title: \u57FA\u7840\u4F7F\u7528
 * desc: |
 *  \u89E3\u6563\u6307\u5B9A\u7684\u7FA4\u7EC4
 */






/**  Demo Props  */

var XFlowDemo = props => {
  var graphConfig = useGraphConfig(props);
  return /*#__PURE__*/react_default.a.createElement(es["B" /* XFlow */], {
    onLoad: onLoad,
    className: "xflow-workspace"
  }, /*#__PURE__*/react_default.a.createElement(FormPanel, null), /*#__PURE__*/react_default.a.createElement(es["D" /* XFlowCanvas */], {
    config: graphConfig,
    position: {
      top: 0,
      left: 230,
      right: 0,
      bottom: 0
    }
  }));
};

/* harmony default export */ var group_del_demos = __webpack_exports__["default"] = (XFlowDemo);

//# sourceURL=webpack:///./docs/api/commands/group/group-del/demos/index.tsx_+_6_modules?`)},Xjk0:function(module,__webpack_exports__,__webpack_require__){"use strict";eval(`// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "Demo", function() { return /* binding */ Demo; });

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__("KOBo");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__("RY7m");
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("q1tI");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ../xflow/es/index.js + 271 modules
var es = __webpack_require__("mqVf");

// CONCATENATED MODULE: ./docs/tutorial/solutions/dag/demos/basic/constant.ts
var DND_RENDER_ID = 'DND_NDOE';
var GROUP_NODE_RENDER_ID = 'GROUP_NODE_RENDER_ID';
var NODE_WIDTH = 180;
var NODE_HEIGHT = 36;
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/RedoOutlined.js + 1 modules
var RedoOutlined = __webpack_require__("YDSq");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/CloseCircleOutlined.js + 1 modules
var CloseCircleOutlined = __webpack_require__("r8k/");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/CheckCircleOutlined.js + 1 modules
var CheckCircleOutlined = __webpack_require__("5ouU");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/ExclamationCircleOutlined.js + 1 modules
var ExclamationCircleOutlined = __webpack_require__("+Hko");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/InfoCircleOutlined.js + 1 modules
var InfoCircleOutlined = __webpack_require__("TyQ8");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/DatabaseOutlined.js + 1 modules
var DatabaseOutlined = __webpack_require__("dfd2");

// EXTERNAL MODULE: ./docs/tutorial/solutions/dag/demos/basic/react-node/algo-node.less
var algo_node = __webpack_require__("xJM4");

// CONCATENATED MODULE: ./docs/tutorial/solutions/dag/demos/basic/react-node/algo-node.tsx




var fontStyle = {
  fontSize: '16px',
  color: '#3057e3'
};
var AlgoIcon = props => {
  if (props.hide) {
    return null;
  }

  switch (props.status) {
    case es["y" /* NsGraphStatusCommand */].StatusEnum.PROCESSING:
      return /*#__PURE__*/react_default.a.createElement(RedoOutlined["a" /* default */], {
        spin: true,
        style: {
          color: '#c1cdf7',
          fontSize: '16px'
        }
      });

    case es["y" /* NsGraphStatusCommand */].StatusEnum.ERROR:
      return /*#__PURE__*/react_default.a.createElement(CloseCircleOutlined["a" /* default */], {
        style: {
          color: '#ff4d4f',
          fontSize: '16px'
        }
      });

    case es["y" /* NsGraphStatusCommand */].StatusEnum.SUCCESS:
      return /*#__PURE__*/react_default.a.createElement(CheckCircleOutlined["a" /* default */], {
        style: {
          color: '#39ca74cc',
          fontSize: '16px'
        }
      });

    case es["y" /* NsGraphStatusCommand */].StatusEnum.WARNING:
      return /*#__PURE__*/react_default.a.createElement(ExclamationCircleOutlined["a" /* default */], {
        style: {
          color: '#faad14',
          fontSize: '16px'
        }
      });

    case es["y" /* NsGraphStatusCommand */].StatusEnum.DEFAULT:
      return /*#__PURE__*/react_default.a.createElement(InfoCircleOutlined["a" /* default */], {
        style: {
          color: '#d9d9d9',
          fontSize: '16px'
        }
      });

    default:
      return null;
  }
};
var AlgoNode = props => {
  return /*#__PURE__*/react_default.a.createElement("div", {
    className: "xflow-algo-node ".concat(props.isNodeTreePanel ? 'panel-node' : '')
  }, /*#__PURE__*/react_default.a.createElement("span", {
    className: "icon"
  }, /*#__PURE__*/react_default.a.createElement(DatabaseOutlined["a" /* default */], {
    style: fontStyle
  })), /*#__PURE__*/react_default.a.createElement("span", {
    className: "label"
  }, props.data.label), /*#__PURE__*/react_default.a.createElement("span", {
    className: "status"
  }, /*#__PURE__*/react_default.a.createElement(AlgoIcon, {
    status: props.data && props.data.status,
    hide: props.isNodeTreePanel
  })));
};
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/PlusSquareOutlined.js + 1 modules
var PlusSquareOutlined = __webpack_require__("29vH");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/MinusSquareOutlined.js + 1 modules
var MinusSquareOutlined = __webpack_require__("xCK6");

// EXTERNAL MODULE: ./docs/tutorial/solutions/dag/demos/basic/react-node/group.less
var group = __webpack_require__("GYbc");

// CONCATENATED MODULE: ./docs/tutorial/solutions/dag/demos/basic/react-node/group.tsx




var GroupNode = props => {
  var cell = props.cell;
  var app = Object(es["W" /* useXFlowApp */])();
  var isCollapsed = props.data.isCollapsed || false;

  var onExpand = e => {
    app.executeCommand(es["I" /* XFlowGroupCommands */].COLLAPSE_GROUP.id, {
      nodeId: cell.id,
      isCollapsed: false,
      collapsedSize: {
        width: 200,
        height: 40
      }
    });
  };

  var onCollapse = e => {
    app.executeCommand(es["I" /* XFlowGroupCommands */].COLLAPSE_GROUP.id, {
      nodeId: cell.id,
      isCollapsed: true,
      collapsedSize: {
        width: 200,
        height: 40
      },
      gap: 3
    });
  };

  return /*#__PURE__*/react_default.a.createElement("div", {
    className: "xflow-group-node"
  }, /*#__PURE__*/react_default.a.createElement("div", {
    className: "xflow-group-header"
  }, /*#__PURE__*/react_default.a.createElement("div", {
    className: "header-left"
  }, props.data.label), /*#__PURE__*/react_default.a.createElement("div", {
    className: "header-right"
  }, isCollapsed && /*#__PURE__*/react_default.a.createElement(PlusSquareOutlined["a" /* default */], {
    onClick: onExpand
  }), !isCollapsed && /*#__PURE__*/react_default.a.createElement(MinusSquareOutlined["a" /* default */], {
    onClick: onCollapse
  }))));
};
// CONCATENATED MODULE: ./docs/tutorial/solutions/dag/demos/basic/config-graph.tsx






var useGraphHookConfig = Object(es["N" /* createHookConfig */])((config, proxy) => {
  // \u83B7\u53D6 Props
  var props = proxy.getValue();
  console.log('get main props', props);
  config.setRegisterHook(hooks => {
    var disposableList = [// \u6CE8\u518C\u589E\u52A0 react Node Render
    hooks.reactNodeRender.registerHook({
      name: 'add react node',
      handler: function () {
        var _handler = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(renderMap) {
          return regenerator_default.a.wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  renderMap.set(DND_RENDER_ID, AlgoNode);
                  renderMap.set(GROUP_NODE_RENDER_ID, GroupNode);

                case 2:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee);
        }));

        function handler(_x) {
          return _handler.apply(this, arguments);
        }

        return handler;
      }()
    }), // \u6CE8\u518C\u4FEE\u6539graphOptions\u914D\u7F6E\u7684\u94A9\u5B50
    hooks.graphOptions.registerHook({
      name: 'custom-x6-options',
      // before: 'dag-extension-x6-options',
      handler: function () {
        var _handler2 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee2(options) {
          return regenerator_default.a.wrap(function _callee2$(_context2) {
            while (1) {
              switch (_context2.prev = _context2.next) {
                case 0:
                  options.grid = false;
                  options.keyboard = {
                    enabled: true
                  };

                case 2:
                case "end":
                  return _context2.stop();
              }
            }
          }, _callee2);
        }));

        function handler(_x2) {
          return _handler2.apply(this, arguments);
        }

        return handler;
      }()
    }), // \u6CE8\u518C\u589E\u52A0 graph event
    hooks.x6Events.registerHook({
      name: 'add node click event',
      handler: function () {
        var _handler3 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee3(events) {
          return regenerator_default.a.wrap(function _callee3$(_context3) {
            while (1) {
              switch (_context3.prev = _context3.next) {
                case 0:
                  events.push({
                    eventName: 'node:click',
                    // eslint-disable-next-line @typescript-eslint/no-unused-vars
                    callback: (e, cmds, ctx) => {// \u7ED1\u5B9A\u4E8B\u4EF6
                    }
                  });

                case 1:
                case "end":
                  return _context3.stop();
              }
            }
          }, _callee3);
        }));

        function handler(_x3) {
          return _handler3.apply(this, arguments);
        }

        return handler;
      }()
    })];
    var toDispose = new es["i" /* DisposableCollection */]();
    toDispose.pushAll(disposableList);
    return toDispose;
  });
});
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 3 modules
var slicedToArray = __webpack_require__("jem/");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/objectSpread2.js
var objectSpread2 = __webpack_require__("BcGY");

// CONCATENATED MODULE: ./docs/tutorial/solutions/dag/demos/basic/service.ts





/* eslint-disable @typescript-eslint/no-unused-vars */



/** mock \u540E\u7AEF\u63A5\u53E3\u8C03\u7528 */
var MockApi;

(function (_MockApi) {
  var NODE_COMMON_PROPS = _MockApi.NODE_COMMON_PROPS = {
    renderKey: DND_RENDER_ID,
    width: NODE_WIDTH,
    height: NODE_HEIGHT
  };

  var queryGraphMeta = _MockApi.queryGraphMeta = /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(args) {
      return regenerator_default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              console.log('queryMeta', args);
              return _context.abrupt("return", Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({}, args), {}, {
                flowId: args.meta.flowId
              }));

            case 2:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function (_x) {
      return _ref.apply(this, arguments);
    };
  }();

  var loadGraphData = _MockApi.loadGraphData = /*#__PURE__*/function () {
    var _ref2 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee2(meta) {
      var nodes, edges;
      return regenerator_default.a.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              nodes = [Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({}, NODE_COMMON_PROPS), {}, {
                id: 'node1',
                label: '\u7B97\u6CD5\u8282\u70B9-1',
                ports: [{
                  id: 'node1-input-1',
                  type: es["x" /* NsGraph */].AnchorType.INPUT,
                  group: es["x" /* NsGraph */].AnchorGroup.TOP,
                  tooltip: '\u8F93\u5165\u6869'
                }, {
                  id: 'node1-output-1',
                  type: es["x" /* NsGraph */].AnchorType.OUTPUT,
                  group: es["x" /* NsGraph */].AnchorGroup.BOTTOM,
                  tooltip: '\u8F93\u51FA\u6869'
                }]
              }), Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({}, NODE_COMMON_PROPS), {}, {
                id: 'node2',
                label: '\u7B97\u6CD5\u8282\u70B9-2',
                ports: [{
                  id: 'node2-input-1',
                  type: es["x" /* NsGraph */].AnchorType.INPUT,
                  group: es["x" /* NsGraph */].AnchorGroup.TOP,
                  tooltip: '\u8F93\u5165\u6869',
                  connected: true
                }, {
                  id: 'node2-output-1',
                  type: es["x" /* NsGraph */].AnchorType.OUTPUT,
                  group: es["x" /* NsGraph */].AnchorGroup.BOTTOM,
                  tooltip: '\u8F93\u51FA\u6869'
                }]
              }), Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({}, NODE_COMMON_PROPS), {}, {
                id: 'node3',
                label: '\u7B97\u6CD5\u8282\u70B9-3',
                ports: [{
                  id: 'node3-input-1',
                  type: es["x" /* NsGraph */].AnchorType.INPUT,
                  group: es["x" /* NsGraph */].AnchorGroup.TOP,
                  tooltip: '\u8F93\u5165\u6869',
                  connected: true
                }, {
                  id: 'node3-output-1',
                  type: es["x" /* NsGraph */].AnchorType.OUTPUT,
                  group: es["x" /* NsGraph */].AnchorGroup.BOTTOM,
                  tooltip: '\u8F93\u51FA\u6869'
                }]
              }), Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({}, NODE_COMMON_PROPS), {}, {
                id: 'node4',
                label: '\u7B97\u6CD5\u8282\u70B9-4',
                ports: [{
                  id: 'node4-input-1',
                  type: es["x" /* NsGraph */].AnchorType.INPUT,
                  group: es["x" /* NsGraph */].AnchorGroup.TOP,
                  tooltip: '\u8F93\u5165\u6869',
                  connected: true
                }, {
                  id: 'node4-output-1',
                  type: es["x" /* NsGraph */].AnchorType.OUTPUT,
                  group: es["x" /* NsGraph */].AnchorGroup.BOTTOM,
                  tooltip: '\u8F93\u51FA\u6869'
                }]
              })];
              edges = [{
                id: Object(es["X" /* uuidv4 */])(),
                source: 'node1',
                target: 'node2',
                sourcePortId: 'node1-output-1',
                targetPortId: 'node2-input-1'
              }, {
                id: Object(es["X" /* uuidv4 */])(),
                source: 'node1',
                target: 'node3',
                sourcePortId: 'node1-output-1',
                targetPortId: 'node3-input-1'
              }, {
                id: Object(es["X" /* uuidv4 */])(),
                source: 'node1',
                target: 'node4',
                sourcePortId: 'node1-output-1',
                targetPortId: 'node4-input-1'
              }];
              return _context2.abrupt("return", {
                nodes,
                edges
              });

            case 3:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    }));

    return function (_x2) {
      return _ref2.apply(this, arguments);
    };
  }();

  var saveGraphData = _MockApi.saveGraphData = /*#__PURE__*/function () {
    var _ref3 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee3(meta, graphData) {
      return regenerator_default.a.wrap(function _callee3$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              console.log('saveGraphData api', meta, graphData);
              return _context3.abrupt("return", {
                success: true,
                data: graphData
              });

            case 2:
            case "end":
              return _context3.stop();
          }
        }
      }, _callee3);
    }));

    return function (_x3, _x4) {
      return _ref3.apply(this, arguments);
    };
  }();

  var deployDagService = _MockApi.deployDagService = /*#__PURE__*/function () {
    var _ref4 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee4(meta, graphData) {
      return regenerator_default.a.wrap(function _callee4$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              console.log('deployService api', meta, graphData);
              return _context4.abrupt("return", {
                success: true,
                data: graphData
              });

            case 2:
            case "end":
              return _context4.stop();
          }
        }
      }, _callee4);
    }));

    return function (_x5, _x6) {
      return _ref4.apply(this, arguments);
    };
  }();

  var addNode = _MockApi.addNode = /*#__PURE__*/function () {
    var _ref5 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee5(args) {
      var portItems, _args$nodeConfig, id, _args$nodeConfig$port, ports, groupChildren, nodeId, node;

      return regenerator_default.a.wrap(function _callee5$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:
              console.info('addNode service running, add node:', args);
              portItems = [{
                type: es["x" /* NsGraph */].AnchorType.INPUT,
                group: es["x" /* NsGraph */].AnchorGroup.TOP,
                tooltip: '\u8F93\u5165\u68691'
              }, {
                type: es["x" /* NsGraph */].AnchorType.INPUT,
                group: es["x" /* NsGraph */].AnchorGroup.TOP,
                tooltip: '\u8F93\u5165\u68692'
              }, {
                type: es["x" /* NsGraph */].AnchorType.INPUT,
                group: es["x" /* NsGraph */].AnchorGroup.TOP,
                tooltip: '\u8F93\u5165\u68693'
              }, {
                type: es["x" /* NsGraph */].AnchorType.OUTPUT,
                group: es["x" /* NsGraph */].AnchorGroup.BOTTOM,
                tooltip: '\u8F93\u51FA\u6869'
              }];
              _args$nodeConfig = args.nodeConfig, id = _args$nodeConfig.id, _args$nodeConfig$port = _args$nodeConfig.ports, ports = _args$nodeConfig$port === void 0 ? portItems : _args$nodeConfig$port, groupChildren = _args$nodeConfig.groupChildren;
              nodeId = id || Object(es["X" /* uuidv4 */])();
              /** \u8FD9\u91CC\u6DFB\u52A0\u8FDE\u7EBF\u6869 */

              /** \u8FD9\u91CC\u6DFB\u52A0\u8FDE\u7EBF\u6869 */
              node = Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({}, NODE_COMMON_PROPS), args.nodeConfig), {}, {
                id: nodeId,
                ports: ports.map(port => {
                  return Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({}, port), {}, {
                    id: Object(es["X" /* uuidv4 */])()
                  });
                })
              });
              /** group\u6CA1\u6709\u94FE\u63A5\u6869 */

              /** group\u6CA1\u6709\u94FE\u63A5\u6869 */
              if (groupChildren && groupChildren.length) {
                node.ports = [];
              }

              return _context5.abrupt("return", node);

            case 7:
            case "end":
              return _context5.stop();
          }
        }
      }, _callee5);
    }));

    return function (_x7) {
      return _ref5.apply(this, arguments);
    };
  }();

  var renameNode = _MockApi.renameNode = /*#__PURE__*/function () {
    var _ref6 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee6(name, node, graphMeta) {
      return regenerator_default.a.wrap(function _callee6$(_context6) {
        while (1) {
          switch (_context6.prev = _context6.next) {
            case 0:
              console.log('rename node', node, name, graphMeta);
              return _context6.abrupt("return", {
                err: null,
                nodeName: name
              });

            case 2:
            case "end":
              return _context6.stop();
          }
        }
      }, _callee6);
    }));

    return function (_x8, _x9, _x10) {
      return _ref6.apply(this, arguments);
    };
  }();

  var delNode = _MockApi.delNode = /*#__PURE__*/function () {
    var _ref7 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee7(args) {
      return regenerator_default.a.wrap(function _callee7$(_context7) {
        while (1) {
          switch (_context7.prev = _context7.next) {
            case 0:
              console.info('delNode service running, del node:', args.nodeConfig.id);
              return _context7.abrupt("return", true);

            case 2:
            case "end":
              return _context7.stop();
          }
        }
      }, _callee7);
    }));

    return function (_x11) {
      return _ref7.apply(this, arguments);
    };
  }();

  var addEdge = _MockApi.addEdge = /*#__PURE__*/function () {
    var _ref8 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee8(args) {
      var edgeConfig;
      return regenerator_default.a.wrap(function _callee8$(_context8) {
        while (1) {
          switch (_context8.prev = _context8.next) {
            case 0:
              console.info('addEdge service running, add edge:', args);
              edgeConfig = args.edgeConfig;
              return _context8.abrupt("return", Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({}, edgeConfig), {}, {
                id: Object(es["X" /* uuidv4 */])()
              }));

            case 3:
            case "end":
              return _context8.stop();
          }
        }
      }, _callee8);
    }));

    return function (_x12) {
      return _ref8.apply(this, arguments);
    };
  }();

  var delEdge = _MockApi.delEdge = /*#__PURE__*/function () {
    var _ref9 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee9(args) {
      return regenerator_default.a.wrap(function _callee9$(_context9) {
        while (1) {
          switch (_context9.prev = _context9.next) {
            case 0:
              console.info('delEdge service running, del edge:', args);
              return _context9.abrupt("return", true);

            case 2:
            case "end":
              return _context9.stop();
          }
        }
      }, _callee9);
    }));

    return function (_x13) {
      return _ref9.apply(this, arguments);
    };
  }();

  var runningNodeId = 0;
  var statusMap = {};
  var graphStatus = es["y" /* NsGraphStatusCommand */].StatusEnum.DEFAULT;

  var graphStatusService = _MockApi.graphStatusService = /*#__PURE__*/Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee10() {
    return regenerator_default.a.wrap(function _callee10$(_context10) {
      while (1) {
        switch (_context10.prev = _context10.next) {
          case 0:
            if (runningNodeId < 4) {
              statusMap["node".concat(runningNodeId)] = {
                status: es["y" /* NsGraphStatusCommand */].StatusEnum.SUCCESS
              };
              statusMap["node".concat(runningNodeId + 1)] = {
                status: es["y" /* NsGraphStatusCommand */].StatusEnum.PROCESSING
              };
              runningNodeId += 1;
              graphStatus = es["y" /* NsGraphStatusCommand */].StatusEnum.PROCESSING;
            } else {
              runningNodeId = 0;
              statusMap.node4 = {
                status: es["y" /* NsGraphStatusCommand */].StatusEnum.SUCCESS
              };
              graphStatus = es["y" /* NsGraphStatusCommand */].StatusEnum.SUCCESS;
            }

            return _context10.abrupt("return", {
              graphStatus: graphStatus,
              statusMap: statusMap
            });

          case 2:
          case "end":
            return _context10.stop();
        }
      }
    }, _callee10);
  }));

  var stopGraphStatusService = _MockApi.stopGraphStatusService = /*#__PURE__*/Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee11() {
    return regenerator_default.a.wrap(function _callee11$(_context11) {
      while (1) {
        switch (_context11.prev = _context11.next) {
          case 0:
            Object.entries(statusMap).forEach(_ref12 => {
              var _ref13 = Object(slicedToArray["a" /* default */])(_ref12, 2),
                  val = _ref13[1];

              var _ref14 = val,
                  status = _ref14.status;

              if (status === es["y" /* NsGraphStatusCommand */].StatusEnum.PROCESSING) {
                val.status = es["y" /* NsGraphStatusCommand */].StatusEnum.ERROR;
              }
            });
            return _context11.abrupt("return", {
              graphStatus: es["y" /* NsGraphStatusCommand */].StatusEnum.ERROR,
              statusMap: statusMap
            });

          case 2:
          case "end":
            return _context11.stop();
        }
      }
    }, _callee11);
  }));
})(MockApi || (MockApi = {}));
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty.js
var initializerDefineProperty = __webpack_require__("pMbd");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor.js
var applyDecoratedDescriptor = __webpack_require__("8FM4");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper.js
var initializerWarningHelper = __webpack_require__("Tnoi");

// CONCATENATED MODULE: ./docs/tutorial/solutions/dag/demos/basic/cmd-extensions/constants.ts
/** \u8282\u70B9\u547D\u4EE4 */
var CustomCommands;

(function (_CustomCommands) {
  var category = '\u8282\u70B9\u64CD\u4F5C';
  /** \u5F02\u6B65\u8BF7\u6C42demo */

  var TEST_ASYNC_CMD = _CustomCommands.TEST_ASYNC_CMD = {
    id: 'xflow:async-cmd',
    label: '\u5F02\u6B65\u8BF7\u6C42',
    category
  };
  var SHOW_RENAME_MODAL = _CustomCommands.SHOW_RENAME_MODAL = {
    id: 'xflow:rename-node-modal',
    label: '\u6253\u5F00\u91CD\u547D\u540D\u5F39\u7A97',
    category
  };
  var DEPLOY_SERVICE = _CustomCommands.DEPLOY_SERVICE = {
    id: 'xflow:deploy-service',
    label: '\u90E8\u7F72\u670D\u52A1',
    category
  };
})(CustomCommands || (CustomCommands = {}));
// CONCATENATED MODULE: ./docs/tutorial/solutions/dag/demos/basic/cmd-extensions/cmd-async-test.ts





var _dec, _dec2, _dec3, _class, _class2, _descriptor;




var inject = es["u" /* ManaSyringe */].inject,
    injectable = es["u" /* ManaSyringe */].injectable;
var NsTestCmd;

(function (_NsTestCmd) {
  var command = _NsTestCmd.command = CustomCommands.TEST_ASYNC_CMD;
  var hookKey = _NsTestCmd.hookKey = 'testCmd';
})(NsTestCmd || (NsTestCmd = {}));

var
/** \u521B\u5EFA\u8282\u70B9\u547D\u4EE4 */
cmd_async_test_TestAsyncCommand = (_dec = injectable(), _dec2 = inject(es["p" /* ICommandContextProvider */]), _dec3 = Reflect.metadata("design:type", Object), _dec(_class = (_class2 = class
/** \u521B\u5EFA\u8282\u70B9\u547D\u4EE4 */
TestAsyncCommand {
  constructor() {
    var _this = this;

    Object(initializerDefineProperty["a" /* default */])(this, "contextProvider", _descriptor, this);

    this.execute = /*#__PURE__*/Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee2() {
      var ctx, hooks, _ctx$getArgs, args, runtimeHook, graph, result;

      return regenerator_default.a.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              ctx = _this.contextProvider();
              hooks = ctx.getHooks();
              _ctx$getArgs = ctx.getArgs(), args = _ctx$getArgs.args, runtimeHook = _ctx$getArgs.hooks;
              _context2.next = 5;
              return ctx.getX6Graph();

            case 5:
              graph = _context2.sent;
              _context2.next = 8;
              return hooks.testCmd.call(args, /*#__PURE__*/function () {
                var _ref2 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(handlerArgs) {
                  var commandService, modelService, graphMeta, test;
                  return regenerator_default.a.wrap(function _callee$(_context) {
                    while (1) {
                      switch (_context.prev = _context.next) {
                        case 0:
                          commandService = handlerArgs.commandService, modelService = handlerArgs.modelService, graphMeta = handlerArgs.graphMeta, test = handlerArgs.test;
                          console.log(graph, commandService, modelService, graphMeta, test);
                          return _context.abrupt("return", {
                            test: true
                          });

                        case 3:
                        case "end":
                          return _context.stop();
                      }
                    }
                  }, _callee);
                }));

                return function (_x) {
                  return _ref2.apply(this, arguments);
                };
              }(), runtimeHook);

            case 8:
              result = _context2.sent;
              ctx.setResult(result);
              return _context2.abrupt("return", _this);

            case 11:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    }));
    this.undo = /*#__PURE__*/Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee3() {
      var ctx;
      return regenerator_default.a.wrap(function _callee3$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              if (_this.isUndoable()) {
                ctx = _this.contextProvider();
                ctx.undo();
              }

              return _context3.abrupt("return", _this);

            case 2:
            case "end":
              return _context3.stop();
          }
        }
      }, _callee3);
    }));
    this.redo = /*#__PURE__*/Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee4() {
      return regenerator_default.a.wrap(function _callee4$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              if (_this.isUndoable()) {
                _context4.next = 3;
                break;
              }

              _context4.next = 3;
              return _this.execute();

            case 3:
              return _context4.abrupt("return", _this);

            case 4:
            case "end":
              return _context4.stop();
          }
        }
      }, _callee4);
    }));
  }

  isUndoable() {
    var ctx = this.contextProvider();
    return ctx.isUndoable();
  }

}, (_descriptor = Object(applyDecoratedDescriptor["a" /* default */])(_class2.prototype, "contextProvider", [_dec2, _dec3], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
})), _class2)) || _class);
// CONCATENATED MODULE: ./docs/tutorial/solutions/dag/demos/basic/cmd-extensions/cmd-deploy.ts





var cmd_deploy_dec, cmd_deploy_dec2, cmd_deploy_dec3, cmd_deploy_class, cmd_deploy_class2, cmd_deploy_descriptor;





var NsDeployDagCmd;

(function (_NsDeployDagCmd) {
  var command = _NsDeployDagCmd.command = CustomCommands.DEPLOY_SERVICE;
  var hookKey = _NsDeployDagCmd.hookKey = 'deployDag';
})(NsDeployDagCmd || (NsDeployDagCmd = {}));

var
/** \u90E8\u7F72\u753B\u5E03\u6570\u636E */
cmd_deploy_DeployDagCommand = (cmd_deploy_dec = es["u" /* ManaSyringe */].injectable(), cmd_deploy_dec2 = es["u" /* ManaSyringe */].inject(es["p" /* ICommandContextProvider */]), cmd_deploy_dec3 = Reflect.metadata("design:type", Object), cmd_deploy_dec(cmd_deploy_class = (cmd_deploy_class2 = class
/** \u90E8\u7F72\u753B\u5E03\u6570\u636E */
DeployDagCommand {
  constructor() {
    var _this = this;

    Object(initializerDefineProperty["a" /* default */])(this, "contextProvider", cmd_deploy_descriptor, this);

    this.execute = /*#__PURE__*/Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee3() {
      var ctx, _ctx$getArgs, args, runtimeHook, hooks, result;

      return regenerator_default.a.wrap(function _callee3$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              ctx = _this.contextProvider();
              _ctx$getArgs = ctx.getArgs(), args = _ctx$getArgs.args, runtimeHook = _ctx$getArgs.hooks;
              hooks = ctx.getHooks();
              _context3.next = 5;
              return hooks.deployDag.call(args, /*#__PURE__*/function () {
                var _ref2 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee2(args) {
                  var commandService, deployDagService;
                  return regenerator_default.a.wrap(function _callee2$(_context2) {
                    while (1) {
                      switch (_context2.prev = _context2.next) {
                        case 0:
                          commandService = args.commandService, deployDagService = args.deployDagService;
                          /** \u6267\u884CCommand */

                          _context2.next = 3;
                          return commandService.executeCommand(es["H" /* XFlowGraphCommands */].SAVE_GRAPH_DATA.id, {
                            saveGraphDataService: function () {
                              var _saveGraphDataService = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(meta, graph) {
                                return regenerator_default.a.wrap(function _callee$(_context) {
                                  while (1) {
                                    switch (_context.prev = _context.next) {
                                      case 0:
                                        _context.next = 2;
                                        return deployDagService(meta, graph);

                                      case 2:
                                      case "end":
                                        return _context.stop();
                                    }
                                  }
                                }, _callee);
                              }));

                              function saveGraphDataService(_x2, _x3) {
                                return _saveGraphDataService.apply(this, arguments);
                              }

                              return saveGraphDataService;
                            }()
                          }, runtimeHook);

                        case 3:
                          return _context2.abrupt("return", {
                            success: true
                          });

                        case 4:
                        case "end":
                          return _context2.stop();
                      }
                    }
                  }, _callee2);
                }));

                return function (_x) {
                  return _ref2.apply(this, arguments);
                };
              }());

            case 5:
              result = _context3.sent;
              ctx.setResult(result);
              return _context3.abrupt("return", _this);

            case 8:
            case "end":
              return _context3.stop();
          }
        }
      }, _callee3);
    }));
    this.undo = /*#__PURE__*/Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee4() {
      var ctx;
      return regenerator_default.a.wrap(function _callee4$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              if (_this.isUndoable()) {
                ctx = _this.contextProvider();
                ctx.undo();
              }

              return _context4.abrupt("return", _this);

            case 2:
            case "end":
              return _context4.stop();
          }
        }
      }, _callee4);
    }));
    this.redo = /*#__PURE__*/Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee5() {
      return regenerator_default.a.wrap(function _callee5$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:
              if (_this.isUndoable()) {
                _context5.next = 3;
                break;
              }

              _context5.next = 3;
              return _this.execute();

            case 3:
              return _context5.abrupt("return", _this);

            case 4:
            case "end":
              return _context5.stop();
          }
        }
      }, _callee5);
    }));
  }

  isUndoable() {
    var ctx = this.contextProvider();
    return ctx.isUndoable();
  }

}, (cmd_deploy_descriptor = Object(applyDecoratedDescriptor["a" /* default */])(cmd_deploy_class2.prototype, "contextProvider", [cmd_deploy_dec2, cmd_deploy_dec3], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
})), cmd_deploy_class2)) || cmd_deploy_class);
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__("BoRD");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/form/index.js + 15 modules
var es_form = __webpack_require__("UL5a");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/config-provider/index.js + 3 modules
var config_provider = __webpack_require__("7xuC");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/input/index.js + 11 modules
var input = __webpack_require__("BmDy");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/modal/index.js + 8 modules
var es_modal = __webpack_require__("/zI6");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/modal/style/index.css
var style = __webpack_require__("vmP7");

// CONCATENATED MODULE: ./docs/tutorial/solutions/dag/demos/basic/cmd-extensions/cmd-rename-node-modal.tsx








var cmd_rename_node_modal_dec, cmd_rename_node_modal_dec2, cmd_rename_node_modal_dec3, cmd_rename_node_modal_class, cmd_rename_node_modal_class2, cmd_rename_node_modal_descriptor;








var NsRenameNodeCmd;

(function (_NsRenameNodeCmd) {
  var command = _NsRenameNodeCmd.command = CustomCommands.SHOW_RENAME_MODAL;
  var hookKey = _NsRenameNodeCmd.hookKey = 'renameNode';
})(NsRenameNodeCmd || (NsRenameNodeCmd = {}));

var
/** \u90E8\u7F72\u753B\u5E03\u6570\u636E */
cmd_rename_node_modal_RenameNodeCommand = (cmd_rename_node_modal_dec = es["u" /* ManaSyringe */].injectable(), cmd_rename_node_modal_dec2 = es["u" /* ManaSyringe */].inject(es["p" /* ICommandContextProvider */]), cmd_rename_node_modal_dec3 = Reflect.metadata("design:type", Object), cmd_rename_node_modal_dec(cmd_rename_node_modal_class = (cmd_rename_node_modal_class2 = class
/** \u90E8\u7F72\u753B\u5E03\u6570\u636E */
RenameNodeCommand {
  constructor() {
    var _this = this;

    Object(initializerDefineProperty["a" /* default */])(this, "contextProvider", cmd_rename_node_modal_descriptor, this);

    this.execute = /*#__PURE__*/Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee2() {
      var ctx, _ctx$getArgs, args, runtimeHook, hooks, result;

      return regenerator_default.a.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              ctx = _this.contextProvider();
              _ctx$getArgs = ctx.getArgs(), args = _ctx$getArgs.args, runtimeHook = _ctx$getArgs.hooks;
              hooks = ctx.getHooks();
              _context2.next = 5;
              return hooks.renameNode.call(args, /*#__PURE__*/function () {
                var _ref2 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(args) {
                  var nodeConfig, graphMeta, commandService, modelService, updateNodeNameService, preNodeName, getAppContext, x6Graph, cell, newName, cellData;
                  return regenerator_default.a.wrap(function _callee$(_context) {
                    while (1) {
                      switch (_context.prev = _context.next) {
                        case 0:
                          nodeConfig = args.nodeConfig, graphMeta = args.graphMeta, commandService = args.commandService, modelService = args.modelService, updateNodeNameService = args.updateNodeNameService;
                          preNodeName = nodeConfig.label;

                          getAppContext = () => {
                            return {
                              graphMeta,
                              commandService,
                              modelService,
                              updateNodeNameService
                            };
                          };

                          _context.next = 5;
                          return ctx.getX6Graph();

                        case 5:
                          x6Graph = _context.sent;
                          cell = x6Graph.getCellById(nodeConfig.id);

                          if (!(!cell || !cell.isNode())) {
                            _context.next = 9;
                            break;
                          }

                          throw new Error("".concat(nodeConfig.id, " is not a valid node"));

                        case 9:
                          _context.next = 11;
                          return showModal(nodeConfig, getAppContext);

                        case 11:
                          newName = _context.sent;

                          if (!newName) {
                            _context.next = 16;
                            break;
                          }

                          cellData = cell.getData();
                          cell.setData(Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({}, cellData), {}, {
                            label: newName
                          }));
                          return _context.abrupt("return", {
                            err: null,
                            preNodeName,
                            currenNodetName: newName
                          });

                        case 16:
                          return _context.abrupt("return", {
                            err: null,
                            preNodeName,
                            currenNodetName: ''
                          });

                        case 17:
                        case "end":
                          return _context.stop();
                      }
                    }
                  }, _callee);
                }));

                return function (_x) {
                  return _ref2.apply(this, arguments);
                };
              }());

            case 5:
              result = _context2.sent;
              ctx.setResult(result);
              return _context2.abrupt("return", _this);

            case 8:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    }));
    this.undo = /*#__PURE__*/Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee3() {
      var ctx;
      return regenerator_default.a.wrap(function _callee3$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              if (_this.isUndoable()) {
                ctx = _this.contextProvider();
                ctx.undo();
              }

              return _context3.abrupt("return", _this);

            case 2:
            case "end":
              return _context3.stop();
          }
        }
      }, _callee3);
    }));
    this.redo = /*#__PURE__*/Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee4() {
      return regenerator_default.a.wrap(function _callee4$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              if (_this.isUndoable()) {
                _context4.next = 3;
                break;
              }

              _context4.next = 3;
              return _this.execute();

            case 3:
              return _context4.abrupt("return", _this);

            case 4:
            case "end":
              return _context4.stop();
          }
        }
      }, _callee4);
    }));
  }

  isUndoable() {
    var ctx = this.contextProvider();
    return ctx.isUndoable();
  }

}, (cmd_rename_node_modal_descriptor = Object(applyDecoratedDescriptor["a" /* default */])(cmd_rename_node_modal_class2.prototype, "contextProvider", [cmd_rename_node_modal_dec2, cmd_rename_node_modal_dec3], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
})), cmd_rename_node_modal_class2)) || cmd_rename_node_modal_class);
var layout = {
  labelCol: {
    span: 5
  },
  wrapperCol: {
    span: 19
  }
};

function showModal(node, getAppContext) {
  /** showModal \u8FD4\u56DE\u4E00\u4E2APromise */
  var defer = new es["h" /* Deferred */]();
  /** modal\u786E\u8BA4\u4FDD\u5B58\u903B\u8F91 */

  class ModalCache {}
  /** modal\u786E\u8BA4\u4FDD\u5B58\u903B\u8F91 */


  ModalCache.modal = void 0;
  ModalCache.form = void 0;

  var onOk = /*#__PURE__*/function () {
    var _ref5 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee5() {
      var form, modal, appContext, updateNodeNameService, graphMeta, values, _newName, _yield$updateNodeName, err, nodeName;

      return regenerator_default.a.wrap(function _callee5$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:
              form = ModalCache.form, modal = ModalCache.modal;
              appContext = getAppContext();
              updateNodeNameService = appContext.updateNodeNameService, graphMeta = appContext.graphMeta;
              _context5.prev = 3;
              modal.update({
                okButtonProps: {
                  loading: true
                }
              });
              _context5.next = 7;
              return form.validateFields();

            case 7:
              _context5.next = 9;
              return form.getFieldsValue();

            case 9:
              values = _context5.sent;
              _newName = values.newNodeName;
              /** \u6267\u884C backend service */

              if (!updateNodeNameService) {
                _context5.next = 20;
                break;
              }

              _context5.next = 14;
              return updateNodeNameService(_newName, node, graphMeta);

            case 14:
              _yield$updateNodeName = _context5.sent;
              err = _yield$updateNodeName.err;
              nodeName = _yield$updateNodeName.nodeName;

              if (!err) {
                _context5.next = 19;
                break;
              }

              throw new Error(err);

            case 19:
              defer.resolve(nodeName);

            case 20:
              /** \u66F4\u65B0\u6210\u529F\u540E\uFF0C\u5173\u95EDmodal */
              onHide();
              _context5.next = 27;
              break;

            case 23:
              _context5.prev = 23;
              _context5.t0 = _context5["catch"](3);
              console.error(_context5.t0);
              /** \u5982\u679Cresolve\u7A7A\u5B57\u7B26\u4E32\u5219\u4E0D\u66F4\u65B0 */

              modal.update({
                okButtonProps: {
                  loading: false
                }
              });

            case 27:
            case "end":
              return _context5.stop();
          }
        }
      }, _callee5, null, [[3, 23]]);
    }));

    return function onOk() {
      return _ref5.apply(this, arguments);
    };
  }();
  /** modal\u9500\u6BC1\u903B\u8F91 */


  var onHide = () => {
    modal.destroy();
    ModalCache.form = null;
    ModalCache.modal = null;
    container.destory();
  };
  /** modal\u5185\u5BB9 */


  var ModalContent = () => {
    var _Form$useForm = es_form["a" /* default */].useForm(),
        _Form$useForm2 = Object(slicedToArray["a" /* default */])(_Form$useForm, 1),
        form = _Form$useForm2[0];
    /** \u7F13\u5B58form\u5B9E\u4F8B */


    ModalCache.form = form;
    return /*#__PURE__*/react_default.a.createElement("div", null, /*#__PURE__*/react_default.a.createElement(config_provider["a" /* default */], null, /*#__PURE__*/react_default.a.createElement(es_form["a" /* default */], Object(esm_extends["a" /* default */])({
      form: form
    }, layout, {
      initialValues: {
        newNodeName: node.label
      }
    }), /*#__PURE__*/react_default.a.createElement(es_form["a" /* default */].Item, {
      name: "newNodeName",
      label: "\\u8282\\u70B9\\u540D",
      rules: [{
        required: true,
        message: '\u8BF7\u8F93\u5165\u65B0\u8282\u70B9\u540D'
      }, {
        min: 3,
        message: '\u8282\u70B9\u540D\u4E0D\u80FD\u5C11\u4E8E3\u4E2A\u5B57\u7B26'
      }]
    }, /*#__PURE__*/react_default.a.createElement(input["a" /* default */], null)))));
  };
  /** \u521B\u5EFAmodal dom\u5BB9\u5668 */


  var container = createContainer();
  /** \u521B\u5EFAmodal */

  var modal = es_modal["a" /* default */].confirm({
    title: '\u91CD\u547D\u540D',
    content: /*#__PURE__*/react_default.a.createElement(ModalContent, null),
    getContainer: () => {
      return container.element;
    },
    okButtonProps: {
      onClick: e => {
        e.stopPropagation();
        onOk();
      }
    },
    onCancel: () => {
      onHide();
    },
    afterClose: () => {
      onHide();
    }
  });
  /** \u7F13\u5B58modal\u5B9E\u4F8B */

  ModalCache.modal = modal;
  /** showModal \u8FD4\u56DE\u4E00\u4E2APromise\uFF0C\u7528\u4E8Eawait */

  return defer.promise;
}

var createContainer = () => {
  var div = document.createElement('div');
  div.classList.add('xflow-modal-container');
  window.document.body.append(div);
  return {
    element: div,
    destory: () => {
      window.document.body.removeChild(div);
    }
  };
};
// CONCATENATED MODULE: ./docs/tutorial/solutions/dag/demos/basic/cmd-extensions/index.ts





/** \u6CE8\u518C\u6210\u4E3A\u53EF\u4EE5\u6267\u884C\u7684\u547D\u4EE4 */
var commandContributions = [Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({}, NsTestCmd), {}, {
  CommandHandler: cmd_async_test_TestAsyncCommand
}), Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({}, NsDeployDagCmd), {}, {
  CommandHandler: cmd_deploy_DeployDagCommand
}), Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({}, NsRenameNodeCmd), {}, {
  CommandHandler: cmd_rename_node_modal_RenameNodeCommand
})];
// CONCATENATED MODULE: ./docs/tutorial/solutions/dag/demos/basic/config-cmd.ts





var useCmdConfig = Object(es["K" /* createCmdConfig */])(config => {
  // \u6CE8\u518C\u5168\u5C40Command\u6269\u5C55
  config.setCommandContributions(() => commandContributions); // \u8BBE\u7F6Ehook

  config.setRegisterHookFn(hooks => {
    var list = [hooks.graphMeta.registerHook({
      name: 'get node config from backend api',
      handler: function () {
        var _handler = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(args) {
          return regenerator_default.a.wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  args.graphMetaService = MockApi.queryGraphMeta;

                case 1:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee);
        }));

        function handler(_x) {
          return _handler.apply(this, arguments);
        }

        return handler;
      }()
    }), hooks.saveGrpahData.registerHook({
      name: 'get node config from backend api',
      handler: function () {
        var _handler2 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee2(args) {
          return regenerator_default.a.wrap(function _callee2$(_context2) {
            while (1) {
              switch (_context2.prev = _context2.next) {
                case 0:
                  if (!args.saveGraphDataService) {
                    args.saveGraphDataService = MockApi.saveGraphData;
                  }

                case 1:
                case "end":
                  return _context2.stop();
              }
            }
          }, _callee2);
        }));

        function handler(_x2) {
          return _handler2.apply(this, arguments);
        }

        return handler;
      }()
    }), hooks.addNode.registerHook({
      name: 'get node config from backend api',
      handler: function () {
        var _handler3 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee3(args) {
          return regenerator_default.a.wrap(function _callee3$(_context3) {
            while (1) {
              switch (_context3.prev = _context3.next) {
                case 0:
                  args.createNodeService = MockApi.addNode;

                case 1:
                case "end":
                  return _context3.stop();
              }
            }
          }, _callee3);
        }));

        function handler(_x3) {
          return _handler3.apply(this, arguments);
        }

        return handler;
      }()
    }), hooks.delNode.registerHook({
      name: 'get edge config from backend api',
      handler: function () {
        var _handler4 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee4(args) {
          return regenerator_default.a.wrap(function _callee4$(_context4) {
            while (1) {
              switch (_context4.prev = _context4.next) {
                case 0:
                  args.deleteNodeService = MockApi.delNode;

                case 1:
                case "end":
                  return _context4.stop();
              }
            }
          }, _callee4);
        }));

        function handler(_x4) {
          return _handler4.apply(this, arguments);
        }

        return handler;
      }()
    }), hooks.addEdge.registerHook({
      name: 'get edge config from backend api',
      handler: function () {
        var _handler5 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee5(args) {
          return regenerator_default.a.wrap(function _callee5$(_context5) {
            while (1) {
              switch (_context5.prev = _context5.next) {
                case 0:
                  args.createEdgeService = MockApi.addEdge;

                case 1:
                case "end":
                  return _context5.stop();
              }
            }
          }, _callee5);
        }));

        function handler(_x5) {
          return _handler5.apply(this, arguments);
        }

        return handler;
      }()
    }), hooks.delEdge.registerHook({
      name: 'get edge config from backend api',
      handler: function () {
        var _handler6 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee6(args) {
          return regenerator_default.a.wrap(function _callee6$(_context6) {
            while (1) {
              switch (_context6.prev = _context6.next) {
                case 0:
                  args.deleteEdgeService = MockApi.delEdge;

                case 1:
                case "end":
                  return _context6.stop();
              }
            }
          }, _callee6);
        }));

        function handler(_x6) {
          return _handler6.apply(this, arguments);
        }

        return handler;
      }()
    })];
    var toDispose = new es["i" /* DisposableCollection */]();
    toDispose.pushAll(list);
    return toDispose;
  });
});
/** \u67E5\u8BE2\u56FE\u7684\u8282\u70B9\u548C\u8FB9\u7684\u6570\u636E */

var initGraphCmds = app => {
  app.executeCommandPipeline([
  /** 1. \u4ECE\u670D\u52A1\u7AEF\u83B7\u53D6\u6570\u636E */
  {
    commandId: es["H" /* XFlowGraphCommands */].LOAD_DATA.id,
    getCommandOption: function () {
      var _getCommandOption = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee7() {
        return regenerator_default.a.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                return _context7.abrupt("return", {
                  args: {
                    loadDataService: MockApi.loadGraphData
                  }
                });

              case 1:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7);
      }));

      function getCommandOption() {
        return _getCommandOption.apply(this, arguments);
      }

      return getCommandOption;
    }()
  },
  /** 2. \u6267\u884C\u5E03\u5C40\u7B97\u6CD5 */
  {
    commandId: es["H" /* XFlowGraphCommands */].GRAPH_LAYOUT.id,
    getCommandOption: function () {
      var _getCommandOption2 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee8(ctx) {
        var _ctx$getResult, graphData;

        return regenerator_default.a.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                _ctx$getResult = ctx.getResult(), graphData = _ctx$getResult.graphData;
                return _context8.abrupt("return", {
                  args: {
                    layoutType: 'dagre',
                    layoutOptions: {
                      type: 'dagre',

                      /** \u5E03\u5C40\u65B9\u5411 */
                      rankdir: 'TB',

                      /** \u8282\u70B9\u95F4\u8DDD */
                      nodesep: 60,

                      /** \u5C42\u95F4\u8DDD */
                      ranksep: 30
                    },
                    graphData
                  }
                });

              case 2:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee8);
      }));

      function getCommandOption(_x7) {
        return _getCommandOption2.apply(this, arguments);
      }

      return getCommandOption;
    }()
  },
  /** 3. \u753B\u5E03\u5185\u5BB9\u6E32\u67D3 */
  {
    commandId: es["H" /* XFlowGraphCommands */].GRAPH_RENDER.id,
    getCommandOption: function () {
      var _getCommandOption3 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee9(ctx) {
        var _ctx$getResult2, graphData;

        return regenerator_default.a.wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                _ctx$getResult2 = ctx.getResult(), graphData = _ctx$getResult2.graphData;
                return _context9.abrupt("return", {
                  args: {
                    graphData
                  }
                });

              case 2:
              case "end":
                return _context9.stop();
            }
          }
        }, _callee9);
      }));

      function getCommandOption(_x8) {
        return _getCommandOption3.apply(this, arguments);
      }

      return getCommandOption;
    }()
  },
  /** 4. \u7F29\u653E\u753B\u5E03 */
  {
    commandId: es["H" /* XFlowGraphCommands */].GRAPH_ZOOM.id,
    getCommandOption: function () {
      var _getCommandOption4 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee10() {
        return regenerator_default.a.wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                return _context10.abrupt("return", {
                  args: {
                    factor: 'fit',
                    zoomOptions: {
                      maxScale: 0.9
                    }
                  }
                });

              case 1:
              case "end":
                return _context10.stop();
            }
          }
        }, _callee10);
      }));

      function getCommandOption() {
        return _getCommandOption4.apply(this, arguments);
      }

      return getCommandOption;
    }()
  }]);
};
// CONCATENATED MODULE: ./docs/tutorial/solutions/dag/demos/basic/config-model-service.ts



var NS_LOADING_STATE;

(function (_NS_LOADING_STATE) {
  var id = _NS_LOADING_STATE.id = 'test';
})(NS_LOADING_STATE || (NS_LOADING_STATE = {}));

var useModelServiceConfig = Object(es["P" /* createModelServiceConfig */])(config => {
  config.registerModel(registry => {
    return registry.registerModel({
      id: NS_LOADING_STATE.id,
      getInitialValue: () => {
        loading: true;
      }
    });
  });
});
var useLoadingState = /*#__PURE__*/function () {
  var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(contextService) {
    var ctx;
    return regenerator_default.a.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return contextService.awaitModel(NS_LOADING_STATE.id);

          case 2:
            ctx = _context.sent;
            return _context.abrupt("return", ctx.getValidValue());

          case 4:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function useLoadingState(_x) {
    return _ref.apply(this, arguments);
  };
}();
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/DeleteOutlined.js + 1 modules
var DeleteOutlined = __webpack_require__("UmCv");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/EditOutlined.js + 1 modules
var EditOutlined = __webpack_require__("xdJY");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/StopOutlined.js + 1 modules
var StopOutlined = __webpack_require__("PJfV");

// CONCATENATED MODULE: ./docs/tutorial/solutions/dag/demos/basic/config-menu.ts



/* eslint-disable @typescript-eslint/no-unused-vars */





/** menuitem \u914D\u7F6E */

var NsMenuItemConfig;

(function (_NsMenuItemConfig) {
  /** \u6CE8\u518C\u83DC\u5355\u4F9D\u8D56\u7684icon */
  es["q" /* IconStore */].set('DeleteOutlined', DeleteOutlined["a" /* default */]);
  es["q" /* IconStore */].set('EditOutlined', EditOutlined["a" /* default */]);
  es["q" /* IconStore */].set('StopOutlined', StopOutlined["a" /* default */]);
  var DELETE_EDGE = _NsMenuItemConfig.DELETE_EDGE = {
    id: es["G" /* XFlowEdgeCommands */].DEL_EDGE.id,
    label: '\u5220\u9664\u8FB9',
    iconName: 'DeleteOutlined',
    onClick: function () {
      var _onClick = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee2(_ref2) {
        var target, commandService;
        return regenerator_default.a.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                target = _ref2.target, commandService = _ref2.commandService;
                commandService.executeCommand(es["G" /* XFlowEdgeCommands */].DEL_EDGE.id, {
                  edgeConfig: target.data
                });

              case 2:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      function onClick(_x5) {
        return _onClick.apply(this, arguments);
      }

      return onClick;
    }()
  };
  var DELETE_NODE = _NsMenuItemConfig.DELETE_NODE = {
    id: es["J" /* XFlowNodeCommands */].DEL_NODE.id,
    label: '\u5220\u9664\u8282\u70B9',
    iconName: 'DeleteOutlined',
    onClick: function () {
      var _onClick2 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee3(_ref3) {
        var target, commandService;
        return regenerator_default.a.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                target = _ref3.target, commandService = _ref3.commandService;
                commandService.executeCommand(es["J" /* XFlowNodeCommands */].DEL_NODE.id, {
                  nodeConfig: {
                    id: target.data.id
                  }
                });

              case 2:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3);
      }));

      function onClick(_x6) {
        return _onClick2.apply(this, arguments);
      }

      return onClick;
    }()
  };
  var EMPTY_MENU = _NsMenuItemConfig.EMPTY_MENU = {
    id: 'EMPTY_MENU_ITEM',
    label: '\u6682\u65E0\u53EF\u7528',
    isEnabled: false,
    iconName: 'DeleteOutlined'
  };
  var RENAME_NODE = _NsMenuItemConfig.RENAME_NODE = {
    id: CustomCommands.SHOW_RENAME_MODAL.id,
    label: '\u91CD\u547D\u540D',
    isVisible: true,
    iconName: 'EditOutlined',
    onClick: function () {
      var _onClick3 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee4(_ref4) {
        var target, commandService, nodeConfig;
        return regenerator_default.a.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                target = _ref4.target, commandService = _ref4.commandService;
                nodeConfig = target.data;
                commandService.executeCommand(CustomCommands.SHOW_RENAME_MODAL.id, {
                  nodeConfig,
                  updateNodeNameService: MockApi.renameNode
                });

              case 3:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4);
      }));

      function onClick(_x7) {
        return _onClick3.apply(this, arguments);
      }

      return onClick;
    }()
  };
  var SEPARATOR = _NsMenuItemConfig.SEPARATOR = {
    id: 'separator',
    type: es["v" /* MenuItemType */].Separator
  };
})(NsMenuItemConfig || (NsMenuItemConfig = {}));

var useMenuConfig = Object(es["L" /* createCtxMenuConfig */])(config => {
  config.setMenuModelService( /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(target, model, modelService, toDispose) {
      var type, cell;
      return regenerator_default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              type = target.type, cell = target.cell;
              console.log(type);
              _context.t0 = type;
              _context.next = _context.t0 === 'node' ? 5 : _context.t0 === 'edge' ? 7 : _context.t0 === 'blank' ? 9 : 11;
              break;

            case 5:
              model.setValue({
                id: 'root',
                type: es["v" /* MenuItemType */].Root,
                submenu: [NsMenuItemConfig.DELETE_NODE, NsMenuItemConfig.RENAME_NODE]
              });
              return _context.abrupt("break", 13);

            case 7:
              model.setValue({
                id: 'root',
                type: es["v" /* MenuItemType */].Root,
                submenu: [NsMenuItemConfig.DELETE_EDGE]
              });
              return _context.abrupt("break", 13);

            case 9:
              model.setValue({
                id: 'root',
                type: es["v" /* MenuItemType */].Root,
                submenu: [NsMenuItemConfig.EMPTY_MENU]
              });
              return _context.abrupt("break", 13);

            case 11:
              model.setValue({
                id: 'root',
                type: es["v" /* MenuItemType */].Root,
                submenu: [NsMenuItemConfig.EMPTY_MENU]
              });
              return _context.abrupt("break", 13);

            case 13:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function (_x, _x2, _x3, _x4) {
      return _ref.apply(this, arguments);
    };
  }());
});
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/SaveOutlined.js + 1 modules
var SaveOutlined = __webpack_require__("GcFv");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/CloudSyncOutlined.js + 1 modules
var CloudSyncOutlined = __webpack_require__("gnb0");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/GatewayOutlined.js + 1 modules
var GatewayOutlined = __webpack_require__("a1K2");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/GroupOutlined.js + 1 modules
var GroupOutlined = __webpack_require__("iyY0");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/UngroupOutlined.js + 1 modules
var UngroupOutlined = __webpack_require__("1cKU");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/PlaySquareOutlined.js + 1 modules
var PlaySquareOutlined = __webpack_require__("iJlZ");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/popconfirm/index.js
var popconfirm = __webpack_require__("NjSG");

// CONCATENATED MODULE: ./docs/tutorial/solutions/dag/demos/basic/config-toolbar.tsx










var NSToolbarConfig;

(function (_NSToolbarConfig) {
  /** \u6CE8\u518Cicon \u7C7B\u578B */
  es["q" /* IconStore */].set('SaveOutlined', SaveOutlined["a" /* default */]);
  es["q" /* IconStore */].set('CloudSyncOutlined', CloudSyncOutlined["a" /* default */]);
  es["q" /* IconStore */].set('GatewayOutlined', GatewayOutlined["a" /* default */]);
  es["q" /* IconStore */].set('GroupOutlined', GroupOutlined["a" /* default */]);
  es["q" /* IconStore */].set('UngroupOutlined', UngroupOutlined["a" /* default */]);
  es["q" /* IconStore */].set('PlaySquareOutlined', PlaySquareOutlined["a" /* default */]);
  es["q" /* IconStore */].set('StopOutlined', StopOutlined["a" /* default */]);
  /** toolbar\u4F9D\u8D56\u7684\u72B6\u6001 */

  var getDependencies = _NSToolbarConfig.getDependencies = /*#__PURE__*/function () {
    var _ref4 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee4(modelService) {
      return regenerator_default.a.wrap(function _callee4$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              _context4.next = 2;
              return es["t" /* MODELS */].SELECTED_CELLS.getModel(modelService);

            case 2:
              _context4.t0 = _context4.sent;
              _context4.next = 5;
              return es["t" /* MODELS */].GRAPH_ENABLE_MULTI_SELECT.getModel(modelService);

            case 5:
              _context4.t1 = _context4.sent;
              _context4.next = 8;
              return es["y" /* NsGraphStatusCommand */].MODEL.getModel(modelService);

            case 8:
              _context4.t2 = _context4.sent;
              return _context4.abrupt("return", [_context4.t0, _context4.t1, _context4.t2]);

            case 10:
            case "end":
              return _context4.stop();
          }
        }
      }, _callee4);
    }));

    return function (_x4) {
      return _ref4.apply(this, arguments);
    };
  }();

  var getToolbarState = _NSToolbarConfig.getToolbarState = /*#__PURE__*/function () {
    var _ref5 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee5(modelService) {
      var _yield$MODELS$GRAPH_E, isMultiSelctionActive, isGroupSelected, isNormalNodesSelected, statusInfo;

      return regenerator_default.a.wrap(function _callee5$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:
              _context5.next = 2;
              return es["t" /* MODELS */].GRAPH_ENABLE_MULTI_SELECT.useValue(modelService);

            case 2:
              _yield$MODELS$GRAPH_E = _context5.sent;
              isMultiSelctionActive = _yield$MODELS$GRAPH_E.isEnable;
              _context5.next = 6;
              return es["t" /* MODELS */].IS_GROUP_SELECTED.useValue(modelService);

            case 6:
              isGroupSelected = _context5.sent;
              _context5.next = 9;
              return es["t" /* MODELS */].IS_NORMAL_NODES_SELECTED.useValue(modelService);

            case 9:
              isNormalNodesSelected = _context5.sent;
              _context5.next = 12;
              return es["y" /* NsGraphStatusCommand */].MODEL.useValue(modelService);

            case 12:
              statusInfo = _context5.sent;
              return _context5.abrupt("return", {
                isNodeSelected: isNormalNodesSelected,
                isGroupSelected,
                isMultiSelctionActive,
                isProcessing: statusInfo.graphStatus === es["y" /* NsGraphStatusCommand */].StatusEnum.PROCESSING
              });

            case 14:
            case "end":
              return _context5.stop();
          }
        }
      }, _callee5);
    }));

    return function (_x5) {
      return _ref5.apply(this, arguments);
    };
  }();

  var getToolbarItems = _NSToolbarConfig.getToolbarItems = /*#__PURE__*/function () {
    var _ref6 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee12(state) {
      var toolbarGroup1, toolbarGroup2, toolbarGroup3;
      return regenerator_default.a.wrap(function _callee12$(_context12) {
        while (1) {
          switch (_context12.prev = _context12.next) {
            case 0:
              toolbarGroup1 = [];
              toolbarGroup2 = [];
              toolbarGroup3 = [];
              /** \u4FDD\u5B58\u6570\u636E */

              /** \u4FDD\u5B58\u6570\u636E */
              toolbarGroup1.push({
                id: es["H" /* XFlowGraphCommands */].SAVE_GRAPH_DATA.id,
                iconName: 'SaveOutlined',
                tooltip: '\u4FDD\u5B58\u6570\u636E',
                onClick: function () {
                  var _onClick = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee6(_ref7) {
                    var commandService;
                    return regenerator_default.a.wrap(function _callee6$(_context6) {
                      while (1) {
                        switch (_context6.prev = _context6.next) {
                          case 0:
                            commandService = _ref7.commandService;
                            commandService.executeCommand(es["H" /* XFlowGraphCommands */].SAVE_GRAPH_DATA.id, {
                              saveGraphDataService: (meta, graphData) => MockApi.saveGraphData(meta, graphData)
                            });

                          case 2:
                          case "end":
                            return _context6.stop();
                        }
                      }
                    }, _callee6);
                  }));

                  function onClick(_x7) {
                    return _onClick.apply(this, arguments);
                  }

                  return onClick;
                }()
              });
              /** \u90E8\u7F72\u670D\u52A1\u6309\u94AE */

              /** \u90E8\u7F72\u670D\u52A1\u6309\u94AE */
              toolbarGroup1.push({
                iconName: 'CloudSyncOutlined',
                tooltip: '\u90E8\u7F72\u670D\u52A1',
                id: CustomCommands.DEPLOY_SERVICE.id,
                onClick: _ref8 => {
                  var commandService = _ref8.commandService;
                  commandService.executeCommand(CustomCommands.DEPLOY_SERVICE.id, {
                    deployDagService: (meta, graphData) => MockApi.deployDagService(meta, graphData)
                  });
                }
              });
              /** \u5F00\u542F\u6846\u9009 */

              /** \u5F00\u542F\u6846\u9009 */
              toolbarGroup2.push({
                id: es["H" /* XFlowGraphCommands */].GRAPH_TOGGLE_MULTI_SELECT.id,
                tooltip: '\u5F00\u542F\u6846\u9009',
                iconName: 'GatewayOutlined',
                active: state.isMultiSelctionActive,
                onClick: function () {
                  var _onClick2 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee7(_ref9) {
                    var commandService;
                    return regenerator_default.a.wrap(function _callee7$(_context7) {
                      while (1) {
                        switch (_context7.prev = _context7.next) {
                          case 0:
                            commandService = _ref9.commandService;
                            commandService.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_TOGGLE_MULTI_SELECT.id, {});

                          case 2:
                          case "end":
                            return _context7.stop();
                        }
                      }
                    }, _callee7);
                  }));

                  function onClick(_x8) {
                    return _onClick2.apply(this, arguments);
                  }

                  return onClick;
                }()
              });
              /** \u65B0\u5EFA\u7FA4\u7EC4 */

              /** \u65B0\u5EFA\u7FA4\u7EC4 */
              toolbarGroup2.push({
                id: es["I" /* XFlowGroupCommands */].ADD_GROUP.id,
                tooltip: '\u65B0\u5EFA\u7FA4\u7EC4',
                iconName: 'GroupOutlined',
                isEnabled: state.isNodeSelected,
                onClick: function () {
                  var _onClick3 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee8(_ref10) {
                    var commandService, modelService, cells, groupChildren;
                    return regenerator_default.a.wrap(function _callee8$(_context8) {
                      while (1) {
                        switch (_context8.prev = _context8.next) {
                          case 0:
                            commandService = _ref10.commandService, modelService = _ref10.modelService;
                            _context8.next = 3;
                            return es["t" /* MODELS */].SELECTED_CELLS.useValue(modelService);

                          case 3:
                            cells = _context8.sent;
                            groupChildren = cells.map(cell => cell.id);
                            commandService.executeCommand(es["I" /* XFlowGroupCommands */].ADD_GROUP.id, {
                              nodeConfig: {
                                id: Object(es["X" /* uuidv4 */])(),
                                renderKey: GROUP_NODE_RENDER_ID,
                                groupChildren,
                                groupCollapsedSize: {
                                  width: 200,
                                  height: 40
                                },
                                label: '\u65B0\u5EFA\u7FA4\u7EC4'
                              }
                            });

                          case 6:
                          case "end":
                            return _context8.stop();
                        }
                      }
                    }, _callee8);
                  }));

                  function onClick(_x9) {
                    return _onClick3.apply(this, arguments);
                  }

                  return onClick;
                }()
              });
              /** \u89E3\u6563\u7FA4\u7EC4 */

              /** \u89E3\u6563\u7FA4\u7EC4 */
              toolbarGroup2.push({
                id: es["I" /* XFlowGroupCommands */].DEL_GROUP.id,
                tooltip: '\u89E3\u6563\u7FA4\u7EC4',
                iconName: 'UngroupOutlined',
                isEnabled: state.isGroupSelected,
                onClick: function () {
                  var _onClick4 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee9(_ref11) {
                    var commandService, modelService, cell, nodeConfig;
                    return regenerator_default.a.wrap(function _callee9$(_context9) {
                      while (1) {
                        switch (_context9.prev = _context9.next) {
                          case 0:
                            commandService = _ref11.commandService, modelService = _ref11.modelService;
                            _context9.next = 3;
                            return es["t" /* MODELS */].SELECTED_NODE.useValue(modelService);

                          case 3:
                            cell = _context9.sent;
                            nodeConfig = cell.getData();
                            commandService.executeCommand(es["I" /* XFlowGroupCommands */].DEL_GROUP.id, {
                              nodeConfig: nodeConfig
                            });

                          case 6:
                          case "end":
                            return _context9.stop();
                        }
                      }
                    }, _callee9);
                  }));

                  function onClick(_x10) {
                    return _onClick4.apply(this, arguments);
                  }

                  return onClick;
                }()
              });
              toolbarGroup3.push({
                id: es["F" /* XFlowDagCommands */].QUERY_GRAPH_STATUS.id + 'play',
                tooltip: '\u5F00\u59CB\u6267\u884C',
                iconName: 'PlaySquareOutlined',
                isEnabled: !state.isProcessing,
                onClick: function () {
                  var _onClick5 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee10(_ref12) {
                    var commandService;
                    return regenerator_default.a.wrap(function _callee10$(_context10) {
                      while (1) {
                        switch (_context10.prev = _context10.next) {
                          case 0:
                            commandService = _ref12.commandService;
                            commandService.executeCommand(es["F" /* XFlowDagCommands */].QUERY_GRAPH_STATUS.id, {
                              graphStatusService: MockApi.graphStatusService,
                              loopInterval: 3000
                            });

                          case 2:
                          case "end":
                            return _context10.stop();
                        }
                      }
                    }, _callee10);
                  }));

                  function onClick(_x11) {
                    return _onClick5.apply(this, arguments);
                  }

                  return onClick;
                }()
              });
              toolbarGroup3.push({
                id: es["F" /* XFlowDagCommands */].QUERY_GRAPH_STATUS.id + 'stop',
                tooltip: '\u505C\u6B62\u6267\u884C',
                iconName: 'StopOutlined',
                isEnabled: state.isProcessing,
                onClick: function () {
                  var _onClick6 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee11(_ref13) {
                    var commandService;
                    return regenerator_default.a.wrap(function _callee11$(_context11) {
                      while (1) {
                        switch (_context11.prev = _context11.next) {
                          case 0:
                            commandService = _ref13.commandService;
                            commandService.executeCommand(es["F" /* XFlowDagCommands */].QUERY_GRAPH_STATUS.id, {
                              graphStatusService: MockApi.stopGraphStatusService,
                              loopInterval: 5000
                            });

                          case 2:
                          case "end":
                            return _context11.stop();
                        }
                      }
                    }, _callee11);
                  }));

                  function onClick(_x12) {
                    return _onClick6.apply(this, arguments);
                  }

                  return onClick;
                }(),
                render: props => {
                  return /*#__PURE__*/react_default.a.createElement(popconfirm["a" /* default */], {
                    title: "\\u786E\\u5B9A\\u505C\\u6B62\\u6267\\u884C\\uFF1F",
                    onConfirm: () => {
                      props.onClick();
                    }
                  }, props.children);
                }
              });
              return _context12.abrupt("return", [{
                name: 'graphData',
                items: toolbarGroup1
              }, {
                name: 'groupOperations',
                items: toolbarGroup2
              }, {
                name: 'customCmd',
                items: toolbarGroup3
              }]);

            case 11:
            case "end":
              return _context12.stop();
          }
        }
      }, _callee12);
    }));

    return function (_x6) {
      return _ref6.apply(this, arguments);
    };
  }();
})(NSToolbarConfig || (NSToolbarConfig = {}));

var useToolbarConfig = Object(es["Q" /* createToolbarConfig */])(toolbarConfig => {
  /** \u751F\u4EA7 toolbar item */
  toolbarConfig.setToolbarModelService( /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee3(toolbarModel, modelService, toDispose) {
      var updateToolbarModel, models, subscriptions;
      return regenerator_default.a.wrap(function _callee3$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              updateToolbarModel = /*#__PURE__*/function () {
                var _ref2 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee() {
                  var state, toolbarItems;
                  return regenerator_default.a.wrap(function _callee$(_context) {
                    while (1) {
                      switch (_context.prev = _context.next) {
                        case 0:
                          _context.next = 2;
                          return NSToolbarConfig.getToolbarState(modelService);

                        case 2:
                          state = _context.sent;
                          _context.next = 5;
                          return NSToolbarConfig.getToolbarItems(state);

                        case 5:
                          toolbarItems = _context.sent;
                          toolbarModel.setValue(toolbar => {
                            toolbar.mainGroups = toolbarItems;
                          });

                        case 7:
                        case "end":
                          return _context.stop();
                      }
                    }
                  }, _callee);
                }));

                return function updateToolbarModel() {
                  return _ref2.apply(this, arguments);
                };
              }();

              _context3.next = 3;
              return NSToolbarConfig.getDependencies(modelService);

            case 3:
              models = _context3.sent;
              subscriptions = models.map(model => {
                return model.watch( /*#__PURE__*/Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee2() {
                  return regenerator_default.a.wrap(function _callee2$(_context2) {
                    while (1) {
                      switch (_context2.prev = _context2.next) {
                        case 0:
                          updateToolbarModel();

                        case 1:
                        case "end":
                          return _context2.stop();
                      }
                    }
                  }, _callee2);
                })));
              });
              toDispose.pushAll(subscriptions);

            case 6:
            case "end":
              return _context3.stop();
          }
        }
      }, _callee3);
    }));

    return function (_x, _x2, _x3) {
      return _ref.apply(this, arguments);
    };
  }());
});
// CONCATENATED MODULE: ./docs/tutorial/solutions/dag/demos/basic/config-keybinding.ts




var useKeybindingConfig = Object(es["O" /* createKeybindingConfig */])(config => {
  config.setKeybindingFunc(regsitry => {
    return regsitry.registerKeybinding([{
      id: 'delete node or edge',
      keybinding: 'backspace',
      callback: function () {
        var _callback = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(item, modelService, cmd, e) {
          var cells;
          return regenerator_default.a.wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  _context.next = 2;
                  return es["t" /* MODELS */].SELECTED_CELLS.useValue(modelService);

                case 2:
                  cells = _context.sent;
                  _context.next = 5;
                  return Promise.all(cells.map(cell => {
                    if (cell.isEdge()) {
                      return cmd.executeCommand(es["G" /* XFlowEdgeCommands */].DEL_EDGE.id, {
                        edgeConfig: Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({}, cell.getData()), {}, {
                          id: cell.id
                        })
                      });
                    }
                  }));

                case 5:
                  _context.next = 7;
                  return Promise.all(cells.map(cell => {
                    if (cell.isNode()) {
                      return cmd.executeCommand(es["J" /* XFlowNodeCommands */].DEL_NODE.id, {
                        nodeConfig: Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({}, cell.getData()), {}, {
                          id: cell.id
                        })
                      });
                    }
                  }));

                case 7:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee);
        }));

        function callback(_x, _x2, _x3, _x4) {
          return _callback.apply(this, arguments);
        }

        return callback;
      }()
    }, {
      id: 'copy',
      keybinding: ['command+c', 'ctrl+c'],
      callback: function () {
        var _callback2 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee2(item, modelService, cmd, e) {
          return regenerator_default.a.wrap(function _callee2$(_context2) {
            while (1) {
              switch (_context2.prev = _context2.next) {
                case 0:
                  e.preventDefault();
                  console.log(item);
                  cmd.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_COPY.id, {});

                case 3:
                case "end":
                  return _context2.stop();
              }
            }
          }, _callee2);
        }));

        function callback(_x5, _x6, _x7, _x8) {
          return _callback2.apply(this, arguments);
        }

        return callback;
      }()
    }, {
      id: 'paste',
      keybinding: ['command+v', 'ctrl+v'],
      callback: function () {
        var _callback3 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee3(item, ctx, cmd, e) {
          return regenerator_default.a.wrap(function _callee3$(_context3) {
            while (1) {
              switch (_context3.prev = _context3.next) {
                case 0:
                  e.preventDefault();
                  cmd.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_PASTE.id, {});

                case 2:
                case "end":
                  return _context3.stop();
              }
            }
          }, _callee3);
        }));

        function callback(_x9, _x10, _x11, _x12) {
          return _callback3.apply(this, arguments);
        }

        return callback;
      }()
    }]);
  });
});
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/card/index.js + 2 modules
var card = __webpack_require__("jMRu");

// CONCATENATED MODULE: ./docs/tutorial/solutions/dag/demos/basic/config-dnd-panel.tsx




/* eslint-disable @typescript-eslint/no-unused-vars */





var onNodeDrop = /*#__PURE__*/function () {
  var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(node, commands, modelService) {
    var args;
    return regenerator_default.a.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            args = {
              nodeConfig: Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({}, node), {}, {
                id: Object(es["X" /* uuidv4 */])()
              })
            };
            commands.executeCommand(es["J" /* XFlowNodeCommands */].ADD_NODE.id, args);

          case 2:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function onNodeDrop(_x, _x2, _x3) {
    return _ref.apply(this, arguments);
  };
}();

var NodeDescription = props => {
  return /*#__PURE__*/react_default.a.createElement(card["a" /* default */], {
    size: "small",
    title: "\\u7B97\\u6CD5\\u7EC4\\u4EF6\\u4ECB\\u7ECD",
    style: {
      width: '200px'
    },
    bordered: false
  }, "\\u6B22\\u8FCE\\u4F7F\\u7528\\uFF1A", props.name, "\\u8FD9\\u91CC\\u53EF\\u4EE5\\u6839\\u636E\\u670D\\u52A1\\u7AEF\\u8FD4\\u56DE\\u7684\\u6570\\u636E\\u663E\\u793A\\u4E0D\\u540C\\u7684\\u5185\\u5BB9");
};

var treeDataService = /*#__PURE__*/function () {
  var _ref2 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee2(meta, modelService) {
    return regenerator_default.a.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            return _context2.abrupt("return", [{
              id: '1',
              label: '\u6570\u636E\u8BFB\u5199',
              parentId: '',
              renderKey: DND_RENDER_ID
            }, {
              id: '2',
              label: '\u7B97\u6CD5\u7EC4\u4EF61',
              parentId: '1',
              renderKey: DND_RENDER_ID,
              popoverContent: /*#__PURE__*/react_default.a.createElement(NodeDescription, {
                name: "\\u7B97\\u6CD5\\u7EC4\\u4EF61"
              })
            }, {
              id: '3',
              label: '\u7B97\u6CD5\u7EC4\u4EF62',
              parentId: '1',
              renderKey: DND_RENDER_ID,
              popoverContent: /*#__PURE__*/react_default.a.createElement(NodeDescription, {
                name: "\\u7B97\\u6CD5\\u7EC4\\u4EF62"
              })
            }, {
              id: '4',
              label: '\u7B97\u6CD5\u7EC4\u4EF63',
              parentId: '1',
              renderKey: DND_RENDER_ID,
              popoverContent: /*#__PURE__*/react_default.a.createElement(NodeDescription, {
                name: "\\u7B97\\u6CD5\\u7EC4\\u4EF63"
              })
            }, {
              id: '5',
              label: '\u6570\u636E\u52A0\u5DE5',
              parentId: '',
              renderKey: DND_RENDER_ID
            }, {
              id: '6',
              label: '\u7B97\u6CD5\u7EC4\u4EF64',
              parentId: '5',
              renderKey: DND_RENDER_ID
            }, {
              id: '7',
              label: '\u7B97\u6CD5\u7EC4\u4EF65',
              parentId: '5',
              renderKey: DND_RENDER_ID
            }, {
              id: '8',
              label: '\u7B97\u6CD5\u7EC4\u4EF66',
              parentId: '5',
              renderKey: DND_RENDER_ID
            }, {
              id: '9',
              label: '\u6A21\u578B\u8BAD\u7EC3',
              parentId: '',
              renderKey: DND_RENDER_ID
            }, {
              id: '10',
              label: '\u7B97\u6CD5\u7EC4\u4EF67',
              parentId: '9',
              renderKey: DND_RENDER_ID
            }, {
              id: '11',
              label: '\u7B97\u6CD5\u7EC4\u4EF68',
              parentId: '9',
              renderKey: DND_RENDER_ID
            }, {
              id: '12',
              label: '\u7B97\u6CD5\u7EC4\u4EF69',
              parentId: '9',
              renderKey: DND_RENDER_ID
            }]);

          case 1:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));

  return function treeDataService(_x4, _x5) {
    return _ref2.apply(this, arguments);
  };
}();
var searchService = /*#__PURE__*/function () {
  var _ref3 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee3() {
    var treeNodeList,
        keyword,
        list,
        _args3 = arguments;
    return regenerator_default.a.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            treeNodeList = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : [];
            keyword = _args3.length > 1 ? _args3[1] : undefined;
            list = treeNodeList.filter(i => i.isDirectory || i.label.includes(keyword));
            console.log(list, keyword, treeNodeList);
            return _context3.abrupt("return", list);

          case 5:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  }));

  return function searchService() {
    return _ref3.apply(this, arguments);
  };
}();
// CONCATENATED MODULE: ./docs/tutorial/solutions/dag/demos/basic/form-controls/custom-editor.tsx






var EditorShape = props => {
  var controlSchema = props.controlSchema;
  var required = controlSchema.required,
      tooltip = controlSchema.tooltip,
      extra = controlSchema.extra,
      name = controlSchema.name,
      label = controlSchema.label,
      placeholder = controlSchema.placeholder;
  return /*#__PURE__*/react_default.a.createElement(es["o" /* FormItemWrapper */], {
    schema: controlSchema
  }, _ref => {
    var disabled = _ref.disabled,
        hidden = _ref.hidden,
        initialValue = _ref.initialValue;
    return /*#__PURE__*/react_default.a.createElement(es_form["a" /* default */].Item, {
      name: name,
      label: label,
      initialValue: initialValue,
      tooltip: tooltip,
      extra: extra,
      required: required,
      hidden: hidden
    }, /*#__PURE__*/react_default.a.createElement(Editor, {
      controlSchema: controlSchema,
      placeholder: placeholder,
      disabled: disabled
    }));
  });
};

var Editor = props => {
  var placeholder = props.placeholder,
      disabled = props.disabled,
      onChange = props.onChange,
      value = props.value;

  var _useXFlowApp = Object(es["W" /* useXFlowApp */])(),
      commandService = _useXFlowApp.commandService,
      modelService = _useXFlowApp.modelService;

  react_default.a.useEffect(() => {
    commandService.executeCommand(es["H" /* XFlowGraphCommands */].SAVE_GRAPH_DATA.id, {
      saveGraphDataService: function () {
        var _saveGraphDataService = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(meta, graph) {
          var nodes;
          return regenerator_default.a.wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  _context.next = 2;
                  return es["t" /* MODELS */].SELECTED_NODES.useValue(modelService);

                case 2:
                  nodes = _context.sent;
                  console.log(graph);
                  /** \u62FF\u5230\u6570\u636E\uFF0C\u89E6\u53D1onChange*/

                  onChange(JSON.stringify(graph));
                  return _context.abrupt("return", {
                    err: null,
                    data: graph,
                    meta
                  });

                case 6:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee);
        }));

        function saveGraphDataService(_x, _x2) {
          return _saveGraphDataService.apply(this, arguments);
        }

        return saveGraphDataService;
      }()
    });
  });
  return /*#__PURE__*/react_default.a.createElement(input["a" /* default */].TextArea, {
    value: value,
    placeholder: placeholder,
    disabled: disabled,
    rows: 10
  });
};
// CONCATENATED MODULE: ./docs/tutorial/solutions/dag/demos/basic/form-controls/link.tsx

var LinkShape = props => {
  var controlSchema = props.controlSchema;
  return /*#__PURE__*/react_default.a.createElement("div", {
    style: {
      padding: '8px 0px',
      marginBottom: '8px'
    }
  }, /*#__PURE__*/react_default.a.createElement("a", {
    href: controlSchema.value,
    target: "_blank",
    style: {
      color: '#3057e3'
    }
  }, controlSchema.label));
};
// CONCATENATED MODULE: ./docs/tutorial/solutions/dag/demos/basic/form-controls/index.tsx


/** \u81EA\u5B9A\u4E49form\u63A7\u4EF6 */

var ControlShapeEnum;

(function (ControlShapeEnum) {
  ControlShapeEnum["EDITOR"] = "EDITOR";
  ControlShapeEnum["LINKSHAPE"] = "LINKSHAPE";
})(ControlShapeEnum || (ControlShapeEnum = {}));

var controlMapService = controlMap => {
  controlMap.set(ControlShapeEnum.EDITOR, EditorShape);
  controlMap.set(ControlShapeEnum.LINKSHAPE, LinkShape);
  return controlMap;
};
// CONCATENATED MODULE: ./docs/tutorial/solutions/dag/demos/basic/config-form.tsx




function delay(ms) {
  return new Promise(resolve => setTimeout(() => resolve(true), ms));
}
var i = 0;
var formSchemaService = /*#__PURE__*/function () {
  var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(args) {
    var targetData, modelService, targetType, graphMeta, nodeSchema;
    return regenerator_default.a.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            targetData = args.targetData, modelService = args.modelService, targetType = args.targetType;
            /** \u53EF\u4EE5\u4F7F\u7528\u83B7\u53D6 graphMeta */

            _context.next = 3;
            return es["t" /* MODELS */].GRAPH_META.useValue(modelService);

          case 3:
            graphMeta = _context.sent;
            console.log('formSchemaService', graphMeta, args);

            if (!(targetType === 'canvas')) {
              _context.next = 7;
              break;
            }

            return _context.abrupt("return", {
              tabs: [{
                name: 'GraphMeta',
                groups: [{
                  name: 'groupName',
                  controls: [{
                    name: 'Tab2-1',
                    label: '\u9879\u76EE\u540D',
                    shape: 'Input',
                    disabled: false,
                    required: true,
                    tooltip: '\u56FE\u7684\u4E1A\u52A1\u9879\u76EE\u540D',
                    extra: '\u548C\u56FE\u7684ID\u5BF9\u5E94',
                    placeholder: 'please write something',
                    value: '',
                    defaultValue: '',
                    // \u53EF\u4EE5\u8BA4\u4E3A\u662F\u9ED8\u8BA4\u503C
                    hidden: false,
                    options: [{
                      title: '',
                      value: ''
                    }],
                    originData: {} // \u539F\u59CB\u6570\u636E

                  }, {
                    label: '\u56FE\u6570\u636E',
                    name: 'Tab1-0',

                    /** \u4F7F\u7528\u81EA\u5B9A\u4E49shape */
                    shape: ControlShapeEnum.EDITOR,
                    disabled: false,
                    required: true,
                    tooltip: 'JSON \u6570\u636E',
                    placeholder: 'please write something',
                    value: '',
                    defaultValue: '',
                    // \u53EF\u4EE5\u8BA4\u4E3A\u662F\u9ED8\u8BA4\u503C
                    hidden: false,
                    options: [{
                      title: '',
                      value: ''
                    }],
                    originData: {} // \u539F\u59CB\u6570\u636E

                  }, {
                    label: '\u67E5\u770B\u65E5\u5FD7\u94FE\u63A5',
                    name: 'Tab1-1',

                    /** \u4F7F\u7528\u81EA\u5B9A\u4E49shape */
                    shape: ControlShapeEnum.LINKSHAPE,
                    disabled: false,
                    required: true,
                    tooltip: 'hello world',
                    placeholder: 'please write something',
                    value: '',
                    defaultValue: '',
                    // \u53EF\u4EE5\u8BA4\u4E3A\u662F\u9ED8\u8BA4\u503C
                    hidden: false,
                    options: [{
                      title: '',
                      value: ''
                    }],
                    originData: {} // \u539F\u59CB\u6570\u636E

                  }]
                }]
              }]
            });

          case 7:
            nodeSchema = {
              tabs: [{
                name: 'Tab1',
                groups: [{
                  name: 'groupName',
                  controls: [{
                    label: 'GraphEditor',
                    name: 'Tab1-0',

                    /** \u4F7F\u7528\u81EA\u5B9A\u4E49shape */
                    shape: ControlShapeEnum.EDITOR,
                    disabled: false,
                    required: true,
                    tooltip: 'hello world',
                    placeholder: 'please write something',
                    value: '',
                    defaultValue: '',
                    // \u53EF\u4EE5\u8BA4\u4E3A\u662F\u9ED8\u8BA4\u503C
                    hidden: false,
                    options: [{
                      title: '',
                      value: ''
                    }],
                    originData: {} // \u539F\u59CB\u6570\u636E

                  }, {
                    label: 'Tab1-2',
                    name: 'Tab1-2',
                    shape: 'Input',
                    disabled: false,
                    required: true,
                    tooltip: 'hello world',
                    placeholder: 'please write something',
                    value: '',
                    defaultValue: '',
                    // \u53EF\u4EE5\u8BA4\u4E3A\u662F\u9ED8\u8BA4\u503C
                    hidden: false,
                    options: [{
                      title: '',
                      value: ''
                    }],
                    originData: {} // \u539F\u59CB\u6570\u636E

                  }, {
                    label: 'Tab1-3',
                    name: 'Tab1-3',
                    shape: 'Input',
                    disabled: false,
                    required: true,
                    tooltip: 'hello world',
                    placeholder: 'please write something',
                    value: '',
                    defaultValue: '',
                    // \u53EF\u4EE5\u8BA4\u4E3A\u662F\u9ED8\u8BA4\u503C
                    hidden: false,
                    options: [{
                      title: '',
                      value: ''
                    }],
                    originData: {} // \u539F\u59CB\u6570\u636E

                  }, {
                    label: 'Tab1-4',
                    name: 'Tab1-4',
                    shape: 'Input',
                    disabled: false,
                    required: true,
                    tooltip: 'hello world',
                    placeholder: 'please write something',
                    value: '',
                    defaultValue: '',
                    // \u53EF\u4EE5\u8BA4\u4E3A\u662F\u9ED8\u8BA4\u503C
                    hidden: false,
                    options: [{
                      title: '',
                      value: ''
                    }],
                    originData: {} // \u539F\u59CB\u6570\u636E

                  }]
                }]
              }, {
                name: 'Tab2',
                groups: [{
                  name: 'groupName',
                  controls: [{
                    name: 'Tab2-1',
                    label: 'Tab2-1',
                    shape: 'Input',
                    disabled: false,
                    required: true,
                    tooltip: 'hello world',
                    placeholder: 'please write something',
                    value: '',
                    defaultValue: '',
                    // \u53EF\u4EE5\u8BA4\u4E3A\u662F\u9ED8\u8BA4\u503C
                    hidden: false,
                    options: [{
                      title: '',
                      value: ''
                    }],
                    originData: {} // \u539F\u59CB\u6570\u636E

                  }, {
                    label: 'Tab2-2',
                    name: 'Tab2-2',
                    // \u4E5F\u53EF\u4EE5\u662F\u6570\u7EC4
                    shape: 'Input',
                    disabled: false,
                    required: true,
                    tooltip: 'hello world',
                    placeholder: 'please write something',
                    value: '',
                    defaultValue: '',
                    // \u53EF\u4EE5\u8BA4\u4E3A\u662F\u9ED8\u8BA4\u503C
                    hidden: false,
                    options: [{
                      title: '',
                      value: ''
                    }],
                    originData: {} // \u539F\u59CB\u6570\u636E

                  }, {
                    label: 'Tab2-3',
                    name: 'Tab2-3',
                    // \u4E5F\u53EF\u4EE5\u662F\u6570\u7EC4
                    shape: 'Input',
                    disabled: false,
                    required: true,
                    tooltip: 'hello world',
                    placeholder: 'please write something',
                    value: '',
                    defaultValue: '',
                    // \u53EF\u4EE5\u8BA4\u4E3A\u662F\u9ED8\u8BA4\u503C
                    hidden: false,
                    options: [{
                      title: '',
                      value: ''
                    }],
                    originData: {} // \u539F\u59CB\u6570\u636E

                  }]
                }]
              }]
            };
            _context.next = 10;
            return delay(100);

          case 10:
            if (!(targetData && i === 0)) {
              _context.next = 13;
              break;
            }

            i = 1;
            return _context.abrupt("return", nodeSchema);

          case 13:
            if (!targetData) {
              _context.next = 16;
              break;
            }

            i = 0;
            return _context.abrupt("return", {
              tabs: [{
                name: 'Tab3',
                groups: [{
                  name: '',
                  controls: [{
                    name: 'Tab3-1',
                    label: '\u7B97\u6CD5\u914D\u7F6E1',
                    shape: 'Input',
                    disabled: false,
                    required: true,
                    tooltip: '\u7B97\u6CD5\u914D\u7F6E1',
                    placeholder: 'please write something',
                    value: '',
                    defaultValue: '',
                    // \u53EF\u4EE5\u8BA4\u4E3A\u662F\u9ED8\u8BA4\u503C
                    hidden: false,
                    options: [{
                      title: '',
                      value: ''
                    }],
                    originData: {} // \u539F\u59CB\u6570\u636E

                  }, {
                    name: 'Tab3-2',
                    label: '\u7B97\u6CD5\u914D\u7F6E2',
                    shape: 'Input',
                    disabled: false,
                    required: true,
                    tooltip: '\u7B97\u6CD5\u914D\u7F6E2',
                    placeholder: 'please write something',
                    value: '',
                    defaultValue: '',
                    // \u53EF\u4EE5\u8BA4\u4E3A\u662F\u9ED8\u8BA4\u503C
                    hidden: false,
                    options: [{
                      title: '',
                      value: ''
                    }],
                    originData: {} // \u539F\u59CB\u6570\u636E

                  }]
                }]
              }]
            });

          case 16:
            if (!targetData) {
              _context.next = 18;
              break;
            }

            return _context.abrupt("return", nodeSchema);

          case 18:
            return _context.abrupt("return", {
              tabs: []
            });

          case 19:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function formSchemaService(_x) {
    return _ref.apply(this, arguments);
  };
}();
var formValueUpdateService = /*#__PURE__*/function () {
  var _ref2 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee2(args) {
    return regenerator_default.a.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            console.log('formValueUpdateService', args);

          case 1:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));

  return function formValueUpdateService(_x2) {
    return _ref2.apply(this, arguments);
  };
}();

// EXTERNAL MODULE: ./docs/tutorial/solutions/dag/demos/basic/index.less
var basic = __webpack_require__("DvvA");

// EXTERNAL MODULE: ../xflow/dist/index.css
var dist = __webpack_require__("1MRj");

// CONCATENATED MODULE: ./docs/tutorial/solutions/dag/demos/basic/index.tsx



/** app \u6838\u5FC3\u7EC4\u4EF6 */



/** \u4EA4\u4E92\u7EC4\u4EF6 */

/** app \u7EC4\u4EF6\u914D\u7F6E  */

/** \u914D\u7F6E\u753B\u5E03 */


/** \u914D\u7F6ECommand */


/** \u914D\u7F6EModel */


/** \u914D\u7F6EMenu */


/** \u914D\u7F6EToolbar */


/** \u914D\u7F6E\u5FEB\u6377\u952E */


/** \u914D\u7F6EDnd\u7EC4\u4EF6\u9762\u677F */


/** \u914D\u7F6EJsonConfigForm */




var Demo = props => {
  var meta = props.meta;
  var graphHooksConfig = useGraphHookConfig(props);
  var toolbarConfig = useToolbarConfig();
  var menuConfig = useMenuConfig();
  var cmdConfig = useCmdConfig();
  var modelServiceConfig = useModelServiceConfig();
  var keybindingConfig = useKeybindingConfig();
  var cache = react_default.a.useMemo(() => ({
    app: null
  }), []);
  /**
   * @param app \u5F53\u524DXFlow\u5DE5\u4F5C\u7A7A\u95F4
   * @param extensionRegistry \u5F53\u524DXFlow\u914D\u7F6E\u9879
   */

  var onLoad = /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(app) {
      return regenerator_default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              cache.app = app;
              initGraphCmds(cache.app);

            case 2:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function onLoad(_x) {
      return _ref.apply(this, arguments);
    };
  }();
  /** \u7236\u7EC4\u4EF6meta\u5C5E\u6027\u66F4\u65B0\u65F6,\u6267\u884CinitGraphCmds */


  react_default.a.useEffect(() => {
    if (cache.app) {
      initGraphCmds(cache.app);
    }
  }, [cache.app, meta]);
  return /*#__PURE__*/react_default.a.createElement(es["B" /* XFlow */], {
    className: "dag-user-custom-clz",
    hookConfig: graphHooksConfig,
    modelServiceConfig: modelServiceConfig,
    commandConfig: cmdConfig,
    onLoad: onLoad,
    meta: meta
  }, /*#__PURE__*/react_default.a.createElement(es["g" /* DagGraphExtension */], null), /*#__PURE__*/react_default.a.createElement(es["w" /* NodeTreePanel */], {
    className: "xflow-node-panel",
    searchService: searchService,
    treeDataService: treeDataService,
    onNodeDrop: onNodeDrop,
    position: {
      width: 230,
      top: 0,
      bottom: 0,
      left: 0
    },
    footerPosition: {
      height: 0
    },
    bodyPosition: {
      top: 40,
      bottom: 0,
      left: 0
    }
  }), /*#__PURE__*/react_default.a.createElement(es["f" /* CanvasToolbar */], {
    className: "xflow-workspace-toolbar-top",
    layout: "horizontal",
    config: toolbarConfig,
    position: {
      top: 0,
      left: 230,
      right: 290,
      bottom: 0
    }
  }), /*#__PURE__*/react_default.a.createElement(es["D" /* XFlowCanvas */], {
    position: {
      top: 40,
      left: 230,
      right: 290,
      bottom: 0
    }
  }, /*#__PURE__*/react_default.a.createElement(es["d" /* CanvasScaleToolbar */], {
    position: {
      top: 12,
      right: 12
    }
  }), /*#__PURE__*/react_default.a.createElement(es["a" /* CanvasContextMenu */], {
    config: menuConfig
  }), /*#__PURE__*/react_default.a.createElement(es["e" /* CanvasSnapline */], {
    color: "#faad14"
  }), /*#__PURE__*/react_default.a.createElement(es["c" /* CanvasNodePortTooltip */], null)), /*#__PURE__*/react_default.a.createElement(es["r" /* JsonSchemaForm */], {
    controlMapService: controlMapService,
    formSchemaService: formSchemaService,
    formValueUpdateService: formValueUpdateService,
    bodyPosition: {
      top: 0,
      bottom: 0,
      right: 0
    },
    position: {
      width: 290,
      top: 0,
      bottom: 0,
      right: 0
    },
    footerPosition: {
      height: 0
    }
  }), /*#__PURE__*/react_default.a.createElement(es["s" /* KeyBindings */], {
    config: keybindingConfig
  }));
};
/* harmony default export */ var demos_basic = __webpack_exports__["default"] = (Demo);
Demo.defaultProps = {
  meta: {
    flowId: 'test-meta-flow-id'
  }
};

//# sourceURL=webpack:///./docs/tutorial/solutions/dag/demos/basic/index.tsx_+_20_modules?`)},Yj0D:function(module,__webpack_exports__,__webpack_require__){"use strict";eval(`// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("q1tI");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ../xflow/es/index.js + 271 modules
var es = __webpack_require__("mqVf");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__("KOBo");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 3 modules
var slicedToArray = __webpack_require__("jem/");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__("RY7m");
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/card/index.js + 2 modules
var card = __webpack_require__("jMRu");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/message/index.js + 3 modules
var message = __webpack_require__("DuHN");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/form/index.js + 15 modules
var es_form = __webpack_require__("UL5a");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/input/index.js + 11 modules
var input = __webpack_require__("BmDy");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/button/index.js
var es_button = __webpack_require__("SCaQ");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/workspace-panel/demos/basic/custom-panel/index.tsx






var ModelServieCard = () => {
  var app = Object(es["W" /* useXFlowApp */])();

  var _useModelAsync = Object(es["U" /* useModelAsync */])({
    getModel: function () {
      var _getModel = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee() {
        return regenerator_default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt("return", es["t" /* MODELS */].SELECTED_NODES.getModel(app.modelService));

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      function getModel() {
        return _getModel.apply(this, arguments);
      }

      return getModel;
    }(),
    initialState: []
  }),
      _useModelAsync2 = Object(slicedToArray["a" /* default */])(_useModelAsync, 1),
      cells = _useModelAsync2[0];

  return /*#__PURE__*/react_default.a.createElement(card["a" /* default */], {
    title: "Model Service ",
    size: "small"
  }, /*#__PURE__*/react_default.a.createElement("div", null, " \\u5F53\\u524D\\u9009\\u4E2D\\u8282\\u70B9\\u6570\\u91CF: ", cells.length, " "));
};
var CommandServieCard = () => {
  var app = Object(es["W" /* useXFlowApp */])();

  var onFinish = values => {
    if (!values.label) {
      return message["b" /* default */].warn("\\u8BF7\\u8F93\\u5165\\u8282\\u70B9\\u540D");
    }

    app.executeCommand(es["J" /* XFlowNodeCommands */].ADD_NODE.id, {
      nodeConfig: {
        id: Object(es["X" /* uuidv4 */])(),
        label: values.label,
        x: Object(es["S" /* randomInt */])(50, 100),
        y: Object(es["S" /* randomInt */])(50, 100),
        width: 160,
        height: 30
      }
    });
  };

  return /*#__PURE__*/react_default.a.createElement(card["a" /* default */], {
    title: "Command Service ",
    size: "small"
  }, /*#__PURE__*/react_default.a.createElement(es_form["a" /* default */], {
    onFinish: onFinish,
    layout: "vertical"
  }, /*#__PURE__*/react_default.a.createElement(es_form["a" /* default */].Item, {
    name: "label",
    label: "\\u8282\\u70B9\\u540D",
    required: true,
    requiredMark: true
  }, /*#__PURE__*/react_default.a.createElement(input["a" /* default */], {
    placeholder: "node label"
  })), /*#__PURE__*/react_default.a.createElement(es_form["a" /* default */].Item, {
    name: "label"
  }, /*#__PURE__*/react_default.a.createElement(es_button["a" /* default */], {
    type: "primary",
    htmlType: "submit",
    style: {
      width: '100%'
    }
  }, "\\u6267\\u884CAddNode\\u547D\\u4EE4"))));
};
var X6GraphCard = () => {
  var app = Object(es["W" /* useXFlowApp */])();

  var callX6Api = /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee2() {
      var x6, cells;
      return regenerator_default.a.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              _context2.next = 2;
              return app.getGraphInstance();

            case 2:
              x6 = _context2.sent;
              cells = x6.getCells();
              console.log('x6 graph', x6);
              message["b" /* default */].info("x6 \\u753B\\u5E03\\u5DF2\\u6709cell: ".concat(cells.length, " \\u4E2A")); // \u8BF7\u52FF\u7ED5\u8FC7command \u76F4\u63A5\u4FEE\u6539\u753B\u5E03\u6570\u636E

            case 6:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    }));

    return function callX6Api() {
      return _ref.apply(this, arguments);
    };
  }();

  return /*#__PURE__*/react_default.a.createElement(card["a" /* default */], {
    title: "use X6 Graph ",
    size: "small"
  }, /*#__PURE__*/react_default.a.createElement(es_button["a" /* default */], {
    type: "primary",
    htmlType: "submit",
    onClick: callX6Api,
    style: {
      width: '100%'
    }
  }, "\\u83B7\\u53D6X6 Cells \\u6570\\u91CF"));
};
var CustomPanel = () => {
  var _usePanelContext = Object(es["V" /* usePanelContext */])(),
      propsProxy = _usePanelContext.propsProxy;

  var app = Object(es["W" /* useXFlowApp */])();
  var props = propsProxy.getValue();
  console.log('can use root component props:', props);
  console.log('can use app', app);
  return /*#__PURE__*/react_default.a.createElement("div", {
    className: "card-wrap"
  }, /*#__PURE__*/react_default.a.createElement(ModelServieCard, null), /*#__PURE__*/react_default.a.createElement(CommandServieCard, null), /*#__PURE__*/react_default.a.createElement(X6GraphCard, null));
};
/* harmony default export */ var custom_panel = (props => {
  return /*#__PURE__*/react_default.a.createElement(es["A" /* WorkspacePanel */], props, /*#__PURE__*/react_default.a.createElement(CustomPanel, null));
});
// EXTERNAL MODULE: ./docs/tutorial/extension-components/workspace-panel/demos/basic/index.less
var basic = __webpack_require__("PeEK");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/objectSpread2.js
var objectSpread2 = __webpack_require__("BcGY");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/workspace-panel/demos/basic/mock.ts

 // NodeConfig

var NODE_COMMON_PROPS = {
  width: 160,
  height: 32
}; // NodeConfig

var EDGE_COMMON_PROPS = {
  attrs: {
    line: {
      targetMarker: {
        name: 'block',
        width: 4,
        height: 8
      },
      strokeDasharray: '',
      stroke: '#A2B1C3',
      strokeWidth: 1
    }
  }
}; // mock data

var getGraphData = () => {
  var nodes = [Object(objectSpread2["a" /* default */])({
    id: 'node1',
    label: '\u7B97\u6CD5\u8282\u70B9-1'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node2',
    label: '\u7B97\u6CD5\u8282\u70B9-2'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node3',
    label: '\u7B97\u6CD5\u8282\u70B9-3'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node4',
    label: '\u7B97\u6CD5\u8282\u70B9-4'
  }, NODE_COMMON_PROPS)];
  var edges = [Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node2',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node2-input-1'
  }, EDGE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node3',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node3-input-1'
  }, EDGE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node4',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node4-input-1'
  }, EDGE_COMMON_PROPS)];
  return {
    nodes: nodes,
    edges: edges
  };
};
// CONCATENATED MODULE: ./docs/tutorial/extension-components/workspace-panel/demos/basic/graph-config.tsx






var onLoad = /*#__PURE__*/function () {
  var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(app) {
    var res, _res$contextProvider$, graphData;

    return regenerator_default.a.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_LAYOUT.id, {
              layoutType: 'dagre',
              layoutOptions: {
                type: 'dagre',

                /** \u5E03\u5C40\u65B9\u5411 */
                rankdir: 'TB',

                /** \u8282\u70B9\u95F4\u8DDD */
                nodesep: 60,

                /** \u5C42\u95F4\u8DDD */
                ranksep: 30
              },
              graphData: getGraphData()
            });

          case 2:
            res = _context.sent;
            _res$contextProvider$ = res.contextProvider().getResult(), graphData = _res$contextProvider$.graphData; // render

            _context.next = 6;
            return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_RENDER.id, {
              graphData: graphData
            });

          case 6:
            _context.next = 8;
            return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_ZOOM.id, {
              factor: 'real'
            });

          case 8:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function onLoad(_x) {
    return _ref.apply(this, arguments);
  };
}();
/**  graphConfig\uFF1A\u914D\u7F6EGraph  */

var useGraphConfig = Object(es["M" /* createGraphConfig */])(graphConfig => {
  graphConfig.setDefaultNodeRender(props => {
    return /*#__PURE__*/react_default.a.createElement("div", {
      className: "react-node"
    }, " ", props.data.label, " ");
  });
});
// EXTERNAL MODULE: ../xflow/dist/index.css
var dist = __webpack_require__("1MRj");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/workspace-panel/demos/basic/index.tsx
/**
 * title: \u57FA\u7840\u4F7F\u7528
 * desc: \uFF5C
 *    \u83B7\u53D6app, \u5206\u522B\u4F7F\u7528Model/Command/X6Graph <br>
 */






/**  Demo Props  */

var XFlowDemo = props => {
  var graphConfig = useGraphConfig(props);
  return /*#__PURE__*/react_default.a.createElement(es["B" /* XFlow */], {
    onLoad: onLoad,
    className: "xflow-workspace"
  }, /*#__PURE__*/react_default.a.createElement(es["D" /* XFlowCanvas */], {
    config: graphConfig,
    position: {
      top: 0,
      bottom: 0,
      left: 290,
      right: 0
    }
  }), /*#__PURE__*/react_default.a.createElement(custom_panel, {
    position: {
      top: 0,
      bottom: 0,
      left: 0,
      width: 290
    }
  }));
};

/* harmony default export */ var demos_basic = __webpack_exports__["default"] = (XFlowDemo);

//# sourceURL=webpack:///./docs/tutorial/extension-components/workspace-panel/demos/basic/index.tsx_+_3_modules?`)},bDTx:function(module,__webpack_exports__,__webpack_require__){"use strict";eval(`// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "width", function() { return /* binding */ width; });
__webpack_require__.d(__webpack_exports__, "height", function() { return /* binding */ height; });
__webpack_require__.d(__webpack_exports__, "useGraphConfig", function() { return /* binding */ useGraphConfig; });

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__("KOBo");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__("RY7m");
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("q1tI");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ../xflow/es/index.js + 271 modules
var es = __webpack_require__("mqVf");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 3 modules
var slicedToArray = __webpack_require__("jem/");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/input/index.js + 11 modules
var input = __webpack_require__("BmDy");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/form/index.js + 15 modules
var es_form = __webpack_require__("UL5a");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/message/index.js + 3 modules
var message = __webpack_require__("DuHN");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/card/index.js + 2 modules
var card = __webpack_require__("jMRu");

// CONCATENATED MODULE: ./docs/api/commands/nodes/node-front/demos/form.tsx







var formItems = [{
  name: 'nodeId',
  label: 'nodeId',
  rules: [{
    required: true
  }],
  render: input["a" /* default */],
  renderProps: {
    disabled: true
  }
}];
var CmdForm = () => {
  var _usePanelContext = Object(es["V" /* usePanelContext */])(),
      commandService = _usePanelContext.commandService;

  var _Form$useForm = es_form["a" /* default */].useForm(),
      _Form$useForm2 = Object(slicedToArray["a" /* default */])(_Form$useForm, 1),
      form = _Form$useForm2[0];

  var onFinish = /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(values) {
      return regenerator_default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              commandService.executeCommand(es["J" /* XFlowNodeCommands */].FRONT_NODE.id, values);
              console.log('executeCommand with args', values);
              message["b" /* default */].success("".concat(es["J" /* XFlowNodeCommands */].FRONT_NODE.label, ": \\u547D\\u4EE4\\u6267\\u884C\\u6210\\u529F"));
              form.setFieldsValue({
                nodeId: values.nodeId === 'node1' ? 'node2' : 'node1'
              });

            case 4:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function onFinish(_x) {
      return _ref.apply(this, arguments);
    };
  }();

  return /*#__PURE__*/react_default.a.createElement(es["n" /* FormBuilder */], {
    form: form,
    formItems: formItems,
    onFinish: onFinish,
    initialValues: {
      nodeId: 'node1'
    }
  });
};
var FormPanel = () => {
  return /*#__PURE__*/react_default.a.createElement(es["A" /* WorkspacePanel */], {
    position: {
      top: 0,
      left: 0,
      bottom: 0,
      width: 230
    },
    className: "panel"
  }, /*#__PURE__*/react_default.a.createElement(card["a" /* default */], {
    title: "NodeConfig Options",
    size: "small",
    bordered: false
  }, /*#__PURE__*/react_default.a.createElement(CmdForm, null)));
};
// EXTERNAL MODULE: ./docs/api/commands/nodes/node-front/demos/index.less
var demos = __webpack_require__("kgZ3");

// CONCATENATED MODULE: ./docs/api/commands/nodes/node-front/demos/index.tsx






var width = 100;
var height = 40;
/**  graphConfig hook  */

var useGraphConfig = Object(es["M" /* createGraphConfig */])(graphConfig => {
  graphConfig.setX6Config({
    grid: true
  });
  graphConfig.setDefaultNodeRender(props => {
    return /*#__PURE__*/react_default.a.createElement("div", {
      className: "react-node"
    }, " ", props.data.label, " ");
  });
});

var NodeAddDemo = () => {
  var graphConfig = useGraphConfig();

  var onLoad = /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(app) {
      return regenerator_default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              app.executeCommand(es["J" /* XFlowNodeCommands */].ADD_NODE.id, {
                nodeConfig: {
                  id: 'node1',
                  x: 100,
                  y: 30,
                  label: 'NODENODE1',
                  width,
                  height
                }
              });
              app.executeCommand(es["J" /* XFlowNodeCommands */].ADD_NODE.id, {
                nodeConfig: {
                  id: 'node2',
                  x: 120,
                  y: 50,
                  label: 'NODENODE2',
                  width,
                  height
                }
              });
              return _context.abrupt("return", app);

            case 3:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function onLoad(_x) {
      return _ref.apply(this, arguments);
    };
  }();

  return /*#__PURE__*/react_default.a.createElement(es["B" /* XFlow */], {
    meta: {
      flowId: 'add-node-demo'
    },
    onLoad: onLoad,
    className: "xflow-workspace"
  }, /*#__PURE__*/react_default.a.createElement(FormPanel, null), /*#__PURE__*/react_default.a.createElement(es["D" /* XFlowCanvas */], {
    className: "app-main-content",
    config: graphConfig,
    position: {
      top: 0,
      left: 230,
      right: 0,
      bottom: 0
    }
  }));
};

/* harmony default export */ var node_front_demos = __webpack_exports__["default"] = (NodeAddDemo);

//# sourceURL=webpack:///./docs/api/commands/nodes/node-front/demos/index.tsx_+_1_modules?`)},bTza:function(module,__webpack_exports__,__webpack_require__){"use strict";eval(`// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("q1tI");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ../xflow/es/index.js + 271 modules
var es = __webpack_require__("mqVf");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__("KOBo");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__("RY7m");
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/objectSpread2.js
var objectSpread2 = __webpack_require__("BcGY");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-node-panel/demos/basic/mock.ts

 // NodeConfig

var NODE_COMMON_PROPS = {
  width: 160,
  height: 32
}; // NodeConfig

var EDGE_COMMON_PROPS = {
  attrs: {
    line: {
      targetMarker: {
        name: 'block',
        width: 4,
        height: 8
      },
      strokeDasharray: '',
      stroke: '#A2B1C3',
      strokeWidth: 1
    }
  }
}; // mock data

var getGraphData = () => {
  var nodes = [Object(objectSpread2["a" /* default */])({
    id: 'node1',
    label: '\u7B97\u6CD5\u8282\u70B9-1'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node2',
    label: '\u7B97\u6CD5\u8282\u70B9-2'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node3',
    label: '\u7B97\u6CD5\u8282\u70B9-3'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node4',
    label: '\u7B97\u6CD5\u8282\u70B9-4'
  }, NODE_COMMON_PROPS)];
  var edges = [Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node2',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node2-input-1'
  }, EDGE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node3',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node3-input-1'
  }, EDGE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node4',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node4-input-1'
  }, EDGE_COMMON_PROPS)];
  return {
    nodes: nodes,
    edges: edges
  };
};
// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-node-panel/demos/basic/graph-config.tsx






var onLoad = /*#__PURE__*/function () {
  var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(app) {
    var res, _res$contextProvider$, graphData;

    return regenerator_default.a.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_LAYOUT.id, {
              layoutType: 'dagre',
              layoutOptions: {
                type: 'dagre',

                /** \u5E03\u5C40\u65B9\u5411 */
                rankdir: 'TB',

                /** \u8282\u70B9\u95F4\u8DDD */
                nodesep: 60,

                /** \u5C42\u95F4\u8DDD */
                ranksep: 30
              },
              graphData: getGraphData()
            });

          case 2:
            res = _context.sent;
            _res$contextProvider$ = res.contextProvider().getResult(), graphData = _res$contextProvider$.graphData; // render

            _context.next = 6;
            return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_RENDER.id, {
              graphData: graphData
            });

          case 6:
            _context.next = 8;
            return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_ZOOM.id, {
              factor: 'real'
            });

          case 8:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function onLoad(_x) {
    return _ref.apply(this, arguments);
  };
}();
/**  graphConfig\uFF1A\u914D\u7F6EGraph  */

var useGraphConfig = Object(es["M" /* createGraphConfig */])(graphConfig => {
  graphConfig.setDefaultNodeRender(props => {
    return /*#__PURE__*/react_default.a.createElement("div", {
      className: "react-dnd-node"
    }, " ", props.data.label, " ");
  });
});
// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-node-panel/demos/basic/comannd-utils.tsx


var addNode = (cmd, nodeConfig) => {
  return cmd.executeCommand(es["J" /* XFlowNodeCommands */].ADD_NODE.id, {
    nodeConfig: Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({}, nodeConfig), {}, {
      id: Object(es["X" /* uuidv4 */])(),
      width: 190,
      height: 32
    })
  });
};
// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-node-panel/demos/basic/dnd-tree-config.tsx





var DND_RENDER_ID = 'DND_RENDER_ID';
var onNodeDrop = /*#__PURE__*/function () {
  var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(nodeConfig, commandService, modelService) {
    return regenerator_default.a.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            addNode(commandService, nodeConfig);

          case 1:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function onNodeDrop(_x, _x2, _x3) {
    return _ref.apply(this, arguments);
  };
}();
var treeDataService = /*#__PURE__*/function () {
  var _ref2 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee2(meta, modelService) {
    return regenerator_default.a.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            return _context2.abrupt("return", [{
              id: '1',
              label: '\u6570\u636E\u8BFB\u5199',
              parentId: '',
              renderKey: es["E" /* XFlowConstants */].XFLOW_DEFAULT_NODE
            }, {
              id: '2',
              label: '\u7B97\u6CD5\u7EC4\u4EF61',
              parentId: '1',
              width: 190,
              height: 32,
              renderKey: es["E" /* XFlowConstants */].XFLOW_DEFAULT_NODE,
              popoverContent: /*#__PURE__*/react_default.a.createElement("div", null, " test ")
            }, {
              id: '3',
              label: '\u7B97\u6CD5\u7EC4\u4EF62',
              parentId: '1',
              renderKey: es["E" /* XFlowConstants */].XFLOW_DEFAULT_NODE
            }, {
              id: '4',
              label: '\u7B97\u6CD5\u7EC4\u4EF63',
              parentId: '1',
              renderKey: es["E" /* XFlowConstants */].XFLOW_DEFAULT_NODE
            }, {
              id: '5',
              label: '\u6570\u636E\u52A0\u5DE5',
              parentId: '',
              renderKey: es["E" /* XFlowConstants */].XFLOW_DEFAULT_NODE
            }, {
              id: '6',
              label: '\u7B97\u6CD5\u7EC4\u4EF64',
              parentId: '5',
              renderKey: es["E" /* XFlowConstants */].XFLOW_DEFAULT_NODE
            }, {
              id: '7',
              label: '\u7B97\u6CD5\u7EC4\u4EF65',
              parentId: '5',
              renderKey: es["E" /* XFlowConstants */].XFLOW_DEFAULT_NODE
            }, {
              id: '8',
              label: '\u7B97\u6CD5\u7EC4\u4EF66',
              parentId: '5',
              renderKey: es["E" /* XFlowConstants */].XFLOW_DEFAULT_NODE
            }, {
              id: '9',
              label: '\u6A21\u578B\u8BAD\u7EC3',
              parentId: '',
              renderKey: es["E" /* XFlowConstants */].XFLOW_DEFAULT_NODE
            }, {
              id: '10',
              label: '\u7B97\u6CD5\u7EC4\u4EF67',
              parentId: '9',
              renderKey: es["E" /* XFlowConstants */].XFLOW_DEFAULT_NODE
            }, {
              id: '11',
              label: '\u7B97\u6CD5\u7EC4\u4EF68',
              parentId: '9',
              renderKey: es["E" /* XFlowConstants */].XFLOW_DEFAULT_NODE
            }, {
              id: '12',
              label: '\u7B97\u6CD5\u7EC4\u4EF69',
              parentId: '9',
              renderKey: es["E" /* XFlowConstants */].XFLOW_DEFAULT_NODE
            }]);

          case 1:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));

  return function treeDataService(_x4, _x5) {
    return _ref2.apply(this, arguments);
  };
}();
// EXTERNAL MODULE: ./docs/tutorial/extension-components/canvas-node-panel/demos/basic/index.less
var basic = __webpack_require__("Tjt5");

// EXTERNAL MODULE: ../xflow/dist/index.css
var dist = __webpack_require__("1MRj");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-node-panel/demos/basic/index.tsx
/**
 * title: \u57FA\u7840\u4F7F\u7528
 * desc: |
 *  treeDataService:\u8FD4\u56DE\u5E73\u94FA\u7684\u6811\u7ED3\u6784 <br>
 *  \u901A\u8FC7parentId\u5C06node\u7EC4\u7EC7\u5230\u5BF9\u5E94\u6587\u4EF6\u5939\u4E0B, parentId \u4E3A\u7A7A\u7684\u8282\u70B9\u662F\u6587\u4EF6\u5939\u8282\u70B9 <br>
 *  \u652F\u6301popoverContent\u5C5E\u6027  <br>
 *  onNodeDrop \u56DE\u8C03\u65F6\u65F6\uFF0C\u8981\u6C42\u4F7F\u7528\u547D\u4EE4\u521B\u5EFA\u8282\u70B9  <br>
 */







var XFlowDemo = props => {
  var graphConfig = useGraphConfig(props);
  return /*#__PURE__*/react_default.a.createElement(es["B" /* XFlow */], {
    onLoad: onLoad,
    className: "xflow-workspace"
  }, /*#__PURE__*/react_default.a.createElement(es["w" /* NodeTreePanel */], {
    header: /*#__PURE__*/react_default.a.createElement("h4", {
      className: "dnd-panel-header"
    }, " \\u7EC4\\u4EF6\\u9762\\u677F "),
    footer: /*#__PURE__*/react_default.a.createElement("div", null, " Foorter "),
    onNodeDrop: onNodeDrop,
    treeDataService: treeDataService,
    position: {
      top: 0,
      bottom: 0,
      left: 0,
      width: 290
    }
  }), /*#__PURE__*/react_default.a.createElement(es["D" /* XFlowCanvas */], {
    config: graphConfig,
    position: {
      top: 0,
      bottom: 0,
      left: 290,
      right: 0
    }
  }));
};

/* harmony default export */ var demos_basic = __webpack_exports__["default"] = (XFlowDemo);

//# sourceURL=webpack:///./docs/tutorial/extension-components/canvas-node-panel/demos/basic/index.tsx_+_4_modules?`)},fLTG:function(module,__webpack_exports__,__webpack_require__){"use strict";eval(`__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useGraphConfig", function() { return useGraphConfig; });
/* harmony import */ var _Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("KOBo");
/* harmony import */ var _Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("RY7m");
/* harmony import */ var _Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("q1tI");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _antv_xflow__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("mqVf");
/* harmony import */ var _index_less__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("m2sD");
/* harmony import */ var _index_less__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_index_less__WEBPACK_IMPORTED_MODULE_4__);





/** graphConfig hook */

var useGraphConfig = Object(_antv_xflow__WEBPACK_IMPORTED_MODULE_3__[/* createGraphConfig */ "M"])(config => {
  config.setX6Config({
    grid: true
  });
  config.setNodeRender('NODE1', props => {
    var _props$data;

    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("div", {
      className: "react-node"
    }, (_props$data = props.data) === null || _props$data === void 0 ? void 0 : _props$data.info);
  });
  config.setNodeTypeParser(node => node === null || node === void 0 ? void 0 : node.renderKey);
});

var Demo = () => {
  var onLoad = /*#__PURE__*/function () {
    var _ref = Object(_Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])( /*#__PURE__*/_Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee(app) {
      var nodes, edges, graphData;
      return _Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              nodes = [{
                id: 'root1',
                x: 200,
                y: 50,
                width: 120,
                height: 40,
                renderKey: 'NODE1',
                info: 'React\u8282\u70B91'
              }, {
                id: 'down1',
                x: 550,
                y: 50,
                width: 120,
                height: 40,
                renderKey: 'NODE1',
                info: 'React\u8282\u70B92'
              }];
              edges = [{
                id: 'root1-down1',
                source: 'root1',
                target: 'down1',
                label: 'text'
              }];
              graphData = {
                nodes,
                edges
              };
              /** \u6267\u884C\u753B\u5E03\u6E32\u67D3\u547D\u4EE4 */

              app.executeCommand(_antv_xflow__WEBPACK_IMPORTED_MODULE_3__[/* XFlowGraphCommands */ "H"].GRAPH_RENDER.id, {
                graphData
              });

            case 4:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function onLoad(_x) {
      return _ref.apply(this, arguments);
    };
  }();

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_antv_xflow__WEBPACK_IMPORTED_MODULE_3__[/* XFlow */ "B"], {
    onLoad: onLoad,
    className: "xflow-render-graph-demo"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_antv_xflow__WEBPACK_IMPORTED_MODULE_3__[/* XFlowCanvas */ "D"], {
    config: useGraphConfig()
  }));
};

/* harmony default export */ __webpack_exports__["default"] = (Demo);

//# sourceURL=webpack:///./docs/api/commands/graph/graph-render/demos/index.tsx?`)},kcdX:function(module,__webpack_exports__,__webpack_require__){"use strict";eval(`// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "useGraphConfig", function() { return /* binding */ useGraphConfig; });

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/objectSpread2.js
var objectSpread2 = __webpack_require__("BcGY");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__("KOBo");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__("RY7m");
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("q1tI");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ../xflow/es/index.js + 271 modules
var es = __webpack_require__("mqVf");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/lodash/lodash.js
var lodash = __webpack_require__("nsO7");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-config-form/demos/basic/mock.ts

 // NodeConfig

var NODE_COMMON_PROPS = {
  width: 160,
  height: 32
}; // NodeConfig

var EDGE_COMMON_PROPS = {
  attrs: {
    line: {
      targetMarker: {
        name: 'block',
        width: 4,
        height: 8
      },
      strokeDasharray: '',
      stroke: '#A2B1C3',
      strokeWidth: 1
    }
  }
}; // mock data

var getGraphData = () => {
  var nodes = [Object(objectSpread2["a" /* default */])({
    id: 'node1',
    label: '\u7B97\u6CD5\u8282\u70B9-1'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node2',
    label: '\u7B97\u6CD5\u8282\u70B9-2'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node3',
    label: '\u7B97\u6CD5\u8282\u70B9-3'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node4',
    label: '\u7B97\u6CD5\u8282\u70B9-4'
  }, NODE_COMMON_PROPS)];
  var edges = [Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node2',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node2-input-1'
  }, EDGE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node3',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node3-input-1'
  }, EDGE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node4',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node4-input-1'
  }, EDGE_COMMON_PROPS)];
  return {
    nodes: nodes,
    edges: edges
  };
};
// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-config-form/demos/basic/graph-config.tsx




var onLoad = /*#__PURE__*/function () {
  var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(app) {
    var res, _res$contextProvider$, graphData;

    return regenerator_default.a.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_LAYOUT.id, {
              layoutType: 'dagre',
              layoutOptions: {
                type: 'dagre',

                /** \u5E03\u5C40\u65B9\u5411 */
                rankdir: 'TB',

                /** \u8282\u70B9\u95F4\u8DDD */
                nodesep: 60,

                /** \u5C42\u95F4\u8DDD */
                ranksep: 30
              },
              graphData: getGraphData()
            });

          case 2:
            res = _context.sent;
            _res$contextProvider$ = res.contextProvider().getResult(), graphData = _res$contextProvider$.graphData; // render

            _context.next = 6;
            return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_RENDER.id, {
              graphData: graphData
            });

          case 6:
            _context.next = 8;
            return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_ZOOM.id, {
              factor: 'real'
            });

          case 8:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function onLoad(_x) {
    return _ref.apply(this, arguments);
  };
}();
// EXTERNAL MODULE: ../xflow/dist/index.css
var dist = __webpack_require__("1MRj");

// EXTERNAL MODULE: ./docs/tutorial/extension-components/canvas-config-form/demos/basic/index.less
var basic = __webpack_require__("YxKg");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-config-form/demos/basic/index.tsx




/**
 * title: \u57FA\u7840\u4F7F\u7528
 * desc: |
 *  \u4F7F\u7528 formSchemaService \u51FD\u6570\u8FD4\u56DE\u7684\u6570\u636E\u4F5C\u4E3Aform\u7684schema <br>
 *  schema \u4E2D\u7684 shape \u5B57\u6BB5\u51B3\u5B9A\u6E32\u67D3\u7684\u7EC4\u4EF6 <br>
 *  \u7528\u6237\u4FEE\u6539\u8868\u5355\u9879\u540E\u4F1A\u89E6\u53D1 formValueUpdateService \u7684\u56DE\u8C03\uFF0C\u56DE\u8C03\u4E2D\u53EF\u4EE5\u4FDD\u5B58\u6570\u636E <br>
 */






/**  Demo Props  */

/**  graphConfig\uFF1A\u914D\u7F6EGraph  */
var useGraphConfig = Object(es["M" /* createGraphConfig */])(graphConfig => {
  graphConfig.setDefaultNodeRender(props => {
    return /*#__PURE__*/react_default.a.createElement("div", {
      className: "react-node"
    }, " ", props.data.label, " ");
  });
});
var NsJsonForm;

(function (_NsJsonForm) {
  /** ControlShape\u7684Enum */
  var ControlShape = es["z" /* NsJsonSchemaForm */].ControlShape;
  /** \u4FDD\u5B58form\u7684values */

  var formValueUpdateService = _NsJsonForm.formValueUpdateService = /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(args) {
      var values, commandService, targetData, updateNode, nodeConfig;
      return regenerator_default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              values = args.values, commandService = args.commandService, targetData = args.targetData;

              updateNode = node => {
                return commandService.executeCommand(es["J" /* XFlowNodeCommands */].UPDATE_NODE.id, {
                  nodeConfig: node
                });
              };

              console.log('formValueUpdateService  values:', values, args);
              nodeConfig = Object(objectSpread2["a" /* default */])({}, targetData);
              values.forEach(val => {
                Object(lodash["set"])(nodeConfig, val.name, val.value);
              });
              updateNode(nodeConfig);

            case 6:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function (_x) {
      return _ref.apply(this, arguments);
    };
  }();

  var formSchemaService = _NsJsonForm.formSchemaService = /*#__PURE__*/function () {
    var _ref2 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee2(args) {
      var targetData;
      return regenerator_default.a.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              targetData = args.targetData;
              console.log("formSchemaService args:", args);

              if (targetData) {
                _context2.next = 4;
                break;
              }

              return _context2.abrupt("return", {
                tabs: [{
                  /** Tab\u7684title */
                  name: '\u753B\u5E03\u914D\u7F6E',
                  groups: []
                }]
              });

            case 4:
              return _context2.abrupt("return", {
                /** \u914D\u7F6E\u4E00\u4E2ATab */
                tabs: [{
                  /** Tab\u7684title */
                  name: '\u8282\u70B9\u914D\u7F6E',
                  groups: [{
                    name: 'group1',
                    controls: [{
                      name: 'label',
                      label: '\u8282\u70B9Label',
                      shape: ControlShape.INPUT,
                      value: targetData.label
                    }, {
                      name: 'x',
                      label: 'x',
                      shape: ControlShape.FLOAT,
                      value: targetData.x
                    }, {
                      name: 'y',
                      label: 'y',
                      shape: ControlShape.FLOAT,
                      value: targetData.y
                    }]
                  }]
                }]
              });

            case 5:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    }));

    return function (_x2) {
      return _ref2.apply(this, arguments);
    };
  }();
})(NsJsonForm || (NsJsonForm = {}));

var XFlowDemo = props => {
  var graphConfig = useGraphConfig(props);
  return /*#__PURE__*/react_default.a.createElement(es["B" /* XFlow */], {
    onLoad: onLoad,
    className: "xflow-workspace"
  }, /*#__PURE__*/react_default.a.createElement(es["D" /* XFlowCanvas */], {
    config: graphConfig,
    position: {
      top: 0,
      bottom: 0,
      left: 0,
      right: 290
    }
  }), /*#__PURE__*/react_default.a.createElement(es["r" /* JsonSchemaForm */], {
    formSchemaService: NsJsonForm.formSchemaService,
    formValueUpdateService: NsJsonForm.formValueUpdateService,
    position: {
      top: 0,
      bottom: 0,
      right: 0,
      width: 290
    }
  }));
};

/* harmony default export */ var demos_basic = __webpack_exports__["default"] = (XFlowDemo);

//# sourceURL=webpack:///./docs/tutorial/extension-components/canvas-config-form/demos/basic/index.tsx_+_2_modules?`)},moO5:function(module,__webpack_exports__,__webpack_require__){"use strict";eval(`// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "useGraphConfig", function() { return /* binding */ useGraphConfig; });

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__("KOBo");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__("RY7m");
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("q1tI");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ../xflow/es/index.js + 271 modules
var es = __webpack_require__("mqVf");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/objectSpread2.js
var objectSpread2 = __webpack_require__("BcGY");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-snapline/demos/color/mock.ts

 // NodeConfig

var NODE_COMMON_PROPS = {
  width: 160,
  height: 32
}; // NodeConfig

var EDGE_COMMON_PROPS = {
  attrs: {
    line: {
      targetMarker: {
        name: 'block',
        width: 4,
        height: 8
      },
      strokeDasharray: '',
      stroke: '#A2B1C3',
      strokeWidth: 1
    }
  }
}; // mock data

var getGraphData = () => {
  var nodes = [Object(objectSpread2["a" /* default */])({
    id: 'node1',
    label: '\u7B97\u6CD5\u8282\u70B9-1'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node2',
    label: '\u7B97\u6CD5\u8282\u70B9-2'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node3',
    label: '\u7B97\u6CD5\u8282\u70B9-3'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node4',
    label: '\u7B97\u6CD5\u8282\u70B9-4'
  }, NODE_COMMON_PROPS)];
  var edges = [Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node2',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node2-input-1'
  }, EDGE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node3',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node3-input-1'
  }, EDGE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node4',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node4-input-1'
  }, EDGE_COMMON_PROPS)];
  return {
    nodes: nodes,
    edges: edges
  };
};
// EXTERNAL MODULE: ./docs/tutorial/extension-components/canvas-snapline/demos/color/index.less
var color = __webpack_require__("XWkc");

// EXTERNAL MODULE: ../xflow/dist/index.css
var dist = __webpack_require__("1MRj");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-snapline/demos/color/index.tsx



/**
 * title: \u5BF9\u9F50\u7EBF\u989C\u8272
 * desc: \u4F7F\u7528color\u5C5E\u6027\u914D\u7F6E\u4E0D\u540C\u7684\u5BF9\u9F50\u7EBF\u989C\u8272
 */





/**  Demo Props  */

/**  graphConfig\uFF1A\u914D\u7F6EGraph  */
var useGraphConfig = Object(es["M" /* createGraphConfig */])(graphConfig => {
  graphConfig.setDefaultNodeRender(props => {
    return /*#__PURE__*/react_default.a.createElement("div", {
      className: "react-node"
    }, " ", props.data.label, " ");
  });
});

var XFlowDemo = props => {
  var graphConfig = useGraphConfig(props);

  var onLoad = /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(app) {
      var res, _res$contextProvider$, graphData;

      return regenerator_default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_LAYOUT.id, {
                layoutType: 'dagre',
                layoutOptions: {
                  type: 'dagre',

                  /** \u5E03\u5C40\u65B9\u5411 */
                  rankdir: 'TB',

                  /** \u8282\u70B9\u95F4\u8DDD */
                  nodesep: 60,

                  /** \u5C42\u95F4\u8DDD */
                  ranksep: 30
                },
                graphData: getGraphData()
              });

            case 2:
              res = _context.sent;
              _res$contextProvider$ = res.contextProvider().getResult(), graphData = _res$contextProvider$.graphData; // render

              _context.next = 6;
              return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_RENDER.id, {
                graphData: graphData
              });

            case 6:
              _context.next = 8;
              return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_ZOOM.id, {
                factor: 'real'
              });

            case 8:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function onLoad(_x) {
      return _ref.apply(this, arguments);
    };
  }();

  return /*#__PURE__*/react_default.a.createElement(es["B" /* XFlow */], {
    onLoad: onLoad,
    className: "xflow-workspace"
  }, /*#__PURE__*/react_default.a.createElement(es["D" /* XFlowCanvas */], {
    config: graphConfig,
    position: {
      top: 0,
      bottom: 0,
      left: 0,
      right: 0
    }
  }, /*#__PURE__*/react_default.a.createElement(es["e" /* CanvasSnapline */], {
    color: "#873bf4"
  })));
};

/* harmony default export */ var demos_color = __webpack_exports__["default"] = (XFlowDemo);

//# sourceURL=webpack:///./docs/tutorial/extension-components/canvas-snapline/demos/color/index.tsx_+_1_modules?`)},mqVf:function(module,__webpack_exports__,__webpack_require__){"use strict";eval(`
// EXPORTS
__webpack_require__.d(__webpack_exports__, "u", function() { return /* reexport */ index_esm; });
__webpack_require__.d(__webpack_exports__, "x", function() { return /* reexport */ NsGraph; });
__webpack_require__.d(__webpack_exports__, "B", function() { return /* reexport */ XFlow; });
__webpack_require__.d(__webpack_exports__, "D", function() { return /* reexport */ XFlowCanvas; });
__webpack_require__.d(__webpack_exports__, "C", function() { return /* reexport */ XFlowAppProvider; });
__webpack_require__.d(__webpack_exports__, "W", function() { return /* reexport */ useXFlowApp; });
__webpack_require__.d(__webpack_exports__, "M", function() { return /* reexport */ createGraphConfig; });
__webpack_require__.d(__webpack_exports__, "p", function() { return /* reexport */ ICommandContextProvider; });
__webpack_require__.d(__webpack_exports__, "J", function() { return /* reexport */ XFlowNodeCommands; });
__webpack_require__.d(__webpack_exports__, "G", function() { return /* reexport */ XFlowEdgeCommands; });
__webpack_require__.d(__webpack_exports__, "I", function() { return /* reexport */ XFlowGroupCommands; });
__webpack_require__.d(__webpack_exports__, "H", function() { return /* reexport */ XFlowGraphCommands; });
__webpack_require__.d(__webpack_exports__, "K", function() { return /* reexport */ createCmdConfig; });
__webpack_require__.d(__webpack_exports__, "T", function() { return /* reexport */ useAppContext; });
__webpack_require__.d(__webpack_exports__, "N", function() { return /* reexport */ createHookConfig; });
__webpack_require__.d(__webpack_exports__, "t", function() { return /* reexport */ model_service_constant_namespaceObject; });
__webpack_require__.d(__webpack_exports__, "P", function() { return /* reexport */ createModelServiceConfig; });
__webpack_require__.d(__webpack_exports__, "U", function() { return /* reexport */ useModelAsync; });
__webpack_require__.d(__webpack_exports__, "v", function() { return /* reexport */ MenuItemType; });
__webpack_require__.d(__webpack_exports__, "s", function() { return /* reexport */ KeyBindings; });
__webpack_require__.d(__webpack_exports__, "O", function() { return /* reexport */ createKeybindingConfig; });
__webpack_require__.d(__webpack_exports__, "i", function() { return /* reexport */ disposable_DisposableCollection; });
__webpack_require__.d(__webpack_exports__, "h", function() { return /* reexport */ Deferred; });
__webpack_require__.d(__webpack_exports__, "R", function() { return /* reexport */ delay; });
__webpack_require__.d(__webpack_exports__, "X", function() { return /* reexport */ uuidv4; });
__webpack_require__.d(__webpack_exports__, "q", function() { return /* reexport */ IconStore; });
__webpack_require__.d(__webpack_exports__, "E", function() { return /* reexport */ constants_namespaceObject; });
__webpack_require__.d(__webpack_exports__, "e", function() { return /* reexport */ CanvasSnapline; });
__webpack_require__.d(__webpack_exports__, "c", function() { return /* reexport */ CanvasNodePortTooltip; });
__webpack_require__.d(__webpack_exports__, "a", function() { return /* reexport */ CanvasContextMenu; });
__webpack_require__.d(__webpack_exports__, "L", function() { return /* reexport */ createCtxMenuConfig; });
__webpack_require__.d(__webpack_exports__, "d", function() { return /* reexport */ CanvasScaleToolbar; });
__webpack_require__.d(__webpack_exports__, "f", function() { return /* reexport */ CanvasToolbar; });
__webpack_require__.d(__webpack_exports__, "Q", function() { return /* reexport */ createToolbarConfig; });
__webpack_require__.d(__webpack_exports__, "n", function() { return /* reexport */ FormBuilder; });
__webpack_require__.d(__webpack_exports__, "S", function() { return /* reexport */ randomInt; });
__webpack_require__.d(__webpack_exports__, "b", function() { return /* reexport */ CanvasMiniMap; });
__webpack_require__.d(__webpack_exports__, "w", function() { return /* reexport */ NodeTreePanel; });
__webpack_require__.d(__webpack_exports__, "r", function() { return /* reexport */ JsonSchemaForm; });
__webpack_require__.d(__webpack_exports__, "o", function() { return /* reexport */ FormItemWrapper; });
__webpack_require__.d(__webpack_exports__, "z", function() { return /* reexport */ canvas_json_schema_form_interface_namespaceObject; });
__webpack_require__.d(__webpack_exports__, "A", function() { return /* reexport */ WorkspacePanel; });
__webpack_require__.d(__webpack_exports__, "V", function() { return /* reexport */ usePanelContext; });
__webpack_require__.d(__webpack_exports__, "g", function() { return /* reexport */ DagGraphExtension; });
__webpack_require__.d(__webpack_exports__, "F", function() { return /* reexport */ XFlowDagCommands; });
__webpack_require__.d(__webpack_exports__, "y", function() { return /* reexport */ command_NsGraphStatusCommand; });
__webpack_require__.d(__webpack_exports__, "j", function() { return /* reexport */ FlowchartCanvas; });
__webpack_require__.d(__webpack_exports__, "k", function() { return /* reexport */ FlowchartExtension; });
__webpack_require__.d(__webpack_exports__, "m", function() { return /* reexport */ FlowchartNodePanel; });
__webpack_require__.d(__webpack_exports__, "l", function() { return /* reexport */ FlowchartFormPanel; });

// UNUSED EXPORTS: XFlowAppExtensionMoudle, XFlowAppContext, useXflowPrefixCls, XFlowConfigProviderContext, ExtensionRegistryContext, useExtensionRegistry, IGraphProvider, IApplication, IApplicationContribution, ICommandHandler, IGraphCommandService, IGraphCommandContribution, IGraphCommandFactory, GraphCommandRegistry, commandRegistryModule, XFlowModelCommands, AppContext, getNodeReactComponent, IHookService, IHookContribution, IModelService, IModelContribution, RxModel, NsModel, useModel, createComponentModel, useIsMountedRef, ToolbarRegistry, IToolbarService, IToolbarContribution, IMenuService, IMenuContribution, MenuRegistry, KeybindingConfig, IKeyBindingContribution, Disposable, usePositionStyle, insertCss, CANVAS_SCALE_TOOLBAR_CONFIG, NsNodeTreePanelModel, NsNodeTreePanel, NsJsonSchemaFormModel, executeJsonSchemaFormCommand, GRAPH_STATUS_INFO, FlowGraphExtension, FlowchartFormWrapper, HookHub, ScheduleTypeEnum

// NAMESPACE OBJECT: ../xflow-core/es/constants.js
var constants_namespaceObject = {};
__webpack_require__.r(constants_namespaceObject);
__webpack_require__.d(constants_namespaceObject, "X6_NODE_PORTAL_NODE_VIEW", function() { return X6_NODE_PORTAL_NODE_VIEW; });
__webpack_require__.d(constants_namespaceObject, "XFLOW_PREFIX_CLS", function() { return XFLOW_PREFIX_CLS; });
__webpack_require__.d(constants_namespaceObject, "MIN_ZOOM", function() { return MIN_ZOOM; });
__webpack_require__.d(constants_namespaceObject, "MAX_ZOOM", function() { return MAX_ZOOM; });
__webpack_require__.d(constants_namespaceObject, "XFLOW_DEFAULT_NODE", function() { return XFLOW_DEFAULT_NODE; });
__webpack_require__.d(constants_namespaceObject, "XFLOW_DEFAULT_GROUP_NODE", function() { return XFLOW_DEFAULT_GROUP_NODE; });
__webpack_require__.d(constants_namespaceObject, "XFLOW_DEFAULT_EDGE", function() { return XFLOW_DEFAULT_EDGE; });
__webpack_require__.d(constants_namespaceObject, "LOCAL_STORAGE_KEY", function() { return LOCAL_STORAGE_KEY; });
__webpack_require__.d(constants_namespaceObject, "DEFAULT_NODE_HEIGHT", function() { return DEFAULT_NODE_HEIGHT; });
__webpack_require__.d(constants_namespaceObject, "DEFAULT_NODE_WIDTH", function() { return DEFAULT_NODE_WIDTH; });
__webpack_require__.d(constants_namespaceObject, "XFLOW_GROUP_DEFAULT_COLLAPSED_SIZE", function() { return XFLOW_GROUP_DEFAULT_COLLAPSED_SIZE; });

// NAMESPACE OBJECT: ../xflow-core/es/model-service/constant.js
var model_service_constant_namespaceObject = {};
__webpack_require__.r(model_service_constant_namespaceObject);
__webpack_require__.d(model_service_constant_namespaceObject, "isModelExistUtil", function() { return isModelExistUtil; });
__webpack_require__.d(model_service_constant_namespaceObject, "getModelUtil", function() { return getModelUtil; });
__webpack_require__.d(model_service_constant_namespaceObject, "useModelValueUtil", function() { return useModelValueUtil; });
__webpack_require__.d(model_service_constant_namespaceObject, "GRAPH_ENABLE_MULTI_SELECT", function() { return GRAPH_ENABLE_MULTI_SELECT; });
__webpack_require__.d(model_service_constant_namespaceObject, "IS_NODE_SELECTED", function() { return IS_NODE_SELECTED; });
__webpack_require__.d(model_service_constant_namespaceObject, "IS_GROUP_SELECTED", function() { return IS_GROUP_SELECTED; });
__webpack_require__.d(model_service_constant_namespaceObject, "IS_NORMAL_NODES_SELECTED", function() { return IS_NORMAL_NODES_SELECTED; });
__webpack_require__.d(model_service_constant_namespaceObject, "SELECTED_CELL", function() { return SELECTED_CELL; });
__webpack_require__.d(model_service_constant_namespaceObject, "SELECTED_CELLS", function() { return SELECTED_CELLS; });
__webpack_require__.d(model_service_constant_namespaceObject, "SELECTED_NODE", function() { return SELECTED_NODE; });
__webpack_require__.d(model_service_constant_namespaceObject, "SELECTED_NODES", function() { return SELECTED_NODES; });
__webpack_require__.d(model_service_constant_namespaceObject, "SELECTED_EDGES", function() { return SELECTED_EDGES; });
__webpack_require__.d(model_service_constant_namespaceObject, "SELECTED_GROUPS", function() { return SELECTED_GROUPS; });
__webpack_require__.d(model_service_constant_namespaceObject, "CONTEXTMENU_NODE", function() { return CONTEXTMENU_NODE; });
__webpack_require__.d(model_service_constant_namespaceObject, "CONTEXTMENU_EDGE", function() { return CONTEXTMENU_EDGE; });
__webpack_require__.d(model_service_constant_namespaceObject, "CONTEXTMENU_TARGET", function() { return CONTEXTMENU_TARGET; });
__webpack_require__.d(model_service_constant_namespaceObject, "GRAPH_META", function() { return GRAPH_META; });
__webpack_require__.d(model_service_constant_namespaceObject, "GRAPH_SCALE", function() { return GRAPH_SCALE; });
__webpack_require__.d(model_service_constant_namespaceObject, "COMMAND_REDOABLE", function() { return COMMAND_REDOABLE; });
__webpack_require__.d(model_service_constant_namespaceObject, "COMMAND_UNDOABLE", function() { return COMMAND_UNDOABLE; });
__webpack_require__.d(model_service_constant_namespaceObject, "COMMAND_GLOBALS", function() { return COMMAND_GLOBALS; });
__webpack_require__.d(model_service_constant_namespaceObject, "HISTORY_UNDOABLE", function() { return HISTORY_UNDOABLE; });
__webpack_require__.d(model_service_constant_namespaceObject, "HISTORY_REDOABLE", function() { return HISTORY_REDOABLE; });

// NAMESPACE OBJECT: ../xflow-extension/es/canvas-json-schema-form/interface.js
var canvas_json_schema_form_interface_namespaceObject = {};
__webpack_require__.r(canvas_json_schema_form_interface_namespaceObject);
__webpack_require__.d(canvas_json_schema_form_interface_namespaceObject, "ControlShape", function() { return ControlShape; });

// NAMESPACE OBJECT: ../xflow-extension/es/flowchart-node-panel/nodes/index.js
var nodes_namespaceObject = {};
__webpack_require__.r(nodes_namespaceObject);
__webpack_require__.d(nodes_namespaceObject, "ProcessNode", function() { return ProcessNode; });
__webpack_require__.d(nodes_namespaceObject, "DecisionNode", function() { return DecisionNode; });
__webpack_require__.d(nodes_namespaceObject, "ConnectorNode", function() { return ConnectorNode; });
__webpack_require__.d(nodes_namespaceObject, "DataIONode", function() { return DataIONode; });
__webpack_require__.d(nodes_namespaceObject, "TerminalNode", function() { return TerminalNode; });
__webpack_require__.d(nodes_namespaceObject, "DatabaseNode", function() { return DatabaseNode; });
__webpack_require__.d(nodes_namespaceObject, "HardDiskNode", function() { return HardDiskNode; });
__webpack_require__.d(nodes_namespaceObject, "StroedDataNode", function() { return StroedDataNode; });
__webpack_require__.d(nodes_namespaceObject, "DocumentNode", function() { return DocumentNode; });
__webpack_require__.d(nodes_namespaceObject, "MultiDocumentNode", function() { return MultiDocumentNode; });
__webpack_require__.d(nodes_namespaceObject, "PredefinedProcessNode", function() { return PredefinedProcessNode; });
__webpack_require__.d(nodes_namespaceObject, "ExtractNode", function() { return ExtractNode; });
__webpack_require__.d(nodes_namespaceObject, "MergeNode", function() { return MergeNode; });
__webpack_require__.d(nodes_namespaceObject, "OrNode", function() { return OrNode; });
__webpack_require__.d(nodes_namespaceObject, "ManualInputNode", function() { return ManualInputNode; });
__webpack_require__.d(nodes_namespaceObject, "PreparationNode", function() { return PreparationNode; });
__webpack_require__.d(nodes_namespaceObject, "DelayNode", function() { return DelayNode; });
__webpack_require__.d(nodes_namespaceObject, "ManualOperationNode", function() { return ManualOperationNode; });
__webpack_require__.d(nodes_namespaceObject, "DisplayNode", function() { return DisplayNode; });
__webpack_require__.d(nodes_namespaceObject, "OffPageLinkNode", function() { return OffPageLinkNode; });
__webpack_require__.d(nodes_namespaceObject, "NoteLeftNode", function() { return NoteLeftNode; });
__webpack_require__.d(nodes_namespaceObject, "NoteRightNode", function() { return NoteRightNode; });
__webpack_require__.d(nodes_namespaceObject, "InternalStorageNode", function() { return InternalStorageNode; });
__webpack_require__.d(nodes_namespaceObject, "TextNode", function() { return TextNode; });

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/mana-syringe/dist/index.esm.js
var index_esm = __webpack_require__("rZgF");

// CONCATENATED MODULE: ../xflow-core/es/interface.js
/**
 * XFlow\u753B\u5E03\u6570\u636E
 */
var NsGraph;
(function (NsGraph) {
    /** \u8282\u70B9\u951A\u70B9\u4F4D\u7F6E\uFF1A\u4E0A/\u4E0B/\u5DE6/\u53F3 */
    let AnchorGroup;
    (function (AnchorGroup) {
        AnchorGroup["TOP"] = "top";
        AnchorGroup["BOTTOM"] = "bottom";
        AnchorGroup["RIGHT"] = "right";
        AnchorGroup["LEFT"] = "left";
    })(AnchorGroup = NsGraph.AnchorGroup || (NsGraph.AnchorGroup = {}));
    /** \u951A\u70B9\u7C7B\u578B\uFF1A \u8F93\u5165/\u8F93\u51FA */
    let AnchorType;
    (function (AnchorType) {
        AnchorType["INPUT"] = "input";
        AnchorType["OUTPUT"] = "output";
    })(AnchorType = NsGraph.AnchorType || (NsGraph.AnchorType = {}));
})(NsGraph || (NsGraph = {}));
//# sourceMappingURL=interface.js.map
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("q1tI");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/classnames/index.js
var classnames = __webpack_require__("O94r");
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/reflect-metadata/Reflect.js
var reflect_metadata_Reflect = __webpack_require__("qzOT");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@antv/x6/es/index.js + 462 modules
var es = __webpack_require__("xShM");

// EXTERNAL MODULE: ./node_modules/react-dom/index.js
var react_dom = __webpack_require__("i8i4");
var react_dom_default = /*#__PURE__*/__webpack_require__.n(react_dom);

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/mana-common/dist/index.esm.js
var dist_index_esm = __webpack_require__("lIcq");

// CONCATENATED MODULE: ../xflow-core/es/common/disposable.js
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};

var Disposable;
(function (Disposable) {
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    function is(arg) {
        return !!arg && typeof arg === 'object' && 'dispose' in arg && typeof arg.dispose === 'function';
    }
    Disposable.is = is;
    function create(func) {
        return {
            dispose: func,
        };
    }
    Disposable.create = create;
    Disposable.NULL = create(() => { });
})(Disposable || (Disposable = {}));
class disposable_DisposableCollection {
    constructor(...toDispose) {
        this.disposables = [];
        this.onDisposeEmitter = new dist_index_esm["a" /* Emitter */]();
        this.disposingElements = false;
        toDispose.forEach(d => this.push(d));
    }
    /**
     * This event is fired only once
     * on first dispose of not empty collection.
     */
    get onDispose() {
        return this.onDisposeEmitter.event;
    }
    checkDisposed() {
        if (this.disposed && !this.disposingElements) {
            this.onDisposeEmitter.fire(undefined);
            this.onDisposeEmitter.dispose();
        }
    }
    get disposed() {
        return this.disposables.length === 0;
    }
    dispose() {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.disposed || this.disposingElements) {
                return;
            }
            this.disposingElements = true;
            while (!this.disposed) {
                try {
                    const d = this.disposables.pop();
                    yield d.dispose();
                }
                catch (e) {
                    console.error(e);
                }
            }
            this.disposingElements = false;
            this.checkDisposed();
        });
    }
    push(disposable) {
        const { disposables } = this;
        disposables.push(disposable);
        const originalDispose = disposable.dispose.bind(disposable);
        const toRemove = Disposable.create(() => {
            const index = disposables.indexOf(disposable);
            if (index !== -1) {
                disposables.splice(index, 1);
            }
            this.checkDisposed();
        });
        disposable.dispose = () => {
            toRemove.dispose();
            originalDispose();
        };
        return toRemove;
    }
    pushAll(disposables) {
        return disposables.map(disposable => this.push(disposable));
    }
}
//# sourceMappingURL=disposable.js.map
// CONCATENATED MODULE: ../xflow-core/es/common/deferred.js
class Deferred {
    constructor() {
        this.isResolved = false;
        this.isRejected = false;
        this.promise = new Promise((resolve, reject) => {
            this.resolve = (...args) => {
                this.isResolved = true;
                resolve(...args);
            };
            this.reject = (...args) => {
                this.isRejected = true;
                reject(...args);
            };
        });
    }
}
//# sourceMappingURL=deferred.js.map
// CONCATENATED MODULE: ../xflow-core/es/constants.js
// node portal id
const X6_NODE_PORTAL_NODE_VIEW = 'X6_NODE_PORTAL_NODE_VIEW';
// style classname prefix
const XFLOW_PREFIX_CLS = 'xflow';
/** \u753B\u5E03\u7F29\u653E\u6700\u5C0F\u500D\u6570 */
const MIN_ZOOM = 0.01;
/** \u753B\u5E03\u7F29\u653E\u6700\u5927\u500D\u6570 */
const MAX_ZOOM = 1.5;
/** node render \u7684\u9ED8\u8BA4key\u503C */
const XFLOW_DEFAULT_NODE = 'XFLOW_DEFAULT_NODE';
/** node render \u7684\u9ED8\u8BA4key\u503C */
const XFLOW_DEFAULT_GROUP_NODE = 'XFLOW_DEFAULT_GROUP_NODE';
/** edge render \u7684\u9ED8\u8BA4key\u503C */
const XFLOW_DEFAULT_EDGE = 'XFLOW_DEFAULT_EDGE';
/** localstorage key */
const LOCAL_STORAGE_KEY = 'XFLOW_COPY_ITEMS';
/** node height */
const DEFAULT_NODE_HEIGHT = 36;
/** node width */
const DEFAULT_NODE_WIDTH = 180;
/** default group size */
const XFLOW_GROUP_DEFAULT_COLLAPSED_SIZE = {
    width: DEFAULT_NODE_WIDTH,
    height: DEFAULT_NODE_HEIGHT,
};
//# sourceMappingURL=constants.js.map
// CONCATENATED MODULE: ../xflow-core/es/common/uuid.js
/** https://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid#answer-2117523 */
function uuidv4() {
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
        const r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;
        return v.toString(16);
    });
}
//# sourceMappingURL=uuid.js.map
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/PlusSquareOutlined.js + 1 modules
var PlusSquareOutlined = __webpack_require__("29vH");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/MinusSquareOutlined.js + 1 modules
var MinusSquareOutlined = __webpack_require__("xCK6");

// CONCATENATED MODULE: ../xflow-core/es/xflow-main/components/app-context.js

/** AppContext */
const XFlowAppContext = react_default.a.createContext(null);
XFlowAppContext.displayName = 'XFlowAppContext';
/** AppContext:\u83B7\u53D6 app */
const useXFlowApp = () => {
    const container = react_default.a.useContext(XFlowAppContext);
    return container && container.getApp ? container.getApp() : null;
};
/** AppContext: \u83B7\u53D6 appContainer */
const useXFlowAppContainer = () => {
    return react_default.a.useContext(XFlowAppContext);
};
class AppContainer {
    constructor(isUserDefined = false) {
        this.cache = null;
        this.setApp = (app) => {
            this.cache = app;
            if (this.onAppChangeCallback) {
                this.onAppChangeCallback(app);
            }
        };
        this.isUserDefined = () => this.isUserDefinedFlag;
        this.getApp = () => {
            return this.cache;
        };
        this.onAppChange = cb => {
            this.onAppChangeCallback = cb;
        };
        this.dispose = () => {
            this.cache = null;
        };
        this.isUserDefinedFlag = isUserDefined;
    }
}
/** XFlow\u5185\u90E8\u4F7F\u7528 */
const XFlowAppInternalProvider = props => {
    const userDefinedAppContainer = useXFlowAppContainer();
    const [, setTick] = react_default.a.useState(null);
    const appContainer = react_default.a.useMemo(() => {
        return userDefinedAppContainer && userDefinedAppContainer.isUserDefined()
            ? userDefinedAppContainer
            : new AppContainer(false);
        // \u4E0D\u8981\u79FB\u9664\uFF1A\u4FDD\u8BC1config\u53EA\u751F\u6210\u4E00\u6B21
        // eslint-disable-next-line
    }, []);
    // set appChange callback
    if (!appContainer.isUserDefined()) {
        appContainer.onAppChange(() => setTick(0));
    }
    react_default.a.useEffect(() => {
        if (props.app) {
            appContainer.setApp(props.app);
        }
        // \u4E0D\u8981\u79FB\u9664\uFF1A\u53EA\u5173\u5FC3 props.app
        // eslint-disable-next-line
    }, [props.app]);
    if (appContainer.isUserDefined()) {
        return react_default.a.createElement(react_default.a.Fragment, null, props.children);
    }
    return (react_default.a.createElement(XFlowAppContext.Provider, { value: Object.assign({}, appContainer) }, props.children));
};
XFlowAppInternalProvider.displayName = 'XFlowAppInternalProvider';
/** XFlow\u5916\u90E8\u4F7F\u7528 */
const XFlowAppProvider = ({ children }) => {
    const [, setTick] = react_default.a.useState(null);
    const appContainer = react_default.a.useMemo(() => {
        return new AppContainer(true);
    }, []);
    // add callback
    appContainer.onAppChange(() => setTick(0));
    return react_default.a.createElement(XFlowAppContext.Provider, { value: Object.assign({}, appContainer) }, children);
};
XFlowAppProvider.displayName = 'XFlowAppProvider';
//# sourceMappingURL=app-context.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/constant.js
/** \u8282\u70B9\u547D\u4EE4 */
var XFlowNodeCommands;
(function (XFlowNodeCommands) {
    const category = '\u8282\u70B9\u64CD\u4F5C';
    /** \u65B0\u589E\u8282\u70B9 */
    XFlowNodeCommands.ADD_NODE = {
        id: 'xflow:add-node',
        label: '\u6DFB\u52A0\u8282\u70B9',
        category,
    };
    /** \u79FB\u52A8\u8282\u70B9 */
    XFlowNodeCommands.MOVE_NODE = {
        id: 'xflow:move-node',
        label: 'Move Node',
        category,
    };
    /** \u5220\u9664\u8282\u70B9 */
    XFlowNodeCommands.DEL_NODE = {
        id: 'xflow:del-node',
        label: '\u5220\u9664\u8282\u70B9',
        category,
    };
    /** \u66F4\u65B0\u8282\u70B9 */
    XFlowNodeCommands.UPDATE_NODE = {
        id: 'xflow:update-node',
        label: '\u66F4\u65B0\u8282\u70B9',
        category,
    };
    /** \u8282\u70B9\u4EA4\u4E92\uFF1A\u9AD8\u4EAE\u8282\u70B9 */
    XFlowNodeCommands.HIGHLIGHT_NODE = {
        id: 'xflow:highlight-node',
        label: '\u9AD8\u4EAE\u8282\u70B9',
        category,
    };
    /** \u8282\u70B9\u4EA4\u4E92\uFF1A\u9009\u4E2D\u8282\u70B9 */
    XFlowNodeCommands.SELECT_NODE = {
        id: 'xflow:select-node',
        label: '\u9009\u4E2D\u8282\u70B9',
        category,
    };
    /** \u8282\u70B9\u5C45\u4E2D */
    XFlowNodeCommands.CENTER_NODE = {
        id: 'xflow:center-node',
        label: '\u5C45\u4E2D\u8282\u70B9',
        category,
    };
    /** \u8282\u70B9\u524D\u7F6E\uFF1A\u8C03\u6574zindex */
    XFlowNodeCommands.FRONT_NODE = {
        id: 'xflow:front-node',
        label: '\u524D\u7F6E\u8282\u70B9',
        category,
    };
    /** \u8282\u70B9\u540E\u7F6E\uFF1A\u8C03\u6574zindex */
    XFlowNodeCommands.BACK_NODE = {
        id: 'xflow:back-node',
        label: '\u540E\u7F6E\u8282\u70B9',
        category,
    };
})(XFlowNodeCommands || (XFlowNodeCommands = {}));
/** \u8FB9\u547D\u4EE4 */
var XFlowEdgeCommands;
(function (XFlowEdgeCommands) {
    const category = '\u8FB9\u64CD\u4F5C';
    /** \u65B0\u589E\u8FB9 */
    XFlowEdgeCommands.ADD_EDGE = {
        id: 'xflow:add-edge',
        label: '\u6DFB\u52A0\u8FB9',
        category,
    };
    /** \u5220\u9664\u8FB9 */
    XFlowEdgeCommands.DEL_EDGE = {
        id: 'xflow:del-edge',
        label: '\u5220\u9664\u8FB9',
        category,
    };
    /** \u66F4\u65B0\u8FB9 */
    XFlowEdgeCommands.UPDATE_EDGE = {
        id: 'xflow:update-edge',
        label: '\u66F4\u65B0\u8FB9',
        category,
    };
    /** \u9AD8\u4EAE\u8FB9 */
    XFlowEdgeCommands.HIGHLIGHT_EDGE = {
        id: 'xflow:highlight-edge',
        label: '\u9AD8\u4EAE\u8FB9',
        category,
    };
    /** \u8FB9\u524D\u7F6E\uFF1A\u8C03\u6574zindex */
    XFlowEdgeCommands.FRONT_EDGE = {
        id: 'xflow:front-edge',
        label: '\u524D\u7F6E\u53D8',
        category,
    };
    /** \u8FB9\u540E\u7F6E\uFF1A\u8C03\u6574zindex */
    XFlowEdgeCommands.BACK_EDGE = {
        id: 'xflow:back-edge',
        label: '\u540E\u7F6E\u8FB9',
        category,
    };
})(XFlowEdgeCommands || (XFlowEdgeCommands = {}));
/** \u753B\u5E03\u547D\u4EE4 */
var XFlowGraphCommands;
(function (XFlowGraphCommands) {
    const category = '\u753B\u5E03\u64CD\u4F5C';
    /** LOAD \u5143\u6570\u636E\u64CD\u4F5C */
    XFlowGraphCommands.LOAD_META = {
        id: 'xflow:load-meta',
        label: '\u83B7\u53D6\u5143\u6570\u636E',
        category,
    };
    /** LOAD DATA\u64CD\u4F5C */
    XFlowGraphCommands.LOAD_DATA = {
        id: 'xflow:load-data',
        label: '\u83B7\u53D6\u56FE\u6570\u636E',
        category,
    };
    /** SAVE GRAPH DATA\u64CD\u4F5C */
    XFlowGraphCommands.SAVE_GRAPH_DATA = {
        id: 'xflow:save-graph-data',
        label: '\u4FDD\u5B58',
        category,
    };
    /** LAYOUT */
    XFlowGraphCommands.GRAPH_LAYOUT = {
        id: 'xflow:layout',
        label: '\u8BA1\u7B97\u5E03\u5C40',
        category,
    };
    /** Graph Render */
    XFlowGraphCommands.GRAPH_RENDER = {
        id: 'xflow:graph-render',
        label: '\u6E32\u67D3\u753B\u5E03',
        category,
    };
    /** UNDO \u64CD\u4F5C */
    XFlowGraphCommands.UNDO_CMD = {
        id: 'xflow:undo-cmd',
        label: '\u64A4\u9500',
        category,
    };
    /** REDO \u64CD\u4F5C */
    XFlowGraphCommands.REDO_CMD = {
        id: 'xflow:redo-cmd',
        label: '\u91CD\u505A',
        category,
    };
    /** Graph General Operations: XFlow\u547D\u4EE4\u4E0D\u6EE1\u8DB3\u7684\u53EF\u4EE5\u7528\u8FD9\u4E2A\u547D\u4EE4\uFF0C\u76F4\u63A5\u4F7F\u7528Graph\u7684api */
    XFlowGraphCommands.GRAPH_INSTANCE_COMMAND = {
        id: 'xflow:graph-instacne-cmd',
        label: 'Graph\u901A\u7528Command',
        category,
    };
    /** Graph Zoom */
    XFlowGraphCommands.GRAPH_ZOOM = {
        id: 'xflow:graph-zoom',
        label: '\u7F29\u653E\u753B\u5E03',
        category,
    };
    /** Graph Resize */
    XFlowGraphCommands.GRAPH_RESIZE = {
        id: 'xflow:graph-resize',
        label: '\u8C03\u6574\u7A97\u53E3\u5927\u5C0F',
        category,
    };
    /** Graph Copy */
    XFlowGraphCommands.GRAPH_COPY = {
        id: 'xflow:graph-copy-selection',
        label: '\u590D\u5236',
        category,
    };
    /** Graph Paste */
    XFlowGraphCommands.GRAPH_PASTE = {
        id: 'xflow:graph-paste-selection',
        label: '\u7C98\u8D34',
        category,
    };
    /** Graph \u5F00\u542F\u6846\u9009 */
    XFlowGraphCommands.GRAPH_TOGGLE_MULTI_SELECT = {
        id: 'xflow:graph-toggle-multi-select',
        label: '\u542F\u7528\u6846\u9009',
        category,
    };
    /** \u65B0\u589E Tool: https://x6.antv.vision/zh/docs/api/registry/edge-tool */
    XFlowGraphCommands.GRAPH_ADD_TOOL = {
        id: 'xflow:add-tool',
        label: '\u6DFB\u52A0\u5DE5\u5177',
        category,
    };
    /** \u5220\u9664 Tool: https://x6.antv.vision/zh/docs/api/registry/edge-tool */
    XFlowGraphCommands.GRAPH_DEL_TOOL = {
        id: 'xflow:del-tool',
        label: '\u5220\u9664\u5DE5\u5177',
        category,
    };
    /** history: https://x6.antv.vision/zh/docs/api/graph/history#%E6%96%B9%E6%B3%95 */
    XFlowGraphCommands.GRAPH_HISTORY_UNDO = {
        id: 'xflow:history-undo',
        label: 'history undo',
        category,
    };
    /** history: https://x6.antv.vision/zh/docs/api/graph/history#%E6%96%B9%E6%B3%95  */
    XFlowGraphCommands.GRAPH_HISTORY_REDO = {
        id: 'xflow:history-redo',
        label: 'history redo',
        category,
    };
    /** history: https://x6.antv.vision/zh/docs/api/graph/history#%E6%96%B9%E6%B3%95  */
    XFlowGraphCommands.GRAPH_HISTORY_RESET = {
        id: 'xflow:history-reset',
        label: 'history reset',
        category,
    };
    /** history: https://x6.antv.vision/zh/docs/api/graph/history#%E6%96%B9%E6%B3%95  */
    XFlowGraphCommands.GRAPH_HISTORY_TOGGLE = {
        id: 'xflow:history-toggle',
        label: 'history toggle',
        category,
    };
})(XFlowGraphCommands || (XFlowGraphCommands = {}));
/** \u5168\u5C40\u72B6\u6001 */
var XFlowModelCommands;
(function (XFlowModelCommands) {
    const category = '\u72B6\u6001\u64CD\u4F5C';
    /** Update model \u64CD\u4F5C */
    XFlowModelCommands.UPDATE_MODEL = {
        id: 'xflow:update-model',
        label: '\u8BBE\u7F6E\u72B6\u6001\u503C',
        category,
    };
})(XFlowModelCommands || (XFlowModelCommands = {}));
/** \u5168\u5C40\u72B6\u6001 */
var XFlowGroupCommands;
(function (XFlowGroupCommands) {
    const category = '\u7FA4\u7EC4\u64CD\u4F5C';
    /** \u521D\u59CB\u5316\u7FA4\u7EC4\u64CD\u4F5C */
    XFlowGroupCommands.INIT_GROUP = {
        id: 'xflow:init-group',
        label: '\u521D\u59CB\u5316\u7FA4\u7EC4',
        category,
    };
    /** ADD GROUP \u64CD\u4F5C */
    XFlowGroupCommands.ADD_GROUP = {
        id: 'xflow:add-group',
        label: '\u65B0\u5EFA\u7FA4\u7EC4',
        category,
    };
    /** DELETE GROUP \u64CD\u4F5C */
    XFlowGroupCommands.DEL_GROUP = {
        id: 'xflow:del-group',
        label: '\u89E3\u6563\u7FA4\u7EC4',
        category,
    };
    /** \u6298\u53E0\u64CD\u4F5C */
    XFlowGroupCommands.COLLAPSE_GROUP = {
        id: 'xflow:collapse-group',
        label: '\u6298\u53E0\u7FA4\u7EC4',
        category,
    };
})(XFlowGroupCommands || (XFlowGroupCommands = {}));
//# sourceMappingURL=constant.js.map
// CONCATENATED MODULE: ../xflow-core/es/xflow-main/graph/react-group-node/index.js




const XFlowDefaultGroupNode = props => {
    const { cell } = props;
    const app = useXFlowApp();
    const isCollapsed = props.data.isCollapsed || false;
    const onExpand = (e) => {
        e.preventDefault();
        app.executeCommand(XFlowGroupCommands.COLLAPSE_GROUP.id, {
            nodeId: cell.id,
            isCollapsed: false,
        });
    };
    const onCollapse = (e) => {
        e.preventDefault();
        app.executeCommand(XFlowGroupCommands.COLLAPSE_GROUP.id, {
            nodeId: cell.id,
            isCollapsed: true,
            gap: 3,
        });
    };
    return (react_default.a.createElement("div", { className: "xflow-default-group-node" },
        react_default.a.createElement("div", { className: "xflow-group-header" },
            react_default.a.createElement("div", { className: "header-left" }, props.data.label),
            react_default.a.createElement("div", { className: "header-right" },
                isCollapsed && react_default.a.createElement(PlusSquareOutlined["a" /* default */], { onClick: onExpand }),
                !isCollapsed && react_default.a.createElement(MinusSquareOutlined["a" /* default */], { onClick: onCollapse })))));
};
XFlowDefaultGroupNode.displayName = 'XFlowDefaultGroupNode';
//# sourceMappingURL=index.js.map
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/RedoOutlined.js + 1 modules
var RedoOutlined = __webpack_require__("YDSq");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/CloseCircleOutlined.js + 1 modules
var CloseCircleOutlined = __webpack_require__("r8k/");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/CheckCircleOutlined.js + 1 modules
var CheckCircleOutlined = __webpack_require__("5ouU");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/ExclamationCircleOutlined.js + 1 modules
var ExclamationCircleOutlined = __webpack_require__("+Hko");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/InfoCircleOutlined.js + 1 modules
var InfoCircleOutlined = __webpack_require__("TyQ8");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/DatabaseOutlined.js + 1 modules
var DatabaseOutlined = __webpack_require__("dfd2");

// CONCATENATED MODULE: ../xflow-core/es/xflow-main/graph/react-node/index.js


const fontStyle = { fontSize: '16px', color: '#3057e3' };
/** \u72B6\u6001 \u7C7B\u578B */
var react_node_StatusEnum;
(function (StatusEnum) {
    StatusEnum["SUCCESS"] = "success";
    StatusEnum["PROCESSING"] = "processing";
    StatusEnum["ERROR"] = "error";
    StatusEnum["DEFAULT"] = "default";
    StatusEnum["WARNING"] = "warning";
})(react_node_StatusEnum || (react_node_StatusEnum = {}));
const AlgoIcon = props => {
    if (props.hide) {
        return null;
    }
    switch (props.status) {
        case react_node_StatusEnum.PROCESSING:
            return react_default.a.createElement(RedoOutlined["a" /* default */], { spin: true, style: { color: '#c1cdf7', fontSize: '16px' } });
        case react_node_StatusEnum.ERROR:
            return react_default.a.createElement(CloseCircleOutlined["a" /* default */], { style: { color: '#ff4d4f', fontSize: '16px' } });
        case react_node_StatusEnum.SUCCESS:
            return react_default.a.createElement(CheckCircleOutlined["a" /* default */], { style: { color: '#39ca74cc', fontSize: '16px' } });
        case react_node_StatusEnum.WARNING:
            return react_default.a.createElement(ExclamationCircleOutlined["a" /* default */], { style: { color: '#faad14', fontSize: '16px' } });
        case react_node_StatusEnum.DEFAULT:
            return react_default.a.createElement(InfoCircleOutlined["a" /* default */], { style: { color: '#d9d9d9', fontSize: '16px' } });
        default:
            return null;
    }
};
const XFlowDefaultNode = props => {
    const icon = react_default.a.isValidElement(props.data.icon) ? (props.data.icon) : (react_default.a.createElement(DatabaseOutlined["a" /* default */], { style: fontStyle }));
    return (react_default.a.createElement("div", { className: \`xflow-default-node \${props.isNodeTreePanel ? 'panel-node' : ''}\` },
        react_default.a.createElement("span", { className: "icon" }, icon),
        react_default.a.createElement("span", { className: "label" }, props.data.label),
        react_default.a.createElement("span", { className: "status" },
            react_default.a.createElement(AlgoIcon, { status: props.data && props.data.status, hide: props.isNodeTreePanel }))));
};
XFlowDefaultNode.displayName = 'XFlowDefaultNode';
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-core/es/xflow-main/graph/config.js
var config_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};







var config_NsGraphConfig;
(function (NsGraphConfig) {
    NsGraphConfig.CONFIG_TYPE = 'GraphConfig';
    /** \u9ED8\u8BA4\u7684Node\u89E3\u6790\u51FD\u6570 */
    NsGraphConfig.defaultNodeTypeParser = (nodeConfig) => nodeConfig.renderKey;
    /** \u6784\u9020\u7684Edge\u89E3\u6790\u51FD\u6570 */
    NsGraphConfig.defaultEdgeTypeParser = (edgeConfig) => edgeConfig.renderKey;
    /** XFlow\u9ED8\u8BA4\u7684React\u7EC4\u4EF6 */
    NsGraphConfig.defaultNodeMapValue = [
        [XFLOW_DEFAULT_NODE, XFlowDefaultNode],
        [XFLOW_DEFAULT_GROUP_NODE, XFlowDefaultGroupNode],
    ];
})(config_NsGraphConfig || (config_NsGraphConfig = {}));
class config_GraphConfig {
    /** \u6784\u9020\u51FD\u6570 */
    constructor() {
        /** \u914D\u7F6E\u7C7B\u578B */
        this.CONFIG_TYPE = config_NsGraphConfig.CONFIG_TYPE;
        /** \u753B\u5E03\u7684\u5C5E\u6027 */
        this.x6Options = new Deferred();
        /** \u753B\u5E03\u7684root\u8282\u70B9 */
        this.rootContainer = new Deferred();
        /** \u753B\u5E03\u7684dom\u8282\u70B9 */
        this.graphContainer = new Deferred();
        /** \u81EA\u5B9A\u4E49\u8282\u70B9 */
        this.nodeRender = new Map(config_NsGraphConfig.defaultNodeMapValue);
        /** \u81EA\u5B9A\u4E49\u8FB9 */
        this.edgeRender = new Map();
        /** \u89E3\u6790node\u6E32\u67D3\u7C7B\u578B\u7684parser */
        this.nodeTypeParser = config_NsGraphConfig.defaultNodeTypeParser;
        /** \u89E3\u6790edge\u6E32\u67D3\u7C7B\u578B\u7684parser  */
        this.edgeTypeParser = config_NsGraphConfig.defaultEdgeTypeParser;
        /** \u81EA\u5B9A\u4E49\u4E8B\u4EF6 */
        this.events = [];
        this.mergeX6Config = (config) => config_awaiter(this, void 0, void 0, function* () {
            const current = yield this.getX6Config();
            return Object.assign(current, config);
        });
        this.getX6Config = () => config_awaiter(this, void 0, void 0, function* () {
            const config = yield this.x6Options.promise;
            return config;
        });
        this.setX6Config = (options) => {
            var _a;
            const defaultOptions = this.getDefaultGraphOptions();
            (_a = this.x6Options) === null || _a === void 0 ? void 0 : _a.resolve(Object.assign(Object.assign({}, defaultOptions), options));
        };
        this.setRootContainer = (ele) => {
            ele && (this === null || this === void 0 ? void 0 : this.rootContainer.resolve(ele));
        };
        this.setGraphContainer = (ele) => {
            var _a;
            ele && ((_a = this.graphContainer) === null || _a === void 0 ? void 0 : _a.resolve(ele));
        };
        this.setEvents = (events) => {
            this.events = events;
        };
        this.setDefaultNodeRender = (component) => {
            this.nodeRender.set(XFLOW_DEFAULT_NODE, component);
        };
        this.setDefaultEdgeRender = (component) => {
            this.edgeRender.set(XFLOW_DEFAULT_EDGE, component);
        };
        this.setNodeRender = (renderKey, component) => {
            this.nodeRender.set(renderKey, component);
        };
        this.setEdgeRender = (renderKey, component) => {
            this.edgeRender.set(renderKey, component);
        };
        /** \u8BBE\u7F6E\u89E3\u6790node render key\u7684 parser */
        this.setNodeTypeParser = (parser) => {
            this.nodeTypeParser = parser;
        };
        /** \u8BBE\u7F6E\u89E3\u6790edge render key\u7684 parser */
        this.setEdgeTypeParser = (parser) => {
            this.edgeTypeParser = parser;
        };
        /** \u83B7\u53D6Graph\u53C2\u6570 */
        this.getConfig = () => config_awaiter(this, void 0, void 0, function* () {
            const [rootContainer, graphContainer, x6Options] = yield Promise.all([
                this.rootContainer.promise,
                this.graphContainer.promise,
                this.x6Options.promise,
            ]);
            const graphConfig = {
                xflowInstanceId: this.xflowInstanceId,
                graphId: this.graphId,
                nodeViewId: this.graphId,
                rootContainer,
                graphContainer,
                x6Options,
                events: this.events,
                nodeRender: this.nodeRender,
                edgeRender: this.edgeRender,
                nodeTypeParser: this.nodeTypeParser,
                edgeTypeParser: this.edgeTypeParser,
            };
            return graphConfig;
        });
        this.getDefaultGraphOptions = () => {
            const defaultOptions = {
                // \u8282\u70B9\u662F\u5426\u53EF\u65CB\u8F6C
                rotating: false,
                // \u8282\u70B9\u662F\u5426\u53EF\u8C03\u6574\u5927\u5C0F
                resizing: false,
                // \u8282\u70B9\u8FDE\u7EBF\u89C4\u5219\u914D\u7F6E\uFF08\u8BE6\u7EC6\u6587\u6863\uFF1Ahttps://X6.antv.vision/zh/docs/api/graph/interaction#connecting\uFF09
                connecting: {
                    snap: true,
                    dangling: false,
                    highlight: false,
                    connectionPoint: 'rect',
                    router: { name: 'er' },
                    connector: {
                        name: 'rounded',
                        args: {
                            radius: 15,
                        },
                    },
                },
                // \u753B\u5E03\u80CC\u666F\uFF0C\u652F\u6301\u989C\u8272/\u56FE\u7247/\u6C34\u5370\u7B49\uFF08\u8BE6\u7EC6\u6587\u6863\uFF1Ahttps://X6.antv.vision/zh/docs/tutorial/basic/background\uFF09
                background: {},
                // \u7F51\u683C\u914D\u7F6E\uFF08\u8BE6\u7EC6\u6587\u6863\uFF1Ahttps://X6.antv.vision/zh/docs/tutorial/basic/grid\uFF09
                grid: {
                    visible: true,
                },
                // \u70B9\u9009/\u6846\u9009\u914D\u7F6E\uFF08\u8BE6\u7EC6\u6587\u6863\uFF1Ahttps://X6.antv.vision/zh/docs/tutorial/basic/selection\uFF09
                selecting: {
                    strict: true,
                    enabled: true,
                    multiple: true,
                    selectCellOnMoved: true,
                    showNodeSelectionBox: false,
                    // \u6846\u9009\u53EF\u4EE5\u9009\u4E2Dedge
                    rubberEdge: true,
                    // \u6846\u9009\u53EF\u4EE5\u9009\u4E2Dnode
                    rubberNode: true,
                    movable: true,
                },
                // \u5BF9\u9F50\u7EBF\u914D\u7F6E\uFF0C\u8F85\u52A9\u79FB\u52A8\u8282\u70B9\u6392\u7248\uFF08\u8BE6\u7EC6\u6587\u6863\uFF1Ahttps://X6.antv.vision/zh/docs/tutorial/basic/snapline\uFF09
                snapline: {
                    enabled: false,
                },
                // \u64A4\u9500/\u91CD\u505A\u80FD\u529B\uFF08\u8BE6\u7EC6\u6587\u6863\uFF1Ahttps://X6.antv.vision/zh/docs/tutorial/basic/history\uFF09
                history: {
                    enabled: false,
                },
                // \u526A\u5207\u677F\uFF0C\u652F\u6301\u8DE8\u753B\u5E03\u7684\u590D\u5236/\u7C98\u8D34\uFF08\u8BE6\u7EC6\u6587\u6863\uFF1Ahttps://X6.antv.vision/zh/docs/tutorial/basic/clipboard\uFF09
                clipboard: {
                    enabled: true,
                    useLocalStorage: true,
                },
                // \u4F7F\u753B\u5E03\u5177\u5907\u6EDA\u52A8\u3001\u5E73\u79FB\u3001\u5C45\u4E2D\u3001\u7F29\u653E\u7B49\u80FD\u529B\uFF08\u8BE6\u7EC6\u6587\u6863\uFF1Ahttps://X6.antv.vision/zh/docs/tutorial/basic/scroller\uFF09
                scroller: {
                    enabled: false,
                },
                // \u6EDA\u8F6E\u7F29\u653E \uFF08\u8BE6\u7EC6\u6587\u6863\uFF1Ahttps://X6.antv.vision/zh/docs/tutorial/basic/mousewheel\uFF09
                mousewheel: {
                    enabled: true,
                    minScale: MIN_ZOOM,
                    maxScale: MAX_ZOOM,
                    factor: 1.1,
                    modifiers: ['ctrl', 'meta'],
                },
                /** \u666E\u901A\u753B\u5E03, \u652F\u6301\u62D6\u62FD\u5E73\u79FB */
                panning: {
                    enabled: true,
                },
                /** \u7F29\u653E\u53C2\u6570 */
                scaling: {
                    min: MIN_ZOOM,
                    max: MAX_ZOOM,
                },
                /** keyboad */
                keyboard: {
                    enabled: true,
                },
                /** \u5B9A\u5236\u8282\u70B9\u548C\u8FB9\u7684\u4EA4\u4E92\u884C\u4E3A */
                interacting: {
                    /** \u8282\u70B9\u9ED8\u8BA4\u53EF\u4EE5\u88AB\u79FB\u52A8 */
                    nodeMovable: true,
                    /** \u8FB9\u4E0A\u6807\u7B7E\u9ED8\u8BA4\u4E0D\u53EF\u4EE5\u88AB\u79FB\u52A8 */
                    edgeLabelMovable: false,
                },
                async: false,
            };
            return defaultOptions;
        };
        this.dispose = () => {
            // TODO: \u7EDF\u4E00\u770B\u4E0Bdefer\u7684\u9500\u6BC1
            this.rootContainer = new Deferred();
            this.graphContainer = new Deferred();
            this.x6Options = new Deferred();
        };
        this.graphId = uuidv4();
    }
}
const IGraphOptionProvider = Symbol('IGraphOptionProvider');
const registerGraphConfig = (register, graphConfig) => {
    register(IGraphOptionProvider, {
        lifecycle: index_esm["Syringe"].Lifecycle.singleton,
        useDynamic: () => {
            return {
                getOptions: () => config_awaiter(void 0, void 0, void 0, function* () {
                    return graphConfig.getConfig();
                }),
            };
        },
    });
};
const createGraphConfig = (addOptions) => (props) => {
    /** bridge config and props */
    const propsContainer = react_default.a.useMemo(() => ({ getValue: () => ({}) }), []);
    propsContainer.getValue = () => props;
    const graphConfig = react_default.a.useMemo(() => {
        const config = new config_GraphConfig();
        addOptions(config, propsContainer);
        return config;
    }, [propsContainer]);
    return graphConfig;
};
//# sourceMappingURL=config.js.map
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/rxjs/_esm5/internal/scheduler/async.js + 4 modules
var scheduler_async = __webpack_require__("diMa");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/rxjs/_esm5/internal/BehaviorSubject.js + 3 modules
var BehaviorSubject = __webpack_require__("LiEJ");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/rxjs/_esm5/internal/operators/distinctUntilChanged.js
var distinctUntilChanged = __webpack_require__("lqvn");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/rxjs/_esm5/internal/operators/filter.js
var filter = __webpack_require__("z5yO");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/rxjs/_esm5/internal/operators/throttleTime.js + 10 modules
var throttleTime = __webpack_require__("hOK2");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/immer/dist/immer.esm.js
var immer_esm = __webpack_require__("9EWH");

// CONCATENATED MODULE: ../xflow-core/es/common/rx-model.js
var rx_model_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};





// docs:https://immerjs.github.io/immer/map-set
Object(immer_esm["b" /* enableMapSet */])();
// https://immerjs.github.io/immer/freezing
Object(immer_esm["e" /* setAutoFreeze */])(false);
var rx_model_NsModel;
(function (NsModel) {
    /**
     * observable \u7A7A\u503C\uFF0C\u5F53\u4F5Cmodel ready\u7684\u53D8\u91CF
     * \u7A7A\u503C\u4E0D\u4F1A\u89E6\u53D1subscrition
     */
    NsModel.EMPTY_VALUE = Symbol('EMPTY_MODEL_VALUE');
    /** \u5224\u65AD\u662F\u5426\u662F\u7A7A */
    function isValidValue(val) {
        return val !== NsModel.EMPTY_VALUE;
    }
    NsModel.isValidValue = isValidValue;
    /** \u9ED8\u8BA4\u7684\u5BF9\u4E8B\u4EF6\u6027\u80FD\u4F18\u5316\u65B9\u6CD5\uFF1A\u53EA\u5728value\u4E0D\u540C\u65F6\u624D\u89E6\u53D1\uFF0C\u540C\u65F6\u589E\u52A0throttle */
    function defaultPipeFunction(observable) {
        return observable.pipe(Object(distinctUntilChanged["a" /* distinctUntilChanged */])(), Object(filter["a" /* filter */])(item => isValidValue(item)), Object(throttleTime["a" /* throttleTime */])(17, scheduler_async["b" /* asyncScheduler */], { leading: false, trailing: true }));
    }
    NsModel.defaultPipeFunction = defaultPipeFunction;
})(rx_model_NsModel || (rx_model_NsModel = {}));
class rx_model_RxModel {
    /** \u521D\u59CB\u5316 */
    constructor(initialValue = rx_model_NsModel.EMPTY_VALUE, maxSubscription = 30) {
        /** disposable */
        this.toDispose = new disposable_DisposableCollection();
        /** \u76D1\u542Cmodel\u53D8\u5316 */
        this.watch = (cb, pipeFunction = rx_model_NsModel.defaultPipeFunction) => {
            if (this.subject$.observers.length + 1 > this.maxSubscription) {
                console.warn(\`\${this.subject$} reach maxSubscription limitation, please check\`);
            }
            const observable = pipeFunction ? pipeFunction(this.subject$) : this.subject$;
            const subscription = observable.subscribe(cb);
            return Disposable.create(() => {
                subscription.unsubscribe();
            });
        };
        /** \u83B7\u53D6model\u7684\u503C */
        this.getValue = () => {
            return this.subject$.getValue();
        };
        /** \u66F4\u65B0model */
        this.setValue = value => {
            if (!this.subject$) {
                return;
            }
            if (typeof value === 'function') {
                const currentValue = this.subject$.getValue();
                const nextState = Object(immer_esm["d" /* produce */])(currentValue, draft => {
                    value(draft);
                });
                if (rx_model_NsModel.isValidValue(nextState)) {
                    this.setValue(nextState);
                }
                return;
            }
            this.subject$.next(value);
        };
        /** \u662F\u5426\u5DF2\u6709\u503C */
        this.hasValidValue = () => {
            const value = this.getValue();
            return rx_model_NsModel.isValidValue(value);
        };
        /** \u83B7\u53D6\u975E\u7A7A\u7684\u503C */
        this.getValidValue = () => rx_model_awaiter(this, void 0, void 0, function* () {
            const deffer = new Deferred();
            /** \u8FD4\u56DE\u975E\u7A7A\u7684\u503C */
            if (this.hasValidValue()) {
                return this.getValue();
            }
            /** \u8FD4\u56DE\u4F1Aresolve\u975E\u7A7A\u503C\u7684Promise */
            const d = this.watch(val => {
                if (rx_model_NsModel.isValidValue(val)) {
                    deffer.resolve(val);
                    d.dispose();
                }
            });
            return deffer.promise;
        });
        /** disposable */
        this.dispose = () => {
            this.toDispose.dispose();
        };
        this.subject$ = new BehaviorSubject["a" /* BehaviorSubject */](initialValue || rx_model_NsModel.EMPTY_VALUE);
        this.maxSubscription = maxSubscription;
        this.toDispose.push(Disposable.create(() => {
            this.subject$.complete();
            this.subject$.unsubscribe();
            // @ts-ignore
            this.subject$ = null;
        }));
    }
}
//# sourceMappingURL=rx-model.js.map
// CONCATENATED MODULE: ../xflow-core/es/xflow-main/interface.js

const IFrontendApplicationContribution = index_esm["Syringe"].defineToken('IFrontendApplicationContribution');
//# sourceMappingURL=interface.js.map
// CONCATENATED MODULE: ../xflow-core/es/command/interface.js
// utils

/**
 * IGraphCommandService
 * \u58F0\u660E\u6267\u884CCommand\u7684\u63A5\u53E3
 */
const IGraphCommandService = Symbol('IGraphCommandService');
/**
 * Command Handler \u7684 Token
 */
const ICommandHandler = index_esm["Syringe"].defineToken('ICommandHandler');
/** Command Context Provider \u7684 Symbol \u63D0\u4F9B\u6267\u884C\u9700\u8981\u7684\u5404\u79CDapi */
const ICommandContextProvider = Symbol('ICommandContextProvider');
/**
 * IGraphCommandFactory
 * Command\u5DE5\u5382\u65B9\u6CD5
 */
const IGraphCommandFactory = Symbol('IGraphCommandFactory');
/**
 * Command\u6CE8\u518C\u6269\u5C55\u7684Symbol
 */
const IGraphCommandContribution = index_esm["Syringe"].defineToken('IGraphCommandContribution');
//# sourceMappingURL=interface.js.map
// CONCATENATED MODULE: ../xflow-core/es/command/graph-command.js
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var graph_command_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var graph_command_a;






var NCommand;
(function (NCommand) {
    /* Determine whether object is a Command */
    function is(arg) {
        return !!arg && arg === Object(arg) && 'id' in arg;
    }
    NCommand.is = is;
    /** Comparator function for when sorting commands */
    function compareCommands(a, b) {
        if (a.label && b.label) {
            const aCommand = (a.category ? \`\${a.category}: \${a.label}\` : a.label).toLowerCase();
            const bCommand = (b.category ? \`\${b.category}: \${b.label}\` : b.label).toLowerCase();
            return aCommand.localeCompare(bCommand);
        }
        else {
            return 0;
        }
    }
    NCommand.compareCommands = compareCommands;
    /**
     * Determine if two commands are equal.
     *
     * @param a the first command for comparison.
     * @param b the second command for comparison.
     */
    function equals(a, b) {
        return (a.id === b.id && a.label === b.label && a.iconName === b.iconName && a.category === b.category);
    }
    NCommand.equals = equals;
})(NCommand || (NCommand = {}));
let graph_command_GraphCommandRegistry = class GraphCommandRegistry {
    constructor(contributionProvider) {
        this.contributionProvider = contributionProvider;
        /**
         * undo cmd\u540E\u5C06\u547D\u4EE4\u5B58\u50A8\u5728\u961F\u5217\u4E2D\u7ED9redo\u8C03\u7528
         */
        this.redoStack = [];
        /**
         * executeCommand\u540E\u5C06\u547D\u4EE4\u5B58\u50A8\u5728\u961F\u5217\u4E2D\u7ED9undo\u8C03\u7528
         */
        this.undoStack = [];
        /**
         * \u50A8\u5B58\u6240\u6709\u6CE8\u518C\u7684command
         */
        this.commands = new Map();
        /**
         * \u50A8\u5B58\u6240\u6709\u6CE8\u518C\u7684command factory
         */
        this.factories = new Map();
        /**
         * \u50A8\u5B58\u6240\u6709\u6CE8\u518C\u7684command handler disposables
         */
        this.disposables = new Map();
        /**
         * \u76D1\u542Ccmdregistry\u7684\u53D8\u5316
         */
        this.cmdChangeEvent = new rx_model_RxModel(null);
        /**
         * \u5728Command\u5B9E\u4F8B\u95F4\u5171\u4EAB\u53D8\u91CF
         */
        this.Globals = new rx_model_RxModel(new Map());
        /** \u8BBE\u7F6Ecommand\u95F4\u7684\u5171\u4EAB\u53D8\u91CF */
        this.setGlobal = (key, value) => {
            this.Globals.setValue(map => {
                map.set(key, value);
            });
        };
        /** \u83B7\u53D6\u5171\u4EAB\u53D8\u91CF */
        this.getGlobal = (key) => {
            const map = this.Globals.getValue();
            return map.get(key);
        };
        /**
         * \u6267\u884Cundo stack\u4E2D\u6700\u540E\u4E00\u6761Command
         */
        this.undoCommand = () => graph_command_awaiter(this, void 0, void 0, function* () {
            /* \u83B7\u53D6\u53EF\u4EE5undo\u7684Command */
            const cmd = this.undoStack.pop();
            if (!cmd) {
                console.error('empty undo stack');
                return;
            }
            /* \u6267\u884C\u547D\u4EE4\u7684undo\u65B9\u6CD5 */
            yield cmd.undo();
            /* \u6267\u884C\u540E\u585E\u5230redo\u7684\u6808\u4E2D */
            this.redoStack.push(cmd);
            /* \u89E6\u53D1\u4E8B\u4EF6\u56DE\u8C03 */
            this.cmdChangeEvent.setValue(null);
        });
        /**
         * \u6267\u884Credo stack\u4E2D\u6700\u540E\u4E00\u6761Command
         */
        this.redoCommand = () => graph_command_awaiter(this, void 0, void 0, function* () {
            /* \u83B7\u53D6\u53EF\u4EE5redo\u7684Command */
            const cmd = this.redoStack.pop();
            if (!cmd) {
                console.error('empty undo stack');
                return;
            }
            /* \u6267\u884C\u547D\u4EE4\u7684undo */
            yield cmd.redo();
            /* \u6267\u884C\u540E\u585E\u5230undo\u7684\u6808\u4E2D */
            this.undoStack.push(cmd);
            /* \u89E6\u53D1\u4E8B\u4EF6\u56DE\u8C03 */
            this.cmdChangeEvent.setValue(null);
        });
        /**
         * \u6CE8\u518C\u4E00\u6279\u53EF\u5355\u72ECdispose\u7684Command
         * @param externalRegisterFn ICommandRegisterFunction
         */
        this.registerDisposableCommand = (externalRegisterFn) => {
            const toDispose = new disposable_DisposableCollection();
            const disposableRegistry = {
                registerCommand: (command, factory) => {
                    const disposable = this.registerCommand(command, factory);
                    toDispose.push(disposable);
                    return disposable;
                },
            };
            externalRegisterFn(disposableRegistry);
            return toDispose;
        };
    }
    /**
     * \u76D1\u542Ccmdregistry\u7684\u53D8\u5316
     */
    get watchChange() {
        return this.cmdChangeEvent.watch;
    }
    onStart() {
        const contributions = this.contributionProvider.getContributions();
        for (const contribItem of contributions) {
            contribItem.registerGraphCommands(this);
        }
    }
    executeCommandPipeline(cmdOptions) {
        return graph_command_awaiter(this, void 0, void 0, function* () {
            let res = null;
            for (const cmdOption of cmdOptions) {
                const cmdCtx = res === null || res === void 0 ? void 0 : res.contextProvider();
                const { args, hooks } = yield (cmdOption === null || cmdOption === void 0 ? void 0 : cmdOption.getCommandOption(cmdCtx));
                res = yield this.executeCommand(cmdOption === null || cmdOption === void 0 ? void 0 : cmdOption.commandId, args, hooks);
            }
            /* \u89E6\u53D1\u4E8B\u4EF6\u56DE\u8C03 */
            this.cmdChangeEvent.setValue(null);
            return res;
        });
    }
    /** \u6267\u884C Command\uFF1A\u4F1A\u5728undo stack\u4E2Dpush cmd */
    executeCommand(commandId, cmdArgs, hook = []) {
        return graph_command_awaiter(this, void 0, void 0, function* () {
            const factory = this.getFactory(commandId);
            if (factory) {
                const cmd = (yield factory.createCommand(commandId, cmdArgs, hook));
                yield cmd.execute();
                if (cmd.isUndoable()) {
                    this.undoStack.push(cmd);
                }
                /* \u89E6\u53D1\u4E8B\u4EF6\u56DE\u8C03 */
                this.cmdChangeEvent.setValue(null);
                return cmd;
            }
            throw Object.assign(new Error(\`The command '\${commandId}' cannot be executed. There are no active handlers available for the command.\`), { code: 'NO_ACTIVE_HANDLER' });
        });
    }
    /** \u6267\u884C unod Command\uFF1A\u4E0D\u4F1A\u5728undo stack\u4E2Dpush\u65B0\u7684command\u8BB0\u5F55 */
    executeUndoCommand(commandId, cmdArgs, hook = []) {
        return graph_command_awaiter(this, void 0, void 0, function* () {
            const factory = this.getFactory(commandId);
            if (factory) {
                const cmd = yield factory.createCommand(commandId, cmdArgs, hook);
                yield cmd.execute();
                return cmd;
            }
            throw Object.assign(new Error(\`The command '\${commandId}' cannot be executed. There are no active handlers available for the command.\`), { code: 'NO_ACTIVE_HANDLER' });
        });
    }
    /**
     * Execute the active handler for the given command and arguments.
     *
     * Reject if a command cannot be executed.
     */
    createCommand(commandId, cmdArgs, hook = []) {
        return graph_command_awaiter(this, void 0, void 0, function* () {
            const factory = this.getFactory(commandId);
            if (factory) {
                const cmd = yield factory.createCommand(commandId, cmdArgs, hook);
                return cmd;
            }
            throw Object.assign(new Error(\`The command '\${commandId}' cannot be executed. There are no active handlers available for the command.\`), { code: 'NO_ACTIVE_HANDLER' });
        });
    }
    /**
     * \u68C0\u67E5\u662F\u5426\u6CE8\u518C\u4E86Command
     */
    get isUndoable() {
        return this.undoStack.length > 0;
    }
    /**
     * \u68C0\u67E5\u662F\u5426\u6CE8\u518C\u4E86Command
     */
    get isRedoable() {
        return this.redoStack.length > 0;
    }
    /**
     * \u68C0\u67E5\u662F\u5426\u6CE8\u518C\u4E86Command
     */
    hasCommand(commandId) {
        return this.commands.has(commandId);
    }
    /**
     * Get a command for the given command identifier.
     */
    getCommand(id) {
        return this.commands.get(id);
    }
    /**
     * Register the given command and handler if present.
     *
     * Throw if a command is already registered for the given command identifier.
     */
    registerCommand(command, factory) {
        if (this.factories.has(command.id)) {
            console.warn(\`A command \${command.id} is already registered.\`);
            return Disposable.NULL;
        }
        const toDispose = new disposable_DisposableCollection(this.doRegisterCommand(command), this.registerFactory(command.id, factory), Disposable.create(() => this.disposables.delete(command.id)));
        this.disposables.set(command.id, toDispose);
        return toDispose;
    }
    doRegisterCommand(command) {
        this.commands.set(command.id, command);
        return Disposable.create(() => this.disposables.delete(command.id));
    }
    /**
     * Unregister command from the registry
     *
     * @param id
     */
    unregisterCommand(commandOrId) {
        const id = NCommand.is(commandOrId) ? commandOrId.id : commandOrId;
        const disposableCmd = this.disposables.get(id);
        if (disposableCmd) {
            disposableCmd.dispose();
        }
    }
    /**
     * \u68C0\u67E5commandId\u662F\u5426\u6709Factory
     */
    hasFactory(commandId) {
        const factory = this.factories.get(commandId);
        return !!factory;
    }
    /**
     * Get a visible handler for the given command or \`undefined\`.
     */
    getFactory(commandId) {
        const factory = this.factories.get(commandId);
        return factory;
    }
    /**
     * Register the given handler for the given command identifier.
     *
     * If there is already a handler for the given command
     * then the given handler is registered as more specific, and
     * has higher priority during enablement, visibility and toggle state evaluations.
     */
    registerFactory(commandId, factory, force = false) {
        if (this.hasFactory(commandId) && force === false) {
            console.error('cannot register command:', commandId);
        }
        this.factories.set(commandId, factory);
        return Disposable.create(() => {
            this.factories.delete(commandId);
        });
    }
    /**
     * Returns with all handlers for the given command. If the command does not have any handlers,
     * or the command is not registered, returns an empty array.
     */
    getAllFactories() {
        return Array.from(this.factories.entries());
    }
};
graph_command_GraphCommandRegistry = __decorate([
    Object(index_esm["singleton"])({
        contrib: [IFrontendApplicationContribution, IGraphCommandService],
    }),
    __param(0, Object(index_esm["contrib"])(IGraphCommandContribution)),
    __metadata("design:paramtypes", [typeof (graph_command_a = typeof index_esm["Contribution"] !== "undefined" && index_esm["Contribution"].Provider) === "function" ? graph_command_a : Object])
], graph_command_GraphCommandRegistry);

//# sourceMappingURL=graph-command.js.map
// CONCATENATED MODULE: ../xflow-core/es/command/module.js
/* eslint-disable @typescript-eslint/no-redeclare */

/** Command */


/** Command \u6269\u5C55\u4F9D\u8D56 */

const commandRegistryModule = Object(index_esm["Module"])(register => {
    /** \u58F0\u660E GraphCommandRegistry */
    index_esm["Contribution"].register(register, IGraphCommandContribution);
    /** \u5C06 GraphCommandRegistry \u6CE8\u518C\u6210 IFrontendApplicationContribution \u7684\u6269\u5C55 */
    /** \u5C06 IGraphCommandContribution \u6CE8\u518C\u6210\u4E3A\u6269\u5C55\u70B9 */
    register(graph_command_GraphCommandRegistry);
});
//# sourceMappingURL=module.js.map
// CONCATENATED MODULE: ../xflow-core/es/command/index.js
/** Command */




//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-core/es/model-service/interface.js

/**
 * Model Service Token
 */
const IModelService = index_esm["Syringe"].defineToken('IModelService');
/**
 * \u5728 extensions \u4E2D\u5B9E\u73B0\u8FD9\u4E2A\u6269\u5C55\u70B9\u6765\u6CE8\u518C\u66F4\u591A\u7684Model
 */
const IModelContribution = index_esm["Syringe"].defineToken('IModelContribution');
const IModelOptionProvider = Symbol('IModelOptionProvider');
//# sourceMappingURL=interface.js.map
// CONCATENATED MODULE: ../xflow-hook/es/interface.js
/** hooks \u6267\u884C\u7684\u7B56\u7565 */
var ScheduleTypeEnum;
(function (ScheduleTypeEnum) {
    /** pipeline\u4E32\u884C\u6267\u884C\uFF1A\u6240\u6709async\u4EFB\u52A1\u5B8C\u6210\u540E\u518D\u6267\u884C\u56DE\u8C03 */
    ScheduleTypeEnum["ASYNC_SRRIES"] = "ASYNC_SRRIES";
    /** async\u5E76\u884C\u6267\u884C\uFF1A\u7B49\u5F85Promise.all\u6240\u6709async\u4EFB\u52A1\u540E\u518D\u6267\u884C\u56DE\u8C03 */
    ScheduleTypeEnum["ASYNC_PARALLEL"] = "ASYNC_PARALLEL";
})(ScheduleTypeEnum || (ScheduleTypeEnum = {}));
//# sourceMappingURL=interface.js.map
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/toposort/index.js
var toposort = __webpack_require__("VNI2");
var toposort_default = /*#__PURE__*/__webpack_require__.n(toposort);

// CONCATENATED MODULE: ../xflow-hook/es/utils.js

var ErrorUtils;
(function (ErrorUtils) {
    let ErrorEnum;
    (function (ErrorEnum) {
        ErrorEnum["INVALID_HOOK_BEFORE"] = "INVALID_HOOK_BEFORE";
        ErrorEnum["INVALID_HOOK_AFTER"] = "INVALID_HOOK_AFTER";
        ErrorEnum["INVALID_HOOK_ARGS_LENGTH"] = "INVALID_HOOK_ARGS_LENGTH";
    })(ErrorEnum = ErrorUtils.ErrorEnum || (ErrorUtils.ErrorEnum = {}));
    class HookError extends Error {
        constructor(code, message, ...contexts) {
            if (Array.isArray(message)) {
                message = message
                    .filter(function (line) {
                    return !!line;
                })
                    .join(' ');
            }
            super(\`\${code}: \${message}\`);
            if (Error.captureStackTrace) {
                ;
                Error.captureStackTrace(this, HookError);
            }
            this.code = code;
            this.contexts = {};
            contexts.forEach(context => {
                if (typeof context === 'object') {
                    Object.entries(context).forEach(pair => {
                        const [key, value] = pair;
                        if (key !== 'key' && value) {
                            this.contexts[key] = JSON.parse(JSON.stringify(value));
                        }
                    });
                }
            });
        }
        toString() {
            return \`\${this.code}: \${this.message}\`;
        }
    }
    ErrorUtils.HookError = HookError;
    const createError = (code, message, ...args) => {
        return new HookError(code, message, ...args);
    };
    ErrorUtils.HookBeforeError = () => {
        return createError(ErrorEnum.INVALID_HOOK_BEFORE, [
            'hook require a before dependency but not exist in hookmap',
        ]);
    };
    ErrorUtils.HookAfterError = () => {
        return createError(ErrorEnum.INVALID_HOOK_AFTER, [
            'hook require a after dependency but not exist in hookmap',
        ]);
    };
    ErrorUtils.InvalidHookArguments = (hook) => {
        return createError(ErrorEnum.INVALID_HOOK_ARGS_LENGTH, [
            'hook handlers must have 0 to 2 arguments',
            \`but got \${hook.handler.length}\`,
        ]);
    };
})(ErrorUtils || (ErrorUtils = {}));
var utils_HookUtils;
(function (HookUtils) {
    /** \u5904\u7406 runtime hooks */
    HookUtils.normalize = (hookConfig = [], hookMap) => {
        const runtimeHook = Array.isArray(hookConfig) ? hookConfig : [hookConfig];
        const innerHooks = [];
        hookMap.forEach(val => {
            innerHooks.push(val);
        });
        return [...innerHooks, ...runtimeHook].filter(item => item && !!item.handler);
    };
    /** \u6392\u5E8F hooks */
    HookUtils.sort = (hooks = [], hookMap) => {
        const edges = [];
        hooks.forEach(hook => {
            if (hook.before) {
                if (!hookMap.has(hook.before)) {
                    throw ErrorUtils.HookBeforeError();
                }
                const edge = [hookMap.get(hook.before), hook];
                edges.push(edge);
            }
            if (hook.after) {
                if (!hookMap.has(hook.after)) {
                    throw ErrorUtils.HookBeforeError();
                }
                const edge = [hook, hookMap.get(hook.after)];
                edges.push(edge);
            }
        });
        const sortedHooks = toposort_default()(edges);
        sortedHooks.reverse();
        return sortedHooks;
    };
})(utils_HookUtils || (utils_HookUtils = {}));
class utils_Deferred {
    constructor() {
        this.isResolved = false;
        this.isRejected = false;
        this.promise = new Promise((resolve, reject) => {
            this.resolve = args => {
                this.isResolved = true;
                resolve(args);
            };
            this.reject = args => {
                this.isRejected = true;
                reject(args);
            };
        });
    }
}
//# sourceMappingURL=utils.js.map
// CONCATENATED MODULE: ../xflow-hook/es/index.js
var es_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};



class es_HookHub {
    constructor(options) {
        /** scheduleType */
        this.scheduleType = ScheduleTypeEnum.ASYNC_SRRIES;
        /** hasRegistered */
        this.hasHook = (hookName) => {
            return this.hookMap.has(hookName);
        };
        /** getHooks */
        this.getHooks = (runtimeHooks = [], sort = true) => {
            const hooks = utils_HookUtils.normalize(runtimeHooks, this.hookMap);
            if (!sort) {
                return hooks;
            }
            utils_HookUtils.sort(hooks, this.hookMap);
            return hooks;
        };
        /** registerHook */
        this.registerHook = (hookMeta) => {
            if (this.hookMap.has(hookMeta.name)) {
                console.error(\`\${hookMeta.name} is duplicated in hookmap\`);
            }
            this.hookMap.set(hookMeta.name, hookMeta);
            return {
                dispose: () => {
                    this.hookMap.delete(hookMeta.name);
                },
            };
        };
        /** registerHook */
        this.call = (args, main = (mainArgs) => es_awaiter(this, void 0, void 0, function* () { return mainArgs; }), runtimeHook = []) => es_awaiter(this, void 0, void 0, function* () {
            // TODO: \u8FD9\u91CC\u52A0cache
            const hooks = this.getHooks(runtimeHook);
            const scheduler = this.schedulers[this.scheduleType];
            return scheduler(args, main, hooks);
        });
        /** \u6267\u884Chook\u7684scheduler */
        this.schedulers = {
            /** pipeline\u6267\u884C */
            [ScheduleTypeEnum.ASYNC_SRRIES]: (args, main, hooks = []) => es_awaiter(this, void 0, void 0, function* () {
                let callback = main;
                /** \u7528 hook \u52A0\u5DE5 args  */
                for (const hook of hooks) {
                    if ([0, 1].includes(hook.handler.length)) {
                        yield hook.handler.call(this, args);
                        continue;
                    }
                    if ([2].includes(hook.handler.length) && callback !== null) {
                        // eslint-disable-next-line @typescript-eslint/no-shadow
                        const result = yield hook.handler.call(this, args, callback);
                        /** \u5982\u679C\u8FD4\u56DE\u4E3Anull\uFF0C\u5219\u76F4\u63A5\u4E2D\u65AD\u6267\u884C */
                        if (result === null) {
                            callback = null;
                            break;
                        }
                        else if (typeof result === 'function') {
                            callback = result;
                            continue;
                        }
                    }
                    const err = ErrorUtils.InvalidHookArguments(hook);
                    throw err;
                }
                /** \u68C0\u67E5\u662F\u5426\u88AB\u66FF\u6362\u4E3Anull */
                if (callback) {
                    return yield callback.call(this, args);
                }
            }),
            [ScheduleTypeEnum.ASYNC_PARALLEL]: (args, main, hooks = []) => es_awaiter(this, void 0, void 0, function* () {
                /** \u540C\u65F6\u89E6\u53D1 hook */
                const promises = hooks.map(hook => {
                    if ([0, 1].includes(hook.handler.length)) {
                        return hook.handler.call(this, args);
                    }
                    if ([2].includes(hook.handler.length)) {
                        return hook.handler.call(this, args, main);
                    }
                    throw ErrorUtils.InvalidHookArguments(hook);
                });
                const defer = new utils_Deferred();
                Promise.all(promises).then(res => defer.resolve(res));
                /** \u68C0\u67E5\u662F\u5426\u88AB\u66FF\u6362 */
                if (main) {
                    return yield main.call(this, defer);
                }
            }),
        };
        this.hookMap = new Map();
        if (options && options.type) {
            this.scheduleType = options.type;
        }
    }
}
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-core/es/hooks/interface.js


/**
 * extension \u5E94\u8BE5\u5B9E\u73B0\u8FD9\u4E2A\u6269\u5C55\u70B9\u6765\u6CE8\u518C\u66F4\u591A\u7684hook
 */
const IHookService = index_esm["Syringe"].defineToken('IHookService');
/**
 * extension \u5E94\u8BE5\u5B9E\u73B0\u8FD9\u4E2A\u6269\u5C55\u70B9\u6765\u6CE8\u518C\u66F4\u591A\u7684hook
 */
const IHookContribution = index_esm["Syringe"].defineToken('IHookContribution');
const initHooks = () => ({
    graphOptions: new es_HookHub(),
    reactNodeRender: new es_HookHub(),
    reactEdgeLabelRender: new es_HookHub(),
    afterGraphInit: new es_HookHub(),
    beforeGraphDestory: new es_HookHub(),
    x6Events: new es_HookHub(),
});
//# sourceMappingURL=interface.js.map
// CONCATENATED MODULE: ../xflow-core/es/hooks/config.js
var hooks_config_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const noop = () => {
    return {
        dispose: () => { },
    };
};
var NsXFlowHook;
(function (NsXFlowHook) {
    NsXFlowHook.CONFIG_TYPE = 'XFlowHook';
})(NsXFlowHook || (NsXFlowHook = {}));
class HookConfig {
    constructor() {
        /** CONFIG_TYPE */
        this.CONFIG_TYPE = NsXFlowHook.CONFIG_TYPE;
        this.time = Date.now();
        /** \u63D0\u4F9B\u4E00\u4E2Aruntime\u6CE8\u518Chook\u7684\u65B9\u5F0F */
        this.setRegisterHook = (fn) => {
            this.hookRegisterFunc = fn;
        };
        /** \u8FD9\u91CC\u5728canvas\u4E0A\u63D0\u4F9B\u4E00\u4E2Aruntime\u6CE8\u518Chookhub\u7684\u65B9\u5F0F */
        this.setRegisterHookhub = (fn) => {
            this.hookhubRegisterFn = fn;
        };
        this.getConfig = () => hooks_config_awaiter(this, void 0, void 0, function* () {
            const options = {
                CONFIG_TYPE: this.CONFIG_TYPE,
                hookRegisterFn: this.hookRegisterFunc || noop,
                hookhubRegisterFn: this.hookhubRegisterFn || noop,
            };
            return options;
        });
        this.dispose = () => { };
    }
}
//# sourceMappingURL=config.js.map
// CONCATENATED MODULE: ../xflow-core/es/hooks/hook-registry.js
var hook_registry_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var hook_registry_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var hook_registry_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var hook_registry_a;




let hook_registry_HookRegistry = class HookRegistry {
    constructor() {
        /** disposables */
        this.toDispose = new disposable_DisposableCollection();
        /** hooks */
        this.hookProvider = () => this.hooks;
        /** \u6CE8\u518Chook\u63D2\u4EF6 */
        this.registerHook = (fn) => {
            return fn(this.hooks);
        };
        /** \u6CE8\u518Chook  */
        this.registerHookHub = (hookName, hook) => {
            this.hooks[hookName] = hook;
            return {
                dispose: () => {
                    delete this.hooks[hookName];
                },
            };
        };
        /** app\u542F\u52A8\u65F6\uFF0C\u6536\u96C6hook\u6269\u5C55\u70B9\u7684\u6CE8\u518C\u9879 */
        this.onStart = () => hook_registry_awaiter(this, void 0, void 0, function* () {
            const contributions = this.contributionProvider.getContributions();
            for (const contribution of contributions) {
                contribution.registerHookHub(this);
            }
            for (const contribution of contributions) {
                contribution.registerHook(this.hooks);
            }
        });
        this.hooks = initHooks();
    }
    /** app\u7684\u505C\u6B62\u903B\u8F91 */
    onStop() {
        this.toDispose.dispose();
    }
};
hook_registry_decorate([
    Object(index_esm["contrib"])(IHookContribution),
    hook_registry_metadata("design:type", typeof (hook_registry_a = typeof index_esm["Contribution"] !== "undefined" && index_esm["Contribution"].Provider) === "function" ? hook_registry_a : Object)
], hook_registry_HookRegistry.prototype, "contributionProvider", void 0);
hook_registry_HookRegistry = hook_registry_decorate([
    Object(index_esm["singleton"])({ contrib: [IFrontendApplicationContribution, IHookService] }),
    hook_registry_metadata("design:paramtypes", [])
], hook_registry_HookRegistry);

//# sourceMappingURL=hook-registry.js.map
// CONCATENATED MODULE: ../xflow-core/es/hooks/contributions/default.js
var default_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var default_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var default_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};




var NsGraphEventPlugin;
(function (NsGraphEventPlugin) {
    NsGraphEventPlugin.pluginId = 'GraphEventPlugin';
})(NsGraphEventPlugin || (NsGraphEventPlugin = {}));
/**
 * \u5185\u7F6E\u7684hook contribution
 * \u5904\u7406 config\u4E0A\u7684runtime\u7684\u6CE8\u518C\u9879
 */
let default_RuntimeContribution = class RuntimeContribution {
    constructor() {
        this.toDispose = new disposable_DisposableCollection();
        this.registerHook = (hooks) => default_awaiter(this, void 0, void 0, function* () {
            const { hookRegisterFn } = yield this.hookConfig.getConfig();
            const d = hookRegisterFn(hooks);
            return Disposable.create(() => {
                d.dispose();
            });
        });
        this.registerHookHub = (registry) => default_awaiter(this, void 0, void 0, function* () {
            const { hookhubRegisterFn } = yield this.hookConfig.getConfig();
            const d = hookhubRegisterFn(registry);
            return Disposable.create(() => {
                d.dispose();
            });
        });
    }
};
default_decorate([
    Object(index_esm["inject"])(HookConfig),
    default_metadata("design:type", HookConfig)
], default_RuntimeContribution.prototype, "hookConfig", void 0);
default_RuntimeContribution = default_decorate([
    Object(index_esm["singleton"])({ contrib: IHookContribution })
], default_RuntimeContribution);

//# sourceMappingURL=default.js.map
// CONCATENATED MODULE: ../xflow-core/es/common/utils.js
const utils_noop = () => null;
const disposableNoop = {
    dispose: utils_noop,
};
function debounce(cb, time) {
    let flag;
    return () => {
        clearTimeout(flag);
        flag = window.setTimeout(cb, time);
    };
}
function throttle(cb) {
    let flag;
    return () => {
        if (!flag) {
            flag = requestAnimationFrame(() => {
                flag = null;
                cb();
            });
        }
    };
}
const insertCss = (cssString) => {
    const $style = document.createElement('style');
    $style.setAttribute('type', 'text/css');
    document.head.appendChild($style);
    // This is required for IE8 and below.
    // @ts-ignore
    if ($style.styleSheet) {
        // @ts-ignore
        $style.styleSheet.cssText = cssString;
    }
    else {
        $style.appendChild(document.createTextNode(cssString));
    }
    return $style;
};
//# sourceMappingURL=utils.js.map
// CONCATENATED MODULE: ../xflow-core/es/hooks/contributions/graph.js
var graph_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var graph_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var graph_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};






var graph_NsGraphEventPlugin;
(function (NsGraphEventPlugin) {
    NsGraphEventPlugin.pluginId = 'GraphEventPlugin';
})(graph_NsGraphEventPlugin || (graph_NsGraphEventPlugin = {}));
/**
 * \u5185\u7F6E\u7684hook contribution
 * \u5904\u7406graph config \u7684 evnets props
 */
let graph_GraphEventContribution = class GraphEventContribution {
    constructor() {
        this.toDispose = new disposable_DisposableCollection();
        this.registerHookHub = () => graph_awaiter(this, void 0, void 0, function* () {
            return Disposable.create(() => { });
        });
        /** \u6269\u5C55Hook */
        this.registerHook = (hooks) => graph_awaiter(this, void 0, void 0, function* () {
            const toDispose = new disposable_DisposableCollection();
            const disposables = [
                /** \u5728graph\u542F\u52A8\u524D, \u6CE8\u518C\u5916\u90E8\u4E8B\u4EF6\u5230x6Events\u7684hooks\u4E0A*/
                hooks.x6Events.registerHook({
                    name: graph_NsGraphEventPlugin.pluginId,
                    handler: (args) => graph_awaiter(this, void 0, void 0, function* () {
                        const { events } = yield this.graphOptions.getOptions();
                        events.forEach(event => {
                            args.push(event);
                        });
                    }),
                }),
                /** \u5728graph init\u540E, \u5916\u90E8\u4E8B\u4EF6 */
                hooks.afterGraphInit.registerHook({
                    name: graph_NsGraphEventPlugin.pluginId,
                    handler: (args) => graph_awaiter(this, void 0, void 0, function* () {
                        const { commandService, modelService, graph } = args;
                        /** \u6CE8\u518C\u4E8B\u4EF6 */
                        const todo = yield hooks.x6Events.call([], (mergedEvents) => graph_awaiter(this, void 0, void 0, function* () {
                            return mergedEvents.map(e => {
                                const handler = handlerArgs => {
                                    e.callback(handlerArgs, commandService, modelService);
                                };
                                graph.on(e.eventName, handler);
                                return {
                                    dispose: () => {
                                        graph.off(e.eventName, handler);
                                    },
                                };
                            });
                        }));
                        toDispose.pushAll(todo);
                    }),
                }),
                /** \u76D1\u542Cwindow\u7684resize\u4E8B\u4EF6\uFF0C\u5B9E\u73B0\u81EA\u52A8resize */
                hooks.afterGraphInit.registerHook({
                    name: 'add auto resize event',
                    handler: (args) => graph_awaiter(this, void 0, void 0, function* () {
                        const { commandService } = args;
                        const resizeHandler = throttle(() => {
                            commandService.executeCommand(XFlowGraphCommands.GRAPH_RESIZE.id, {});
                        });
                        window.addEventListener('resize', resizeHandler);
                        toDispose.push(Disposable.create(() => {
                            window.removeEventListener('resize', resizeHandler);
                        }));
                    }),
                }),
                /** \u5728graph\u505C\u6B62\u65F6 \u53D6\u6D88\u5916\u90E8\u4E8B\u4EF6 */
                hooks.beforeGraphDestory.registerHook({
                    name: graph_NsGraphEventPlugin.pluginId,
                    handler: () => graph_awaiter(this, void 0, void 0, function* () {
                        toDispose.dispose();
                    }),
                }),
            ];
            toDispose.pushAll(disposables);
            return toDispose;
        });
    }
};
graph_decorate([
    Object(index_esm["inject"])(IGraphOptionProvider),
    graph_metadata("design:type", Object)
], graph_GraphEventContribution.prototype, "graphOptions", void 0);
graph_GraphEventContribution = graph_decorate([
    Object(index_esm["singleton"])({ contrib: IHookContribution })
], graph_GraphEventContribution);

//# sourceMappingURL=graph.js.map
// CONCATENATED MODULE: ../xflow-core/es/hooks/module.js

/** Application \u6269\u5C55\u4F9D\u8D56 */






/** \u4F9D\u8D56\u6269\u5C55\u6A21\u5757\uFF0C\u5FC5\u987B\u8981\u52A0\u8F7D */
const module_createModule = (config) => {
    return Object(index_esm["Module"])(register => {
        /** \u6CE8\u518C IGraphHookContribution \u6210\u4E3A\u4E00\u4E2A\u65B0\u6269\u5C55\u70B9 */
        index_esm["Contribution"].register(register, IHookContribution);
        /** \u6269\u5C55 runtime hook */
        register(default_RuntimeContribution);
        /** \u6269\u5C55 graph event hook */
        register(graph_GraphEventContribution);
        /** \u6CE8\u518C HookRegistry \u5230 IFrontendApplicationContribution */
        /** \u6CE8\u518C HookRegistry */
        register(hook_registry_HookRegistry);
        /** \u6CE8\u518C XFlowHookConfig */
        register(HookConfig, { useValue: config });
    });
};

//# sourceMappingURL=module.js.map
// CONCATENATED MODULE: ../xflow-core/es/xflow-main/components/extension-registry.js



/** \u4FDD\u5B58\u7EC4\u4EF6\u4E0A\u7684\u914D\u7F6E */
class extension_registry_ExtensionRegistry {
    constructor() {
        this.extensions = [];
        this.containerClassNames = new Set();
        this.addCoreModule = (extension) => {
            // core module \u6DFB\u52A0\u5728\u524D\u9762
            this.extensions.unshift(extension);
            return Disposable.create(() => {
                this.removeExtension(extension);
            });
        };
        this.addExtension = (extension) => {
            this.extensions.push(extension);
            return Disposable.create(() => {
                this.removeExtension(extension);
            });
        };
        this.removeExtension = (extension) => {
            const idx = this.extensions.indexOf(extension);
            if (idx > -1) {
                this.extensions.splice(idx, 1);
            }
        };
        this.getInstaceId = () => {
            return this.instanceId;
        };
        this.addContainerClassNames = (clz) => {
            return this.containerClassNames.add(clz);
        };
        this.getContainerClassNames = () => {
            return Array.from(this.containerClassNames);
        };
        this.getAllExtensions = () => {
            return this.extensions;
        };
        this.getAllExtensionConfigs = () => {
            return this.extensions.map(i => i.config);
        };
        this.instanceId = uuidv4();
    }
    has(name) {
        return this.extensions.some(ext => ext.config.CONFIG_TYPE === name);
    }
}
/** \u83B7\u53D6Xflow extension\uFF0C\u7528\u4E8E\u6536\u96C6React\u7EC4\u4EF6\u7684\u914D\u7F6E */
const createExtensionRegistry = () => {
    /* eslint-disable-next-line react-hooks/rules-of-hooks */
    const registry = react_default.a.useMemo(() => {
        return new extension_registry_ExtensionRegistry();
    }, []);
    return registry;
};
//# sourceMappingURL=extension-registry.js.map
// CONCATENATED MODULE: ../xflow-core/es/xflow-main/components/extension-context.js


/** \u901A\u8FC7context\u6536\u96C6extension\u7684\u914D\u7F6E */
const ExtensionRegistryContext = react_default.a.createContext({});
const useExtensionRegistry = () => {
    return react_default.a.useContext(ExtensionRegistryContext);
};

//# sourceMappingURL=extension-context.js.map
// CONCATENATED MODULE: ../xflow-core/es/hooks/components/index.js




const components_HookRegistry = props => {
    /** \u83B7\u53D6\u914D\u7F6E\u4E2D\u5FC3 */
    const extensionRegistry = useExtensionRegistry();
    /** \u83B7\u53D6ContextService\u7684\u914D\u7F6E */
    const hookConfig = react_default.a.useMemo(() => (props.config ? props.config : new HookConfig()), 
    // \u4E0D\u8981\u79FB\u9664\uFF1A\u4FDD\u8BC1config\u53EA\u751F\u6210\u4E00\u6B21
    // eslint-disable-next-line react-hooks/exhaustive-deps
    []);
    react_default.a.useEffect(() => {
        const disposable = extensionRegistry.addCoreModule({
            config: hookConfig,
            createModule: module_createModule,
        });
        return () => {
            disposable.dispose();
            hookConfig.dispose();
        };
    }, [extensionRegistry, hookConfig]);
    return null;
};
const createHookConfig = (addOptions) => (value) => {
    /** bridge config and value */
    const valueContainer = react_default.a.useMemo(() => ({ getValue: () => ({}) }), []);
    valueContainer.getValue = () => value;
    const hookConfig = react_default.a.useMemo(() => {
        const config = new HookConfig();
        addOptions(config, valueContainer);
        return config;
    }, [valueContainer]);
    return hookConfig;
};
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-core/es/hooks/index.js




//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/components/context.js

const AppContext = react_default.a.createContext({
    cell: null,
    x6Graph: null,
    commands: null,
    modelService: null,
});
const useAppContext = () => react_default.a.useContext(AppContext);
function getNodeReactComponent(Component, commands, modelService) {
    return function (x6Node) {
        /* eslint-disable-next-line  */
        const x6Graph = this;
        const nodeData = x6Node === null || x6Node === void 0 ? void 0 : x6Node.getData();
        const size = x6Node === null || x6Node === void 0 ? void 0 : x6Node.getSize();
        const position = x6Node === null || x6Node === void 0 ? void 0 : x6Node.getPosition();
        const WrappedComponent = () => {
            return (react_default.a.createElement(AppContext.Provider, { value: {
                    cell: x6Node,
                    x6Graph,
                    commands,
                    modelService,
                } }, react_default.a.createElement(Component, {
                cell: x6Node,
                data: nodeData,
                size,
                position,
            })));
        };
        return react_default.a.createElement(WrappedComponent, null);
    };
}
function getEdgeReactComponent(Component, commands, modelService) {
    return function (x6Edge) {
        /* eslint-disable-next-line  */
        const x6Graph = this;
        const edgeData = x6Edge === null || x6Edge === void 0 ? void 0 : x6Edge.getData();
        const WrappedComponent = () => {
            return (react_default.a.createElement(AppContext.Provider, { value: {
                    cell: x6Edge,
                    x6Graph,
                    commands,
                    modelService,
                } }, react_default.a.createElement(Component, {
                data: edgeData,
                cell: x6Edge,
            })));
        };
        return react_default.a.createElement(WrappedComponent, null);
    };
}
/** \u83B7\u53D6\u8282\u70B9\u9009\u4E2D\u72B6\u6001 */
const useIsNodeSelected = () => {
    const [isSelected, setIsSelected] = react_default.a.useState(false);
    const { x6Graph, cell } = useAppContext();
    react_default.a.useEffect(() => {
        const handler = ({ added, removed }) => {
            const isAdded = added
                .filter(selectedCell => selectedCell.isNode())
                .some(node => {
                node.id === cell.id;
            });
            if (isAdded) {
                cell.setData(Object.assign(Object.assign({}, cell.getData()), { isNodeSelected: true }));
                setIsSelected(true);
                return;
            }
            const isRemoved = removed
                .filter(selectedCell => selectedCell.isNode())
                .some(node => {
                node.id === cell.id;
            });
            if (isRemoved) {
                cell.setData(Object.assign(Object.assign({}, cell.getData()), { isNodeSelected: false }));
                setIsSelected(false);
                return;
            }
        };
        x6Graph.on('selection:changed', handler);
        return () => {
            x6Graph.off('selection:changed', handler);
        };
        /* eslint-disable-next-line  */
    }, [x6Graph]);
    return [isSelected];
};
//# sourceMappingURL=context.js.map
// CONCATENATED MODULE: ../xflow-core/es/xflow-main/graph/graph-provider.js
var graph_provider_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var graph_provider_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var graph_provider_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};











/** !!! \u6240\u6709\u9700\u8981\u4F7F\u7528Graph\u76F8\u5173\u4FE1\u606F\u7684\u5730\u65B9, \u90FD\u7EDF\u4E00\u4F7F\u7528IGraphProvider\u6765\u83B7\u53D6 */
const IGraphProvider = Symbol('IGraphProvider');
const ICommandServiceProvider = Symbol('ICommandServiceProvider');
const IModelServiceProvider = Symbol('IModelServiceProvider');
let graph_provider_GraphManager = class GraphManager {
    constructor() {
        /** \u5904\u7406\u753B\u5E03\u5B9E\u4F8B\u7684\u9500\u6BC1 */
        this.toDisposce = new disposable_DisposableCollection();
        /** \u50A8\u5B58\u753B\u5E03\u5B9E\u4F8B */
        this.graphMap = new Map();
        /** \u83B7\u53D6X6 Graph \u5B9E\u4F8B */
        this.getGraph = (graphId) => graph_provider_awaiter(this, void 0, void 0, function* () {
            let graphDefer = this.graphMap.get(graphId);
            if (!graphDefer) {
                graphDefer = new Deferred();
                this.graphMap.set(graphId, graphDefer);
                const options = yield this.optionProvider.getOptions();
                /** \u83B7\u53D6hooks\u5B9E\u4F8B\uFF1A hooks\u65B9\u4FBF\u5176\u4ED6\u7EC4\u4EF6\u53EF\u4EE5\u4FEE\u6539\u6CE8\u518CgraphOpions/events */
                const hooks = this.hookService.hookProvider();
                /** \u6267\u884Chooks\uFF1A\u83B7\u53D6graphOptions */
                const mergedOptions = yield hooks.graphOptions.call(options.x6Options);
                const { graphContainer, edgeRender, edgeTypeParser } = options;
                /** \u6267\u884Chooks\uFF1A\u83B7\u53D6edge label render */
                const edgeRenderMap = yield hooks.reactEdgeLabelRender.call(edgeRender);
                const { clientHeight, clientWidth } = graphContainer;
                const commandService = yield this.commandServiceProvider.getCommandService();
                const modelService = yield this.modelServiceProvider.getModelService();
                /** \u5B9E\u4F8B\u5316 X6 Graph */
                const graph = new es["e" /* Graph */](Object.assign(Object.assign({ container: graphContainer, width: clientWidth, height: clientHeight }, mergedOptions), { 
                    /** X6\u63D0\u4F9B\u4E86\u8FB9\u6E32\u67D3\u7684\u94A9\u5B50, \u53EF\u4EE5\u5728\u8FD9\u91CC\u8BBE\u7F6E\u8FB9\u4E0A\u9700\u8981\u6E32\u67D3\u7684React\u5185\u5BB9 */
                    onEdgeLabelRendered: args => {
                        const { edge, container } = args;
                        this.renderEdgeReactLabel({
                            edge,
                            container,
                            edgeRenderMap,
                            edgeTypeParser,
                            modelService,
                            commandService,
                        });
                    } }));
                /** \u6267\u884Chooks\uFF1A\u7ED1\u5B9A\u4E8B\u4EF6\u6267\u884Capi */
                yield hooks.afterGraphInit.call({
                    graph,
                    commandService,
                    modelService,
                });
                graphDefer.resolve(graph);
                graph.on('node:moved', ({ node }) => {
                    const nodeData = node.getData();
                    const position = node.position();
                    node.setData(Object.assign(Object.assign({}, nodeData), { x: position === null || position === void 0 ? void 0 : position.x, y: position === null || position === void 0 ? void 0 : position.y }));
                });
                graph.on('node:resized', ({ node }) => {
                    const nodeData = node.getData();
                    const size = node.size();
                    node.setData(Object.assign(Object.assign({}, nodeData), { width: size === null || size === void 0 ? void 0 : size.width, height: size === null || size === void 0 ? void 0 : size.height }));
                });
                this.toDisposce.push(Disposable.create(() => graph_provider_awaiter(this, void 0, void 0, function* () {
                    yield hooks.beforeGraphDestory.call({
                        graph,
                        commandService,
                        modelService,
                    });
                    this.graphMap.delete(graphId);
                    graph.dispose();
                })));
            }
            return graphDefer.promise;
        });
        this.renderEdgeReactLabel = (args) => graph_provider_awaiter(this, void 0, void 0, function* () {
            const { container, edgeTypeParser, edge, edgeRenderMap, commandService, modelService } = args;
            const renderKey = edgeTypeParser(edge === null || edge === void 0 ? void 0 : edge.data) || XFLOW_DEFAULT_EDGE;
            const reactComponent = edgeRenderMap.get(renderKey);
            if (!reactComponent) {
                return;
            }
            if (edge && (edge === null || edge === void 0 ? void 0 : edge.data) && reactComponent) {
                const content = this.edgeAppendForeignObject(edge, container);
                const WrappedReactComponent = getEdgeReactComponent(reactComponent, commandService, modelService)(edge);
                react_dom_default.a.render(WrappedReactComponent, content);
            }
        });
    }
    /** \u5B9E\u73B0\u5728\u8FDE\u7EBF\u4E0A\u6E32\u67D3React\u8282\u70B9 */
    edgeAppendForeignObject(x6Edge, container) {
        const fo = es["b" /* Dom */].createSvgElement('foreignObject');
        const body = es["b" /* Dom */].createElementNS('body', es["b" /* Dom */].ns.xhtml);
        const content = es["b" /* Dom */].createElementNS('div', es["b" /* Dom */].ns.xhtml);
        const edgeData = x6Edge === null || x6Edge === void 0 ? void 0 : x6Edge.data;
        const foWdith = (edgeData === null || edgeData === void 0 ? void 0 : edgeData.edgeContentWidth) || 100;
        const foHeight = (edgeData === null || edgeData === void 0 ? void 0 : edgeData.edgeContentHeigt) || 30;
        fo.setAttribute('width', \`\${foWdith}\`);
        fo.setAttribute('height', \`\${foHeight}\`);
        fo.setAttribute('x', \`\${(-1.0 * foWdith) / 2}\`);
        fo.setAttribute('y', \`\${(-1.0 * foHeight) / 2}\`);
        body.setAttribute('xhtmls', es["b" /* Dom */].ns.xhtml);
        body.style.width = '100%';
        body.style.height = '100%';
        body.style.padding = '0';
        body.style.margin = '0';
        body.style.background = 'unset';
        body.style.overflow = 'visible';
        body.className = 'xflow-edge-label-body';
        content.style.width = '100%';
        content.style.height = '100%';
        body.appendChild(content);
        fo.appendChild(body);
        container.appendChild(fo);
        return content;
    }
    dispose() {
        this.toDisposce.dispose();
    }
};
graph_provider_decorate([
    Object(index_esm["inject"])(IGraphOptionProvider),
    graph_provider_metadata("design:type", Object)
], graph_provider_GraphManager.prototype, "optionProvider", void 0);
graph_provider_decorate([
    Object(index_esm["inject"])(IHookService),
    graph_provider_metadata("design:type", Object)
], graph_provider_GraphManager.prototype, "hookService", void 0);
graph_provider_decorate([
    Object(index_esm["inject"])(ICommandServiceProvider),
    graph_provider_metadata("design:type", Object)
], graph_provider_GraphManager.prototype, "commandServiceProvider", void 0);
graph_provider_decorate([
    Object(index_esm["inject"])(IModelServiceProvider),
    graph_provider_metadata("design:type", Object)
], graph_provider_GraphManager.prototype, "modelServiceProvider", void 0);
graph_provider_GraphManager = graph_provider_decorate([
    Object(index_esm["singleton"])()
], graph_provider_GraphManager);

const registerGraphModule = (register) => {
    /** \u6CE8\u518CGraphManager */
    register(graph_provider_GraphManager);
    register(IGraphProvider, {
        lifecycle: index_esm["Syringe"].Lifecycle.singleton,
        useDynamic: context => {
            return {
                getGraphInstance: () => graph_provider_awaiter(void 0, void 0, void 0, function* () {
                    const graphManager = context.container.get(graph_provider_GraphManager);
                    const graphOptionProvider = context.container.get(IGraphOptionProvider);
                    const graphConfig = yield (graphOptionProvider === null || graphOptionProvider === void 0 ? void 0 : graphOptionProvider.getOptions());
                    const x6Graph = yield (graphManager === null || graphManager === void 0 ? void 0 : graphManager.getGraph(graphConfig.graphId));
                    return x6Graph;
                }),
                getGraphOptions: () => graph_provider_awaiter(void 0, void 0, void 0, function* () {
                    const graphOptionProvider = context.container.get(IGraphOptionProvider);
                    return graphOptionProvider === null || graphOptionProvider === void 0 ? void 0 : graphOptionProvider.getOptions();
                }),
            };
        },
    });
    register(ICommandServiceProvider, {
        lifecycle: index_esm["Syringe"].Lifecycle.singleton,
        useDynamic: context => {
            return {
                getCommandService: () => graph_provider_awaiter(void 0, void 0, void 0, function* () {
                    const commandService = context.container.get(IGraphCommandService);
                    return commandService;
                }),
            };
        },
    });
    register(IModelServiceProvider, {
        lifecycle: index_esm["Syringe"].Lifecycle.singleton,
        useDynamic: context => {
            return {
                getModelService: () => graph_provider_awaiter(void 0, void 0, void 0, function* () {
                    const modelService = context.container.get(IModelService);
                    return modelService;
                }),
            };
        },
    });
};
//# sourceMappingURL=graph-provider.js.map
// CONCATENATED MODULE: ../xflow-core/es/model-service/config.js
var model_service_config_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};


var NsModelServiceConfig;
(function (NsModelServiceConfig) {
    NsModelServiceConfig.CONFIG_TYPE = 'MODEL_SERVICE_CONFIG';
})(NsModelServiceConfig || (NsModelServiceConfig = {}));
const dispoableNoop = () => Disposable.create(() => { });
class config_ModelServiceConfig {
    constructor() {
        /** CONFIG_TYPE */
        this.CONFIG_TYPE = NsModelServiceConfig.CONFIG_TYPE;
        /** \u5916\u90E8\u6CE8\u518Ccontext\u7684\u65B9\u6CD5 */
        this.registerModelFn = dispoableNoop;
        /** CONFIG_TYPE */
        this.isMounted = new Deferred();
        this.registerModel = (registerModel) => {
            this.registerModelFn = registerModel;
        };
        this.setMountState = () => {
            this.isMounted.resolve(true);
        };
        this.getConfig = () => model_service_config_awaiter(this, void 0, void 0, function* () {
            yield this.isMounted.promise;
            return {
                CONFIG_TYPE: this.CONFIG_TYPE,
                modelRegisterFunc: this.registerModelFn || dispoableNoop,
            };
        });
        this.dispose = () => {
            this.registerModelFn = dispoableNoop;
            this.isMounted = new Deferred();
        };
    }
}
//# sourceMappingURL=config.js.map
// CONCATENATED MODULE: ../xflow-core/es/model-service/model-registry.js
var model_registry_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var model_registry_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var model_registry_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var model_registry_a;







let model_registry_ModelRegistry = class ModelRegistry {
    constructor() {
        /** disposables */
        this.toDispose = new disposable_DisposableCollection();
        /** Deferred Model Map */
        this.deferredModelMap = new Map();
        /**
         * \u6CE8\u518Cmodel
         * @param options IModelOptions<T>
         */
        this.registerModel = (options) => {
            const { id, getInitialValue, modelFactory } = options;
            const toDispose = new disposable_DisposableCollection();
            const defer = this.ensureModel(id);
            if (defer.isResolved) {
                console.error(options, 'model has been registerd');
                return;
            }
            const initialValue = getInitialValue ? getInitialValue() : rx_model_NsModel.EMPTY_VALUE;
            const model = modelFactory
                ? modelFactory()
                : new rx_model_RxModel(initialValue);
            if (rx_model_NsModel.isValidValue(initialValue)) {
                defer.resolve(model);
            }
            if (options.watchChange) {
                /** \u7ED1\u5B9Awatch\u4E8B\u4EF6 */
                options.watchChange(model, this).then(d => {
                    /** createModel \u540E resolve */
                    if (!defer.isResolved) {
                        defer.resolve(model);
                    }
                    this.toDispose.pushAll([d, toDispose]);
                    toDispose.push(d);
                });
            }
            return toDispose;
        };
        /**
         * \u67E5\u627E model
         * @param token: Token<T>
         */
        this.findDeferredModel = (token) => {
            return this.deferredModelMap.get(token);
        };
        /**
         *  \u6D88\u8D39Model: await model resolve
         * @param token: Token<T>
         */
        this.awaitModel = (token) => {
            const defer = this.ensureModel(token);
            return defer.promise;
        };
        /**
         * \u6CE8\u518C \u5B9A\u4E49\u5728IModelOptionProvider\u4E2D\u7684Model
         */
        this.registerRuntimeModel = () => model_registry_awaiter(this, void 0, void 0, function* () {
            const { modelRegisterFunc } = yield this.modelOptionProvider.getOption();
            const graphInstance = yield this.graphProvider.getGraphInstance();
            if (modelRegisterFunc) {
                modelRegisterFunc(this, graphInstance);
            }
        });
        /**
         * \u786E\u4FDD\u8C03\u7528\u65F6\u6709\u53EF\u7528\u7684Model
         * @param id ModelId
         */
        this.ensureModel = (token) => {
            const existDeferred = this.deferredModelMap.get(token);
            if (existDeferred) {
                return existDeferred;
            }
            /** \u6CE8\u518CModelDeferred */
            const newDeferred = new Deferred();
            this.deferredModelMap.set(token, newDeferred);
            this.toDispose.push(Disposable.create(() => this.deferredModelMap.delete(token)));
            return newDeferred;
        };
    }
    /** app\u542F\u52A8\u65F6\uFF0C\u6536\u96C6Model\u6269\u5C55\u70B9\u7684\u6CE8\u518C\u9879 */
    onStart() {
        const contributions = this.contributionProvider.getContributions();
        for (const contribution of contributions) {
            contribution.registerModel(this);
        }
        this.registerRuntimeModel();
    }
    /** app\u505C\u6B62\u7684\u903B\u8F91 */
    onStop() {
        this.toDispose.dispose();
    }
};
model_registry_decorate([
    Object(index_esm["contrib"])(IModelContribution),
    model_registry_metadata("design:type", typeof (model_registry_a = typeof index_esm["Contribution"] !== "undefined" && index_esm["Contribution"].Provider) === "function" ? model_registry_a : Object)
], model_registry_ModelRegistry.prototype, "contributionProvider", void 0);
model_registry_decorate([
    Object(index_esm["inject"])(IModelOptionProvider),
    model_registry_metadata("design:type", Object)
], model_registry_ModelRegistry.prototype, "modelOptionProvider", void 0);
model_registry_decorate([
    Object(index_esm["inject"])(IGraphProvider),
    model_registry_metadata("design:type", Object)
], model_registry_ModelRegistry.prototype, "graphProvider", void 0);
model_registry_ModelRegistry = model_registry_decorate([
    Object(index_esm["singleton"])({ contrib: [IFrontendApplicationContribution, IModelService] })
], model_registry_ModelRegistry);

//# sourceMappingURL=model-registry.js.map
// CONCATENATED MODULE: ../xflow-core/es/model-service/constant.js
var constant_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
/** existModel\u7684Utils */
const isModelExistUtil = (token) => (modelService) => {
    const defer = modelService.findDeferredModel(token);
    return defer && defer.promise ? true : false;
};
/** useModel\u7684Utils */
const getModelUtil = (token) => (modelService) => constant_awaiter(void 0, void 0, void 0, function* () {
    return yield modelService.awaitModel(token);
});
/** useModel\u7684Utils */
const useModelValueUtil = (token) => (modelService) => constant_awaiter(void 0, void 0, void 0, function* () {
    const model = yield modelService.awaitModel(token);
    return model.getValidValue();
});
/** \u753B\u5E03\u662F\u5426\u5DF2\u5F00\u542F\u591A\u9009 */
var GRAPH_ENABLE_MULTI_SELECT;
(function (GRAPH_ENABLE_MULTI_SELECT) {
    GRAPH_ENABLE_MULTI_SELECT.id = 'GRAPH_ENABLE_MULTI_SELECT';
    GRAPH_ENABLE_MULTI_SELECT.getModel = getModelUtil(GRAPH_ENABLE_MULTI_SELECT.id);
    GRAPH_ENABLE_MULTI_SELECT.useValue = useModelValueUtil(GRAPH_ENABLE_MULTI_SELECT.id);
})(GRAPH_ENABLE_MULTI_SELECT || (GRAPH_ENABLE_MULTI_SELECT = {}));
/** \u753B\u5E03\u5DF2\u9009\u4E2D\u8282\u70B9 */
var IS_NODE_SELECTED;
(function (IS_NODE_SELECTED) {
    IS_NODE_SELECTED.id = 'IS_NODE_SELECTED';
    IS_NODE_SELECTED.getModel = getModelUtil(IS_NODE_SELECTED.id);
    IS_NODE_SELECTED.useValue = useModelValueUtil(IS_NODE_SELECTED.id);
})(IS_NODE_SELECTED || (IS_NODE_SELECTED = {}));
/** \u753B\u5E03\u9009\u4E2D\u8282\u70B9\u662FGroup */
var IS_GROUP_SELECTED;
(function (IS_GROUP_SELECTED) {
    IS_GROUP_SELECTED.id = 'IS_GROUP_SELECTED';
    IS_GROUP_SELECTED.getModel = getModelUtil(IS_GROUP_SELECTED.id);
    IS_GROUP_SELECTED.useValue = useModelValueUtil(IS_GROUP_SELECTED.id);
})(IS_GROUP_SELECTED || (IS_GROUP_SELECTED = {}));
/** \u753B\u5E03\u9009\u4E2D\u8282\u70B9\u662FGroup */
var IS_NORMAL_NODES_SELECTED;
(function (IS_NORMAL_NODES_SELECTED) {
    IS_NORMAL_NODES_SELECTED.id = 'IS_NORMAL_NODES_SELECTED';
    IS_NORMAL_NODES_SELECTED.getModel = getModelUtil(IS_NORMAL_NODES_SELECTED.id);
    IS_NORMAL_NODES_SELECTED.useValue = useModelValueUtil(IS_NORMAL_NODES_SELECTED.id);
})(IS_NORMAL_NODES_SELECTED || (IS_NORMAL_NODES_SELECTED = {}));
/** \u753B\u5E03\u9009\u4E2DCell\u72B6\u6001\uFF0C\u4FDD\u5B58\u6700\u540E\u4E00\u4E2A\u9009\u4E2D\u7684\u8282\u70B9 */
var SELECTED_CELL;
(function (SELECTED_CELL) {
    SELECTED_CELL.id = 'LAST_SELECTED_CELL';
    SELECTED_CELL.getModel = getModelUtil(SELECTED_CELL.id);
    SELECTED_CELL.useValue = useModelValueUtil(SELECTED_CELL.id);
})(SELECTED_CELL || (SELECTED_CELL = {}));
/** \u753B\u5E03\u9009\u4E2DCellS\u72B6\u6001 */
var SELECTED_CELLS;
(function (SELECTED_CELLS) {
    SELECTED_CELLS.id = 'SELECTED_CELLS';
    SELECTED_CELLS.getModel = getModelUtil(SELECTED_CELLS.id);
    SELECTED_CELLS.useValue = useModelValueUtil(SELECTED_CELLS.id);
})(SELECTED_CELLS || (SELECTED_CELLS = {}));
/** \u753B\u5E03\u9009\u4E2D\u8282\u70B9\u72B6\u6001\uFF0C \u5982\u6709\u591A\u4E2A\u8282\u70B9\u5219\u4FDD\u5B58\u6700\u540E\u4E00\u4E2A\u9009\u4E2D\u7684\u8282\u70B9 */
var SELECTED_NODE;
(function (SELECTED_NODE) {
    SELECTED_NODE.id = 'LAST_SELECTED_NODE';
    SELECTED_NODE.getModel = getModelUtil(SELECTED_NODE.id);
    SELECTED_NODE.useValue = useModelValueUtil(SELECTED_NODE.id);
})(SELECTED_NODE || (SELECTED_NODE = {}));
/** \u753B\u5E03\u9009\u4E2D\u8282\u70B9\u72B6\u6001 */
var SELECTED_NODES;
(function (SELECTED_NODES) {
    SELECTED_NODES.id = 'SELECTED_NODES';
    SELECTED_NODES.getModel = getModelUtil(SELECTED_NODES.id);
    SELECTED_NODES.useValue = useModelValueUtil(SELECTED_NODES.id);
})(SELECTED_NODES || (SELECTED_NODES = {}));
/** \u753B\u5E03\u9009\u4E2D\u8FB9\u72B6\u6001 */
var SELECTED_EDGES;
(function (SELECTED_EDGES) {
    SELECTED_EDGES.id = 'SELECTED_EDGES';
    SELECTED_EDGES.getModel = getModelUtil(SELECTED_EDGES.id);
    SELECTED_EDGES.useValue = useModelValueUtil(SELECTED_EDGES.id);
})(SELECTED_EDGES || (SELECTED_EDGES = {}));
/** \u753B\u5E03\u9009\u4E2DGROUP List */
var SELECTED_GROUPS;
(function (SELECTED_GROUPS) {
    SELECTED_GROUPS.id = 'SELECTED_GROUPS';
    SELECTED_GROUPS.getModel = getModelUtil(SELECTED_GROUPS.id);
    SELECTED_GROUPS.useValue = useModelValueUtil(SELECTED_GROUPS.id);
})(SELECTED_GROUPS || (SELECTED_GROUPS = {}));
/** \u753B\u5E03\u8282\u70B9\u53F3\u952E\u83DC\u5355\u72B6\u6001 */
var CONTEXTMENU_NODE;
(function (CONTEXTMENU_NODE) {
    CONTEXTMENU_NODE.id = 'CONTEXTMENU_NODE';
    CONTEXTMENU_NODE.getModel = getModelUtil(CONTEXTMENU_NODE.id);
    CONTEXTMENU_NODE.useValue = useModelValueUtil(CONTEXTMENU_NODE.id);
})(CONTEXTMENU_NODE || (CONTEXTMENU_NODE = {}));
/** \u753B\u5E03\u8FB9\u53F3\u952E\u83DC\u5355\u72B6\u6001 */
var CONTEXTMENU_EDGE;
(function (CONTEXTMENU_EDGE) {
    CONTEXTMENU_EDGE.id = 'CONTEXTMENU_EDGE';
    CONTEXTMENU_EDGE.getModel = getModelUtil(CONTEXTMENU_EDGE.id);
    CONTEXTMENU_EDGE.useValue = useModelValueUtil(CONTEXTMENU_EDGE.id);
})(CONTEXTMENU_EDGE || (CONTEXTMENU_EDGE = {}));
/** \u753B\u5E03\u53F3\u952E\u83DC\u5355\u72B6\u6001 */
var CONTEXTMENU_TARGET;
(function (CONTEXTMENU_TARGET) {
    CONTEXTMENU_TARGET.id = 'CONTEXTMENU_TARGET';
    CONTEXTMENU_TARGET.getModel = getModelUtil(CONTEXTMENU_TARGET.id);
    CONTEXTMENU_TARGET.useValue = useModelValueUtil(CONTEXTMENU_TARGET.id);
})(CONTEXTMENU_TARGET || (CONTEXTMENU_TARGET = {}));
/** \u753B\u5E03\u5143\u6570\u636E\u72B6\u6001 */
var GRAPH_META;
(function (GRAPH_META) {
    GRAPH_META.id = 'GRAPH_META';
    GRAPH_META.getModel = getModelUtil(GRAPH_META.id);
    GRAPH_META.useValue = useModelValueUtil(GRAPH_META.id);
})(GRAPH_META || (GRAPH_META = {}));
/** \u753B\u5E03\u7F29\u653E\u72B6\u6001 */
var GRAPH_SCALE;
(function (GRAPH_SCALE) {
    GRAPH_SCALE.id = 'GRAPH_SCALE';
    GRAPH_SCALE.getModel = getModelUtil(GRAPH_SCALE.id);
    GRAPH_SCALE.useValue = useModelValueUtil(GRAPH_SCALE.id);
})(GRAPH_SCALE || (GRAPH_SCALE = {}));
/** COMMAND REDO STACK\u7684\u72B6\u6001*/
var COMMAND_REDOABLE;
(function (COMMAND_REDOABLE) {
    COMMAND_REDOABLE.id = 'COMMAND_REDOABLE';
    COMMAND_REDOABLE.getModel = getModelUtil(COMMAND_REDOABLE.id);
    COMMAND_REDOABLE.useValue = useModelValueUtil(COMMAND_REDOABLE.id);
})(COMMAND_REDOABLE || (COMMAND_REDOABLE = {}));
/** COMMAND UNDO STACK\u7684\u72B6\u6001*/
var COMMAND_UNDOABLE;
(function (COMMAND_UNDOABLE) {
    COMMAND_UNDOABLE.id = 'COMMAND_UNDOABLE';
    COMMAND_UNDOABLE.getModel = getModelUtil(COMMAND_UNDOABLE.id);
    COMMAND_UNDOABLE.useValue = useModelValueUtil(COMMAND_UNDOABLE.id);
})(COMMAND_UNDOABLE || (COMMAND_UNDOABLE = {}));
/** COMMAND \u6267\u884C\u7ED3\u679C\u7684\u72B6\u6001*/
var COMMAND_GLOBALS;
(function (COMMAND_GLOBALS) {
    COMMAND_GLOBALS.id = 'COMMAND_GLOBALS';
    COMMAND_GLOBALS.getModel = getModelUtil(COMMAND_GLOBALS.id);
    COMMAND_GLOBALS.useValue = useModelValueUtil(COMMAND_GLOBALS.id);
})(COMMAND_GLOBALS || (COMMAND_GLOBALS = {}));
/** History Undo Redo */
var HISTORY_UNDOABLE;
(function (HISTORY_UNDOABLE) {
    HISTORY_UNDOABLE.id = 'HISTORY_UNDOABLE';
    HISTORY_UNDOABLE.getModel = getModelUtil(HISTORY_UNDOABLE.id);
    HISTORY_UNDOABLE.useValue = useModelValueUtil(HISTORY_UNDOABLE.id);
})(HISTORY_UNDOABLE || (HISTORY_UNDOABLE = {}));
var HISTORY_REDOABLE;
(function (HISTORY_REDOABLE) {
    HISTORY_REDOABLE.id = 'HISTORY_REDOABLE';
    HISTORY_REDOABLE.getModel = getModelUtil(HISTORY_REDOABLE.id);
    HISTORY_REDOABLE.useValue = useModelValueUtil(HISTORY_REDOABLE.id);
})(HISTORY_REDOABLE || (HISTORY_REDOABLE = {}));
//# sourceMappingURL=constant.js.map
// CONCATENATED MODULE: ../xflow-core/es/model-service/contributions/command-model.js
var command_model_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var command_model_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var command_model_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};




let command_model_CommandModelContribution = class CommandModelContribution {
    /** \u6269\u5C55Model */
    registerModel(registry) {
        /** \u662F\u5426\u53EF\u4EE5redo */
        registry.registerModel({
            id: COMMAND_REDOABLE.id,
            getInitialValue: () => this.commands.isRedoable,
            watchChange: (model) => command_model_awaiter(this, void 0, void 0, function* () {
                const disposable = this.commands.watchChange(() => {
                    model.setValue(this.commands.isRedoable);
                });
                return disposable;
            }),
        });
        /** \u662F\u5426\u53EF\u4EE5undo */
        registry.registerModel({
            id: COMMAND_UNDOABLE.id,
            getInitialValue: () => this.commands.isUndoable,
            watchChange: (model) => command_model_awaiter(this, void 0, void 0, function* () {
                const disposable = this.commands.watchChange(() => {
                    model.setValue(this.commands.isUndoable);
                });
                return disposable;
            }),
        });
        /** command \u6267\u884C\u7ED3\u679C */
        registry.registerModel({
            id: COMMAND_GLOBALS.id,
            modelFactory: () => {
                return this.commands.Globals;
            },
        });
    }
};
command_model_decorate([
    Object(index_esm["inject"])(IGraphCommandService),
    command_model_metadata("design:type", Object)
], command_model_CommandModelContribution.prototype, "commands", void 0);
command_model_CommandModelContribution = command_model_decorate([
    Object(index_esm["singleton"])({ contrib: IModelContribution })
], command_model_CommandModelContribution);

//# sourceMappingURL=command-model.js.map
// CONCATENATED MODULE: ../xflow-core/es/common/event-helper.js

const disposableSubscribe = (target, eventName, cb) => {
    target.on(eventName, cb);
    return Disposable.create(() => {
        target.off(eventName, cb);
    });
};
//# sourceMappingURL=event-helper.js.map
// CONCATENATED MODULE: ../xflow-core/es/model-service/contributions/graph-model.js
var graph_model_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var graph_model_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var graph_model_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};






let graph_model_GraphModelContribution = class GraphModelContribution {
    constructor() {
        /** \u83B7\u53D6\u753B\u5E03\u5B9E\u4F8B */
        this.getGraphInstance = () => graph_model_awaiter(this, void 0, void 0, function* () {
            const graphInstance = yield this.graphProvider.getGraphInstance();
            const graphConfig = yield this.graphProvider.getGraphOptions();
            return { graph: graphInstance, config: graphConfig };
        });
    }
    registerModel(registry) {
        /** X6 GRAPH META */
        registry.registerModel({
            id: GRAPH_META.id,
            getInitialValue: () => ({
                flowId: '-1',
            }),
            watchChange: (self) => graph_model_awaiter(this, void 0, void 0, function* () {
                return Disposable.create(() => {
                    self.setValue({ flowId: '-1' });
                });
            }),
        });
        /** Graph \u591A\u9009\u72B6\u6001 */
        registry.registerModel({
            id: GRAPH_ENABLE_MULTI_SELECT.id,
            getInitialValue: () => ({
                isEnable: false,
            }),
            watchChange: (self) => graph_model_awaiter(this, void 0, void 0, function* () {
                return Disposable.create(() => {
                    self.setValue({ isEnable: false });
                });
            }),
        });
        /** \u9009\u4E2DCells\u72B6\u6001 */
        registry.registerModel({
            id: SELECTED_CELLS.id,
            getInitialValue: () => [],
            watchChange: (self) => graph_model_awaiter(this, void 0, void 0, function* () {
                const { graph } = yield this.getGraphInstance();
                const onChange = (e) => {
                    const { selected } = e;
                    self.setValue(selected);
                };
                graph.on('selection:changed', onChange);
                return Disposable.create(() => graph.off('selection:changed', onChange));
            }),
        });
        /** \u9009\u4E2DCell\u72B6\u6001 */
        registry.registerModel({
            id: SELECTED_CELL.id,
            watchChange: (self, modelService) => graph_model_awaiter(this, void 0, void 0, function* () {
                const cellsModel = yield SELECTED_CELLS.getModel(modelService);
                return cellsModel.watch((cells = []) => {
                    self.setValue([...cells].pop() || null);
                });
            }),
        });
        /** \u9009\u4E2D\u8282\u70B9\u5217\u8868\u72B6\u6001 */
        registry.registerModel({
            id: SELECTED_NODES.id,
            getInitialValue: () => [],
            watchChange: (self, modelService) => graph_model_awaiter(this, void 0, void 0, function* () {
                const model = yield SELECTED_CELLS.getModel(modelService);
                return model.watch((cells = []) => {
                    const nodes = cells.filter(cell => cell.isNode());
                    self.setValue(nodes);
                });
            }),
        });
        /** \u9009\u4E2D\u8282\u70B9\u72B6\u6001 */
        registry.registerModel({
            id: SELECTED_NODE.id,
            watchChange: (self, modelService) => graph_model_awaiter(this, void 0, void 0, function* () {
                const model = yield SELECTED_NODES.getModel(modelService);
                const disposable = model.watch(nodes => {
                    self.setValue([...nodes].pop() || null);
                });
                return disposable;
            }),
        });
        /** \u662F\u5426\u9009\u4E2D\u8282\u70B9\u72B6\u6001 */
        registry.registerModel({
            id: IS_NODE_SELECTED.id,
            watchChange: (self, modelService) => graph_model_awaiter(this, void 0, void 0, function* () {
                const model = yield SELECTED_NODES.getModel(modelService);
                const disposable = model.watch(nodes => {
                    self.setValue(nodes.length > 0);
                });
                return disposable;
            }),
        });
        /** \u753B\u5E03\u9009\u4E2D\u8282\u70B9\u662F\u5426\u662FGroup */
        registry.registerModel({
            id: IS_GROUP_SELECTED.id,
            getInitialValue: () => false,
            watchChange: (self, modelService) => graph_model_awaiter(this, void 0, void 0, function* () {
                const model = yield SELECTED_CELLS.getModel(modelService);
                const disposable = model.watch(cells => {
                    const isGroup = cells.every(cell => {
                        return cell && cell.getProp('isGroup') === true;
                    });
                    self.setValue(isGroup);
                });
                return disposable;
            }),
        });
        /** \u753B\u5E03\u9009\u4E2D\u8282\u70B9\u662F\u5426\u662FGroup */
        registry.registerModel({
            id: SELECTED_GROUPS.id,
            getInitialValue: () => [],
            watchChange: (self, modelService) => graph_model_awaiter(this, void 0, void 0, function* () {
                const model = yield SELECTED_NODES.getModel(modelService);
                const disposable = model.watch(cells => {
                    const groups = cells.filter(cell => {
                        return cell && cell.getProp('isGroup') === true;
                    });
                    self.setValue(groups);
                });
                return disposable;
            }),
        });
        /** \u753B\u5E03\u9009\u4E2D\u8282\u70B9\u662F\u5426\u662F\u666E\u901A\u8282\u70B9 */
        registry.registerModel({
            id: IS_NORMAL_NODES_SELECTED.id,
            getInitialValue: () => false,
            watchChange: (self, modelService) => graph_model_awaiter(this, void 0, void 0, function* () {
                const model = yield SELECTED_CELLS.getModel(modelService);
                const disposable = model.watch(cells => {
                    const isNormalNodesSelected = cells.every(cell => {
                        const isNotGroup = !(cell && cell.getProp('isGroup'));
                        const isNotGroupChild = !(cell && cell.getProp('group'));
                        return isNotGroup && isNotGroupChild;
                    });
                    const isNodeSelected = cells.length > 0 && isNormalNodesSelected;
                    self.setValue(isNodeSelected);
                });
                return disposable;
            }),
        });
        /** \u753B\u5E03\u7F29\u653E\u72B6\u6001 */
        registry.registerModel({
            id: GRAPH_SCALE.id,
            getInitialValue: () => ({ zoomFactor: -1 }),
            watchChange: (self) => graph_model_awaiter(this, void 0, void 0, function* () {
                const { graph } = yield this.getGraphInstance();
                const onChange = (e) => {
                    const factor = graph.zoom();
                    self.setValue(Object.assign(Object.assign({}, e), { zoomFactor: factor }));
                };
                graph.on('scale', onChange);
                return Disposable.create(() => graph.off('scale', onChange));
            }),
        });
        /** \u753B\u5E03\u53F3\u952E\u83DC\u5355\u72B6\u6001 */
        registry.registerModel({
            id: CONTEXTMENU_TARGET.id,
            watchChange: (self) => graph_model_awaiter(this, void 0, void 0, function* () {
                const { graph, config } = yield this.getGraphInstance();
                const onContextMenu = (type) => (e) => {
                    const { x, y } = e;
                    const pagePoint = graph.localToClient({ x, y });
                    const clientRect = config.rootContainer.getBoundingClientRect();
                    const anchor = {
                        x: pagePoint.x - ((clientRect === null || clientRect === void 0 ? void 0 : clientRect.x) || 0),
                        y: pagePoint.y - ((clientRect === null || clientRect === void 0 ? void 0 : clientRect.y) || 0),
                    };
                    self.setValue({
                        type,
                        anchor,
                        data: e,
                        cell: e.cell,
                    });
                };
                const toDispose = new disposable_DisposableCollection();
                toDispose.pushAll([
                    disposableSubscribe(graph, 'node:contextmenu', onContextMenu('node')),
                    disposableSubscribe(graph, 'edge:contextmenu', onContextMenu('edge')),
                    disposableSubscribe(graph, 'blank:contextmenu', onContextMenu('blank')),
                ]);
                return toDispose;
            }),
        });
        /** \u753B\u5E03\u5386\u53F2Redo */
        registry.registerModel({
            id: HISTORY_REDOABLE.id,
            getInitialValue: () => false,
            watchChange: (self) => graph_model_awaiter(this, void 0, void 0, function* () {
                const { graph } = yield this.getGraphInstance();
                const onChange = () => {
                    const canRedo = graph.history.canRedo();
                    self.setValue(canRedo);
                };
                if (graph.history) {
                    graph.history.on('change', onChange);
                }
                return Disposable.create(() => graph.history.off('change', onChange));
            }),
        });
        /** \u753B\u5E03\u5386\u53F2undo */
        registry.registerModel({
            id: HISTORY_UNDOABLE.id,
            getInitialValue: () => false,
            watchChange: (self) => graph_model_awaiter(this, void 0, void 0, function* () {
                const { graph } = yield this.getGraphInstance();
                const onChange = () => {
                    const canUndo = graph.history.canUndo();
                    self.setValue(canUndo);
                };
                if (graph.history) {
                    graph.history.on('change', onChange);
                }
                return Disposable.create(() => graph.history.off('change', onChange));
            }),
        });
    }
};
graph_model_decorate([
    Object(index_esm["inject"])(IGraphProvider),
    graph_model_metadata("design:type", Object)
], graph_model_GraphModelContribution.prototype, "graphProvider", void 0);
graph_model_GraphModelContribution = graph_model_decorate([
    Object(index_esm["singleton"])({ contrib: IModelContribution })
], graph_model_GraphModelContribution);

//# sourceMappingURL=graph-model.js.map
// CONCATENATED MODULE: ../xflow-core/es/model-service/module.js
var module_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
/* eslint-disable @typescript-eslint/no-redeclare */



/**  model service \u6269\u5C55  */



/** \u6A21\u5757 */
const modelServiceModule = Object(index_esm["Module"])(register => {
    /** \u6CE8\u518C IModelService Contribution */
    index_esm["Contribution"].register(register, IModelContribution);
    /** \u6CE8\u518C ModelRegistry \u5230 IFrontendApplicationContribution  */
    /** \u6CE8\u518C ModelRegistry alias IModelService Service */
    register(model_registry_ModelRegistry);
    /** \u6CE8\u518C Graph \u76F8\u5173\u7684ModelService  */
    register(graph_model_GraphModelContribution);
    /** \u6CE8\u518C Command \u76F8\u5173\u7684ModelService  */
    register(command_model_CommandModelContribution);
});
const registerModelServiceConfig = (register, config) => {
    register({
        token: IModelOptionProvider,
        useDynamic: () => {
            return {
                getOption: () => module_awaiter(void 0, void 0, void 0, function* () {
                    return config.getConfig();
                }),
            };
        },
        lifecycle: index_esm["Syringe"].Lifecycle.singleton,
    });
};
/** \u7EC4\u4EF6\u7684 config \u6A21\u5757\uFF0C\u5FC5\u987B\u8981\u52A0\u8F7D */
const model_service_module_createModule = (config) => {
    return Object(index_esm["Module"])(register => {
        /** \u7ED1\u5B9A ModelService  \u914D\u7F6E */
        registerModelServiceConfig(register, config);
    });
};
//# sourceMappingURL=module.js.map
// CONCATENATED MODULE: ../xflow-core/es/model-service/components/index.js




const ModelServiceRegistry = props => {
    const { config } = props;
    /** \u83B7\u53D6\u914D\u7F6E\u4E2D\u5FC3 */
    const extensionRegistry = useExtensionRegistry();
    /** \u83B7\u53D6ModelService\u7684\u914D\u7F6E */
    const modelServiceConfig = react_default.a.useMemo(() => (config ? config : new config_ModelServiceConfig()), 
    /* eslint-disable-next-line  */
    []);
    react_default.a.useEffect(() => {
        const disposable = extensionRegistry.addCoreModule({
            config: modelServiceConfig,
            createModule: model_service_module_createModule,
        });
        modelServiceConfig.setMountState();
        return () => {
            disposable.dispose();
            modelServiceConfig.dispose();
        };
        // \u4E0D\u8981\u79FB\u9664\uFF1A\u4FDD\u8BC1 \u53EA\u751F\u6267\u884C\u4E00\u6B21
        // eslint-disable-next-line
    }, []);
    return null;
};
ModelServiceRegistry.defaultProps = { XFlowModuleType: 'ModelServiceConfig' };
const createModelServiceConfig = (addOptions) => (value) => {
    /** bridge config and value */
    const valueContainer = react_default.a.useMemo(() => ({ getValue: () => ({}) }), []);
    valueContainer.getValue = () => value;
    const hookConfig = react_default.a.useMemo(() => {
        const config = new config_ModelServiceConfig();
        addOptions(config, valueContainer);
        return config;
    }, [valueContainer]);
    return hookConfig;
};
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-core/es/model-service/index.js






//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-core/es/xflow-main/application.js
var application_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var application_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var application_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var application_a;
/* eslint-disable @typescript-eslint/no-redeclare */
/* eslint-disable no-await-in-loop */
/* eslint-disable max-classes-per-file */







const TIMER_WARNING_THRESHOLD = 100;
let application_FrontendApplication = class FrontendApplication {
    /** \u542F\u52A8app */
    start() {
        return application_awaiter(this, void 0, void 0, function* () {
            yield this.startContributions();
            this.registerEventListeners();
        });
    }
    /** \u83B7\u53D6\u753B\u5E03\u5B9E\u4F8B */
    getGraphInstance() {
        return this.graphProvider.getGraphInstance();
    }
    /** \u83B7\u53D6\u753B\u5E03\u914D\u7F6E\u9879 */
    getGraphConfig() {
        return this.graphProvider.getGraphOptions();
    }
    /** \u83B7\u53D6\u753B\u5E03\u6240\u6709\u8282\u70B9 */
    getAllNodes() {
        return application_awaiter(this, void 0, void 0, function* () {
            const graph = yield this.graphProvider.getGraphInstance();
            return graph.getNodes();
        });
    }
    /** \u83B7\u53D6\u753B\u5E03\u8282\u70B9 */
    getNodeById(nodeId) {
        return application_awaiter(this, void 0, void 0, function* () {
            const graph = yield this.graphProvider.getGraphInstance();
            return graph.getCellById(nodeId);
        });
    }
    /** \u83B7\u53D6\u753B\u5E03\u6240\u6709\u8FDE\u7EBF */
    getAllEdges() {
        return application_awaiter(this, void 0, void 0, function* () {
            const graph = yield this.graphProvider.getGraphInstance();
            return graph.getEdges();
        });
    }
    /** \u83B7\u53D6\u753B\u5E03\u8FDE\u7EBF */
    getEdgeById(edgeId) {
        return application_awaiter(this, void 0, void 0, function* () {
            const graph = yield this.graphProvider.getGraphInstance();
            return graph.getCellById(edgeId);
        });
    }
    /** \u66F4\u65B0\u8282\u70B9\u6837\u5F0F */
    updateNodeAttrs(node, attrs) {
        return application_awaiter(this, void 0, void 0, function* () {
            if (node instanceof es["g" /* Node */]) {
                node.setAttrs(attrs);
            }
            else {
                const x6Node = yield this.getNodeById(node);
                x6Node.setAttrs(attrs);
            }
        });
    }
    /** \u66F4\u65B0\u8FDE\u7EBF\u6837\u5F0F */
    updateEdgeAttrs(edge, attrs) {
        return application_awaiter(this, void 0, void 0, function* () {
            if (edge instanceof es["c" /* Edge */]) {
                edge.setAttrs(attrs);
            }
            else {
                const x6Edge = yield this.getEdgeById(edge);
                x6Edge.setAttrs(attrs);
            }
        });
    }
    /** \u5E73\u79FB\u753B\u5E03 */
    translateGraph(tx, ty) {
        return application_awaiter(this, void 0, void 0, function* () {
            const graph = yield this.graphProvider.getGraphInstance();
            const currentTranslate = graph.translate();
            graph.translate(currentTranslate.tx + tx, currentTranslate.ty + ty);
        });
    }
    /** \u66B4\u9732\u547D\u4EE4\u7684\u6267\u884C\u63A5\u53E3 */
    executeCommand(commandId, cmdArgs, hook = []) {
        return this.commandService.executeCommand(commandId, cmdArgs, hook);
    }
    /** \u66B4\u9732\u547D\u4EE4\u7684\u6279\u91CF\u6267\u884C\u63A5\u53E3 */
    executeCommandPipeline(cmdOptions) {
        return this.commandService.executeCommandPipeline(cmdOptions);
    }
    /**
     * Register global event listeners.
     */
    registerEventListeners() {
        /** \u89E6\u53D1app\u7684\u5378\u8F7D\u903B\u8F91 */
        window.addEventListener('unload', () => {
            this.stopContributions();
        });
    }
    /**
     * Initialize and start the frontend application contributions.
     */
    startContributions() {
        return application_awaiter(this, void 0, void 0, function* () {
            console.log(this.contributions.getContributions());
            for (const contribution of this.contributions.getContributions()) {
                if (contribution.onStart) {
                    try {
                        yield this.measure(\`\${contribution.constructor.name}.onStart\`, () => contribution.onStart(this));
                    }
                    catch (error) {
                        console.error('Could not start contribution', error);
                    }
                }
            }
        });
    }
    /**
     * Stop the frontend application contributions. This is called when the window is unloaded.
     */
    stopContributions() {
        console.info('>>> Stopping frontend contributions...');
        for (const contribution of this.contributions.getContributions()) {
            if (contribution.onStop) {
                try {
                    contribution.onStop(this);
                }
                catch (error) {
                    console.error('Could not stop contribution', error);
                }
            }
        }
        console.info('<<< All frontend contributions have been stopped.');
    }
    measure(name, fn) {
        return application_awaiter(this, void 0, void 0, function* () {
            const startMark = \`\${name}-start\`;
            const endMark = \`\${name}-end\`;
            performance.mark(startMark);
            const result = yield fn();
            performance.mark(endMark);
            performance.measure(name, startMark, endMark);
            for (const item of performance.getEntriesByName(name)) {
                const contribution = \`Frontend \${item.name}\`;
                if (item.duration > TIMER_WARNING_THRESHOLD) {
                    console.warn(\`\${contribution} is slow, took: \${item.duration.toFixed(1)} ms\`);
                }
                else {
                    console.debug(\`\${contribution} took: \${item.duration.toFixed(1)} ms\`);
                }
            }
            performance.clearMeasures(name);
            return result;
        });
    }
};
application_decorate([
    Object(index_esm["contrib"])(IFrontendApplicationContribution),
    application_metadata("design:type", typeof (application_a = typeof index_esm["Contribution"] !== "undefined" && index_esm["Contribution"].Provider) === "function" ? application_a : Object)
], application_FrontendApplication.prototype, "contributions", void 0);
application_decorate([
    Object(index_esm["inject"])(IGraphProvider),
    application_metadata("design:type", Object)
], application_FrontendApplication.prototype, "graphProvider", void 0);
application_decorate([
    Object(index_esm["inject"])(IGraphCommandService),
    application_metadata("design:type", Object)
], application_FrontendApplication.prototype, "commandService", void 0);
application_decorate([
    Object(index_esm["inject"])(IModelService),
    application_metadata("design:type", Object)
], application_FrontendApplication.prototype, "modelService", void 0);
application_FrontendApplication = application_decorate([
    Object(index_esm["singleton"])()
], application_FrontendApplication);

//# sourceMappingURL=application.js.map
// CONCATENATED MODULE: ../xflow-core/es/xflow-main/application-module.js
/* eslint-disable @typescript-eslint/no-redeclare */

/** Application */

/** Command \u6A21\u5757 */


/** Extension \u6CE8\u518C\u4E2D\u5FC3 */

/** \u7C7B\u578B\u5B9A\u4E49 */


/** application */
const appMainModule = Object(index_esm["Module"])(register => {
    /** \u58F0\u660EIFrontendApplicationContribution\u6269\u5C55\u70B9*/
    index_esm["Contribution"].register(register, IFrontendApplicationContribution);
    /** \u58F0\u660E FrontendApplication */
    register(application_FrontendApplication);
});
const initApp = (moduleRegistry) => {
    const extensions = moduleRegistry.getAllExtensions();
    const container = new index_esm["Container"]();
    /** command */
    /** react renderer */
    /** \u6279\u91CF\u521B\u5EFA extension module */
    const modules = extensions.map(module => {
        const { createModule, config } = module;
        return createModule(config);
    });
    /** \u5355\u72EC\u52A0\u8F7D appMainModule */
    container.load(appMainModule);
    /** \u5355\u72EC\u52A0\u8F7D commandRegistryModule */
    container.load(commandRegistryModule);
    // /** \u5355\u72EC\u52A0\u8F7D modelServiceModule */
    container.load(modelServiceModule);
    /**
     * \u6279\u91CF\u52A0\u8F7D extension module
     * \u5305\u62EC\uFF1Amenu/toolbar/keybinding/graph
     */
    modules.forEach(module => {
        container.load(module);
    });
    const app = container.get(application_FrontendApplication);
    return app;
};
//# sourceMappingURL=application-module.js.map
// CONCATENATED MODULE: ../xflow-core/es/xflow-main/components/global-config-context.js


/** xflow classname prefix context */
class global_config_context_ConfigProvider {
    constructor() {
        this.xflowPrefixCls = XFLOW_PREFIX_CLS;
        this.getXflowPrefixCls = (pkgName) => {
            return \`\${this.xflowPrefixCls}-\${pkgName}\`;
        };
        this.setXflowPrefixCls = (prefixCls) => {
            return (this.xflowPrefixCls = prefixCls);
        };
    }
}
const XFlowConfigProviderContext = react_default.a.createContext({
    configProvider: null,
});
const useConfigContext = () => {
    return react_default.a.useContext(XFlowConfigProviderContext);
};
const useXflowPrefixCls = (pkgName) => {
    const ctx = useConfigContext();
    return react_default.a.useMemo(() => {
        if (ctx.configProvider) {
            return ctx.configProvider.getXflowPrefixCls(pkgName);
        }
        return \`\${XFLOW_PREFIX_CLS}-\${pkgName}\`;
        /* eslint-disable-next-line  */
    }, [pkgName]);
};
//# sourceMappingURL=global-config-context.js.map
// CONCATENATED MODULE: ../xflow-core/es/xflow-main/components/app-extension-module.js
var app_extension_module_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};


function XFlowAppExtensionMoudle(props) {
    const { createModule, children } = props;
    /** \u83B7\u53D6\u6269\u5C55Registry */
    const extensionRegistry = useExtensionRegistry();
    /** Config */
    const config = react_default.a.useMemo(() => props.config || { CONFIG_TYPE: '', getConfig: () => app_extension_module_awaiter(this, void 0, void 0, function* () { return ({}); }) }, 
    /* eslint-disable-next-line  */
    []);
    react_default.a.useEffect(() => {
        /** \u6CE8\u518C extension \u5230 Registry */
        const disposable = extensionRegistry.addExtension({
            config: config,
            createModule,
        });
        return () => {
            disposable.dispose();
        };
        /* eslint-disable-next-line  */
    }, []);
    /** \u53EF\u4EE5 Wrap Children\u7EC4\u4EF6 */
    if (Array.isArray(children) || react_default.a.isValidElement(children)) {
        return react_default.a.createElement(react_default.a.Fragment, null,
            " ",
            children,
            " ");
    }
    return null;
}
//# sourceMappingURL=app-extension-module.js.map
// CONCATENATED MODULE: ../xflow-core/es/common/position.js

const usePositionStyle = (conf = {}) => {
    return Object(react["useMemo"])(() => {
        const config = Object.entries(conf);
        const style = config.length > 0 ? { position: 'absolute' } : {};
        config.forEach(([key, val = 0]) => {
            style[key] = \`\${val}px\`;
        });
        return style;
    }, [conf]);
};
//# sourceMappingURL=position.js.map
// CONCATENATED MODULE: ../xflow-core/es/xflow-main/graph/module.js
/* eslint-disable @typescript-eslint/no-redeclare */

/** Application \u6269\u5C55\u4F9D\u8D56 */



/** \u4F9D\u8D56\u6269\u5C55\u6A21\u5757\uFF0C\u5FC5\u987B\u8981\u52A0\u8F7D */
const createX6GraphModule = (config) => {
    return Object(index_esm["Module"])(register => {
        /** \u6CE8\u518C GraphProvider */
        registerGraphModule(register);
        /** \u6CE8\u518C GraphProvider \u914D\u7F6E */
        registerGraphConfig(register, config);
    });
};
//# sourceMappingURL=module.js.map
// CONCATENATED MODULE: ../xflow-core/es/xflow-main/graph/index.js




//# sourceMappingURL=index.js.map
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@antv/x6-react-shape/es/index.js + 7 modules
var x6_react_shape_es = __webpack_require__("P6wp");

// CONCATENATED MODULE: ../xflow-core/es/xflow-main/components/canvas.js
var canvas_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};







const XFlowCanvas = props => {
    const app = useXFlowApp();
    /** x6\u753B\u5E03parent\u7684dom\u8282\u70B9 */
    const rootRef = react_default.a.useRef(null);
    /** x6\u753B\u5E03\u7684dom\u8282\u70B9 */
    const canvasRef = react_default.a.useRef(null);
    /** \u751F\u6210\u914D\u7F6E\u4E2D\u5FC3 */
    const extensionRegistry = useExtensionRegistry();
    /** \u83B7\u53D6ContextService\u7684\u914D\u7F6E */
    const graphConfig = react_default.a.useMemo(() => {
        const config = props.config ? props.config : new config_GraphConfig();
        config.setX6Config();
        return config;
        /** \u4FDD\u8BC1\u53EA\u751F\u6210\u4E00\u6B21 */
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, []);
    /** X6_NODE_PORTAL_NODE_VIEW */
    const [Portal, setGraph] = Object(x6_react_shape_es["b" /* usePortal */])(graphConfig.graphId);
    react_default.a.useEffect(() => {
        app &&
            app.getGraphInstance().then(graph => {
                setGraph(graph);
            });
    }, [app, setGraph]);
    react_default.a.useEffect(() => {
        /** \u8BBE\u7F6E\u753B\u5E03parent dom\u8282\u70B9\u3001\u753B\u5E03dom\u8282\u70B9 */
        graphConfig.setRootContainer(rootRef.current);
        graphConfig.setGraphContainer(canvasRef.current);
        /** \u5173\u8054XflowApp\u548CGraph*/
        graphConfig.xflowInstanceId = extensionRegistry.getInstaceId();
        extensionRegistry.addCoreModule({ config: graphConfig, createModule: createX6GraphModule });
        /** unmount */
        const destroy = () => canvas_awaiter(void 0, void 0, void 0, function* () {
            graphConfig.dispose();
        });
        return () => {
            destroy();
        };
        /** \u4FDD\u8BC1\u53EA\u751F\u6210\u4E00\u6B21 */
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, []);
    const style = usePositionStyle(props.position);
    const rootClz = useXflowPrefixCls('canvas-root');
    const canvasClz = useXflowPrefixCls('x6-canvas');
    return (react_default.a.createElement(react_default.a.Fragment, null,
        react_default.a.createElement("div", { ref: rootRef, className: rootClz, style: style, id: graphConfig.graphId, tabIndex: 0 },
            react_default.a.createElement("div", { ref: canvasRef, className: canvasClz }),
            props.children),
        react_default.a.createElement(Portal, null)));
};
XFlowCanvas.defaultProps = {
    isXFlowCanvas: true,
};
//# sourceMappingURL=canvas.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/cmd-context.js
var cmd_context_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var cmd_context_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var cmd_context_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};






let cmd_context_CmdContext = class CmdContext {
    constructor() {
        /** undos \u5B58\u5728\u8FD9\u91CC */
        this.toDispose = new disposable_DisposableCollection();
        /** command handler\u7684runtimeHook */
        this.runtimeHooks = [];
        /** \u83B7\u53D6 x6 \u5B9E\u4F8B */
        this.getX6Graph = () => cmd_context_awaiter(this, void 0, void 0, function* () {
            if (this.graph)
                return this.graph;
            const graphInstance = yield this.graphProvider.getGraphInstance();
            this.graph = graphInstance;
            return graphInstance;
        });
        /** \u83B7\u53D6 graph */
        this.getGraphConfig = () => cmd_context_awaiter(this, void 0, void 0, function* () {
            return this.graphProvider.getGraphOptions();
        });
        this.getGraphMeta = () => cmd_context_awaiter(this, void 0, void 0, function* () {
            const service = this.getModelService();
            const meta = this.graphMeta || (yield model_service_constant_namespaceObject.GRAPH_META.useValue(service));
            return meta;
        });
        /** \u8BBE\u7F6E\u53C2\u6570 */
        this.setArgs = (args, runtimeHooks = []) => {
            this.args = args;
            this.runtimeHooks = runtimeHooks;
            return { args, hooks: runtimeHooks };
        };
        /** \u83B7\u53D6\u53C2\u6570 */
        this.getArgs = () => {
            /** \u6CE8\u5165graph meta */
            const args = Object.assign(Object.assign({}, this.args), { graphMeta: this.graphMeta, modelService: this.getModelService(), commandService: this.getCommands(), getX6Graph: this.getX6Graph, getGraphConfig: this.getGraphConfig });
            return { args: args, hooks: this.runtimeHooks };
        };
        /** \u8BBE\u7F6E\u6267\u884C\u7ED3\u679C */
        this.setResult = (result) => {
            this.result = result;
            return this.result;
        };
        /** \u83B7\u53D6\u6267\u884C\u7ED3\u679C */
        this.getResult = () => {
            return this.result;
        };
        /** hooks */
        this.getHooks = () => {
            return this.hookService.hookProvider();
        };
        /** \u83B7\u53D6Command Service */
        this.getCommands = () => {
            return this.commandService;
        };
        /** \u83B7\u53D6Context Service */
        this.getModelService = () => {
            return this.modelService;
        };
        /** \u6DFB\u52A0undo */
        this.addUndo = (disposable) => {
            if (!Array.isArray(disposable)) {
                return this.addUndo([disposable]);
            }
            this.toDispose.pushAll(disposable);
        };
        /** \u6267\u884Cundo */
        this.undo = () => cmd_context_awaiter(this, void 0, void 0, function* () {
            yield this.toDispose.dispose();
        });
        /** \u662F\u5426\u53EF\u4EE5\u6267\u884Cundo */
        this.isUndoable = () => {
            return !this.toDispose.disposed;
        };
        /** \u83B7\u53D6 toDispose */
        this.getDisposables = () => this.toDispose;
        /** \u8BBE\u7F6E\u7684\u5171\u4EAB\u53D8\u91CF \u53EF\u4EE5\u5728command\u95F4\u5171\u4EAB */
        this.setGlobal = (key, value) => {
            this.commandService.setGlobal(key, value);
        };
        /** \u83B7\u53D6\u5171\u4EAB\u53D8\u91CF */
        this.getGlobal = (key) => {
            return this.commandService.getGlobal(key);
        };
    }
    init() {
        this.getGraphMeta().then(meta => {
            this.graphMeta = meta;
        });
    }
};
cmd_context_decorate([
    Object(index_esm["inject"])(IGraphProvider),
    cmd_context_metadata("design:type", Object)
], cmd_context_CmdContext.prototype, "graphProvider", void 0);
cmd_context_decorate([
    Object(index_esm["inject"])(IHookService),
    cmd_context_metadata("design:type", Object)
], cmd_context_CmdContext.prototype, "hookService", void 0);
cmd_context_decorate([
    Object(index_esm["inject"])(IGraphCommandService),
    cmd_context_metadata("design:type", Object)
], cmd_context_CmdContext.prototype, "commandService", void 0);
cmd_context_decorate([
    Object(index_esm["inject"])(IModelService),
    cmd_context_metadata("design:type", Object)
], cmd_context_CmdContext.prototype, "modelService", void 0);
cmd_context_decorate([
    Object(index_esm["postConstruct"])(),
    cmd_context_metadata("design:type", Function),
    cmd_context_metadata("design:paramtypes", []),
    cmd_context_metadata("design:returntype", void 0)
], cmd_context_CmdContext.prototype, "init", null);
cmd_context_CmdContext = cmd_context_decorate([
    Object(index_esm["injectable"])()
], cmd_context_CmdContext);

//# sourceMappingURL=cmd-context.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/config.js
var command_contributions_config_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};



const CONFIG_TYPE = 'CommandConfig';
const getDefaultContributions = () => {
    return [];
};
class config_CommandConfig {
    constructor() {
        this.setCommandContributions = (fn) => {
            this.getContributions = fn;
        };
        this.getCommandContributions = () => {
            return this.getContributions();
        };
        this.registerHook = (hooks) => command_contributions_config_awaiter(this, void 0, void 0, function* () {
            if (this.registerHookFn) {
                return this.registerHookFn(hooks);
            }
            return disposableNoop;
        });
        this.registerHookHub = (registry) => command_contributions_config_awaiter(this, void 0, void 0, function* () {
            if (this.registerHookHubFn) {
                return this.registerHookHubFn(registry);
            }
            return disposableNoop;
        });
        /** \u8BBE\u7F6ECONFIG\u7C7B\u578B */
        this.CONFIG_TYPE = CONFIG_TYPE;
        /** set command hook fn */
        this.setRegisterHookFn = (fn) => {
            this.registerHookFn = fn;
        };
        /** \u6CE8\u518C command hook hub */
        this.setRegisterHookHubFn = (fn) => {
            this.registerHookHubFn = fn;
        };
        /** \u83B7\u53D6config\u7684\u6240\u6709\u914D\u7F6E*/
        this.getConfig = () => command_contributions_config_awaiter(this, void 0, void 0, function* () {
            return {
                registerHookFn: this.registerHookFn,
                getContributions: this.getContributions,
                CONFIG_TYPE: this.CONFIG_TYPE,
            };
        });
        this.getContributions = getDefaultContributions;
    }
}
/** \u63D0\u4F9B\u4E00\u4E2A\u5DE5\u5382\u65B9\u6CD5 */
const createCommandConfig = () => {
    return new config_CommandConfig();
};
const registerCommandConfig = (register, commandConfig) => {
    register({
        token: config_CommandConfig,
        contrib: [IHookContribution],
        lifecycle: index_esm["Syringe"].Lifecycle.singleton,
        useDynamic: () => {
            return commandConfig;
        },
    });
};
//# sourceMappingURL=config.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/node/node-add.js
var node_add_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var node_add_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var node_add_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};






var node_add_NsAddNode;
(function (NsAddNode) {
    /** Command: \u7528\u4E8E\u6CE8\u518Cnamed factory */
    NsAddNode.command = XFlowNodeCommands.ADD_NODE;
    /** hookName */
    NsAddNode.hookKey = 'addNode';
})(node_add_NsAddNode || (node_add_NsAddNode = {}));
let node_add_AddNodeCommand = 
/** \u521B\u5EFA\u8282\u70B9\u547D\u4EE4 */
class AddNodeCommand {
    constructor() {
        /** \u6267\u884CCmd */
        this.execute = () => node_add_awaiter(this, void 0, void 0, function* () {
            const ctx = this.contextProvider();
            const { args, hooks: runtimeHook } = ctx.getArgs();
            const hooks = ctx.getHooks();
            const result = yield hooks.addNode.call(args, (handlerArgs) => node_add_awaiter(this, void 0, void 0, function* () {
                const { createNodeService, cellFactory, commandService } = handlerArgs;
                const graph = yield ctx.getX6Graph();
                const node = createNodeService
                    ? yield createNodeService(handlerArgs)
                    : handlerArgs.nodeConfig;
                const nodeConfig = yield this.processNodeConfig(node);
                let x6NodeCell;
                if (cellFactory) {
                    /** \u4F7F\u7528\u53C2\u6570\u4E2D\u7684\u5DE5\u5382\u65B9\u6CD5 */
                    const cell = yield cellFactory(nodeConfig, this);
                    x6NodeCell = graph.addNode(cell);
                }
                else {
                    x6NodeCell = graph.addNode(nodeConfig);
                }
                /** add undo: delete node */
                ctx.addUndo(Disposable.create(() => node_add_awaiter(this, void 0, void 0, function* () {
                    const nodeData = Object.assign({ id: x6NodeCell.id }, x6NodeCell.getData());
                    commandService.executeCommand(XFlowNodeCommands.DEL_NODE.id, {
                        nodeConfig: nodeData,
                    });
                })));
                return { nodeConfig: nodeConfig, nodeCell: x6NodeCell };
            }), runtimeHook);
            ctx.setResult(result);
            return this;
        });
        this.processNodeConfig = (nodeConfig) => node_add_awaiter(this, void 0, void 0, function* () {
            const ctx = this.contextProvider();
            /**
             * 1. react shape node \u903B\u8F91
             * 2. X6\u4E0D\u4F1A\u5904\u7406data\u6570\u636E, \u4EC5\u900F\u4F20\u3002\u53EF\u4EE5\u901A\u8FC7x6Node?.getData()\u65B9\u6CD5\u83B7\u53D6\u8FD9\u4EFD\u6570\u636E
             */
            nodeConfig.data = Object.assign({}, nodeConfig);
            /** \u975E react shape */
            if (nodeConfig.shape) {
                return nodeConfig;
            }
            /** react shape \u4F7F\u7528react-portal-view\u63D0\u9AD8\u6027\u80FD */
            if (!nodeConfig.view) {
                const graphConfig = yield ctx.getGraphConfig();
                nodeConfig.view = graphConfig.graphId;
            }
            /** \u83B7\u53D6 react component */
            if (!nodeConfig.component) {
                const reactComponent = yield this.getNodeReactComponent(nodeConfig);
                const commands = ctx.getCommands();
                const modelService = ctx.getModelService();
                nodeConfig.shape = 'react-shape';
                nodeConfig.component = getNodeReactComponent(reactComponent, commands, modelService);
            }
            return nodeConfig;
        });
        this.getNodeReactComponent = (nodeConfig) => node_add_awaiter(this, void 0, void 0, function* () {
            const ctx = this.contextProvider();
            const hooks = ctx.getHooks();
            /** \u83B7\u53D6Graph Config\u4E2D\u7528\u6237\u9884\u8BBE\u7684\u8282\u70B9\u6E32\u67D3\u9700\u8981\u7684React\u7EC4\u4EF6 */
            const graphConfig = yield ctx.getGraphConfig();
            /** \u901A\u8FC7hooks\u83B7\u53D6\u66F4\u591A\u7684\u7EC4\u4EF6 */
            const renderMap = yield hooks.reactNodeRender.call(graphConfig.nodeRender);
            /** \u83B7\u53D6renderKey\uFF0C\u6CA1\u6709renderKey\u65F6\u4F7F\u7528\u9ED8\u8BA4Key */
            const renderKey = graphConfig.nodeTypeParser(nodeConfig) || XFLOW_DEFAULT_NODE;
            /** \u83B7\u53D6\u7EC4\u4EF6 */
            const reactComponent = renderMap.get(renderKey);
            if (!reactComponent) {
                console.error('react node component is missing:', graphConfig.nodeRender, renderKey, reactComponent);
            }
            return reactComponent;
        });
        /** undo cmd */
        this.undo = () => node_add_awaiter(this, void 0, void 0, function* () {
            const ctx = this.contextProvider();
            if (this.isUndoable()) {
                ctx.undo();
            }
            return this;
        });
        /** redo cmd */
        this.redo = () => node_add_awaiter(this, void 0, void 0, function* () {
            if (!this.isUndoable()) {
                yield this.execute();
            }
            return this;
        });
    }
    isUndoable() {
        const ctx = this.contextProvider();
        return ctx.isUndoable();
    }
};
node_add_decorate([
    Object(index_esm["inject"])(ICommandContextProvider),
    node_add_metadata("design:type", Object)
], node_add_AddNodeCommand.prototype, "contextProvider", void 0);
node_add_AddNodeCommand = node_add_decorate([
    Object(index_esm["injectable"])({
        token: { token: ICommandHandler, named: node_add_NsAddNode.command.id },
    })
    /** \u521B\u5EFA\u8282\u70B9\u547D\u4EE4 */
], node_add_AddNodeCommand);

//# sourceMappingURL=node-add.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/node/node-del.js
var node_del_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var node_del_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var node_del_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};





var node_del_NsDelNode;
(function (NsDelNode) {
    /** Command: \u7528\u4E8E\u6CE8\u518Cnamed factory */
    NsDelNode.command = XFlowNodeCommands.DEL_NODE;
    /** hook name */
    NsDelNode.hookKey = 'delNode';
    /** \u521B\u5EFA hook */
    NsDelNode.createHook = () => {
        return new es_HookHub();
    };
})(node_del_NsDelNode || (node_del_NsDelNode = {}));
let node_del_DelNodeCommand = 
/** \u521B\u5EFA\u8282\u70B9\u547D\u4EE4 */
class DelNodeCommand {
    constructor() {
        /** \u6267\u884CCmd */
        this.execute = () => node_del_awaiter(this, void 0, void 0, function* () {
            const ctx = this.contextProvider();
            const { args, hooks: runtimeHook } = ctx.getArgs();
            const hooks = ctx.getHooks();
            const result = yield hooks.delNode.call(args, (handlerArgs) => node_del_awaiter(this, void 0, void 0, function* () {
                const { commandService, deleteNodeService } = handlerArgs;
                const graph = yield ctx.getX6Graph();
                if (deleteNodeService) {
                    const canDel = yield deleteNodeService(handlerArgs);
                    if (!canDel)
                        return { err: ' service rejected' };
                }
                const nodeId = (handlerArgs.x6Node || handlerArgs.nodeConfig).id;
                const nodeCell = graph.getCellById(nodeId);
                if (nodeCell && nodeCell.isNode()) {
                    /** \u5148\u6E05\u7406\u8FDE\u7EBF */
                    const edges = [
                        ...(graph.getIncomingEdges(nodeCell) || []),
                        ...(graph.getOutgoingEdges(nodeCell) || []),
                    ];
                    yield Promise.all(edges.map(edge => {
                        return commandService.executeCommand(XFlowEdgeCommands.DEL_EDGE.id, {
                            x6Edge: edge,
                        });
                    }));
                    /** \u518D\u6E05\u7406\u8282\u70B9 */
                    const nodeConfig = nodeCell.getData();
                    nodeCell.remove();
                    /** add undo: delete node */
                    ctx.addUndo(Disposable.create(() => node_del_awaiter(this, void 0, void 0, function* () {
                        yield commandService.executeCommand(XFlowNodeCommands.ADD_NODE.id, {
                            nodeConfig,
                        });
                        // TODO: \u652F\u6301\u7EBF\u548C\u8282\u70B9\u7684undo
                        // \u901A\u8FC7 sequence mapping \u51FA\u65B0\u7684port id
                        // const nodeCtx = nodeCmd.contextProvider()
                        // const { nodeCell } = nodeCtx.getResult()
                        // edgeCmds.forEach(async cmd => {
                        //   const c = cmd.contextProvider()
                        //   const { edgeConfig } = c.getResult()
                        // })
                    })));
                    return { err: null, nodeConfig };
                }
                return { err: 'node is not exist' };
            }), runtimeHook);
            ctx.setResult(result);
            return this;
        });
        /** undo cmd */
        this.undo = () => node_del_awaiter(this, void 0, void 0, function* () {
            if (this.isUndoable()) {
                const ctx = this.contextProvider();
                ctx.undo();
            }
            return this;
        });
        /** redo cmd */
        this.redo = () => node_del_awaiter(this, void 0, void 0, function* () {
            if (!this.isUndoable()) {
                yield this.execute();
            }
            return this;
        });
    }
    isUndoable() {
        const ctx = this.contextProvider();
        return ctx.isUndoable();
    }
};
node_del_decorate([
    Object(index_esm["inject"])(ICommandContextProvider),
    node_del_metadata("design:type", Object)
], node_del_DelNodeCommand.prototype, "contextProvider", void 0);
node_del_DelNodeCommand = node_del_decorate([
    Object(index_esm["injectable"])({
        token: { token: ICommandHandler, named: node_del_NsDelNode.command.id },
    })
    /** \u521B\u5EFA\u8282\u70B9\u547D\u4EE4 */
], node_del_DelNodeCommand);

//# sourceMappingURL=node-del.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/node/node-select.js
var node_select_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var node_select_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var node_select_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};



var node_select_NsSelectNode;
(function (NsSelectNode) {
    NsSelectNode.command = XFlowNodeCommands.SELECT_NODE;
    NsSelectNode.hookKey = 'selectNode';
})(node_select_NsSelectNode || (node_select_NsSelectNode = {}));
let node_select_SelectNodeCommand = 
/** \u8282\u70B9\u66F4\u65B0\u547D\u4EE4 */
class SelectNodeCommand {
    constructor() {
        this.execute = () => node_select_awaiter(this, void 0, void 0, function* () {
            const { args, hooks: runtimeHook } = this.ctx.getArgs();
            const hooks = this.ctx.getHooks();
            const result = yield hooks.selectNode.call(args, (handlerArgs) => node_select_awaiter(this, void 0, void 0, function* () {
                const x6Graph = yield this.ctx.getX6Graph();
                const currentSelectionIds = x6Graph.getSelectedCells().map(node => node.id);
                const { nodeIds, resetSelection, commandService } = handlerArgs;
                if (resetSelection) {
                    x6Graph.resetSelection(nodeIds);
                }
                else {
                    x6Graph.select(nodeIds);
                }
                this.ctx.addUndo({
                    dispose: () => {
                        commandService.executeUndoCommand(XFlowNodeCommands.SELECT_NODE.id, {
                            nodeIds: currentSelectionIds,
                            resetSelection: true,
                        });
                    },
                });
                return {};
            }), runtimeHook);
            this.ctx.setResult(result);
            return this;
        });
        this.undo = () => node_select_awaiter(this, void 0, void 0, function* () {
            this.ctx.undo();
            return this;
        });
        this.redo = () => node_select_awaiter(this, void 0, void 0, function* () {
            if (!this.ctx.isUndoable) {
                yield this.execute();
            }
            return this;
        });
    }
    init() {
        this.ctx = this.contextProvider();
    }
    isUndoable() {
        return this.ctx.isUndoable();
    }
};
node_select_decorate([
    Object(index_esm["inject"])(ICommandContextProvider),
    node_select_metadata("design:type", Object)
], node_select_SelectNodeCommand.prototype, "contextProvider", void 0);
node_select_decorate([
    Object(index_esm["postConstruct"])(),
    node_select_metadata("design:type", Function),
    node_select_metadata("design:paramtypes", []),
    node_select_metadata("design:returntype", void 0)
], node_select_SelectNodeCommand.prototype, "init", null);
node_select_SelectNodeCommand = node_select_decorate([
    Object(index_esm["injectable"])({
        token: { token: ICommandHandler, named: node_select_NsSelectNode.command.id },
    })
    /** \u8282\u70B9\u66F4\u65B0\u547D\u4EE4 */
], node_select_SelectNodeCommand);

//# sourceMappingURL=node-select.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/node/node-move.js
var node_move_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var node_move_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var node_move_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};





var node_move_NsMoveNode;
(function (NsMoveNode) {
    /** Command: \u7528\u4E8E\u6CE8\u518Cnamed factory */
    NsMoveNode.command = XFlowNodeCommands.MOVE_NODE;
    /** hookName */
    NsMoveNode.hookKey = 'moveNode';
    /** \u521B\u5EFA hook */
    NsMoveNode.createHook = () => {
        return new es_HookHub();
    };
})(node_move_NsMoveNode || (node_move_NsMoveNode = {}));
let node_move_MoveNodeCommand = 
/** \u521B\u5EFA\u8282\u70B9\u547D\u4EE4 */
class MoveNodeCommand {
    constructor() {
        /** \u6267\u884CCmd */
        this.execute = () => node_move_awaiter(this, void 0, void 0, function* () {
            const ctx = this.contextProvider();
            const { args, hooks: runtimeHook } = ctx.getArgs();
            const hooks = ctx.getHooks();
            const result = yield hooks.moveNode.call(args, (handlerArgs) => node_move_awaiter(this, void 0, void 0, function* () {
                const { nodePositionService } = handlerArgs;
                /** nodePositionService \u8FD4\u56DEfalse\u65F6\u4E0D\u66F4\u65B0position */
                if (nodePositionService) {
                    const canDel = yield nodePositionService(handlerArgs);
                    if (!canDel)
                        return { err: 'service rejected' };
                }
                const { dx = 0, dy = 0, x, y, duration = 150 } = handlerArgs.position;
                const x6Graph = yield ctx.getX6Graph();
                const node = x6Graph.getCellById(handlerArgs.id);
                if (node) {
                    let nextX = x;
                    let nextY = y;
                    const { x: preX, y: preY } = node.position();
                    let undo = () => {
                        node.position(preX, preY, { silent: false });
                    };
                    if (dx || dy) {
                        nextX = dx + preX;
                        nextY = dy + preY;
                        node.translate(dx, dy, { transition: { duration } });
                        undo = () => node.translate(-dx, -dy, { transition: { duration } });
                    }
                    else {
                        node.position(nextX, nextY, { silent: false });
                    }
                    /** add undo  */
                    ctx.addUndo(Disposable.create(() => {
                        undo();
                    }));
                    return { err: null, nextX, nextY };
                }
            }), runtimeHook);
            ctx.setResult(result);
            return this;
        });
        /** undo cmd */
        this.undo = () => node_move_awaiter(this, void 0, void 0, function* () {
            const ctx = this.contextProvider();
            if (this.isUndoable()) {
                ctx.undo();
            }
            return this;
        });
        /** redo cmd */
        this.redo = () => node_move_awaiter(this, void 0, void 0, function* () {
            if (!this.isUndoable()) {
                yield this.execute();
            }
            return this;
        });
    }
    isUndoable() {
        const ctx = this.contextProvider();
        return ctx.isUndoable();
    }
};
node_move_decorate([
    Object(index_esm["inject"])(ICommandContextProvider),
    node_move_metadata("design:type", Object)
], node_move_MoveNodeCommand.prototype, "contextProvider", void 0);
node_move_MoveNodeCommand = node_move_decorate([
    Object(index_esm["injectable"])({
        token: { token: ICommandHandler, named: node_move_NsMoveNode.command.id },
    })
    /** \u521B\u5EFA\u8282\u70B9\u547D\u4EE4 */
], node_move_MoveNodeCommand);

//# sourceMappingURL=node-move.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/node/node-update.js
var node_update_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var node_update_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var node_update_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};




var node_update_NsUpdateNode;
(function (NsUpdateNode) {
    NsUpdateNode.command = XFlowNodeCommands.UPDATE_NODE;
    NsUpdateNode.hookKey = 'updateNode';
    NsUpdateNode.NODE_WIDTH = 200;
    NsUpdateNode.NODE_HEIGHT = 40;
})(node_update_NsUpdateNode || (node_update_NsUpdateNode = {}));
let node_update_UpdateNodeCommand = 
/** \u8282\u70B9\u66F4\u65B0\u547D\u4EE4 */
class UpdateNodeCommand {
    constructor() {
        this.execute = () => node_update_awaiter(this, void 0, void 0, function* () {
            const { args, hooks: runtimeHook } = this.ctx.getArgs();
            const hooks = this.ctx.getHooks();
            const result = yield hooks.updateNode.call(args, (handlerArgs) => node_update_awaiter(this, void 0, void 0, function* () {
                const x6Graph = yield this.ctx.getX6Graph();
                const { nodeConfig } = handlerArgs;
                const x6Node = x6Graph === null || x6Graph === void 0 ? void 0 : x6Graph.getCellById(nodeConfig === null || nodeConfig === void 0 ? void 0 : nodeConfig.id);
                x6Node.setData(nodeConfig);
                x6Node.setPosition((nodeConfig === null || nodeConfig === void 0 ? void 0 : nodeConfig.x) || 0, (nodeConfig === null || nodeConfig === void 0 ? void 0 : nodeConfig.y) || 0);
                x6Node.setSize((nodeConfig === null || nodeConfig === void 0 ? void 0 : nodeConfig.width) || node_update_NsUpdateNode.NODE_WIDTH, (nodeConfig === null || nodeConfig === void 0 ? void 0 : nodeConfig.height) || node_update_NsUpdateNode.NODE_HEIGHT);
                if (!(x6Node instanceof x6_react_shape_es["a" /* ReactShape */]) && !!x6Node.getAttrByPath('text/text')) {
                    x6Node.setAttrByPath('text/text', nodeConfig.label);
                }
                // \u652F\u6301nodeAttrs
                if (nodeConfig.attrs) {
                    x6Node.setAttrs(nodeConfig.attrs);
                }
                return {
                    nodeConfig,
                    nodeCell: x6Node,
                };
            }), runtimeHook);
            this.ctx.setResult(result);
            return this;
        });
        this.undo = () => node_update_awaiter(this, void 0, void 0, function* () {
            this.ctx.undo();
            return this;
        });
        this.redo = () => node_update_awaiter(this, void 0, void 0, function* () {
            if (!this.ctx.isUndoable) {
                yield this.execute();
            }
            return this;
        });
    }
    init() {
        this.ctx = this.contextProvider();
    }
    isUndoable() {
        return this.ctx.isUndoable();
    }
};
node_update_decorate([
    Object(index_esm["inject"])(ICommandContextProvider),
    node_update_metadata("design:type", Object)
], node_update_UpdateNodeCommand.prototype, "contextProvider", void 0);
node_update_decorate([
    Object(index_esm["postConstruct"])(),
    node_update_metadata("design:type", Function),
    node_update_metadata("design:paramtypes", []),
    node_update_metadata("design:returntype", void 0)
], node_update_UpdateNodeCommand.prototype, "init", null);
node_update_UpdateNodeCommand = node_update_decorate([
    Object(index_esm["injectable"])({
        token: { token: ICommandHandler, named: node_update_NsUpdateNode.command.id },
    })
    /** \u8282\u70B9\u66F4\u65B0\u547D\u4EE4 */
], node_update_UpdateNodeCommand);

//# sourceMappingURL=node-update.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/node/node-center.js
var node_center_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var node_center_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var node_center_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};



var node_center_NsCenterNode;
(function (NsCenterNode) {
    NsCenterNode.command = XFlowNodeCommands.CENTER_NODE;
    NsCenterNode.hookKey = 'centerNode';
})(node_center_NsCenterNode || (node_center_NsCenterNode = {}));
let CenterNodeCommand = 
/** \u8282\u70B9\u5728\u753B\u5E03\u5C45\u4E2D\u547D\u4EE4 */
class CenterNodeCommand {
    constructor() {
        this.execute = () => node_center_awaiter(this, void 0, void 0, function* () {
            const { args, hooks: runtimeHook } = this.ctx.getArgs();
            const hooks = this.ctx.getHooks();
            const result = yield hooks.centerNode.call(args, (handlerArgs) => node_center_awaiter(this, void 0, void 0, function* () {
                const x6Graph = yield this.ctx.getX6Graph();
                const { nodeConfig } = handlerArgs;
                const x6Node = x6Graph === null || x6Graph === void 0 ? void 0 : x6Graph.getCellById(nodeConfig === null || nodeConfig === void 0 ? void 0 : nodeConfig.id);
                x6Graph === null || x6Graph === void 0 ? void 0 : x6Graph.centerCell(x6Node);
                return { x6Node };
            }), runtimeHook);
            this.ctx.setResult(result);
            return this;
        });
        this.undo = () => node_center_awaiter(this, void 0, void 0, function* () {
            this.ctx.undo();
            return this;
        });
        this.redo = () => node_center_awaiter(this, void 0, void 0, function* () {
            if (!this.ctx.isUndoable) {
                yield this.execute();
            }
            return this;
        });
    }
    init() {
        this.ctx = this.contextProvider();
    }
    isUndoable() {
        return this.ctx.isUndoable();
    }
};
node_center_decorate([
    Object(index_esm["inject"])(ICommandContextProvider),
    node_center_metadata("design:type", Object)
], CenterNodeCommand.prototype, "contextProvider", void 0);
node_center_decorate([
    Object(index_esm["postConstruct"])(),
    node_center_metadata("design:type", Function),
    node_center_metadata("design:paramtypes", []),
    node_center_metadata("design:returntype", void 0)
], CenterNodeCommand.prototype, "init", null);
CenterNodeCommand = node_center_decorate([
    Object(index_esm["injectable"])({
        token: { token: ICommandHandler, named: node_center_NsCenterNode.command.id },
    })
    /** \u8282\u70B9\u5728\u753B\u5E03\u5C45\u4E2D\u547D\u4EE4 */
], CenterNodeCommand);

//# sourceMappingURL=node-center.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/node/node-front.js
var node_front_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var node_front_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var node_front_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};




var node_front_NsFrontNode;
(function (NsFrontNode) {
    NsFrontNode.command = XFlowNodeCommands.FRONT_NODE;
    NsFrontNode.hookKey = 'frontNode';
})(node_front_NsFrontNode || (node_front_NsFrontNode = {}));
let node_front_FrontNodeCommand = 
/** \u8282\u70B9\u524D\u7F6E\u547D\u4EE4(\u59CB\u7EC8\u5728\u753B\u5E03\u6700\u524D\u65B9) */
class FrontNodeCommand {
    constructor() {
        this.execute = () => node_front_awaiter(this, void 0, void 0, function* () {
            const ctx = this.contextProvider();
            const { args, hooks: runtimeHook } = ctx.getArgs();
            const hooks = ctx.getHooks();
            const result = yield hooks.frontNode.call(args, (handlerArgs) => node_front_awaiter(this, void 0, void 0, function* () {
                const x6Graph = yield this.ctx.getX6Graph();
                const { nodeId } = handlerArgs;
                const x6Node = x6Graph === null || x6Graph === void 0 ? void 0 : x6Graph.getCellById(nodeId);
                if (!x6Node) {
                    console.error(nodeId, 'this nodeId is not exist');
                }
                else {
                    x6Node.toFront();
                    /** frontNode undo */
                    ctx.addUndo(Disposable.create(() => node_front_awaiter(this, void 0, void 0, function* () {
                        handlerArgs.commandService.executeCommand(XFlowNodeCommands.BACK_NODE.id, {
                            nodeId,
                        });
                    })));
                }
                return {};
            }), runtimeHook);
            ctx.setResult(result);
            return this;
        });
        this.undo = () => node_front_awaiter(this, void 0, void 0, function* () {
            this.ctx.undo();
            return this;
        });
        this.redo = () => node_front_awaiter(this, void 0, void 0, function* () {
            if (!this.ctx.isUndoable) {
                yield this.execute();
            }
            return this;
        });
    }
    init() {
        this.ctx = this.contextProvider();
    }
    isUndoable() {
        return this.ctx.isUndoable();
    }
};
node_front_decorate([
    Object(index_esm["inject"])(ICommandContextProvider),
    node_front_metadata("design:type", Object)
], node_front_FrontNodeCommand.prototype, "contextProvider", void 0);
node_front_decorate([
    Object(index_esm["postConstruct"])(),
    node_front_metadata("design:type", Function),
    node_front_metadata("design:paramtypes", []),
    node_front_metadata("design:returntype", void 0)
], node_front_FrontNodeCommand.prototype, "init", null);
node_front_FrontNodeCommand = node_front_decorate([
    Object(index_esm["injectable"])({
        token: { token: ICommandHandler, named: node_front_NsFrontNode.command.id },
    })
    /** \u8282\u70B9\u524D\u7F6E\u547D\u4EE4(\u59CB\u7EC8\u5728\u753B\u5E03\u6700\u524D\u65B9) */
], node_front_FrontNodeCommand);

//# sourceMappingURL=node-front.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/node/node-back.js
var node_back_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var node_back_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var node_back_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};




var node_back_NsBackNode;
(function (NsBackNode) {
    /** command */
    NsBackNode.command = XFlowNodeCommands.BACK_NODE;
    /** hook key */
    NsBackNode.hookKey = 'backNode';
})(node_back_NsBackNode || (node_back_NsBackNode = {}));
let node_back_BackNodeCommand = 
/** \u8282\u70B9\u524D\u7F6E\u547D\u4EE4(\u59CB\u7EC8\u5728\u753B\u5E03\u6700\u524D\u65B9) */
class BackNodeCommand {
    constructor() {
        this.execute = () => node_back_awaiter(this, void 0, void 0, function* () {
            const { args, hooks: runtimeHook } = this.ctx.getArgs();
            const hooks = this.ctx.getHooks();
            const result = yield hooks.backNode.call(args, (handlerArgs) => node_back_awaiter(this, void 0, void 0, function* () {
                const x6Graph = yield this.ctx.getX6Graph();
                const { nodeId } = handlerArgs;
                const x6Node = x6Graph === null || x6Graph === void 0 ? void 0 : x6Graph.getCellById(nodeId);
                if (!x6Node) {
                    console.error(nodeId, 'this nodeId is not exist');
                }
                else {
                    x6Node.toBack();
                    /** backNode undo */
                    this.ctx.addUndo(Disposable.create(() => node_back_awaiter(this, void 0, void 0, function* () {
                        handlerArgs.commandService.executeCommand(XFlowNodeCommands.FRONT_NODE.id, {
                            nodeId,
                        });
                    })));
                }
                return {};
            }), runtimeHook);
            this.ctx.setResult(result);
            return this;
        });
        this.undo = () => node_back_awaiter(this, void 0, void 0, function* () {
            this.ctx.undo();
            return this;
        });
        this.redo = () => node_back_awaiter(this, void 0, void 0, function* () {
            if (!this.ctx.isUndoable) {
                yield this.execute();
            }
            return this;
        });
    }
    init() {
        this.ctx = this.contextProvider();
    }
    isUndoable() {
        return this.ctx.isUndoable();
    }
};
node_back_decorate([
    Object(index_esm["inject"])(ICommandContextProvider),
    node_back_metadata("design:type", Object)
], node_back_BackNodeCommand.prototype, "contextProvider", void 0);
node_back_decorate([
    Object(index_esm["postConstruct"])(),
    node_back_metadata("design:type", Function),
    node_back_metadata("design:paramtypes", []),
    node_back_metadata("design:returntype", void 0)
], node_back_BackNodeCommand.prototype, "init", null);
node_back_BackNodeCommand = node_back_decorate([
    Object(index_esm["injectable"])({
        token: { token: ICommandHandler, named: node_back_NsBackNode.command.id },
    })
    /** \u8282\u70B9\u524D\u7F6E\u547D\u4EE4(\u59CB\u7EC8\u5728\u753B\u5E03\u6700\u524D\u65B9) */
], node_back_BackNodeCommand);

//# sourceMappingURL=node-back.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/node/node-highlight.js
var node_highlight_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var node_highlight_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var node_highlight_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};



var node_highlight_NsHighlightNode;
(function (NsHighlightNode) {
    NsHighlightNode.command = XFlowNodeCommands.HIGHLIGHT_NODE;
    NsHighlightNode.hookKey = 'highlightNode';
})(node_highlight_NsHighlightNode || (node_highlight_NsHighlightNode = {}));
let node_highlight_HighlightNodeCommand = 
/** \u8282\u70B9\u9AD8\u4EAE */
class HighlightNodeCommand {
    constructor() {
        this.execute = () => node_highlight_awaiter(this, void 0, void 0, function* () {
            const { args, hooks: runtimeHook } = this.ctx.getArgs();
            const hooks = this.ctx.getHooks();
            const result = yield hooks.highlightNode.call(args, (handlerArgs) => node_highlight_awaiter(this, void 0, void 0, function* () {
                const x6Graph = yield this.ctx.getX6Graph();
                const { nodeId, stroke, strokeWidth } = handlerArgs;
                const x6Node = x6Graph === null || x6Graph === void 0 ? void 0 : x6Graph.getCellById(nodeId);
                if (!x6Node) {
                    console.error(nodeId, 'this nodeId is not exist');
                    return { err: 'this nodeId is not exist' };
                }
                else {
                    /** \u9AD8\u4EAE\u8282\u70B9 */
                    x6Node === null || x6Node === void 0 ? void 0 : x6Node.setAttrs({
                        body: {
                            stroke: stroke || '#7c68fc',
                            strokeWidth: strokeWidth || 2,
                        },
                    });
                    /** \u8282\u70B9\u5173\u8054\u7684\u8FDE\u7EBF, \u8054\u52A8\u9AD8\u4EAE */
                    if (handlerArgs === null || handlerArgs === void 0 ? void 0 : handlerArgs.isHighlightRelatedLines) {
                        const { edgeStroke, edgeStrokeWidth } = handlerArgs;
                        const allEdges = x6Graph === null || x6Graph === void 0 ? void 0 : x6Graph.getEdges();
                        allEdges.forEach((x6Edge) => {
                            const x6EdgeData = x6Edge === null || x6Edge === void 0 ? void 0 : x6Edge.getData();
                            handlerArgs === null || handlerArgs === void 0 ? void 0 : handlerArgs.commandService.executeCommand(XFlowEdgeCommands.HIGHLIGHT_EDGE.id, {
                                edgeId: x6EdgeData === null || x6EdgeData === void 0 ? void 0 : x6EdgeData.id,
                                strokeColor: edgeStroke,
                                strokeWidth: edgeStrokeWidth,
                            });
                        });
                    }
                }
                return { err: null };
            }), runtimeHook);
            this.ctx.setResult(result);
            return this;
        });
        this.undo = () => node_highlight_awaiter(this, void 0, void 0, function* () {
            this.ctx.undo();
            return this;
        });
        this.redo = () => node_highlight_awaiter(this, void 0, void 0, function* () {
            if (!this.ctx.isUndoable) {
                yield this.execute();
            }
            return this;
        });
    }
    init() {
        this.ctx = this.contextProvider();
    }
    isUndoable() {
        return this.ctx.isUndoable();
    }
};
node_highlight_decorate([
    Object(index_esm["inject"])(ICommandContextProvider),
    node_highlight_metadata("design:type", Object)
], node_highlight_HighlightNodeCommand.prototype, "contextProvider", void 0);
node_highlight_decorate([
    Object(index_esm["postConstruct"])(),
    node_highlight_metadata("design:type", Function),
    node_highlight_metadata("design:paramtypes", []),
    node_highlight_metadata("design:returntype", void 0)
], node_highlight_HighlightNodeCommand.prototype, "init", null);
node_highlight_HighlightNodeCommand = node_highlight_decorate([
    Object(index_esm["injectable"])({
        token: { token: ICommandHandler, named: node_highlight_NsHighlightNode.command.id },
    })
    /** \u8282\u70B9\u9AD8\u4EAE */
], node_highlight_HighlightNodeCommand);

//# sourceMappingURL=node-highlight.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/node/index.js
/** commands */









/** \u6CE8\u518CCommand Handler Class */
const registerNodeCommand = (register) => {
    register(node_add_AddNodeCommand);
    register(node_del_DelNodeCommand);
    register(node_select_SelectNodeCommand);
    register(node_move_MoveNodeCommand);
    register(node_update_UpdateNodeCommand);
    register(CenterNodeCommand);
    register(node_front_FrontNodeCommand);
    register(node_back_BackNodeCommand);
    register(node_highlight_HighlightNodeCommand);
};
/** app onStart \u65F6, \u6CE8\u518C Command Hooks */
const hookhubList = [
    node_add_NsAddNode,
    node_del_NsDelNode,
    node_select_NsSelectNode,
    node_move_NsMoveNode,
    node_update_NsUpdateNode,
    node_center_NsCenterNode,
    node_front_NsFrontNode,
    node_back_NsBackNode,
    node_highlight_NsHighlightNode,
];
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/graph/graph-meta.js
var graph_meta_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var graph_meta_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var graph_meta_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};




var graph_meta_NsGraphMeta;
(function (NsGraphMeta) {
    /** Command Id: \u7528\u4E8E\u6CE8\u518Cnamed factory */
    NsGraphMeta.command = XFlowGraphCommands.LOAD_META;
    /** hookName */
    NsGraphMeta.hookKey = 'graphMeta';
})(graph_meta_NsGraphMeta || (graph_meta_NsGraphMeta = {}));
let graph_meta_GraphMetaCommand = 
/** \u521B\u5EFA\u8282\u70B9\u547D\u4EE4 */
class GraphMetaCommand {
    constructor() {
        /** \u6267\u884CCmd */
        this.execute = () => graph_meta_awaiter(this, void 0, void 0, function* () {
            const { args, hooks: runtimeHook } = this.ctx.getArgs();
            const hooks = this.ctx.getHooks();
            const result = yield hooks.graphMeta.call(
            /** \u6267\u884Chooks pipeline\u5904\u7406args */
            args, 
            /** \u6267\u884C callback */
            (handlerArgs) => graph_meta_awaiter(this, void 0, void 0, function* () {
                var _a;
                const { graphMetaService } = handlerArgs;
                const meta = graphMetaService
                    ? yield graphMetaService(handlerArgs)
                    : { flowId: (_a = handlerArgs === null || handlerArgs === void 0 ? void 0 : handlerArgs.meta) === null || _a === void 0 ? void 0 : _a.flowId };
                return { graphMeta: meta, flowId: meta === null || meta === void 0 ? void 0 : meta.flowId };
            }), 
            /** \u5916\u90E8\u7684 hook */
            runtimeHook);
            const modelService = this.ctx.getModelService();
            /** \u5982\u679C\u5DF2\u7ECF\u6CE8\u518C\uFF0C\u76F4\u63A5\u66F4\u65B0\u5DF2\u6709\u7684\u503C */
            const model = yield model_service_constant_namespaceObject.GRAPH_META.getModel(modelService);
            model.setValue(result.graphMeta);
            /** \u8BBE\u7F6E\u7ED3\u679C */
            this.ctx.setResult(result);
            return this;
        });
        /** undo cmd */
        this.undo = () => graph_meta_awaiter(this, void 0, void 0, function* () {
            this.ctx.undo();
            return this;
        });
        /** redo cmd */
        this.redo = () => graph_meta_awaiter(this, void 0, void 0, function* () {
            if (!this.ctx.isUndoable) {
                yield this.execute();
            }
            return this;
        });
    }
    init() {
        this.ctx = this.contextProvider();
    }
    /** isUndoable */
    isUndoable() {
        return this.ctx.isUndoable();
    }
};
graph_meta_decorate([
    Object(index_esm["inject"])(ICommandContextProvider),
    graph_meta_metadata("design:type", Object)
], graph_meta_GraphMetaCommand.prototype, "contextProvider", void 0);
graph_meta_decorate([
    Object(index_esm["postConstruct"])(),
    graph_meta_metadata("design:type", Function),
    graph_meta_metadata("design:paramtypes", []),
    graph_meta_metadata("design:returntype", void 0)
], graph_meta_GraphMetaCommand.prototype, "init", null);
graph_meta_GraphMetaCommand = graph_meta_decorate([
    Object(index_esm["injectable"])({
        token: { token: ICommandHandler, named: graph_meta_NsGraphMeta.command.id },
    })
    /** \u521B\u5EFA\u8282\u70B9\u547D\u4EE4 */
], graph_meta_GraphMetaCommand);

//# sourceMappingURL=graph-meta.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/graph/graph-save-data.js
var graph_save_data_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var graph_save_data_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var graph_save_data_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};




var graph_save_data_NsGraphSaveData;
(function (NsGraphSaveData) {
    /** Command Id: \u7528\u4E8E\u6CE8\u518Cnamed factory */
    NsGraphSaveData.command = XFlowGraphCommands.SAVE_GRAPH_DATA;
    /** hookName */
    NsGraphSaveData.hookKey = 'saveGrpahData';
})(graph_save_data_NsGraphSaveData || (graph_save_data_NsGraphSaveData = {}));
let graph_save_data_GraphSaveDataCommand = 
/** \u521B\u5EFA\u8282\u70B9\u547D\u4EE4 */
class GraphSaveDataCommand {
    constructor() {
        /** \u6267\u884CCmd */
        this.execute = () => graph_save_data_awaiter(this, void 0, void 0, function* () {
            const ctx = this.ctx;
            const args = ctx.getArgs();
            const hooks = ctx.getHooks();
            /** \u6267\u884Chooks */
            yield hooks.saveGrpahData.call(
            /** \u6267\u884Chooks pipeline\u5904\u7406args */
            args.args, 
            /** \u6267\u884C callback */
            (handlerArgs) => graph_save_data_awaiter(this, void 0, void 0, function* () {
                const { saveGraphDataService, includeAttrs } = handlerArgs;
                const x6Graph = yield ctx.getX6Graph();
                const x6Nodes = x6Graph.getNodes();
                const x6Edges = x6Graph.getEdges();
                const nodes = x6Nodes.map(node => {
                    const data = node.getData();
                    const position = node.position();
                    const size = node.size();
                    const model = Object.assign(Object.assign(Object.assign({ id: node.id }, data), position), size);
                    if (includeAttrs) {
                        model.attrs = node.getAttrs();
                    }
                    return model;
                });
                const edges = x6Edges.map(edge => {
                    const data = edge.getData();
                    const model = Object.assign({ id: edge.id }, data);
                    if (includeAttrs) {
                        model.attrs = edge.getAttrs();
                    }
                    return model;
                });
                const graphData = { nodes, edges };
                const graphMeta = yield model_service_constant_namespaceObject.GRAPH_META.useValue(ctx.getModelService());
                /** \u6267\u884C service */
                if (saveGraphDataService) {
                    const result = yield saveGraphDataService(graphMeta, graphData);
                    /** \u8BBE\u7F6E\u7ED3\u679C */
                    if (result) {
                        this.ctx.setResult(result);
                    }
                }
                return {};
            }), 
            /** \u5916\u90E8\u7684 hook */
            args.hooks);
            return this;
        });
        /** undo cmd */
        this.undo = () => graph_save_data_awaiter(this, void 0, void 0, function* () {
            this.ctx.undo();
            return this;
        });
        /** redo cmd */
        this.redo = () => graph_save_data_awaiter(this, void 0, void 0, function* () {
            if (!this.ctx.isUndoable) {
                yield this.execute();
            }
            return this;
        });
    }
    init() {
        this.ctx = this.contextProvider();
    }
    /** isUndoable */
    isUndoable() {
        return this.ctx.isUndoable();
    }
};
graph_save_data_decorate([
    Object(index_esm["inject"])(ICommandContextProvider),
    graph_save_data_metadata("design:type", Object)
], graph_save_data_GraphSaveDataCommand.prototype, "contextProvider", void 0);
graph_save_data_decorate([
    Object(index_esm["postConstruct"])(),
    graph_save_data_metadata("design:type", Function),
    graph_save_data_metadata("design:paramtypes", []),
    graph_save_data_metadata("design:returntype", void 0)
], graph_save_data_GraphSaveDataCommand.prototype, "init", null);
graph_save_data_GraphSaveDataCommand = graph_save_data_decorate([
    Object(index_esm["injectable"])({
        token: { token: ICommandHandler, named: graph_save_data_NsGraphSaveData.command.id },
    })
    /** \u521B\u5EFA\u8282\u70B9\u547D\u4EE4 */
], graph_save_data_GraphSaveDataCommand);

//# sourceMappingURL=graph-save-data.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/graph/graph-load-data.js
var graph_load_data_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var graph_load_data_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var graph_load_data_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};




/** \u4ECE\u670D\u52A1\u7AEF\u83B7\u53D6\u753B\u5E03\u6570\u636E\u547D\u4EE4 */
var graph_load_data_NsGraphLoadData;
(function (NsGraphLoadData) {
    /** Command: \u7528\u4E8E\u6CE8\u518Cnamed factory */
    NsGraphLoadData.command = XFlowGraphCommands.LOAD_DATA;
    /** hookName */
    NsGraphLoadData.hookKey = 'loadData';
    NsGraphLoadData.createHook = () => {
        return new es_HookHub();
    };
})(graph_load_data_NsGraphLoadData || (graph_load_data_NsGraphLoadData = {}));
let GraphLoadDataCommand = 
/** \u753B\u5E03\u6570\u636E\u83B7\u53D6\u547D\u4EE4 */
class GraphLoadDataCommand {
    constructor() {
        /** \u6267\u884Ccmd */
        this.execute = () => graph_load_data_awaiter(this, void 0, void 0, function* () {
            const { args, hooks: runtimeHook } = this.ctx.getArgs();
            const hooks = this.ctx.getHooks();
            const result = yield hooks.loadData.call(args, (handlerArgs) => graph_load_data_awaiter(this, void 0, void 0, function* () {
                const { loadDataService, graphMeta } = handlerArgs;
                const graphData = yield loadDataService(graphMeta);
                return { graphData };
            }), runtimeHook);
            /** \u8BBE\u7F6E\u7ED3\u679C */
            this.ctx.setResult(result);
            return this;
        });
        this.undo = () => graph_load_data_awaiter(this, void 0, void 0, function* () {
            this.ctx.undo();
            return this;
        });
        this.redo = () => graph_load_data_awaiter(this, void 0, void 0, function* () {
            if (!this.ctx.isUndoable) {
                yield this.execute();
            }
            return this;
        });
    }
    init() {
        this.ctx = this.contextProvider();
    }
    isUndoable() {
        return this.ctx.isUndoable();
    }
};
graph_load_data_decorate([
    Object(index_esm["inject"])(ICommandContextProvider),
    graph_load_data_metadata("design:type", Object)
], GraphLoadDataCommand.prototype, "contextProvider", void 0);
graph_load_data_decorate([
    Object(index_esm["postConstruct"])(),
    graph_load_data_metadata("design:type", Function),
    graph_load_data_metadata("design:paramtypes", []),
    graph_load_data_metadata("design:returntype", void 0)
], GraphLoadDataCommand.prototype, "init", null);
GraphLoadDataCommand = graph_load_data_decorate([
    Object(index_esm["injectable"])({
        token: { token: ICommandHandler, named: graph_load_data_NsGraphLoadData.command.id },
    })
    /** \u753B\u5E03\u6570\u636E\u83B7\u53D6\u547D\u4EE4 */
], GraphLoadDataCommand);

//# sourceMappingURL=graph-load-data.js.map
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@antv/layout/es/index.js + 62 modules
var layout_es = __webpack_require__("8e6g");

// CONCATENATED MODULE: ../xflow-core/es/command-contributions/graph/graph-layout.js
var graph_layout_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var graph_layout_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var graph_layout_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};




/** \u753B\u5E03\u56FE\u6570\u636E\u6267\u884C\u5E03\u5C40\u7B97\u6CD5\u547D\u4EE4 */
var graph_layout_NsGraphLayout;
(function (NsGraphLayout) {
    /** Command: \u7528\u4E8E\u6CE8\u518Cnamed factory */
    NsGraphLayout.command = XFlowGraphCommands.GRAPH_LAYOUT;
    /** hookName */
    NsGraphLayout.hookKey = 'graphLayout';
})(graph_layout_NsGraphLayout || (graph_layout_NsGraphLayout = {}));
let graph_layout_GraphLayoutCommand = 
/** \u753B\u5E03\u5E03\u5C40\u547D\u4EE4 */
class GraphLayoutCommand {
    constructor() {
        /** \u6267\u884Ccmd */
        this.execute = () => graph_layout_awaiter(this, void 0, void 0, function* () {
            const { args, hooks: runtimeHook } = this.ctx.getArgs();
            const hooks = this.ctx.getHooks();
            const result = yield hooks.graphLayout.call(args, (handlerArgs) => graph_layout_awaiter(this, void 0, void 0, function* () {
                const { layoutType, layoutOptions, customLayout } = handlerArgs;
                /** XFlow\u5185\u7F6EAntV\u901A\u7528\u5E03\u5C40 */
                const innerLayout = (graphData) => {
                    const AntVLayout = layout_es["a" /* Registy */].getLayoutByName(layoutType);
                    const antVLayout = new AntVLayout(layoutOptions);
                    return antVLayout.layout(graphData);
                };
                const layoutFunc = customLayout || innerLayout;
                yield layoutFunc(handlerArgs.graphData);
                return { graphData: handlerArgs.graphData };
            }), runtimeHook);
            /** \u8BBE\u7F6E\u7ED3\u679C */
            this.ctx.setResult(result);
            return this;
        });
        this.undo = () => graph_layout_awaiter(this, void 0, void 0, function* () {
            this.ctx.undo();
            return this;
        });
        this.redo = () => graph_layout_awaiter(this, void 0, void 0, function* () {
            if (!this.ctx.isUndoable) {
                yield this.execute();
            }
            return this;
        });
    }
    init() {
        this.ctx = this.contextProvider();
    }
    isUndoable() {
        return this.ctx.isUndoable();
    }
};
graph_layout_decorate([
    Object(index_esm["inject"])(ICommandContextProvider),
    graph_layout_metadata("design:type", Object)
], graph_layout_GraphLayoutCommand.prototype, "contextProvider", void 0);
graph_layout_decorate([
    Object(index_esm["postConstruct"])(),
    graph_layout_metadata("design:type", Function),
    graph_layout_metadata("design:paramtypes", []),
    graph_layout_metadata("design:returntype", void 0)
], graph_layout_GraphLayoutCommand.prototype, "init", null);
graph_layout_GraphLayoutCommand = graph_layout_decorate([
    Object(index_esm["injectable"])({
        token: { token: ICommandHandler, named: graph_layout_NsGraphLayout.command.id },
    })
    /** \u753B\u5E03\u5E03\u5C40\u547D\u4EE4 */
], graph_layout_GraphLayoutCommand);

//# sourceMappingURL=graph-layout.js.map
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/lodash/lodash.js
var lodash = __webpack_require__("nsO7");

// CONCATENATED MODULE: ../xflow-core/es/command-contributions/graph/graph-render.js
var graph_render_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var graph_render_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var graph_render_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};




var graph_render_NsGraphUtils;
(function (NsGraphUtils) {
    function isNodeEqual(curNodeConfig, nextNodeConfig) {
        /** XFlow\u9ED8\u8BA4\u7684\u5224\u65AD\u8282\u70B9\u662F\u5426\u76F8\u7B49\u7684\u903B\u8F91 */
        return Object(lodash["isEqual"])(curNodeConfig, nextNodeConfig);
    }
    NsGraphUtils.isNodeEqual = isNodeEqual;
    function isEdgeEqual(curEdgeConfig, nextEdgeConfig) {
        /** XFlow\u9ED8\u8BA4\u7684\u5224\u65AD\u8FB9\u662F\u5426\u76F8\u7B49\u7684\u903B\u8F91 */
        return Object(lodash["isEqual"])(curEdgeConfig, nextEdgeConfig);
    }
    NsGraphUtils.isEdgeEqual = isEdgeEqual;
})(graph_render_NsGraphUtils || (graph_render_NsGraphUtils = {}));
var graph_render_NsGraphRender;
(function (NsGraphRender) {
    /** Command: \u7528\u4E8E\u6CE8\u518Cnamed factory */
    NsGraphRender.command = XFlowGraphCommands.GRAPH_RENDER;
    /** hookName */
    NsGraphRender.hookKey = 'graphRender';
})(graph_render_NsGraphRender || (graph_render_NsGraphRender = {}));
let graph_render_GraphRenderCommand = 
/** \u753B\u5E03\u6E32\u67D3\u547D\u4EE4 */
class GraphRenderCommand {
    constructor() {
        this.execute = () => graph_render_awaiter(this, void 0, void 0, function* () {
            const { args, hooks: runtimeHook } = this.ctx.getArgs();
            const hooks = this.ctx.getHooks();
            const result = yield hooks.graphRender.call(args, (handlerArgs) => graph_render_awaiter(this, void 0, void 0, function* () {
                const x6Graph = yield this.ctx.getX6Graph();
                const { graphMeta, beforeRender, graphData, isNodeEqual, isEdgeEqual, afterRender } = handlerArgs;
                /** \u5982\u679C\u7528\u6237\u81EA\u5B9A\u4E49beforeRender\u65B9\u6CD5 */
                beforeRender && beforeRender(graphMeta);
                yield this.doLoadGraph(x6Graph, graphData, isNodeEqual, isEdgeEqual);
                /** \u5982\u679C\u7528\u6237\u81EA\u5B9A\u4E49afterRender\u65B9\u6CD5 */
                afterRender && afterRender(graphData, graphMeta);
                return {};
            }), runtimeHook);
            /** \u8BBE\u7F6E\u7ED3\u679C */
            this.ctx.setResult(result);
            return this;
        });
        this.undo = () => graph_render_awaiter(this, void 0, void 0, function* () {
            this.ctx.undo();
            return this;
        });
        this.redo = () => graph_render_awaiter(this, void 0, void 0, function* () {
            if (!this.ctx.isUndoable) {
                yield this.execute();
            }
            return this;
        });
        this.doLoadGraph = (x6Graph, graphData, isNodeEqual, isEdgeEqual) => graph_render_awaiter(this, void 0, void 0, function* () {
            if (!(x6Graph === null || x6Graph === void 0 ? void 0 : x6Graph.isFrozen())) {
                x6Graph === null || x6Graph === void 0 ? void 0 : x6Graph.freeze();
            }
            const commandService = this.ctx.getCommands();
            const { addNodeConfigs, addEdgeConfigs, 
            // retainNodes,
            // retainEdges,
            removeNodes, removeEdges, updateNodes, updateEdges, } = this.graphDataDiff(x6Graph, graphData, isNodeEqual, isEdgeEqual);
            /** \u65B0\u589E\u8282\u70B9/\u8FB9 */
            for (const nodeConfig of addNodeConfigs) {
                yield commandService.executeCommand(XFlowNodeCommands.ADD_NODE.id, {
                    nodeConfig,
                }, {
                    name: 'remove servcie ',
                    handler: (args) => graph_render_awaiter(this, void 0, void 0, function* () {
                        delete args.createNodeService;
                    }),
                });
            }
            yield commandService.executeCommand(XFlowGroupCommands.INIT_GROUP.id, {
                graphData: { nodes: addNodeConfigs, edges: [] },
            });
            for (const edgeConfig of addEdgeConfigs) {
                yield commandService.executeCommand(XFlowEdgeCommands.ADD_EDGE.id, {
                    edgeConfig,
                }, {
                    name: 'remove servcie ',
                    handler: (args) => graph_render_awaiter(this, void 0, void 0, function* () {
                        delete args.createEdgeService;
                    }),
                });
            }
            /** \u5220\u9664\u8282\u70B9/\u8FB9/\u7FA4\u7EC4 */
            for (const removeNode of removeNodes) {
                const nodeData = removeNode === null || removeNode === void 0 ? void 0 : removeNode.getData();
                if (nodeData.isGroup) {
                    yield commandService.executeCommand(XFlowGroupCommands.DEL_GROUP.id, {
                        nodeConfig: nodeData,
                    });
                }
                else {
                    yield commandService.executeCommand(XFlowNodeCommands.DEL_NODE.id, { nodeConfig: nodeData });
                }
            }
            for (const removeEdge of removeEdges) {
                const edgeData = removeEdge === null || removeEdge === void 0 ? void 0 : removeEdge.getData();
                yield commandService.executeCommand(XFlowEdgeCommands.DEL_EDGE.id, { edgeConfig: edgeData });
            }
            /** \u66F4\u65B0\u8282\u70B9/\u8FB9 */
            for (const updateNode of updateNodes) {
                const nodeData = updateNode === null || updateNode === void 0 ? void 0 : updateNode.getData();
                yield commandService.executeCommand(XFlowNodeCommands.UPDATE_NODE.id, {
                    nodeConfig: nodeData,
                });
            }
            for (const updateEdge of updateEdges) {
                const edgeData = updateEdge === null || updateEdge === void 0 ? void 0 : updateEdge.getData();
                yield commandService.executeCommand(XFlowEdgeCommands.UPDATE_EDGE.id, {
                    edgeConfig: edgeData,
                });
            }
            if (x6Graph === null || x6Graph === void 0 ? void 0 : x6Graph.isFrozen()) {
                x6Graph === null || x6Graph === void 0 ? void 0 : x6Graph.unfreeze();
            }
        });
    }
    init() {
        this.ctx = this.contextProvider();
    }
    isUndoable() {
        return this.ctx.isUndoable();
    }
    /**
     * \u753B\u5E03\u5185\u5BB9Diff
     * @param x6Graph x6\u753B\u5E03\u5B9E\u4F8B
     * @param graphData \u753B\u5E03\u6570\u636E
     * @param isNodeEqual \u5141\u8BB8\u7528\u6237\u81EA\u5B9A\u4E49\u5224\u65AD\u8282\u70B9\u662F\u5426\u76F8\u7B49
     * @param isEdgeEqual \u5141\u8BB8\u7528\u6237\u81EA\u5B9A\u4E49\u5224\u65AD\u8FB9\u662F\u5426\u76F8\u7B49
     */
    graphDataDiff(x6Graph, graphData, isNodeEqual, isEdgeEqual) {
        const { nodes: nodeConfigs, edges: edgeConfigs } = graphData;
        /** \u65B0\u589E\u8282\u70B9\u6570\u636E */
        const addNodeConfigs = [];
        nodeConfigs.forEach(nodeConfig => {
            const findNode = x6Graph.getCellById(nodeConfig === null || nodeConfig === void 0 ? void 0 : nodeConfig.id);
            if (!findNode) {
                addNodeConfigs.push(nodeConfig);
            }
        });
        /** \u4FDD\u6301\u3001\u66F4\u65B0\u3001\u79FB\u9664\u8282\u70B9 */
        const retainNodes = [];
        const updateNodes = [];
        const removeNodes = [];
        const allNodes = x6Graph.getNodes();
        allNodes.forEach(x6Node => {
            const findNodeConfig = nodeConfigs.find(nodeConfig => (nodeConfig === null || nodeConfig === void 0 ? void 0 : nodeConfig.id) === (x6Node === null || x6Node === void 0 ? void 0 : x6Node.id));
            if (!findNodeConfig) {
                removeNodes.push(x6Node);
            }
            else {
                let judgeResult = true;
                if (isNodeEqual) {
                    /** \u5982\u679C\u7528\u6237\u81EA\u5B9A\u4E49\u8282\u70B9\u662F\u5426\u76F8\u7B49\u7684\u65B9\u6CD5 */
                    judgeResult = isNodeEqual(x6Node === null || x6Node === void 0 ? void 0 : x6Node.data, findNodeConfig);
                }
                else {
                    /** XFlow\u9ED8\u8BA4\u7684\u5224\u65AD\u8282\u70B9\u662F\u5426\u76F8\u7B49\u7684\u903B\u8F91 */
                    if ((x6Node === null || x6Node === void 0 ? void 0 : x6Node.data) && findNodeConfig) {
                        judgeResult = graph_render_NsGraphUtils.isNodeEqual(x6Node === null || x6Node === void 0 ? void 0 : x6Node.data, findNodeConfig);
                    }
                }
                if (!judgeResult) {
                    x6Node.setData(findNodeConfig);
                }
                judgeResult === true ? retainNodes.push(x6Node) : updateNodes.push(x6Node);
            }
        });
        /** \u65B0\u589E\u8FB9\u6570\u636E */
        const addEdgeConfigs = [];
        edgeConfigs.forEach(edgeConfig => {
            const findEdge = x6Graph.getCellById(edgeConfig === null || edgeConfig === void 0 ? void 0 : edgeConfig.id);
            if (!findEdge) {
                addEdgeConfigs.push(edgeConfig);
            }
        });
        /** \u4FDD\u6301\u3001\u66F4\u65B0\u3001\u79FB\u9664\u8282\u70B9 */
        const retainEdges = [];
        const updateEdges = [];
        const removeEdges = [];
        const allEdges = x6Graph.getEdges();
        allEdges.forEach(x6Edge => {
            const findEdgeConfig = edgeConfigs.find(edgeConfig => (edgeConfig === null || edgeConfig === void 0 ? void 0 : edgeConfig.id) === (x6Edge === null || x6Edge === void 0 ? void 0 : x6Edge.id));
            if (!findEdgeConfig) {
                removeEdges.push(x6Edge);
            }
            else {
                let judgeResult = true;
                if (isEdgeEqual) {
                    /** \u5982\u679C\u7528\u6237\u81EA\u5B9A\u4E49\u8FB9\u662F\u5426\u76F8\u7B49\u7684\u65B9\u6CD5 */
                    judgeResult = isEdgeEqual(x6Edge === null || x6Edge === void 0 ? void 0 : x6Edge.data, findEdgeConfig);
                }
                else {
                    /** XFlow\u9ED8\u8BA4\u7684\u5224\u65AD\u8FB9\u662F\u5426\u76F8\u7B49\u7684\u903B\u8F91 */
                    if ((x6Edge === null || x6Edge === void 0 ? void 0 : x6Edge.data) && findEdgeConfig) {
                        judgeResult = graph_render_NsGraphUtils.isEdgeEqual(x6Edge === null || x6Edge === void 0 ? void 0 : x6Edge.data, findEdgeConfig);
                    }
                }
                if (!judgeResult) {
                    x6Edge.setData(findEdgeConfig);
                }
                judgeResult === true ? retainEdges.push(x6Edge) : updateEdges.push(x6Edge);
            }
        });
        return {
            addNodeConfigs,
            addEdgeConfigs,
            retainNodes,
            retainEdges,
            removeNodes,
            removeEdges,
            updateNodes,
            updateEdges,
        };
    }
};
graph_render_decorate([
    Object(index_esm["inject"])(ICommandContextProvider),
    graph_render_metadata("design:type", Object)
], graph_render_GraphRenderCommand.prototype, "contextProvider", void 0);
graph_render_decorate([
    Object(index_esm["postConstruct"])(),
    graph_render_metadata("design:type", Function),
    graph_render_metadata("design:paramtypes", []),
    graph_render_metadata("design:returntype", void 0)
], graph_render_GraphRenderCommand.prototype, "init", null);
graph_render_GraphRenderCommand = graph_render_decorate([
    Object(index_esm["injectable"])({
        token: { token: ICommandHandler, named: graph_render_NsGraphRender.command.id },
    })
    /** \u753B\u5E03\u6E32\u67D3\u547D\u4EE4 */
], graph_render_GraphRenderCommand);

//# sourceMappingURL=graph-render.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/graph/graph-resize.js
var graph_resize_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var graph_resize_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var graph_resize_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};



var graph_resize_NsGraphResize;
(function (NsGraphResize) {
    /** Command: \u7528\u4E8E\u6CE8\u518Cnamed factory */
    NsGraphResize.command = XFlowGraphCommands.GRAPH_RESIZE;
    /** hookName */
    NsGraphResize.hookKey = 'graphResize';
})(graph_resize_NsGraphResize || (graph_resize_NsGraphResize = {}));
let GraphResizeCommand = 
/** \u753B\u5E03resize\u547D\u4EE4 */
class GraphResizeCommand {
    constructor() {
        /** \u6267\u884CCmd */
        this.execute = () => graph_resize_awaiter(this, void 0, void 0, function* () {
            const { args, hooks: runtimeHook } = this.ctx.getArgs();
            const hooks = this.ctx.getHooks();
            const config = yield this.ctx.getGraphConfig();
            const clientHeight = config.rootContainer.clientHeight;
            const clientWidth = config.rootContainer.clientWidth;
            const result = yield hooks.graphResize.call(
            /** \u6267\u884Chooks pipeline\u5904\u7406args */
            args, 
            /** \u6267\u884C callback */
            (handlerArgs) => graph_resize_awaiter(this, void 0, void 0, function* () {
                const x6Graph = yield this.ctx.getX6Graph();
                const { width = clientWidth, height = clientHeight } = handlerArgs;
                x6Graph === null || x6Graph === void 0 ? void 0 : x6Graph.resize(width, height);
                return {};
            }), 
            /** execute command \u65F6\u521B\u5EFA\u7684hook */
            runtimeHook);
            /** \u8BBE\u7F6E\u7ED3\u679C */
            this.ctx.setResult(result);
            return this;
        });
        /** undo cmd */
        this.undo = () => graph_resize_awaiter(this, void 0, void 0, function* () {
            this.ctx.undo();
            return this;
        });
        /** redo cmd */
        this.redo = () => graph_resize_awaiter(this, void 0, void 0, function* () {
            if (!this.ctx.isUndoable) {
                yield this.execute();
            }
            return this;
        });
    }
    init() {
        this.ctx = this.contextProvider();
    }
    /** isUndoable */
    isUndoable() {
        return this.ctx.isUndoable();
    }
};
graph_resize_decorate([
    Object(index_esm["inject"])(ICommandContextProvider),
    graph_resize_metadata("design:type", Object)
], GraphResizeCommand.prototype, "contextProvider", void 0);
graph_resize_decorate([
    Object(index_esm["postConstruct"])(),
    graph_resize_metadata("design:type", Function),
    graph_resize_metadata("design:paramtypes", []),
    graph_resize_metadata("design:returntype", void 0)
], GraphResizeCommand.prototype, "init", null);
GraphResizeCommand = graph_resize_decorate([
    Object(index_esm["injectable"])({
        token: { token: ICommandHandler, named: graph_resize_NsGraphResize.command.id },
    })
    /** \u753B\u5E03resize\u547D\u4EE4 */
], GraphResizeCommand);

//# sourceMappingURL=graph-resize.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/graph/graph-zoom.js
var graph_zoom_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var graph_zoom_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var graph_zoom_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};



var graph_zoom_NsGraphZoom;
(function (NsGraphZoom) {
    /** Command: \u7528\u4E8E\u6CE8\u518Cnamed factory */
    NsGraphZoom.command = XFlowGraphCommands.GRAPH_ZOOM;
    /** zoom options */
    NsGraphZoom.MAX_SCALE = 1.5;
    NsGraphZoom.MIN_SCALE = 0.05;
    /** default zoom options */
    NsGraphZoom.defaultZoomOptions = {
        maxScale: NsGraphZoom.MAX_SCALE,
        minScale: NsGraphZoom.MIN_SCALE,
    };
    /** hookName */
    NsGraphZoom.hookKey = 'graphZoom';
})(graph_zoom_NsGraphZoom || (graph_zoom_NsGraphZoom = {}));
let GraphZoomCommand = 
/** \u753B\u5E03\u7F29\u653E\u547D\u4EE4 */
class GraphZoomCommand {
    constructor() {
        /** \u6267\u884CCmd */
        this.execute = () => graph_zoom_awaiter(this, void 0, void 0, function* () {
            const { args, hooks: runtimeHook } = this.ctx.getArgs();
            const hooks = this.ctx.getHooks();
            const result = yield hooks.graphZoom.call(
            /** \u6267\u884Chooks pipeline\u5904\u7406args */
            args, 
            /** \u6267\u884C callback */
            (handlerArgs) => graph_zoom_awaiter(this, void 0, void 0, function* () {
                const x6Graph = yield this.ctx.getX6Graph();
                const { factor, zoomFitPadding = 12, zoomOptions = graph_zoom_NsGraphZoom.defaultZoomOptions, } = handlerArgs;
                if (typeof factor === 'number') {
                    x6Graph === null || x6Graph === void 0 ? void 0 : x6Graph.zoom(factor, zoomOptions || {});
                }
                else if (factor === 'fit') {
                    x6Graph === null || x6Graph === void 0 ? void 0 : x6Graph.zoomToFit(Object.assign(Object.assign({}, zoomOptions), { padding: zoomFitPadding }));
                }
                else if (factor === 'real') {
                    x6Graph === null || x6Graph === void 0 ? void 0 : x6Graph.scale(1);
                    x6Graph === null || x6Graph === void 0 ? void 0 : x6Graph.centerContent();
                }
                return { factor, zoomFitPadding, zoomOptions };
            }), 
            /** execute command \u65F6\u521B\u5EFA\u7684hook */
            runtimeHook);
            /** \u8BBE\u7F6E\u7ED3\u679C */
            this.ctx.setResult(result);
            return this;
        });
        /** undo cmd */
        this.undo = () => graph_zoom_awaiter(this, void 0, void 0, function* () {
            this.ctx.undo();
            return this;
        });
        /** redo cmd */
        this.redo = () => graph_zoom_awaiter(this, void 0, void 0, function* () {
            if (!this.ctx.isUndoable) {
                yield this.execute();
            }
            return this;
        });
    }
    init() {
        this.ctx = this.contextProvider();
    }
    /** isUndoable */
    isUndoable() {
        return this.ctx.isUndoable();
    }
};
graph_zoom_decorate([
    Object(index_esm["inject"])(ICommandContextProvider),
    graph_zoom_metadata("design:type", Object)
], GraphZoomCommand.prototype, "contextProvider", void 0);
graph_zoom_decorate([
    Object(index_esm["postConstruct"])(),
    graph_zoom_metadata("design:type", Function),
    graph_zoom_metadata("design:paramtypes", []),
    graph_zoom_metadata("design:returntype", void 0)
], GraphZoomCommand.prototype, "init", null);
GraphZoomCommand = graph_zoom_decorate([
    Object(index_esm["injectable"])({
        token: { token: ICommandHandler, named: graph_zoom_NsGraphZoom.command.id },
    })
    /** \u753B\u5E03\u7F29\u653E\u547D\u4EE4 */
], GraphZoomCommand);

//# sourceMappingURL=graph-zoom.js.map
// CONCATENATED MODULE: ../xflow-core/es/common/graph-utils.js
const node2Json = (cell) => {
    const children = cell.getChildren();
    const size = cell.getSize();
    const data = cell.getData() || {};
    const position = cell.getPosition();
    const groupId = cell.getParentId();
    const { isCollapsed } = data;
    const groupCollapsedSize = data.groupCollapsedSize || (isCollapsed ? size : null);
    return Object.assign(Object.assign({}, data), { id: cell.id, width: size.width, height: size.height, x: position.x, y: position.y, group: groupId, groupChildren: children ? children.map(child => child.id) : null, groupCollapsedSize });
};
const edge2Json = (cell) => {
    const data = cell.getData() || {};
    return Object.assign({ id: cell.id }, data);
};
const cellsToJson = (cells) => {
    const nodes = [];
    const edges = [];
    const cell2Json = (cell) => {
        if (cell.isNode()) {
            nodes.push(node2Json(cell));
        }
        if (cell.isEdge()) {
            edges.push(edge2Json(cell));
        }
    };
    cells.map(cell => {
        return cell2Json(cell);
    });
    return {
        nodes,
        edges,
    };
};
//# sourceMappingURL=graph-utils.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/graph/graph-copy.js
var graph_copy_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var graph_copy_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var graph_copy_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};






var graph_copy_NsGraphCopySelection;
(function (NsGraphCopySelection) {
    /** Command: \u7528\u4E8E\u6CE8\u518Cnamed factory */
    NsGraphCopySelection.command = XFlowGraphCommands.GRAPH_COPY;
    /** hookName */
    NsGraphCopySelection.hookKey = 'graphCopySelection';
})(graph_copy_NsGraphCopySelection || (graph_copy_NsGraphCopySelection = {}));
let graph_copy_GraphCopySelectionCommand = 
/** \u521B\u5EFA\u8282\u70B9\u547D\u4EE4 */
class GraphCopySelectionCommand {
    constructor() {
        this.parseCells = (cells) => {
            // if groupNode add its group children
            cells.forEach(cell => {
                const data = cell.getData();
                if (cell.isNode() && data.isGroup) {
                    const children = cell.getChildren();
                    children.forEach(child => {
                        cells.push(child);
                    });
                }
            });
            // filter edges target not in selections
            const nodeIds = cells.filter(cell => cell.isNode()).map(cell => cell.id);
            const map = cells.reduce((acc, cell) => {
                if (cell.isEdge()) {
                    const source = cell.getSourceCellId();
                    const target = cell.getTargetCellId();
                    if (source && target) {
                        if (nodeIds.includes(source) && nodeIds.includes(target)) {
                            acc.set(cell.id, cell);
                        }
                    }
                }
                else {
                    acc.set(cell.id, cell);
                }
                return acc;
            }, new Map());
            const uniqeList = Array.from(map.values());
            return cellsToJson(uniqeList);
        };
        /** \u6267\u884CCmd */
        this.execute = () => graph_copy_awaiter(this, void 0, void 0, function* () {
            const ctx = this.contextProvider();
            const { args, hooks: runtimeHook } = ctx.getArgs();
            const hooks = ctx.getHooks();
            const result = yield hooks.graphCopySelection.call(args, () => graph_copy_awaiter(this, void 0, void 0, function* () {
                const graph = yield ctx.getX6Graph();
                const cells = graph.getSelectedCells();
                // \u5904\u7406 Group cells/\u8FC7\u6EE4\u65E0\u6548\u7684edges
                const jsonObject = this.parseCells(cells);
                const oldJsonString = window.localStorage.getItem(LOCAL_STORAGE_KEY);
                // \u5199cache
                window.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(jsonObject));
                // undo \u5199cache
                ctx.addUndo(Disposable.create(() => graph_copy_awaiter(this, void 0, void 0, function* () {
                    window.localStorage.setItem(LOCAL_STORAGE_KEY, oldJsonString);
                })));
                return { err: null };
            }), runtimeHook);
            ctx.setResult(result);
            return this;
        });
        /** undo cmd */
        this.undo = () => graph_copy_awaiter(this, void 0, void 0, function* () {
            const ctx = this.contextProvider();
            if (this.isUndoable()) {
                ctx.undo();
            }
            return this;
        });
        /** redo cmd */
        this.redo = () => graph_copy_awaiter(this, void 0, void 0, function* () {
            if (!this.isUndoable()) {
                yield this.execute();
            }
            return this;
        });
    }
    isUndoable() {
        const ctx = this.contextProvider();
        return ctx.isUndoable();
    }
};
graph_copy_decorate([
    Object(index_esm["inject"])(ICommandContextProvider),
    graph_copy_metadata("design:type", Object)
], graph_copy_GraphCopySelectionCommand.prototype, "contextProvider", void 0);
graph_copy_GraphCopySelectionCommand = graph_copy_decorate([
    Object(index_esm["injectable"])({
        token: { token: ICommandHandler, named: graph_copy_NsGraphCopySelection.command.id },
    })
    /** \u521B\u5EFA\u8282\u70B9\u547D\u4EE4 */
], graph_copy_GraphCopySelectionCommand);

//# sourceMappingURL=graph-copy.js.map
// CONCATENATED MODULE: ../xflow-core/es/common/safe-json.js
// safe json
function safeJson(jsonStr, defaultValue = null) {
    try {
        const obj = JSON.parse(jsonStr);
        return obj || defaultValue;
    }
    catch (error) {
        console.error(error);
        return defaultValue;
    }
}
//# sourceMappingURL=safe-json.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/mapping-service.js
var mapping_service_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};

let GraphMappingHelper = class GraphMappingHelper {
    constructor() {
        this.groupNodeMap = new Map();
        // node \u7684 mapping
        this.nodeMap = new Map();
        this.nodeMappingRecord = new Map();
        // port \u7684 mapping
        this.portMap = new Map();
        this.portMappingRecord = new Map();
        // edge \u7684 mapping
        this.edgeMap = new Map();
        this.edgeMappingRecord = new Map();
        // \u533A\u5206\u7C7B\u578B
        this.getNodesByType = (nodes) => {
            return nodes.reduce((acc, node) => {
                if (node.isGroup) {
                    acc.groupNodes.push(node);
                }
                else {
                    acc.normalNodes.push(node);
                }
                return acc;
            }, { normalNodes: [], groupNodes: [] });
        };
        // \u589E\u52A0\u5DF2\u6709\u8282\u70B9
        this.getNodePorts = (node) => {
            if (Array.isArray(node.ports)) {
                return node.ports;
            }
            if (node.ports && Array.isArray(node.ports.items)) {
                return node.ports.items;
            }
            return [];
        };
        // \u589E\u52A0\u5DF2\u6709\u8282\u70B9
        this.addNodes = (nodes) => {
            nodes.forEach(node => {
                if (node.isGroup) {
                    this.groupNodeMap.set(node.id, node);
                }
                else {
                    const ports = this.getNodePorts(node);
                    this.nodeMap.set(node.id, node);
                    ports.forEach(port => {
                        this.portMap.set(port.id, port);
                    });
                }
            });
        };
        // \u589E\u52A0\u5DF2\u6709edge
        this.addEdge = (edges) => {
            edges.forEach(edge => {
                this.edgeMap.set(edge.id, edge);
            });
        };
        // \u6DFB\u52A0node\u7684\u6620\u5C04\u5173\u7CFB
        this.buildNodeMapping = (currentNode, nextNode) => {
            const currentNodeId = currentNode.id || currentNode.originId;
            const nextNodeId = nextNode.id;
            this.nodeMappingRecord.set(currentNodeId, nextNodeId);
            const ports = this.getNodePorts(currentNode);
            ports.forEach((oldPort, index) => {
                const newPort = nextNode.ports[index];
                if (newPort) {
                    this.portMap.set(newPort.id, newPort);
                    this.portMappingRecord.set(oldPort.id, newPort.id);
                }
            });
        };
        // \u66F4\u65B0Edge\u7684NodeId\u548CPortId
        this.createEdgeBetweenNodes = (edgeConfig) => {
            const { source, sourcePortId, target, targetPortId } = edgeConfig;
            return Object.assign(Object.assign({}, edgeConfig), { source: this.nodeMappingRecord.get(source), target: this.nodeMappingRecord.get(target), sourcePortId: this.portMappingRecord.get(sourcePortId), targetPortId: this.portMappingRecord.get(targetPortId) });
        };
        // \u66F4\u65B0GroupNode\u7684NodeId
        this.buildGroupRelations = (groupNode) => {
            const { groupChildren } = groupNode;
            const newGroupChildren = groupChildren.map(id => {
                return this.nodeMappingRecord.get(id);
            });
            return Object.assign(Object.assign({}, groupNode), { groupChildren: newGroupChildren });
        };
    }
};
GraphMappingHelper = mapping_service_decorate([
    Object(index_esm["injectable"])()
], GraphMappingHelper);

//# sourceMappingURL=mapping-service.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/graph/graph-paste.js
var graph_paste_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var graph_paste_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var graph_paste_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var GraphPasteSelectionCommand_1;







var graph_paste_NsGraphPasteSelection;
(function (NsGraphPasteSelection) {
    /** Command: \u7528\u4E8E\u6CE8\u518Cnamed factory */
    NsGraphPasteSelection.command = XFlowGraphCommands.GRAPH_PASTE;
    /** hookName */
    NsGraphPasteSelection.hookKey = 'graphPasteSelection';
})(graph_paste_NsGraphPasteSelection || (graph_paste_NsGraphPasteSelection = {}));
function randomNumber(max, min = 0) {
    return Math.floor(Math.random() * (max - min) + min);
}
let graph_paste_GraphPasteSelectionCommand = GraphPasteSelectionCommand_1 = 
/** \u521B\u5EFA\u8282\u70B9\u547D\u4EE4 */
class GraphPasteSelectionCommand {
    constructor() {
        this.updateNodeCopiedProps = (position, nodeConfig) => {
            let dx = randomNumber(100);
            let dy = randomNumber(100);
            if (position) {
                dx = nodeConfig.x - position.x + randomNumber(30);
                dy = nodeConfig.y - position.y + randomNumber(30);
            }
            // \u4FEE\u6539\u5750\u6807
            nodeConfig.x += dx;
            nodeConfig.y += dy;
            // \u5220\u9664 id
            nodeConfig.originId = nodeConfig.id;
            delete nodeConfig.id;
            // \u4FEE\u6539label
            nodeConfig.label = \`\${nodeConfig.label}_copied\`;
            nodeConfig.isCollapsed = false;
            return nodeConfig;
        };
        /** \u6267\u884CCmd */
        this.execute = () => graph_paste_awaiter(this, void 0, void 0, function* () {
            const ctx = this.contextProvider();
            const { args, hooks: runtimeHook } = ctx.getArgs();
            const hooks = ctx.getHooks();
            if (GraphPasteSelectionCommand_1.doing) {
                return this;
            }
            GraphPasteSelectionCommand_1.doing = true;
            const result = yield hooks.graphPasteSelection.call(args, (handlerArgs) => graph_paste_awaiter(this, void 0, void 0, function* () {
                const { commandService, position } = handlerArgs;
                const jsonString = window.localStorage.getItem(LOCAL_STORAGE_KEY);
                const plainObject = safeJson(jsonString, {
                    nodes: [],
                    edges: [],
                });
                const { nodes = [], edges = [] } = plainObject;
                const { normalNodes, groupNodes } = this.mappingHelper.getNodesByType(nodes);
                this.mappingHelper.addNodes(nodes);
                // \u6DFB\u52A0\u666E\u901A\u8282\u70B9
                yield Promise.all(normalNodes.map((nodeConfig) => graph_paste_awaiter(this, void 0, void 0, function* () {
                    const res = yield commandService.executeCommand(XFlowNodeCommands.ADD_NODE.id, {
                        nodeConfig: this.updateNodeCopiedProps(position, nodeConfig),
                    });
                    const context = res.contextProvider();
                    const cmdResult = context.getResult();
                    this.mappingHelper.buildNodeMapping(nodeConfig, cmdResult.nodeConfig);
                })));
                // \u5904\u7406group
                yield Promise.all(groupNodes.map((group) => graph_paste_awaiter(this, void 0, void 0, function* () {
                    const groupNodeConfig = this.mappingHelper.buildGroupRelations(group);
                    yield commandService.executeCommand(XFlowGroupCommands.ADD_GROUP.id, {
                        nodeConfig: this.updateNodeCopiedProps(position, groupNodeConfig),
                    });
                })));
                // \u5904\u7406\u8FDE\u7EBF
                yield Promise.all(edges.map(edgeConfig => {
                    const newEdge = this.mappingHelper.createEdgeBetweenNodes(edgeConfig);
                    return commandService.executeCommand(XFlowEdgeCommands.ADD_EDGE.id, {
                        edgeConfig: newEdge,
                    });
                }));
                ctx.addUndo(Disposable.create(() => graph_paste_awaiter(this, void 0, void 0, function* () {
                    window.localStorage.setItem(LOCAL_STORAGE_KEY, null);
                })));
                return { err: null };
            }), runtimeHook);
            ctx.setResult(result);
            GraphPasteSelectionCommand_1.doing = false;
            return this;
        });
        /** undo cmd */
        this.undo = () => graph_paste_awaiter(this, void 0, void 0, function* () {
            const ctx = this.contextProvider();
            if (this.isUndoable()) {
                ctx.undo();
            }
            return this;
        });
        /** redo cmd */
        this.redo = () => graph_paste_awaiter(this, void 0, void 0, function* () {
            if (!this.isUndoable()) {
                yield this.execute();
            }
            return this;
        });
    }
    isUndoable() {
        const ctx = this.contextProvider();
        return ctx.isUndoable();
    }
};
/** \u9632\u6B62\u591A\u6B21\u6267\u884C */
graph_paste_GraphPasteSelectionCommand.doing = false;
graph_paste_decorate([
    Object(index_esm["inject"])(ICommandContextProvider),
    graph_paste_metadata("design:type", Object)
], graph_paste_GraphPasteSelectionCommand.prototype, "contextProvider", void 0);
graph_paste_decorate([
    Object(index_esm["inject"])(GraphMappingHelper),
    graph_paste_metadata("design:type", GraphMappingHelper)
], graph_paste_GraphPasteSelectionCommand.prototype, "mappingHelper", void 0);
graph_paste_GraphPasteSelectionCommand = GraphPasteSelectionCommand_1 = graph_paste_decorate([
    Object(index_esm["injectable"])({
        token: { token: ICommandHandler, named: graph_paste_NsGraphPasteSelection.command.id },
    })
    /** \u521B\u5EFA\u8282\u70B9\u547D\u4EE4 */
], graph_paste_GraphPasteSelectionCommand);

//# sourceMappingURL=graph-paste.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/graph/graph-toggle-multi-select.js
var graph_toggle_multi_select_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var graph_toggle_multi_select_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var graph_toggle_multi_select_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};




var graph_toggle_multi_select_NsGraphToggleMultiSelect;
(function (NsGraphToggleMultiSelect) {
    /** Command: \u7528\u4E8E\u6CE8\u518Cnamed factory */
    NsGraphToggleMultiSelect.command = XFlowGraphCommands.GRAPH_TOGGLE_MULTI_SELECT;
    /** hookName */
    NsGraphToggleMultiSelect.hookKey = 'toggleMultiSelect';
})(graph_toggle_multi_select_NsGraphToggleMultiSelect || (graph_toggle_multi_select_NsGraphToggleMultiSelect = {}));
let graph_toggle_multi_select_GraphToggleMultiSelectCommand = 
/** \u753B\u5E03\u7F29\u653E\u547D\u4EE4 */
class GraphToggleMultiSelectCommand {
    constructor() {
        /** \u6267\u884CCmd */
        this.execute = () => graph_toggle_multi_select_awaiter(this, void 0, void 0, function* () {
            const { args, hooks: runtimeHook } = this.ctx.getArgs();
            const hooks = this.ctx.getHooks();
            const result = yield hooks.toggleMultiSelect.call(
            /** \u6267\u884Chooks pipeline\u5904\u7406args */
            args, 
            /** \u6267\u884C callback */
            (handlerArgs) => graph_toggle_multi_select_awaiter(this, void 0, void 0, function* () {
                const x6Graph = yield this.ctx.getX6Graph();
                const config = yield this.ctx.getGraphConfig();
                const { isEnable, modelService } = handlerArgs;
                const graphEnableMultiSelectModel = yield model_service_constant_namespaceObject.GRAPH_ENABLE_MULTI_SELECT.getModel(modelService);
                const needEnableRubberBand = typeof isEnable === 'boolean' ? isEnable : !x6Graph.isRubberbandEnabled();
                if (needEnableRubberBand) {
                    x6Graph.enableRubberband();
                    if (x6Graph.scroller && x6Graph.scroller.widget) {
                        x6Graph.scroller.disablePanning();
                    }
                    else {
                        x6Graph.disablePanning();
                    }
                    config.graphContainer.style.cursor = 'crosshair';
                }
                else {
                    x6Graph.disableRubberband();
                    if (x6Graph.scroller && x6Graph.scroller.widget) {
                        x6Graph.scroller.enablePanning();
                    }
                    else {
                        x6Graph.enablePanning();
                    }
                    config.graphContainer.style.cursor = 'grab';
                }
                graphEnableMultiSelectModel.setValue({ isEnable: needEnableRubberBand });
                return { isEnable: needEnableRubberBand };
            }), 
            /** execute command \u65F6\u521B\u5EFA\u7684hook */
            runtimeHook);
            /** \u8BBE\u7F6E\u7ED3\u679C */
            this.ctx.setResult(result);
            return this;
        });
        /** undo cmd */
        this.undo = () => graph_toggle_multi_select_awaiter(this, void 0, void 0, function* () {
            this.ctx.undo();
            return this;
        });
        /** redo cmd */
        this.redo = () => graph_toggle_multi_select_awaiter(this, void 0, void 0, function* () {
            if (!this.ctx.isUndoable) {
                yield this.execute();
            }
            return this;
        });
    }
    init() {
        this.ctx = this.contextProvider();
    }
    /** isUndoable */
    isUndoable() {
        return this.ctx.isUndoable();
    }
};
graph_toggle_multi_select_decorate([
    Object(index_esm["inject"])(ICommandContextProvider),
    graph_toggle_multi_select_metadata("design:type", Object)
], graph_toggle_multi_select_GraphToggleMultiSelectCommand.prototype, "contextProvider", void 0);
graph_toggle_multi_select_decorate([
    Object(index_esm["postConstruct"])(),
    graph_toggle_multi_select_metadata("design:type", Function),
    graph_toggle_multi_select_metadata("design:paramtypes", []),
    graph_toggle_multi_select_metadata("design:returntype", void 0)
], graph_toggle_multi_select_GraphToggleMultiSelectCommand.prototype, "init", null);
graph_toggle_multi_select_GraphToggleMultiSelectCommand = graph_toggle_multi_select_decorate([
    Object(index_esm["injectable"])({
        token: { token: ICommandHandler, named: graph_toggle_multi_select_NsGraphToggleMultiSelect.command.id },
    })
    /** \u753B\u5E03\u7F29\u653E\u547D\u4EE4 */
], graph_toggle_multi_select_GraphToggleMultiSelectCommand);

//# sourceMappingURL=graph-toggle-multi-select.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/graph/graph-history-undo.js
var graph_history_undo_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var graph_history_undo_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var graph_history_undo_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};




var graph_history_undo_NsGraphHistoryUndo;
(function (NsGraphHistoryUndo) {
    /** Command: \u7528\u4E8E\u6CE8\u518Cnamed factory */
    NsGraphHistoryUndo.command = XFlowGraphCommands.GRAPH_HISTORY_UNDO;
    /** hookName */
    NsGraphHistoryUndo.hookKey = 'historyUndo';
})(graph_history_undo_NsGraphHistoryUndo || (graph_history_undo_NsGraphHistoryUndo = {}));
let graph_history_undo_GraphHistoryUndoCommand = 
/** \u5F00\u542Fhistory\u547D\u4EE4 */
class GraphHistoryUndoCommand {
    constructor() {
        /** \u6267\u884CCmd */
        this.execute = () => graph_history_undo_awaiter(this, void 0, void 0, function* () {
            const ctx = this.contextProvider();
            const { args, hooks: runtimeHook } = ctx.getArgs();
            const hooks = ctx.getHooks();
            const result = yield hooks.historyUndo.call(args, (handlerArgs) => graph_history_undo_awaiter(this, void 0, void 0, function* () {
                const graph = yield ctx.getX6Graph();
                if (graph.isHistoryEnabled() === false) {
                    return {
                        err: 'history is disabled',
                    };
                }
                graph.undo();
                ctx.addUndo(Disposable.create(() => graph_history_undo_awaiter(this, void 0, void 0, function* () {
                    const { commandService } = handlerArgs;
                    commandService.executeCommand(XFlowGraphCommands.GRAPH_HISTORY_REDO.id, {});
                })));
                return { err: null };
            }), runtimeHook);
            ctx.setResult(result);
            return this;
        });
        /** undo cmd */
        this.undo = () => graph_history_undo_awaiter(this, void 0, void 0, function* () {
            const ctx = this.contextProvider();
            if (this.isUndoable()) {
                ctx.undo();
            }
            return this;
        });
        /** redo cmd */
        this.redo = () => graph_history_undo_awaiter(this, void 0, void 0, function* () {
            if (!this.isUndoable()) {
                yield this.execute();
            }
            return this;
        });
    }
    isUndoable() {
        const ctx = this.contextProvider();
        return ctx.isUndoable();
    }
};
graph_history_undo_decorate([
    Object(index_esm["inject"])(ICommandContextProvider),
    graph_history_undo_metadata("design:type", Object)
], graph_history_undo_GraphHistoryUndoCommand.prototype, "contextProvider", void 0);
graph_history_undo_GraphHistoryUndoCommand = graph_history_undo_decorate([
    Object(index_esm["injectable"])({
        token: { token: ICommandHandler, named: graph_history_undo_NsGraphHistoryUndo.command.id },
    })
    /** \u5F00\u542Fhistory\u547D\u4EE4 */
], graph_history_undo_GraphHistoryUndoCommand);

//# sourceMappingURL=graph-history-undo.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/graph/graph-history-redo.js
var graph_history_redo_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var graph_history_redo_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var graph_history_redo_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};




var graph_history_redo_NsGraphHistoryRedo;
(function (NsGraphHistoryRedo) {
    /** Command: \u7528\u4E8E\u6CE8\u518Cnamed factory */
    NsGraphHistoryRedo.command = XFlowGraphCommands.GRAPH_HISTORY_REDO;
    /** hookName */
    NsGraphHistoryRedo.hookKey = 'historyRedo';
})(graph_history_redo_NsGraphHistoryRedo || (graph_history_redo_NsGraphHistoryRedo = {}));
let graph_history_redo_GraphHistoryRedoCommand = 
/** \u521B\u5EFA\u8282\u70B9\u547D\u4EE4 */
class GraphHistoryRedoCommand {
    constructor() {
        /** \u6267\u884CCmd */
        this.execute = () => graph_history_redo_awaiter(this, void 0, void 0, function* () {
            const ctx = this.contextProvider();
            const { args, hooks: runtimeHook } = ctx.getArgs();
            const hooks = ctx.getHooks();
            const result = yield hooks.historyRedo.call(args, (handlerArgs) => graph_history_redo_awaiter(this, void 0, void 0, function* () {
                const graph = yield ctx.getX6Graph();
                if (graph.isHistoryEnabled() === false) {
                    return {
                        err: 'history is disabled',
                    };
                }
                graph.redo();
                ctx.addUndo(Disposable.create(() => graph_history_redo_awaiter(this, void 0, void 0, function* () {
                    const { commandService } = handlerArgs;
                    commandService.executeCommand(XFlowGraphCommands.GRAPH_HISTORY_UNDO.id, {});
                })));
                return { err: null };
            }), runtimeHook);
            ctx.setResult(result);
            return this;
        });
        /** undo cmd */
        this.undo = () => graph_history_redo_awaiter(this, void 0, void 0, function* () {
            const ctx = this.contextProvider();
            if (this.isUndoable()) {
                ctx.undo();
            }
            return this;
        });
        /** redo cmd */
        this.redo = () => graph_history_redo_awaiter(this, void 0, void 0, function* () {
            if (!this.isUndoable()) {
                yield this.execute();
            }
            return this;
        });
    }
    isUndoable() {
        const ctx = this.contextProvider();
        return ctx.isUndoable();
    }
};
graph_history_redo_decorate([
    Object(index_esm["inject"])(ICommandContextProvider),
    graph_history_redo_metadata("design:type", Object)
], graph_history_redo_GraphHistoryRedoCommand.prototype, "contextProvider", void 0);
graph_history_redo_GraphHistoryRedoCommand = graph_history_redo_decorate([
    Object(index_esm["injectable"])({
        token: { token: ICommandHandler, named: graph_history_redo_NsGraphHistoryRedo.command.id },
    })
    /** \u521B\u5EFA\u8282\u70B9\u547D\u4EE4 */
], graph_history_redo_GraphHistoryRedoCommand);

//# sourceMappingURL=graph-history-redo.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/graph/graph-history-toggle.js
var graph_history_toggle_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var graph_history_toggle_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var graph_history_toggle_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};




var graph_history_toggle_NsGraphHistoryToggle;
(function (NsGraphHistoryToggle) {
    /** Command: \u7528\u4E8E\u6CE8\u518Cnamed factory */
    NsGraphHistoryToggle.command = XFlowGraphCommands.GRAPH_HISTORY_TOGGLE;
    /** hookName */
    NsGraphHistoryToggle.hookKey = 'historyToggle';
})(graph_history_toggle_NsGraphHistoryToggle || (graph_history_toggle_NsGraphHistoryToggle = {}));
let graph_history_toggle_GraphHistoryToggleCommand = 
/** \u521B\u5EFA\u8282\u70B9\u547D\u4EE4 */
class GraphHistoryToggleCommand {
    constructor() {
        /** \u6267\u884CCmd */
        this.execute = () => graph_history_toggle_awaiter(this, void 0, void 0, function* () {
            const ctx = this.contextProvider();
            const { args, hooks: runtimeHook } = ctx.getArgs();
            const hooks = ctx.getHooks();
            const result = yield hooks.historyToggle.call(args, (handlerArgs) => graph_history_toggle_awaiter(this, void 0, void 0, function* () {
                const graph = yield ctx.getX6Graph();
                if (graph.isHistoryEnabled() === false) {
                    return {
                        err: 'history is disabled',
                    };
                }
                const isEnable = graph.isHistoryEnabled();
                const { enabled } = handlerArgs;
                // \u6267\u884Cgraph\u547D\u4EE4
                graph.toggleHistory(enabled);
                // \u6DFB\u52A0undo
                ctx.addUndo(Disposable.create(() => graph_history_toggle_awaiter(this, void 0, void 0, function* () {
                    const { commandService } = handlerArgs;
                    commandService.executeCommand(XFlowGraphCommands.GRAPH_HISTORY_TOGGLE.id, {
                        enabled: isEnable,
                    });
                })));
                return { err: null };
            }), runtimeHook);
            ctx.setResult(result);
            return this;
        });
        /** undo cmd */
        this.undo = () => graph_history_toggle_awaiter(this, void 0, void 0, function* () {
            const ctx = this.contextProvider();
            if (this.isUndoable()) {
                ctx.undo();
            }
            return this;
        });
        /** redo cmd */
        this.redo = () => graph_history_toggle_awaiter(this, void 0, void 0, function* () {
            if (!this.isUndoable()) {
                yield this.execute();
            }
            return this;
        });
    }
    isUndoable() {
        const ctx = this.contextProvider();
        return ctx.isUndoable();
    }
};
graph_history_toggle_decorate([
    Object(index_esm["inject"])(ICommandContextProvider),
    graph_history_toggle_metadata("design:type", Object)
], graph_history_toggle_GraphHistoryToggleCommand.prototype, "contextProvider", void 0);
graph_history_toggle_GraphHistoryToggleCommand = graph_history_toggle_decorate([
    Object(index_esm["injectable"])({
        token: { token: ICommandHandler, named: graph_history_toggle_NsGraphHistoryToggle.command.id },
    })
    /** \u521B\u5EFA\u8282\u70B9\u547D\u4EE4 */
], graph_history_toggle_GraphHistoryToggleCommand);

//# sourceMappingURL=graph-history-toggle.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/graph/graph-history-reset.js
var graph_history_reset_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var graph_history_reset_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var graph_history_reset_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};



var graph_history_reset_NsGraphHistoryReset;
(function (NsGraphHistoryReset) {
    /** Command: \u7528\u4E8E\u6CE8\u518Cnamed factory */
    NsGraphHistoryReset.command = XFlowGraphCommands.GRAPH_HISTORY_RESET;
    /** hookName */
    NsGraphHistoryReset.hookKey = 'historyReset';
})(graph_history_reset_NsGraphHistoryReset || (graph_history_reset_NsGraphHistoryReset = {}));
let GraphHistoryResetCommand = 
/** \u521B\u5EFA\u6E05\u7406History\u547D\u4EE4 */
class GraphHistoryResetCommand {
    constructor() {
        /** \u6267\u884CCmd */
        this.execute = () => graph_history_reset_awaiter(this, void 0, void 0, function* () {
            const ctx = this.contextProvider();
            const { args, hooks: runtimeHook } = ctx.getArgs();
            const hooks = ctx.getHooks();
            const result = yield hooks.historyReset.call(args, () => graph_history_reset_awaiter(this, void 0, void 0, function* () {
                const graph = yield ctx.getX6Graph();
                graph.cleanHistory();
                return { err: null };
            }), runtimeHook);
            ctx.setResult(result);
            return this;
        });
        /** undo cmd */
        this.undo = () => graph_history_reset_awaiter(this, void 0, void 0, function* () {
            const ctx = this.contextProvider();
            if (this.isUndoable()) {
                ctx.undo();
            }
            return this;
        });
        /** redo cmd */
        this.redo = () => graph_history_reset_awaiter(this, void 0, void 0, function* () {
            if (!this.isUndoable()) {
                yield this.execute();
            }
            return this;
        });
    }
    isUndoable() {
        const ctx = this.contextProvider();
        return ctx.isUndoable();
    }
};
graph_history_reset_decorate([
    Object(index_esm["inject"])(ICommandContextProvider),
    graph_history_reset_metadata("design:type", Object)
], GraphHistoryResetCommand.prototype, "contextProvider", void 0);
GraphHistoryResetCommand = graph_history_reset_decorate([
    Object(index_esm["injectable"])({
        token: { token: ICommandHandler, named: graph_history_reset_NsGraphHistoryReset.command.id },
    })
    /** \u521B\u5EFA\u6E05\u7406History\u547D\u4EE4 */
], GraphHistoryResetCommand);

//# sourceMappingURL=graph-history-reset.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/graph/graph-add-tool.js
var graph_add_tool_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var graph_add_tool_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var graph_add_tool_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};




var graph_add_tool_NsGraphAddTool;
(function (NsGraphAddTool) {
    /** Command: \u7528\u4E8E\u6CE8\u518Cnamed factory */
    NsGraphAddTool.command = XFlowGraphCommands.GRAPH_ADD_TOOL;
    /** hookName */
    NsGraphAddTool.hookKey = 'addTool';
})(graph_add_tool_NsGraphAddTool || (graph_add_tool_NsGraphAddTool = {}));
let graph_add_tool_GraphAddToolCommand = 
/** \u521B\u5EFA\u8282\u70B9\u547D\u4EE4 */
class GraphAddToolCommand {
    constructor() {
        /** \u6267\u884CCmd */
        this.execute = () => graph_add_tool_awaiter(this, void 0, void 0, function* () {
            const ctx = this.contextProvider();
            const { args, hooks: runtimeHook } = ctx.getArgs();
            const hooks = ctx.getHooks();
            const result = yield hooks.addTool.call(args, (handlerArgs) => graph_add_tool_awaiter(this, void 0, void 0, function* () {
                const { cellId, toolConfig, commandService } = handlerArgs;
                const graph = yield ctx.getX6Graph();
                const cell = graph.getCellById(cellId);
                if (cell) {
                    cell.addTools(toolConfig.items, toolConfig.options);
                    ctx.addUndo(Disposable.create(() => graph_add_tool_awaiter(this, void 0, void 0, function* () {
                        if (Array.isArray(toolConfig.items)) {
                            toolConfig.items.forEach(item => {
                                commandService.executeCommand(XFlowGraphCommands.GRAPH_DEL_TOOL.id, {
                                    cellId,
                                    toolname: item,
                                });
                            });
                        }
                    })));
                }
                return { err: null };
            }), runtimeHook);
            ctx.setResult(result);
            return this;
        });
        /** undo cmd */
        this.undo = () => graph_add_tool_awaiter(this, void 0, void 0, function* () {
            const ctx = this.contextProvider();
            if (this.isUndoable()) {
                ctx.undo();
            }
            return this;
        });
        /** redo cmd */
        this.redo = () => graph_add_tool_awaiter(this, void 0, void 0, function* () {
            if (!this.isUndoable()) {
                yield this.execute();
            }
            return this;
        });
    }
    isUndoable() {
        const ctx = this.contextProvider();
        return ctx.isUndoable();
    }
};
graph_add_tool_decorate([
    Object(index_esm["inject"])(ICommandContextProvider),
    graph_add_tool_metadata("design:type", Object)
], graph_add_tool_GraphAddToolCommand.prototype, "contextProvider", void 0);
graph_add_tool_GraphAddToolCommand = graph_add_tool_decorate([
    Object(index_esm["injectable"])({
        token: { token: ICommandHandler, named: graph_add_tool_NsGraphAddTool.command.id },
    })
    /** \u521B\u5EFA\u8282\u70B9\u547D\u4EE4 */
], graph_add_tool_GraphAddToolCommand);

//# sourceMappingURL=graph-add-tool.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/graph/graph-del-tool.js
var graph_del_tool_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var graph_del_tool_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var graph_del_tool_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};



var graph_del_tool_NsGraphDelTool;
(function (NsGraphDelTool) {
    /** Command: \u7528\u4E8E\u6CE8\u518Cnamed factory */
    NsGraphDelTool.command = XFlowGraphCommands.GRAPH_DEL_TOOL;
    /** hookName */
    NsGraphDelTool.hookKey = 'delTool';
})(graph_del_tool_NsGraphDelTool || (graph_del_tool_NsGraphDelTool = {}));
let GraphDelToolCommand = 
/** \u521B\u5EFA\u8282\u70B9\u547D\u4EE4 */
class GraphDelToolCommand {
    constructor() {
        /** \u6267\u884CCmd */
        this.execute = () => graph_del_tool_awaiter(this, void 0, void 0, function* () {
            const ctx = this.contextProvider();
            const { args, hooks: runtimeHook } = ctx.getArgs();
            const hooks = ctx.getHooks();
            const result = yield hooks.delTool.call(args, (handlerArgs) => graph_del_tool_awaiter(this, void 0, void 0, function* () {
                const { cellId, toolName, toolConfig } = handlerArgs;
                const graph = yield ctx.getX6Graph();
                const cell = graph.getCellById(cellId);
                if (cell) {
                    if (toolName === '*') {
                        cell.removeTools(toolConfig);
                    }
                    else {
                        cell.removeTool(toolName, toolConfig);
                    }
                }
                return { err: null };
            }), runtimeHook);
            ctx.setResult(result);
            return this;
        });
        /** undo cmd */
        this.undo = () => graph_del_tool_awaiter(this, void 0, void 0, function* () {
            const ctx = this.contextProvider();
            if (this.isUndoable()) {
                ctx.undo();
            }
            return this;
        });
        /** redo cmd */
        this.redo = () => graph_del_tool_awaiter(this, void 0, void 0, function* () {
            if (!this.isUndoable()) {
                yield this.execute();
            }
            return this;
        });
    }
    isUndoable() {
        const ctx = this.contextProvider();
        return ctx.isUndoable();
    }
};
graph_del_tool_decorate([
    Object(index_esm["inject"])(ICommandContextProvider),
    graph_del_tool_metadata("design:type", Object)
], GraphDelToolCommand.prototype, "contextProvider", void 0);
GraphDelToolCommand = graph_del_tool_decorate([
    Object(index_esm["injectable"])({
        token: { token: ICommandHandler, named: graph_del_tool_NsGraphDelTool.command.id },
    })
    /** \u521B\u5EFA\u8282\u70B9\u547D\u4EE4 */
], GraphDelToolCommand);

//# sourceMappingURL=graph-del-tool.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/graph/graph-cmd-redo.js
var graph_cmd_redo_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var graph_cmd_redo_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var graph_cmd_redo_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};




var graph_cmd_redo_NsRedoCmd;
(function (NsRedoCmd) {
    /** Command Id: \u7528\u4E8E\u6CE8\u518Cnamed factory */
    NsRedoCmd.command = XFlowGraphCommands.REDO_CMD;
    /** hookName */
    NsRedoCmd.hookKey = 'redoCommand';
})(graph_cmd_redo_NsRedoCmd || (graph_cmd_redo_NsRedoCmd = {}));
let graph_cmd_redo_GraphRedoCommand = 
/** \u521B\u5EFA\u8282\u70B9\u547D\u4EE4 */
class GraphRedoCommand {
    constructor() {
        /** \u6267\u884CCmd */
        this.execute = () => graph_cmd_redo_awaiter(this, void 0, void 0, function* () {
            const ctx = this.ctx;
            const { args, hooks: runtimeHook } = ctx.getArgs();
            const hooks = ctx.getHooks();
            yield hooks.redoCommand.call(
            /** \u6267\u884Chooks pipeline\u5904\u7406args */
            args, 
            /** \u6267\u884C callback */
            () => graph_cmd_redo_awaiter(this, void 0, void 0, function* () {
                const cmds = ctx.getCommands();
                if (cmds.isRedoable) {
                    cmds.redoCommand();
                }
                /** \u8BBE\u7F6E\u7ED3\u679C */
                this.ctx.addUndo(Disposable.create(() => {
                    cmds.redoCommand();
                }));
                return {};
            }), 
            /** \u5916\u90E8\u7684 hook */
            runtimeHook);
            return this;
        });
        /** undo cmd */
        this.undo = () => graph_cmd_redo_awaiter(this, void 0, void 0, function* () {
            this.ctx.undo();
            return this;
        });
        /** redo cmd */
        this.redo = () => graph_cmd_redo_awaiter(this, void 0, void 0, function* () {
            if (!this.ctx.isUndoable) {
                yield this.execute();
            }
            return this;
        });
    }
    init() {
        this.ctx = this.contextProvider();
    }
    /** isUndoable */
    isUndoable() {
        return this.ctx.isUndoable();
    }
};
graph_cmd_redo_decorate([
    Object(index_esm["inject"])(ICommandContextProvider),
    graph_cmd_redo_metadata("design:type", Object)
], graph_cmd_redo_GraphRedoCommand.prototype, "contextProvider", void 0);
graph_cmd_redo_decorate([
    Object(index_esm["postConstruct"])(),
    graph_cmd_redo_metadata("design:type", Function),
    graph_cmd_redo_metadata("design:paramtypes", []),
    graph_cmd_redo_metadata("design:returntype", void 0)
], graph_cmd_redo_GraphRedoCommand.prototype, "init", null);
graph_cmd_redo_GraphRedoCommand = graph_cmd_redo_decorate([
    Object(index_esm["injectable"])({
        token: { token: ICommandHandler, named: graph_cmd_redo_NsRedoCmd.command.id },
    })
    /** \u521B\u5EFA\u8282\u70B9\u547D\u4EE4 */
], graph_cmd_redo_GraphRedoCommand);

//# sourceMappingURL=graph-cmd-redo.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/graph/graph-cmd-undo.js
var graph_cmd_undo_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var graph_cmd_undo_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var graph_cmd_undo_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};




var graph_cmd_undo_NsUndoCmd;
(function (NsUndoCmd) {
    /** Command Id: \u7528\u4E8E\u6CE8\u518Cnamed factory */
    NsUndoCmd.command = XFlowGraphCommands.UNDO_CMD;
    /** hookName */
    NsUndoCmd.hookKey = 'undoCommand';
})(graph_cmd_undo_NsUndoCmd || (graph_cmd_undo_NsUndoCmd = {}));
let graph_cmd_undo_GraphUndoCommand = 
/** \u521B\u5EFA\u8282\u70B9\u547D\u4EE4 */
class GraphUndoCommand {
    constructor() {
        /** \u6267\u884CCmd */
        this.execute = () => graph_cmd_undo_awaiter(this, void 0, void 0, function* () {
            const ctx = this.ctx;
            const { args, hooks: runtimeHook } = ctx.getArgs();
            const hooks = ctx.getHooks();
            yield hooks.undoCommand.call(
            /** \u6267\u884Chooks pipeline\u5904\u7406args */
            args, 
            /** \u6267\u884C callback */
            () => graph_cmd_undo_awaiter(this, void 0, void 0, function* () {
                const cmds = ctx.getCommands();
                if (cmds.isUndoable) {
                    cmds.undoCommand();
                }
                /** \u8BBE\u7F6E\u7ED3\u679C */
                this.ctx.addUndo(Disposable.create(() => {
                    cmds.redoCommand();
                }));
                return {};
            }), 
            /** \u5916\u90E8\u7684 hook */
            runtimeHook);
            return this;
        });
        /** undo cmd */
        this.undo = () => graph_cmd_undo_awaiter(this, void 0, void 0, function* () {
            this.ctx.undo();
            return this;
        });
        /** redo cmd */
        this.redo = () => graph_cmd_undo_awaiter(this, void 0, void 0, function* () {
            if (!this.ctx.isUndoable) {
                yield this.execute();
            }
            return this;
        });
    }
    init() {
        this.ctx = this.contextProvider();
    }
    /** isUndoable */
    isUndoable() {
        return this.ctx.isUndoable();
    }
};
graph_cmd_undo_decorate([
    Object(index_esm["inject"])(ICommandContextProvider),
    graph_cmd_undo_metadata("design:type", Object)
], graph_cmd_undo_GraphUndoCommand.prototype, "contextProvider", void 0);
graph_cmd_undo_decorate([
    Object(index_esm["postConstruct"])(),
    graph_cmd_undo_metadata("design:type", Function),
    graph_cmd_undo_metadata("design:paramtypes", []),
    graph_cmd_undo_metadata("design:returntype", void 0)
], graph_cmd_undo_GraphUndoCommand.prototype, "init", null);
graph_cmd_undo_GraphUndoCommand = graph_cmd_undo_decorate([
    Object(index_esm["injectable"])({
        token: { token: ICommandHandler, named: graph_cmd_undo_NsUndoCmd.command.id },
    })
    /** \u521B\u5EFA\u8282\u70B9\u547D\u4EE4 */
], graph_cmd_undo_GraphUndoCommand);

//# sourceMappingURL=graph-cmd-undo.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/graph/index.js
// \u6570\u636E\u76F8\u5173



// \u6E32\u67D3\u76F8\u5173



// \u753B\u5E03\u64CD\u4F5C\u76F8\u5173




// history \u76F8\u5173




// Tool\u76F8\u5173


// xflow-command


/** \u6CE8\u518CCommand Handler Class */
const registerGraphCommand = (register) => {
    // \u6570\u636E
    register(graph_meta_GraphMetaCommand);
    register(GraphLoadDataCommand);
    register(graph_save_data_GraphSaveDataCommand);
    // render
    register(graph_layout_GraphLayoutCommand);
    register(graph_render_GraphRenderCommand);
    register(GraphResizeCommand);
    // hisotry
    register(graph_history_undo_GraphHistoryUndoCommand);
    register(graph_history_redo_GraphHistoryRedoCommand);
    register(graph_history_toggle_GraphHistoryToggleCommand);
    register(GraphHistoryResetCommand);
    // xflow command
    register(graph_cmd_redo_GraphRedoCommand);
    register(graph_cmd_undo_GraphUndoCommand);
    // graph \u64CD\u4F5C
    register(GraphZoomCommand);
    register(graph_toggle_multi_select_GraphToggleMultiSelectCommand);
    register(graph_copy_GraphCopySelectionCommand);
    register(graph_paste_GraphPasteSelectionCommand);
    // tools
    register(graph_add_tool_GraphAddToolCommand);
    register(GraphDelToolCommand);
};
/** app onStart \u65F6, \u6CE8\u518C Command Hooks */
const graph_hookhubList = [
    // \u6570\u636E
    graph_meta_NsGraphMeta,
    graph_save_data_NsGraphSaveData,
    graph_load_data_NsGraphLoadData,
    // hisotry
    graph_history_undo_NsGraphHistoryUndo,
    graph_history_redo_NsGraphHistoryRedo,
    graph_history_reset_NsGraphHistoryReset,
    graph_history_toggle_NsGraphHistoryToggle,
    // render
    graph_layout_NsGraphLayout,
    graph_render_NsGraphRender,
    graph_resize_NsGraphResize,
    // xflow command
    graph_cmd_redo_NsRedoCmd,
    graph_cmd_undo_NsUndoCmd,
    // graph \u64CD\u4F5C
    graph_zoom_NsGraphZoom,
    graph_toggle_multi_select_NsGraphToggleMultiSelect,
    graph_copy_NsGraphCopySelection,
    graph_paste_NsGraphPasteSelection,
    // tools
    graph_add_tool_NsGraphAddTool,
    graph_del_tool_NsGraphDelTool,
];
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/edge/edge-add.js
var edge_add_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var edge_add_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var edge_add_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};




var edge_add_NsAddEdge;
(function (NsAddEdge) {
    /** Command: \u7528\u4E8E\u6CE8\u518Cnamed factory */
    NsAddEdge.command = XFlowEdgeCommands.ADD_EDGE;
    /** hookName */
    NsAddEdge.hookKey = 'addEdge';
    /** edge id \u7C7B\u578B */
    NsAddEdge.createEdgeId = (edge) => {
        return \`\${edge.source}:\${edge.sourcePortId}-\${edge.target}:\${edge.targetPortId}\`;
    };
})(edge_add_NsAddEdge || (edge_add_NsAddEdge = {}));
let edge_add_AddEdgeCommand = 
/** \u521B\u5EFA\u8282\u70B9\u547D\u4EE4 */
class AddEdgeCommand {
    constructor() {
        /** \u5904\u7406edgeConfig\u7684\u515C\u5E95\u903B\u8F91 */
        this.processEdgeConfig = (args, edge) => edge_add_awaiter(this, void 0, void 0, function* () {
            /** \u5904\u7406edgeConfig\u6CA1\u6709\u8FD4\u56DEid\u7684\u95EE\u9898 */
            if (!edge.id) {
                const { createIdService = edge_add_NsAddEdge.createEdgeId } = args;
                edge.id = yield createIdService(edge);
            }
            return edge;
        });
        /** \u6267\u884CCmd */
        this.execute = () => edge_add_awaiter(this, void 0, void 0, function* () {
            const { args, hooks: runtimeHook } = this.ctx.getArgs();
            const hooks = this.ctx.getHooks();
            const result = yield hooks.addEdge.call(
            /** \u6267\u884C hooks pipeline\u5904\u7406args */
            args, 
            /** \u6267\u884C callback */
            (handlerArgs) => edge_add_awaiter(this, void 0, void 0, function* () {
                const { cellFactory, createEdgeService, commandService } = handlerArgs;
                const edgeConfig = createEdgeService
                    ? yield createEdgeService(handlerArgs)
                    : handlerArgs.edgeConfig;
                const graph = yield this.ctx.getX6Graph();
                yield this.processEdgeConfig(handlerArgs, edgeConfig);
                let edgeCell;
                if (cellFactory) {
                    const cell = yield cellFactory(edgeConfig, this);
                    edgeCell = graph.addEdge(cell);
                }
                else {
                    edgeCell = graph.addEdge(Object.assign(Object.assign({}, edgeConfig), { 
                        /** \u7531\u4E8EX6\u7684\u5B9E\u73B0\u662FReact\u8282\u70B9\u6302\u5728label\u4E0A\u7684, \u6240\u4EE5\u5FC5\u987B\u8981\u7ED9label\u8BBE\u7F6E\u503C */
                        label: (edgeConfig === null || edgeConfig === void 0 ? void 0 : edgeConfig.label) || edgeConfig, data: Object.assign({}, edgeConfig) }));
                }
                /** \u521B\u5EFA undo */
                const undo = Disposable.create(() => {
                    commandService.executeCommand(XFlowEdgeCommands.DEL_EDGE.id, {
                        x6Edge: edgeCell,
                    });
                });
                /** add undo */
                this.ctx.addUndo(undo);
                return { edgeConfig: edgeConfig, edgeCell };
            }), runtimeHook);
            this.ctx.setResult(result);
            return this;
        });
        /** undo cmd */
        this.undo = () => edge_add_awaiter(this, void 0, void 0, function* () {
            this.ctx.undo();
            return this;
        });
        /** redo cmd */
        this.redo = () => edge_add_awaiter(this, void 0, void 0, function* () {
            if (!this.isUndoable) {
                yield this.execute();
            }
            return this;
        });
    }
    init() {
        this.ctx = this.contextProvider();
    }
    isUndoable() {
        return this.ctx.isUndoable();
    }
};
edge_add_decorate([
    Object(index_esm["inject"])(ICommandContextProvider),
    edge_add_metadata("design:type", Object)
], edge_add_AddEdgeCommand.prototype, "contextProvider", void 0);
edge_add_decorate([
    Object(index_esm["postConstruct"])(),
    edge_add_metadata("design:type", Function),
    edge_add_metadata("design:paramtypes", []),
    edge_add_metadata("design:returntype", void 0)
], edge_add_AddEdgeCommand.prototype, "init", null);
edge_add_AddEdgeCommand = edge_add_decorate([
    Object(index_esm["injectable"])({
        token: { token: ICommandHandler, named: edge_add_NsAddEdge.command.id },
    })
    /** \u521B\u5EFA\u8282\u70B9\u547D\u4EE4 */
], edge_add_AddEdgeCommand);

//# sourceMappingURL=edge-add.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/edge/edge-del.js
var edge_del_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var edge_del_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var edge_del_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};




var edge_del_NsDelEdge;
(function (NsDelEdge) {
    /** Command: \u7528\u4E8E\u6CE8\u518Cnamed factory */
    NsDelEdge.command = XFlowEdgeCommands.DEL_EDGE;
    /** hookName */
    NsDelEdge.hookKey = 'delEdge';
    let ErrEnum;
    (function (ErrEnum) {
        ErrEnum["EDGE_NOT_EXIST"] = "edge is not exist";
        ErrEnum["EDGE_INVALID_CELL"] = "this is not a valid cell";
        ErrEnum["X6_DELETE_FAILED"] = "x6 throw err when call delete edge";
        ErrEnum["SERVICE_REJECT"] = "service reject to delete";
    })(ErrEnum = NsDelEdge.ErrEnum || (NsDelEdge.ErrEnum = {}));
})(edge_del_NsDelEdge || (edge_del_NsDelEdge = {}));
let edge_del_DelEdgeCommand = 
/** \u521B\u5EFA\u8282\u70B9\u547D\u4EE4 */
class DelEdgeCommand {
    constructor() {
        /** \u6267\u884CCmd */
        this.execute = () => edge_del_awaiter(this, void 0, void 0, function* () {
            const { args, hooks: runtimeHook } = this.ctx.getArgs();
            const hooks = this.ctx.getHooks();
            const result = yield hooks.delEdge.call(
            /** \u6267\u884C hooks pipeline\u5904\u7406args */
            args, 
            /** \u6267\u884C callback */
            (handlerArgs) => edge_del_awaiter(this, void 0, void 0, function* () {
                const { edgeConfig, x6Edge, deleteEdgeService, commandService } = handlerArgs;
                let edgeCell = x6Edge;
                /** \u6CA1\u6709edgeCell\u65F6\u67E5\u627Ecell */
                if (!edgeCell) {
                    edgeCell = yield this.findEdgeById(edgeConfig);
                    if (!edgeCell) {
                        console.error(edge_del_NsDelEdge.ErrEnum.EDGE_NOT_EXIST, edgeConfig);
                        return { err: edge_del_NsDelEdge.ErrEnum.EDGE_NOT_EXIST };
                    }
                }
                const isEdge = edgeCell && edgeCell.isEdge();
                if (!isEdge) {
                    console.error(edge_del_NsDelEdge.ErrEnum.EDGE_NOT_EXIST, edgeCell);
                    return { err: edge_del_NsDelEdge.ErrEnum.EDGE_NOT_EXIST };
                }
                if (deleteEdgeService) {
                    /** \u9700\u8981\u8BF7\u6C42\u63A5\u53E3 */
                    const canDelete = yield deleteEdgeService(handlerArgs);
                    if (!canDelete) {
                        return { err: edge_del_NsDelEdge.ErrEnum.SERVICE_REJECT };
                    }
                }
                try {
                    const targetCell = edgeCell.getTargetCell();
                    const sourceCell = edgeCell.getSourceCell();
                    const sourcePortId = edgeCell.getSourcePortId();
                    const targetPortId = edgeCell.getTargetPortId();
                    const source = sourceCell.id;
                    const target = targetCell.id;
                    /** \u6267\u884Cremove */
                    edgeCell.remove();
                    /** \u521B\u5EFA undo */
                    const undo = Disposable.create(() => {
                        commandService.executeCommand(XFlowEdgeCommands.ADD_EDGE.id, {
                            edgeConfig: { source, target, sourcePortId, targetPortId },
                        });
                    });
                    /** add undo */
                    this.ctx.addUndo(undo);
                    return {
                        err: null,
                        edgeConfig: { source, target, sourcePortId, targetPortId },
                        targetCell,
                        sourceCell,
                        sourcePortId,
                        targetPortId,
                    };
                }
                catch (error) {
                    console.error(edge_del_NsDelEdge.ErrEnum.X6_DELETE_FAILED, error);
                    return { err: edge_del_NsDelEdge.ErrEnum.X6_DELETE_FAILED };
                }
            }), runtimeHook);
            this.ctx.setResult(result);
            return this;
        });
        this.findEdgeById = (edge) => edge_del_awaiter(this, void 0, void 0, function* () {
            const graph = yield this.ctx.getX6Graph();
            const cell = graph.getCellById(edge.id);
            return cell;
        });
        /** undo cmd */
        this.undo = () => edge_del_awaiter(this, void 0, void 0, function* () {
            this.ctx.undo();
            return this;
        });
        /** redo cmd */
        this.redo = () => edge_del_awaiter(this, void 0, void 0, function* () {
            if (!this.isUndoable) {
                yield this.execute();
            }
            return this;
        });
    }
    init() {
        this.ctx = this.contextProvider();
    }
    isUndoable() {
        return this.ctx.isUndoable();
    }
};
edge_del_decorate([
    Object(index_esm["inject"])(ICommandContextProvider),
    edge_del_metadata("design:type", Object)
], edge_del_DelEdgeCommand.prototype, "contextProvider", void 0);
edge_del_decorate([
    Object(index_esm["postConstruct"])(),
    edge_del_metadata("design:type", Function),
    edge_del_metadata("design:paramtypes", []),
    edge_del_metadata("design:returntype", void 0)
], edge_del_DelEdgeCommand.prototype, "init", null);
edge_del_DelEdgeCommand = edge_del_decorate([
    Object(index_esm["injectable"])({
        token: { token: ICommandHandler, named: edge_del_NsDelEdge.command.id },
    })
    /** \u521B\u5EFA\u8282\u70B9\u547D\u4EE4 */
], edge_del_DelEdgeCommand);

//# sourceMappingURL=edge-del.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/edge/edge-update.js
var edge_update_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var edge_update_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var edge_update_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};



var edge_update_NsUpdateEdge;
(function (NsUpdateEdge) {
    NsUpdateEdge.command = XFlowEdgeCommands.UPDATE_EDGE;
    NsUpdateEdge.hookKey = 'updateEdge';
})(edge_update_NsUpdateEdge || (edge_update_NsUpdateEdge = {}));
let UpdateEdgeCommand = 
/** \u8FDE\u7EBF\u66F4\u65B0\u547D\u4EE4 */
class UpdateEdgeCommand {
    constructor() {
        this.execute = () => edge_update_awaiter(this, void 0, void 0, function* () {
            const { args, hooks: runtimeHook } = this.ctx.getArgs();
            const hooks = this.ctx.getHooks();
            const result = yield hooks.updateEdge.call(args, (handlerArgs) => edge_update_awaiter(this, void 0, void 0, function* () {
                const x6Graph = yield this.ctx.getX6Graph();
                const { updateEdgeService } = handlerArgs;
                const edgeConfig = updateEdgeService
                    ? yield updateEdgeService(handlerArgs)
                    : handlerArgs === null || handlerArgs === void 0 ? void 0 : handlerArgs.edgeConfig;
                const x6Edge = x6Graph === null || x6Graph === void 0 ? void 0 : x6Graph.getCellById(edgeConfig === null || edgeConfig === void 0 ? void 0 : edgeConfig.id);
                x6Edge === null || x6Edge === void 0 ? void 0 : x6Edge.setData(edgeConfig);
                x6Edge === null || x6Edge === void 0 ? void 0 : x6Edge.setLabelAt(0, (edgeConfig === null || edgeConfig === void 0 ? void 0 : edgeConfig.label) || edgeConfig);
                // \u652F\u6301edgeAttrs
                if (edgeConfig.attrs) {
                    x6Edge.setAttrs(edgeConfig.attrs);
                }
                return {
                    edgeConfig,
                    edgeCell: x6Edge,
                };
            }), runtimeHook);
            this.ctx.setResult(result);
            return this;
        });
        this.undo = () => edge_update_awaiter(this, void 0, void 0, function* () {
            this.ctx.undo();
            return this;
        });
        this.redo = () => edge_update_awaiter(this, void 0, void 0, function* () {
            if (!this.ctx.isUndoable) {
                yield this.execute();
            }
            return this;
        });
    }
    init() {
        this.ctx = this.contextProvider();
    }
    isUndoable() {
        return this.ctx.isUndoable();
    }
};
edge_update_decorate([
    Object(index_esm["inject"])(ICommandContextProvider),
    edge_update_metadata("design:type", Object)
], UpdateEdgeCommand.prototype, "contextProvider", void 0);
edge_update_decorate([
    Object(index_esm["postConstruct"])(),
    edge_update_metadata("design:type", Function),
    edge_update_metadata("design:paramtypes", []),
    edge_update_metadata("design:returntype", void 0)
], UpdateEdgeCommand.prototype, "init", null);
UpdateEdgeCommand = edge_update_decorate([
    Object(index_esm["injectable"])({
        token: { token: ICommandHandler, named: edge_update_NsUpdateEdge.command.id },
    })
    /** \u8FDE\u7EBF\u66F4\u65B0\u547D\u4EE4 */
], UpdateEdgeCommand);

//# sourceMappingURL=edge-update.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/edge/edge-highlight.js
var edge_highlight_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var edge_highlight_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var edge_highlight_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};



var edge_highlight_NsHighlightEdge;
(function (NsHighlightEdge) {
    NsHighlightEdge.command = XFlowEdgeCommands.HIGHLIGHT_EDGE;
    NsHighlightEdge.hookKey = 'highlightEdge';
})(edge_highlight_NsHighlightEdge || (edge_highlight_NsHighlightEdge = {}));
let edge_highlight_HighlightEdgeCommand = 
/** \u8FDE\u7EBF\u9AD8\u4EAE */
class HighlightEdgeCommand {
    constructor() {
        this.execute = () => edge_highlight_awaiter(this, void 0, void 0, function* () {
            const { args, hooks: runtimeHook } = this.ctx.getArgs();
            const hooks = this.ctx.getHooks();
            const result = yield hooks.highlightEdge.call(args, (handlerArgs) => edge_highlight_awaiter(this, void 0, void 0, function* () {
                var _a, _b;
                const x6Graph = yield this.ctx.getX6Graph();
                const { edgeId, strokeColor, strokeWidth } = handlerArgs;
                const allEdges = x6Graph.getEdges();
                /** \u9700\u8981\u9AD8\u4EAE\u7684\u8FDE\u7EBF */
                const highlightEdge = allEdges.find(edge => edge.id === edgeId);
                /** \u4E0D\u9700\u8981\u9AD8\u4EAE\u7684\u8FDE\u7EBF */
                const otherEdges = allEdges.filter(edge => edge.id !== edgeId);
                if (!highlightEdge) {
                    console.error(edgeId, 'this edgeId is not exist');
                }
                else {
                    const oldAttr = highlightEdge.getAttrs();
                    if (((_a = oldAttr === null || oldAttr === void 0 ? void 0 : oldAttr.line) === null || _a === void 0 ? void 0 : _a.stroke) === strokeColor && ((_b = oldAttr === null || oldAttr === void 0 ? void 0 : oldAttr.line) === null || _b === void 0 ? void 0 : _b.strokeWidth) === strokeWidth) {
                        /** \u8FDE\u7EBF\u5DF2\u7ECF\u9AD8\u4EAE, \u4E0D\u9700\u8981\u91CD\u590D\u64CD\u4F5C */
                    }
                    else {
                        /** \u9AD8\u4EAE\u9009\u4E2D\u7684\u8FDE\u7EBF */
                        highlightEdge === null || highlightEdge === void 0 ? void 0 : highlightEdge.setAttrs({
                            line: {
                                stroke: strokeColor,
                                strokeWidth: strokeWidth || 2,
                            },
                        });
                        /** \u5176\u4F59\u8FDE\u7EBF\u53D6\u6D88\u9AD8\u4EAE\u72B6\u6001 */
                        otherEdges.forEach(edge => {
                            edge.setAttrs({
                                line: oldAttr === null || oldAttr === void 0 ? void 0 : oldAttr.line,
                            });
                        });
                        /** \u9AD8\u4EAE\u7684\u8FDE\u7EBF\u9ED8\u8BA4\u524D\u7F6E\u5728\u753B\u5E03\u6700\u524D\u65B9 */
                        handlerArgs.commandService.executeCommand(XFlowEdgeCommands.FRONT_EDGE.id, {
                            edgeId,
                        });
                    }
                }
                return {};
            }), runtimeHook);
            this.ctx.setResult(result);
            return this;
        });
        this.undo = () => edge_highlight_awaiter(this, void 0, void 0, function* () {
            this.ctx.undo();
            return this;
        });
        this.redo = () => edge_highlight_awaiter(this, void 0, void 0, function* () {
            if (!this.ctx.isUndoable) {
                yield this.execute();
            }
            return this;
        });
    }
    init() {
        this.ctx = this.contextProvider();
    }
    isUndoable() {
        return this.ctx.isUndoable();
    }
};
edge_highlight_decorate([
    Object(index_esm["inject"])(ICommandContextProvider),
    edge_highlight_metadata("design:type", Object)
], edge_highlight_HighlightEdgeCommand.prototype, "contextProvider", void 0);
edge_highlight_decorate([
    Object(index_esm["postConstruct"])(),
    edge_highlight_metadata("design:type", Function),
    edge_highlight_metadata("design:paramtypes", []),
    edge_highlight_metadata("design:returntype", void 0)
], edge_highlight_HighlightEdgeCommand.prototype, "init", null);
edge_highlight_HighlightEdgeCommand = edge_highlight_decorate([
    Object(index_esm["injectable"])({
        token: { token: ICommandHandler, named: edge_highlight_NsHighlightEdge.command.id },
    })
    /** \u8FDE\u7EBF\u9AD8\u4EAE */
], edge_highlight_HighlightEdgeCommand);

//# sourceMappingURL=edge-highlight.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/edge/edge-front.js
var edge_front_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var edge_front_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var edge_front_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};




var edge_front_NsFrontEdge;
(function (NsFrontEdge) {
    NsFrontEdge.command = XFlowEdgeCommands.FRONT_EDGE;
    NsFrontEdge.hookKey = 'frontEdge';
})(edge_front_NsFrontEdge || (edge_front_NsFrontEdge = {}));
let edge_front_FrontEdgeCommand = 
/** \u8FB9\u524D\u7F6E\u547D\u4EE4(\u59CB\u7EC8\u5728\u753B\u5E03\u6700\u524D\u65B9) */
class FrontEdgeCommand {
    constructor() {
        this.execute = () => edge_front_awaiter(this, void 0, void 0, function* () {
            const { args, hooks: runtimeHook } = this.ctx.getArgs();
            const hooks = this.ctx.getHooks();
            const result = yield hooks.frontEdge.call(args, (handlerArgs) => edge_front_awaiter(this, void 0, void 0, function* () {
                const x6Graph = yield this.ctx.getX6Graph();
                const { edgeId } = handlerArgs;
                const x6Edge = x6Graph === null || x6Graph === void 0 ? void 0 : x6Graph.getCellById(edgeId);
                if (!x6Edge) {
                    console.error(edgeId, 'this edgeId is not exist');
                }
                else {
                    x6Edge.toFront();
                    /** frontEdge undo */
                    this.ctx.addUndo(Disposable.create(() => edge_front_awaiter(this, void 0, void 0, function* () {
                        handlerArgs.commandService.executeCommand(XFlowEdgeCommands.BACK_EDGE.id, {
                            edgeId,
                        });
                    })));
                }
                return {};
            }), runtimeHook);
            this.ctx.setResult(result);
            return this;
        });
        this.undo = () => edge_front_awaiter(this, void 0, void 0, function* () {
            this.ctx.undo();
            return this;
        });
        this.redo = () => edge_front_awaiter(this, void 0, void 0, function* () {
            if (!this.ctx.isUndoable) {
                yield this.execute();
            }
            return this;
        });
    }
    init() {
        this.ctx = this.contextProvider();
    }
    isUndoable() {
        return this.ctx.isUndoable();
    }
};
edge_front_decorate([
    Object(index_esm["inject"])(ICommandContextProvider),
    edge_front_metadata("design:type", Object)
], edge_front_FrontEdgeCommand.prototype, "contextProvider", void 0);
edge_front_decorate([
    Object(index_esm["postConstruct"])(),
    edge_front_metadata("design:type", Function),
    edge_front_metadata("design:paramtypes", []),
    edge_front_metadata("design:returntype", void 0)
], edge_front_FrontEdgeCommand.prototype, "init", null);
edge_front_FrontEdgeCommand = edge_front_decorate([
    Object(index_esm["injectable"])({
        token: { token: ICommandHandler, named: edge_front_NsFrontEdge.command.id },
    })
    /** \u8FB9\u524D\u7F6E\u547D\u4EE4(\u59CB\u7EC8\u5728\u753B\u5E03\u6700\u524D\u65B9) */
], edge_front_FrontEdgeCommand);

//# sourceMappingURL=edge-front.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/edge/edge-back.js
var edge_back_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var edge_back_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var edge_back_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};




var edge_back_NsBackEdge;
(function (NsBackEdge) {
    NsBackEdge.command = XFlowEdgeCommands.BACK_EDGE;
    NsBackEdge.hookKey = 'frontEdge';
})(edge_back_NsBackEdge || (edge_back_NsBackEdge = {}));
let edge_back_BackEdgeCommand = 
/** \u8FB9\u540E\u7F6E\u547D\u4EE4(\u59CB\u7EC8\u5728\u753B\u5E03\u6700\u540E\u65B9) */
class BackEdgeCommand {
    constructor() {
        this.execute = () => edge_back_awaiter(this, void 0, void 0, function* () {
            const { args, hooks: runtimeHook } = this.ctx.getArgs();
            const hooks = this.ctx.getHooks();
            const result = yield hooks.frontEdge.call(args, (handlerArgs) => edge_back_awaiter(this, void 0, void 0, function* () {
                const x6Graph = yield this.ctx.getX6Graph();
                const { edgeId } = handlerArgs;
                const x6Edge = x6Graph === null || x6Graph === void 0 ? void 0 : x6Graph.getCellById(edgeId);
                if (!x6Edge) {
                    console.error(edgeId, 'this edgeId is not exist');
                }
                else {
                    x6Edge.toBack();
                    /** frontEdge undo */
                    this.ctx.addUndo(Disposable.create(() => edge_back_awaiter(this, void 0, void 0, function* () {
                        handlerArgs.commandService.executeCommand(XFlowEdgeCommands.FRONT_EDGE.id, {
                            edgeId,
                        });
                    })));
                }
                return {};
            }), runtimeHook);
            this.ctx.setResult(result);
            return this;
        });
        this.undo = () => edge_back_awaiter(this, void 0, void 0, function* () {
            this.ctx.undo();
            return this;
        });
        this.redo = () => edge_back_awaiter(this, void 0, void 0, function* () {
            if (!this.ctx.isUndoable) {
                yield this.execute();
            }
            return this;
        });
    }
    init() {
        this.ctx = this.contextProvider();
    }
    isUndoable() {
        return this.ctx.isUndoable();
    }
};
edge_back_decorate([
    Object(index_esm["inject"])(ICommandContextProvider),
    edge_back_metadata("design:type", Object)
], edge_back_BackEdgeCommand.prototype, "contextProvider", void 0);
edge_back_decorate([
    Object(index_esm["postConstruct"])(),
    edge_back_metadata("design:type", Function),
    edge_back_metadata("design:paramtypes", []),
    edge_back_metadata("design:returntype", void 0)
], edge_back_BackEdgeCommand.prototype, "init", null);
edge_back_BackEdgeCommand = edge_back_decorate([
    Object(index_esm["injectable"])({
        token: { token: ICommandHandler, named: edge_back_NsBackEdge.command.id },
    })
    /** \u8FB9\u540E\u7F6E\u547D\u4EE4(\u59CB\u7EC8\u5728\u753B\u5E03\u6700\u540E\u65B9) */
], edge_back_BackEdgeCommand);

//# sourceMappingURL=edge-back.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/edge/index.js
/** commands */






/** \u6CE8\u518CCommand Handler Class */
const registerEdgeCommand = (register) => {
    register(edge_add_AddEdgeCommand);
    register(edge_del_DelEdgeCommand);
    register(UpdateEdgeCommand);
    register(edge_highlight_HighlightEdgeCommand);
    register(edge_front_FrontEdgeCommand);
    register(edge_back_BackEdgeCommand);
};
/** app onStart \u65F6, \u6CE8\u518C Command Hooks */
const edge_hookhubList = [edge_add_NsAddEdge, edge_del_NsDelEdge, edge_update_NsUpdateEdge, edge_highlight_NsHighlightEdge, edge_front_NsFrontEdge, edge_back_NsBackEdge];
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/group/group-add.js
var group_add_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var group_add_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var group_add_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};





var group_add_NsAddGroup;
(function (NsAddGroup) {
    /** Command: \u7528\u4E8E\u6CE8\u518Cnamed factory */
    NsAddGroup.command = XFlowGroupCommands.ADD_GROUP;
    /** hookName */
    NsAddGroup.hookKey = 'addGroup';
    NsAddGroup.GROUP_PADDING = 12;
    NsAddGroup.GROUP_HEADER_HEIGHT = 40;
})(group_add_NsAddGroup || (group_add_NsAddGroup = {}));
let group_add_AddGroupCommand = 
/** \u521B\u5EFA\u8282\u70B9\u547D\u4EE4 */
class AddGroupCommand {
    constructor() {
        this.getBBox = (node, nodeConfig, graph) => {
            const { groupHeaderHeight = group_add_NsAddGroup.GROUP_HEADER_HEIGHT, groupPadding = group_add_NsAddGroup.GROUP_PADDING, } = nodeConfig;
            const bbox = graph.getCellsBBox(node.children);
            bbox.moveAndExpand({
                x: -groupPadding,
                y: -(groupPadding + groupHeaderHeight),
                width: groupPadding * 2,
                height: groupPadding * 2 + groupHeaderHeight,
            });
            return bbox;
        };
        /** \u6267\u884CCmd */
        this.execute = () => group_add_awaiter(this, void 0, void 0, function* () {
            const ctx = this.contextProvider();
            const { args, hooks: runtimeHook } = ctx.getArgs();
            const hooks = ctx.getHooks();
            const result = yield hooks.addGroup.call(args, (handlerArgs) => group_add_awaiter(this, void 0, void 0, function* () {
                const { nodeConfig, createService: createGroupService, cellFactory, commandService, } = handlerArgs;
                const graph = yield ctx.getX6Graph();
                const res = yield commandService.executeCommand(XFlowNodeCommands.ADD_NODE.id, {
                    cellFactory,
                    createNodeService: createGroupService,
                    nodeConfig,
                });
                const { nodeCell: groupCell } = res
                    .contextProvider()
                    .getResult();
                const { id: groupId } = groupCell;
                const { groupChildren } = nodeConfig;
                if (groupChildren.length) {
                    groupChildren.forEach(nodeId => {
                        const child = graph.getCellById(nodeId);
                        if (child) {
                            child.setData(Object.assign(Object.assign({}, child.getData()), { group: groupId, isCollapsed: false }));
                            child.prop('group', groupId);
                            groupCell.addChild(child);
                            graph.unselect(child);
                        }
                    });
                    const groupBBox = this.getBBox(groupCell, nodeConfig, graph);
                    groupCell.position(groupBBox.x, groupBBox.y);
                    groupCell.size(groupBBox.width, groupBBox.height);
                    groupCell.setZIndex(0);
                    groupCell.prop('isGroup', true);
                    groupCell.setData(Object.assign(Object.assign({}, groupCell.getData()), { width: groupBBox.width, height: groupBBox.height, groupChildrenSize: { width: groupBBox.width, height: groupBBox.height }, x: groupBBox.x, y: groupBBox.y, isGroup: true }));
                    graph.select(groupCell);
                }
                if (nodeConfig.isCollapsed) {
                    yield commandService.executeCommand(XFlowGroupCommands.COLLAPSE_GROUP.id, {
                        nodeId: nodeConfig.id,
                        isCollapsed: nodeConfig.isCollapsed,
                    });
                }
                /** add undo: delete node */
                ctx.addUndo(Disposable.create(() => group_add_awaiter(this, void 0, void 0, function* () {
                    commandService.executeCommand(XFlowGroupCommands.DEL_GROUP.id, {
                        nodeConfig,
                    });
                })));
                return { nodeConfig: nodeConfig, nodeCell: groupCell };
            }), runtimeHook);
            ctx.setResult(result);
            return this;
        });
        /** undo cmd */
        this.undo = () => group_add_awaiter(this, void 0, void 0, function* () {
            const ctx = this.contextProvider();
            if (this.isUndoable()) {
                ctx.undo();
            }
            return this;
        });
        /** redo cmd */
        this.redo = () => group_add_awaiter(this, void 0, void 0, function* () {
            if (!this.isUndoable()) {
                yield this.execute();
            }
            return this;
        });
    }
    isUndoable() {
        const ctx = this.contextProvider();
        return ctx.isUndoable();
    }
};
group_add_decorate([
    Object(index_esm["inject"])(ICommandContextProvider),
    group_add_metadata("design:type", Object)
], group_add_AddGroupCommand.prototype, "contextProvider", void 0);
group_add_AddGroupCommand = group_add_decorate([
    Object(index_esm["injectable"])({
        token: { token: ICommandHandler, named: group_add_NsAddGroup.command.id },
    })
    /** \u521B\u5EFA\u8282\u70B9\u547D\u4EE4 */
], group_add_AddGroupCommand);

//# sourceMappingURL=group-add.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/group/group-del.js
var group_del_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var group_del_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var group_del_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};





var group_del_NsDelGroup;
(function (NsDelGroup) {
    /** Command: \u7528\u4E8E\u6CE8\u518Cnamed factory */
    NsDelGroup.command = XFlowGroupCommands.DEL_GROUP;
    /** hookName */
    NsDelGroup.hookKey = 'delGroup';
})(group_del_NsDelGroup || (group_del_NsDelGroup = {}));
let group_del_DelGroupCommand = 
/** \u521B\u5EFA\u8282\u70B9\u547D\u4EE4 */
class DelGroupCommand {
    constructor() {
        /** \u6267\u884CCmd */
        this.execute = () => group_del_awaiter(this, void 0, void 0, function* () {
            const ctx = this.contextProvider();
            const { args, hooks: runtimeHook } = ctx.getArgs();
            const hooks = ctx.getHooks();
            const result = yield hooks.delGroup.call(args, (handlerArgs) => group_del_awaiter(this, void 0, void 0, function* () {
                const graph = yield ctx.getX6Graph();
                const { nodeConfig, commandService, deleteService: deleteGroupService } = handlerArgs;
                const { id } = nodeConfig;
                const node = graph.getCellById(id);
                if (deleteGroupService) {
                    const canDel = yield deleteGroupService(handlerArgs);
                    if (!canDel)
                        return { err: 'service rejected' };
                }
                if (!node) {
                    return { err: 'target node is not exist' };
                }
                // \u4E0D\u662FGroup\u7684\u8282\u70B9\u4E0D\u80FD\u89E3\u6563
                if (node.getProp('isGroup') !== true) {
                    return { err: 'target node is not group' };
                }
                const { isCollapsed } = node.getData();
                if (isCollapsed) {
                    yield commandService.executeCommand(XFlowGroupCommands.COLLAPSE_GROUP.id, {
                        nodeId: node.id,
                        isCollapsed: false,
                        collapsedSize: { width: 0, height: 0 },
                    });
                }
                const childrens = node.getChildren();
                if (childrens) {
                    childrens.forEach(child => {
                        node.unembed(child);
                        child.prop('group', '');
                        child.setData(Object.assign(Object.assign({}, child.getData()), { group: '' }));
                    });
                }
                yield commandService.executeCommand(XFlowNodeCommands.DEL_NODE.id, {
                    nodeConfig,
                });
                /** add undo: delete node */
                ctx.addUndo(Disposable.create(() => group_del_awaiter(this, void 0, void 0, function* () {
                    commandService.executeCommand(XFlowGroupCommands.ADD_GROUP.id, {
                        nodeConfig,
                    });
                })));
                return { err: null };
            }), runtimeHook);
            ctx.setResult(result);
            return this;
        });
        /** undo cmd */
        this.undo = () => group_del_awaiter(this, void 0, void 0, function* () {
            const ctx = this.contextProvider();
            if (this.isUndoable()) {
                ctx.undo();
            }
            return this;
        });
        /** redo cmd */
        this.redo = () => group_del_awaiter(this, void 0, void 0, function* () {
            if (!this.isUndoable()) {
                yield this.execute();
            }
            return this;
        });
    }
    isUndoable() {
        const ctx = this.contextProvider();
        return ctx.isUndoable();
    }
};
group_del_decorate([
    Object(index_esm["inject"])(ICommandContextProvider),
    group_del_metadata("design:type", Object)
], group_del_DelGroupCommand.prototype, "contextProvider", void 0);
group_del_DelGroupCommand = group_del_decorate([
    Object(index_esm["injectable"])({
        token: { token: ICommandHandler, named: group_del_NsDelGroup.command.id },
    })
    /** \u521B\u5EFA\u8282\u70B9\u547D\u4EE4 */
], group_del_DelGroupCommand);

//# sourceMappingURL=group-del.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/group/group-init.js
var group_init_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var group_init_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var group_init_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};




var group_init_NsInitGroup;
(function (NsInitGroup) {
    /** Command: \u7528\u4E8E\u6CE8\u518Cnamed factory */
    NsInitGroup.command = XFlowGroupCommands.INIT_GROUP;
    /** hookName */
    NsInitGroup.hookKey = 'initGroup';
})(group_init_NsInitGroup || (group_init_NsInitGroup = {}));
let group_init_InitGroupCommand = 
/** \u521B\u5EFA\u8282\u70B9\u547D\u4EE4 */
class InitGroupCommand {
    constructor() {
        /** \u6267\u884CCmd */
        this.execute = () => group_init_awaiter(this, void 0, void 0, function* () {
            const ctx = this.contextProvider();
            const { args, hooks: runtimeHook } = ctx.getArgs();
            const hooks = ctx.getHooks();
            const result = yield hooks.initGroup.call(args, (handlerArgs) => group_init_awaiter(this, void 0, void 0, function* () {
                const { graphData, commandService } = handlerArgs;
                const graph = yield ctx.getX6Graph();
                const { nodes } = graphData;
                const groupMap = {};
                nodes.forEach(node => {
                    const { id, group } = node;
                    if (group) {
                        if (groupMap[group]) {
                            groupMap[group].push(id);
                        }
                        else {
                            groupMap[group] = [id];
                        }
                    }
                });
                Object.keys(groupMap).forEach((groupId) => group_init_awaiter(this, void 0, void 0, function* () {
                    const groupNode = graph.getCellById(groupId);
                    const groupData = groupNode.getData();
                    const childrenIds = groupMap[groupId] || [];
                    // \u66F4\u65B0props
                    groupNode.prop('isGroup', true);
                    groupNode.setData(Object.assign(Object.assign({}, groupData), { isGroup: true, groupChildren: childrenIds }));
                    childrenIds.forEach(childId => {
                        const child = graph.getCellById(childId);
                        groupNode.embed(child);
                    });
                    // Group\u7F6E\u4E8E\u5E95\u5C42
                    groupNode.toBack();
                    // collapse
                    const { isCollapsed, groupCollapsedSize } = groupData;
                    if (isCollapsed) {
                        const collapsedSize = handlerArgs.collapsedSize || groupCollapsedSize || XFLOW_GROUP_DEFAULT_COLLAPSED_SIZE;
                        yield commandService.executeCommand(XFlowGroupCommands.COLLAPSE_GROUP.id, {
                            collapsedSize,
                            isCollapsed: true,
                            nodeId: groupNode.id,
                        });
                    }
                }));
                return {};
            }), runtimeHook);
            ctx.setResult(result);
            return this;
        });
        /** undo cmd */
        this.undo = () => group_init_awaiter(this, void 0, void 0, function* () {
            const ctx = this.contextProvider();
            if (this.isUndoable()) {
                ctx.undo();
            }
            return this;
        });
        /** redo cmd */
        this.redo = () => group_init_awaiter(this, void 0, void 0, function* () {
            if (!this.isUndoable()) {
                yield this.execute();
            }
            return this;
        });
    }
    isUndoable() {
        const ctx = this.contextProvider();
        return ctx.isUndoable();
    }
};
group_init_decorate([
    Object(index_esm["inject"])(ICommandContextProvider),
    group_init_metadata("design:type", Object)
], group_init_InitGroupCommand.prototype, "contextProvider", void 0);
group_init_InitGroupCommand = group_init_decorate([
    Object(index_esm["injectable"])({
        token: { token: ICommandHandler, named: group_init_NsInitGroup.command.id },
    })
    /** \u521B\u5EFA\u8282\u70B9\u547D\u4EE4 */
], group_init_InitGroupCommand);

//# sourceMappingURL=group-init.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/group/group-toggle-collapse.js
var group_toggle_collapse_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var group_toggle_collapse_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var group_toggle_collapse_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};





var group_toggle_collapse_NsCollapseGroup;
(function (NsCollapseGroup) {
    NsCollapseGroup.command = XFlowGroupCommands.COLLAPSE_GROUP;
    NsCollapseGroup.hookKey = 'collapseGroup';
})(group_toggle_collapse_NsCollapseGroup || (group_toggle_collapse_NsCollapseGroup = {}));
let group_toggle_collapse_CollapseGroupCommand = 
/** \u6DFB\u52A0\u5B50\u8282\u70B9\u547D\u4EE4 */
class CollapseGroupCommand {
    constructor() {
        this.toggleVisible = (cells, visible, graph) => {
            cells.forEach(cell => {
                const view = graph.findViewByCell(cell).container;
                view.style.visibility = visible ? 'visible' : 'hidden';
            });
        };
        this.toggleCollapse = (groupNode, graph, args) => {
            const childrens = groupNode.getChildren().filter(n => n.isNode());
            const groupData = groupNode.getData();
            const { isCollapsed, gap = 0 } = args;
            if (isCollapsed) {
                const collapsedSize = args.collapsedSize || groupData.groupCollapsedSize || XFLOW_GROUP_DEFAULT_COLLAPSED_SIZE;
                groupNode.prop('previousSize', groupNode.size());
                groupNode.size(collapsedSize);
            }
            else {
                groupNode.size(groupNode.prop('previousSize'));
            }
            if (childrens) {
                childrens.forEach(item => {
                    const position = groupNode.position();
                    const innerEdges = graph.getConnectedEdges(item).filter(edge => {
                        const sourceNode = edge.getSourceNode();
                        const targetNode = edge.getTargetNode();
                        return childrens.includes(sourceNode) && childrens.includes(targetNode);
                    });
                    if (isCollapsed) {
                        this.toggleVisible([item, ...innerEdges], false, graph);
                        item.prop('previousSize', item.size());
                        item.prop('previousRelativePosition', item.position({ relative: true }));
                        item.position(position.x + gap, position.y + gap);
                        const size = groupNode.size();
                        item.size({
                            width: size.width - gap * 2,
                            height: size.height - gap * 2,
                        });
                    }
                    else {
                        this.toggleVisible([item, ...innerEdges], true, graph);
                        const pos = item.prop('previousRelativePosition');
                        const size = item.prop('previousSize');
                        item.position(pos.x, pos.y, { relative: true });
                        item.size(size);
                    }
                });
            }
            groupNode.prop('isCollapsed', isCollapsed);
            groupNode.setData(Object.assign(Object.assign({}, groupNode.getData()), { isCollapsed }));
        };
        this.execute = () => group_toggle_collapse_awaiter(this, void 0, void 0, function* () {
            const { args, hooks: runtimeHook } = this.ctx.getArgs();
            const hooks = this.ctx.getHooks();
            const result = yield hooks.collapseGroup.call(args, (handlerArgs) => group_toggle_collapse_awaiter(this, void 0, void 0, function* () {
                const x6Graph = yield this.ctx.getX6Graph();
                const node = x6Graph.getCellById(args.nodeId);
                const { toggleService } = handlerArgs;
                if (toggleService) {
                    const canToggle = yield toggleService(handlerArgs);
                    if (!canToggle)
                        return { err: 'service rejected' };
                }
                if (node) {
                    this.toggleCollapse(node, x6Graph, args);
                    this.ctx.addUndo(Disposable.create(() => group_toggle_collapse_awaiter(this, void 0, void 0, function* () {
                        if (node) {
                            this.toggleCollapse(node, x6Graph, Object.assign(args, { isCollapsed: !args.isCollapsed }));
                        }
                    })));
                }
                return { err: null };
            }), runtimeHook);
            this.ctx.setResult(result);
            return this;
        });
        this.undo = () => group_toggle_collapse_awaiter(this, void 0, void 0, function* () {
            this.ctx.undo();
            return this;
        });
        this.redo = () => group_toggle_collapse_awaiter(this, void 0, void 0, function* () {
            if (!this.ctx.isUndoable) {
                yield this.execute();
            }
            return this;
        });
    }
    init() {
        this.ctx = this.contextProvider();
    }
    isUndoable() {
        return this.ctx.isUndoable();
    }
};
group_toggle_collapse_decorate([
    Object(index_esm["inject"])(ICommandContextProvider),
    group_toggle_collapse_metadata("design:type", Object)
], group_toggle_collapse_CollapseGroupCommand.prototype, "contextProvider", void 0);
group_toggle_collapse_decorate([
    Object(index_esm["postConstruct"])(),
    group_toggle_collapse_metadata("design:type", Function),
    group_toggle_collapse_metadata("design:paramtypes", []),
    group_toggle_collapse_metadata("design:returntype", void 0)
], group_toggle_collapse_CollapseGroupCommand.prototype, "init", null);
group_toggle_collapse_CollapseGroupCommand = group_toggle_collapse_decorate([
    Object(index_esm["injectable"])({
        token: { token: ICommandHandler, named: group_toggle_collapse_NsCollapseGroup.command.id },
    })
    /** \u6DFB\u52A0\u5B50\u8282\u70B9\u547D\u4EE4 */
], group_toggle_collapse_CollapseGroupCommand);

//# sourceMappingURL=group-toggle-collapse.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/group/index.js




/** \u6CE8\u518CCommand Handler Class */
const registerGroupCommand = (register) => {
    register(group_add_AddGroupCommand);
    register(group_del_DelGroupCommand);
    register(group_init_InitGroupCommand);
    register(group_toggle_collapse_CollapseGroupCommand);
};
/** app onStart \u65F6, \u6CE8\u518C Command Hooks */
const group_hookhubList = [group_add_NsAddGroup, group_del_NsDelGroup, group_init_NsInitGroup, group_toggle_collapse_NsCollapseGroup];
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/models/update-model.js
var update_model_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var update_model_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var update_model_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};





var update_model_NsUpdateModelCommand;
(function (NsUpdateModelCommand) {
    /** Command: \u7528\u4E8E\u6CE8\u518Cnamed factory */
    NsUpdateModelCommand.command = XFlowModelCommands.UPDATE_MODEL;
    /** hookName */
    NsUpdateModelCommand.hookKey = 'updateModel';
})(update_model_NsUpdateModelCommand || (update_model_NsUpdateModelCommand = {}));
let update_model_UpdateModelCommand = 
/** \u521B\u5EFA\u8282\u70B9\u547D\u4EE4 */
class UpdateModelCommand {
    constructor() {
        /** \u6267\u884CCmd */
        this.execute = () => update_model_awaiter(this, void 0, void 0, function* () {
            const ctx = this.contextProvider();
            const { args, hooks: runtimeHook } = ctx.getArgs();
            const hooks = ctx.getHooks();
            const result = yield hooks.updateModel.call(args, (handlerArgs) => update_model_awaiter(this, void 0, void 0, function* () {
                const { updateModel, getModel, modelService } = handlerArgs;
                const model = yield getModel(modelService);
                const currentValue = model.getValue();
                const draft = Object(immer_esm["a" /* createDraft */])(currentValue);
                yield updateModel(draft);
                const newValue = Object(immer_esm["c" /* finishDraft */])(draft);
                model.setValue(newValue);
                ctx.addUndo(Disposable.create(() => update_model_awaiter(this, void 0, void 0, function* () {
                    model.setValue(newValue);
                })));
                return { model, value: newValue };
            }), runtimeHook);
            ctx.setResult(result);
            return this;
        });
        /** undo cmd */
        this.undo = () => update_model_awaiter(this, void 0, void 0, function* () {
            const ctx = this.contextProvider();
            if (this.isUndoable()) {
                ctx.undo();
            }
            return this;
        });
        /** redo cmd */
        this.redo = () => update_model_awaiter(this, void 0, void 0, function* () {
            if (!this.isUndoable()) {
                yield this.execute();
            }
            return this;
        });
    }
    isUndoable() {
        const ctx = this.contextProvider();
        return ctx.isUndoable();
    }
};
update_model_decorate([
    Object(index_esm["inject"])(ICommandContextProvider),
    update_model_metadata("design:type", Object)
], update_model_UpdateModelCommand.prototype, "contextProvider", void 0);
update_model_UpdateModelCommand = update_model_decorate([
    Object(index_esm["injectable"])({
        token: { token: ICommandHandler, named: update_model_NsUpdateModelCommand.command.id },
    })
    /** \u521B\u5EFA\u8282\u70B9\u547D\u4EE4 */
], update_model_UpdateModelCommand);

const execCmd = () => { };
//# sourceMappingURL=update-model.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/models/index.js
/** commands */

/** \u6CE8\u518CCommand Handler Class */
const registerModelServiceCommand = (register) => {
    register(update_model_UpdateModelCommand);
};
/** app onStart \u65F6, \u6CE8\u518C Command Hooks */
const models_hookhubList = [update_model_NsUpdateModelCommand];
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/command-contribution.js
var command_contribution_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var command_contribution_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var command_contribution_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
/* eslint-disable @typescript-eslint/no-redeclare */

/** Application \u6269\u5C55\u4F9D\u8D56 */




/** Commands */





/** Command Hooks*/


/** Commands \u914D\u7F6E\u9879\u76EE*/
const command_contribution_hookhubList = [...hookhubList, ...edge_hookhubList, ...group_hookhubList, ...graph_hookhubList, ...models_hookhubList];
const defaultHookFactory = () => new es_HookHub();
let command_contribution_XFlowCommandContribution = class XFlowCommandContribution {
    constructor() {
        /** \u6CE8\u518C\u94A9\u5B50 */
        this.registerHook = (hooks) => command_contribution_awaiter(this, void 0, void 0, function* () {
            const d = hooks.x6Events.registerHook({
                name: 'bind group node move event',
                handler: (args) => command_contribution_awaiter(this, void 0, void 0, function* () {
                    const event = {
                        eventName: 'node:moving',
                        callback: ({ node }) => command_contribution_awaiter(this, void 0, void 0, function* () {
                            const isGroup = node.prop('isGroup');
                            if (isGroup) {
                                node.prop('originPosition', node.getPosition());
                                return;
                            }
                            const graph = node.model.graph;
                            const { group: groupId } = node.getData();
                            const group = graph.getNodes().find(cell => cell.id === groupId);
                            if (!group) {
                                return;
                            }
                            const isCollapsed = group.getProp('isCollapsed');
                            let originSize = group.getProp('originSize');
                            let hasChange = false;
                            if (originSize == null) {
                                originSize = group.size();
                                group.prop('originSize', originSize);
                            }
                            let originPosition = group.prop('originPosition');
                            if (originPosition == null) {
                                originPosition = group.getPosition();
                                group.prop('originPosition', originPosition);
                            }
                            let x = originPosition.x;
                            let y = originPosition.y;
                            let cornerX = originPosition.x + originSize.width;
                            let cornerY = originPosition.y + originSize.height;
                            const childs = group.getChildren();
                            if (childs) {
                                childs.forEach(child => {
                                    const bbox = child.getBBox().inflate(12);
                                    const corner = bbox.getCorner();
                                    if (bbox.x < x) {
                                        x = bbox.x;
                                        hasChange = true;
                                    }
                                    if (bbox.y < y) {
                                        y = bbox.y;
                                        hasChange = true;
                                    }
                                    if (corner.x > cornerX) {
                                        cornerX = corner.x;
                                        hasChange = true;
                                    }
                                    if (corner.y > cornerY) {
                                        cornerY = corner.y;
                                        hasChange = true;
                                    }
                                });
                            }
                            if (hasChange) {
                                group.prop({
                                    position: { x, y },
                                    size: { width: cornerX - x, height: cornerY - y },
                                });
                                const groupData = Object.assign(Object.assign({}, group.getData()), { x,
                                    y, width: cornerX - x, height: cornerY - y });
                                if (isCollapsed !== true) {
                                    groupData.groupChildrenSize = { width: cornerX - x, height: cornerY - y };
                                }
                                group.setData(groupData);
                            }
                            /**
                             *  updateNodeData:
                             *  1. \u6298\u53E0\u65F6\u79FB\u52A8\u66F4\u65B0xy\uFF0Csize\u9700\u8981\u66F4\u65B0\uFF0CchildrenSize\u4E0D\u53D8
                             *  2. \u5C55\u5F00\u65F6
                             *      - \u79FB\u52A8Group\u66F4\u65B0xy\uFF0Csize\u4E0D\u9700\u8981\u66F4\u65B0\uFF0CchildrenSize\u4E0D\u66F4\u65B0
                             *      - \u79FB\u52A8children, \u66F4\u65B0xy, size childrenSize
                             */
                        }),
                    };
                    args.push(event);
                }),
            });
            return Disposable.create(() => {
                d.dispose();
            });
        });
        /** \u6CE8\u518C\u94A9\u5B50 */
        this.registerHookHub = (registry) => command_contribution_awaiter(this, void 0, void 0, function* () {
            const toDispose = new disposable_DisposableCollection();
            command_contribution_hookhubList.forEach(({ hookKey, createHook = defaultHookFactory }) => {
                const d = registry.registerHookHub(hookKey, createHook());
                toDispose.push(d);
            });
            this.commandConfig.getConfig().then(({ getContributions }) => {
                const CommandContributions = getContributions();
                CommandContributions.forEach(({ hookKey, createHook = defaultHookFactory }) => {
                    const d = registry.registerHookHub(hookKey, createHook());
                    toDispose.push(d);
                });
            });
            return toDispose;
        });
    }
    /** \u6CE8\u518C\u753B\u5E03\u8282\u70B9\u547D\u4EE4 */
    registerGraphCommands(registry) {
        /** \u6CE8\u518C\u5185\u7F6E\u7684\u547D\u4EE4 */
        command_contribution_hookhubList.forEach(({ command }) => {
            registry.registerCommand(command, {
                createCommand: this.commandFactory,
            });
        });
        /** \u6CE8\u518C\u5916\u90E8\u4F20\u5165\u7684\u547D\u4EE4 */
        this.commandConfig.getConfig().then(({ getContributions }) => {
            const CommandContributions = getContributions();
            CommandContributions.forEach(cmd => {
                registry.registerCommand(cmd.command, {
                    createCommand: this.commandFactory,
                });
            });
        });
    }
};
command_contribution_decorate([
    Object(index_esm["inject"])(IGraphCommandFactory),
    command_contribution_metadata("design:type", Function)
], command_contribution_XFlowCommandContribution.prototype, "commandFactory", void 0);
command_contribution_decorate([
    Object(index_esm["inject"])(config_CommandConfig),
    command_contribution_metadata("design:type", config_CommandConfig
    /** \u6CE8\u518C\u753B\u5E03\u8282\u70B9\u547D\u4EE4 */
    )
], command_contribution_XFlowCommandContribution.prototype, "commandConfig", void 0);
command_contribution_XFlowCommandContribution = command_contribution_decorate([
    Object(index_esm["singleton"])({ contrib: [IGraphCommandContribution, IHookContribution] })
], command_contribution_XFlowCommandContribution);

const registerXFlowCommandContribution = (register, commandConfig) => {
    /** \u6269\u5C55 \u7528\u6237\u81EA\u5B9A\u4E49\u547D\u4EE4 */
    const configContributions = commandConfig.getCommandContributions();
    configContributions.forEach(execution => {
        const { CommandHandler, command } = execution;
        register({
            token: { token: ICommandHandler, named: command.id },
            useClass: CommandHandler,
        });
    });
    /** \u6269\u5C55 Graph \u547D\u4EE4 */
    registerGraphCommand(register);
    /** \u6269\u5C55 Node \u547D\u4EE4 */
    registerNodeCommand(register);
    /** \u6269\u5C55 Edge \u547D\u4EE4 */
    registerEdgeCommand(register);
    /** \u6269\u5C55 Edge \u547D\u4EE4 */
    registerGroupCommand(register);
    /** \u6269\u5C55 Observable \u547D\u4EE4 */
    registerModelServiceCommand(register);
    /** \u6CE8\u518C XFlowCommandContribution */
    register(command_contribution_XFlowCommandContribution);
};
//# sourceMappingURL=command-contribution.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/module.js

/** Application \u6269\u5C55\u4F9D\u8D56 */






/** \u4F9D\u8D56\u6269\u5C55\u6A21\u5757\uFF0C\u5FC5\u987B\u8981\u52A0\u8F7D */
const command_contributions_module_createModule = (commandConfig) => {
    return Object(index_esm["Module"])(register => {
        /** \u6CE8\u518C mapping helper */
        register(GraphMappingHelper);
        /** \u6CE8\u518C CommandConfig */
        registerCommandConfig(register, commandConfig);
        /** \u6CE8\u518C Command\u6269\u5C55 */
        registerXFlowCommandContribution(register, commandConfig);
        /** \u6CE8\u518C Context Clz */
        register(cmd_context_CmdContext);
        /** ICommandHandler \u5DE5\u5382 */
        register(IGraphCommandFactory, {
            useFactory: context => {
                return (commandId, args, hook) => {
                    const child = context.container.createChild();
                    /** \u5B9E\u4F8B\u5316 Context */
                    const cmdContext = child.get(cmd_context_CmdContext);
                    /** \u7ED1\u5B9A CommandContext \u5DE5\u5382\u7C7B */
                    child.register(ICommandContextProvider, {
                        useDynamic: () => {
                            return () => cmdContext;
                        },
                    });
                    /** \u5B9E\u4F8B\u5316CommandHandler */
                    const commandHandler = child.getNamed(ICommandHandler, commandId);
                    /** \u8BBE\u7F6E\u53C2\u6570 */
                    cmdContext.setArgs(args, hook);
                    /** \u7ED1\u5B9A\u5173\u7CFB */
                    cmdContext.handlerInstance = commandHandler;
                    return commandHandler;
                };
            },
        });
    });
};
//# sourceMappingURL=module.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/components/index.js




const CommandsRegistry = props => {
    /** \u751F\u6210\u914D\u7F6E\u4E2D\u5FC3 */
    const extensionRegistry = useExtensionRegistry();
    /** \u83B7\u53D6ContextMenu\u7684\u914D\u7F6E */
    const config = react_default.a.useMemo(() => (props.config ? props.config : new config_CommandConfig()), 
    /* eslint-disable-next-line  */
    []);
    react_default.a.useEffect(() => {
        extensionRegistry.addCoreModule({
            config: config,
            createModule: command_contributions_module_createModule,
        });
        /* eslint-disable-next-line  */
    }, []);
    return null;
};
const createCmdConfig = (addOptions) => (value) => {
    /** bridge config and value */
    const valueContainer = react_default.a.useMemo(() => ({ getValue: () => ({}) }), []);
    valueContainer.getValue = () => value;
    const hookConfig = react_default.a.useMemo(() => {
        const config = new config_CommandConfig();
        addOptions(config, valueContainer);
        return config;
    }, [valueContainer]);
    return hookConfig;
};
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-core/es/command-contributions/index.js
/** Command addReactNode \u4F9D\u8D56\u7684 React.Context */

/** Command \u7EC4\u4EF6 */

// \u7EC4\u4EF6props\u4E2D\u7684Config

/** \u5E38\u91CF */

//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-core/es/toolbar/interface.js

/** IToolbarService: \u7528\u4E8E\u6CE8\u518C/\u6D88\u8D39item */
const IToolbarService = Symbol('IToolbarService');
/**
 * Clients should implement this interface if they want to contribute to the tab-bar toolbar.
 */
const IToolbarContribution = index_esm["Syringe"].defineToken('IToolbarContribution');
//# sourceMappingURL=interface.js.map
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/lodash/debounce.js
var lodash_debounce = __webpack_require__("RNvQ");
var debounce_default = /*#__PURE__*/__webpack_require__.n(lodash_debounce);

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/lodash/cloneDeep.js
var cloneDeep = __webpack_require__("c2re");
var cloneDeep_default = /*#__PURE__*/__webpack_require__.n(cloneDeep);

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/lodash/isBoolean.js
var isBoolean = __webpack_require__("p6M4");
var isBoolean_default = /*#__PURE__*/__webpack_require__.n(isBoolean);

// CONCATENATED MODULE: ../xflow-core/es/toolbar/toolbar-registry.js
var toolbar_registry_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var toolbar_registry_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var toolbar_registry_a;











/**
 * Main, shared registry for toolbar items.
 */
let toolbar_registry_ToolbarRegistry = class ToolbarRegistry {
    constructor() {
        /** disposables */
        this.toDispose = new disposable_DisposableCollection();
        /** \u50A8\u5B58\u6240\u6709toolbar items */
        this.toolbarItems = new Map();
        /** \u6CE8\u518CToolbarRegistry\u7684onChange\u7684\u4E8B\u4EF6 */
        this.onDidChangeEvent = new rx_model_RxModel(null);
        /** \u901A\u8FC7ToolbarRegistry.onDidChange\u76D1\u542CToolbarRegistry items\u7684\u53D8\u5316  */
        this.onDidChange = this.onDidChangeEvent.watch;
        /** debounce in order to avoid to fire more than once in the same tick */
        this.fireOnDidChange = debounce_default()(() => this.onDidChangeEvent.setValue(undefined), 16);
        /**
         * \u6279\u91CF\u6CE8\u518C\u53EF\u5355\u72ECdispose\u7684\u6269\u5C55\u9879\u76EE
         * @param externalRegisterFn IRegisterMenuFunction
         */
        this.registerDisposableToolbar = (externalRegisterFn) => {
            const toDispose = new disposable_DisposableCollection();
            const disposableRegistry = {
                registerToolbarItem: config => {
                    const disposable = this.registerItem(config);
                    toDispose.push(disposable);
                    return disposable;
                },
            };
            externalRegisterFn(disposableRegistry);
            this.toDispose.push(toDispose);
            return toDispose;
        };
        /**
         * \u83B7\u53D6 ToolbarModel
         * @param toolbarConfig IToolbarOptions
         */
        this.getToolbarModel = (toolbarConfig) => {
            const { layout, mainGroups = [], extraGroups = [] } = toolbarConfig;
            return new rx_model_RxModel({
                layout,
                mainGroups: this.createToolbarGroupModel(mainGroups),
                extraGroups: this.createToolbarGroupModel(extraGroups),
            });
        };
        /**
         * \u521B\u5EFA ToolbarModel
         * @param groups IToolbarGroupOptions[]
         */
        this.createToolbarGroupModel = (groups) => {
            const groupModels = groups.map(group => {
                const { items = [] } = group;
                return Object.assign(Object.assign({}, group), { items: items.map(item => this.createToolbarModel({ id: item.id })).filter(i => !!i) });
            });
            return groupModels;
        };
    }
    /** App\u542F\u52A8\u65F6\uFF0C\u6536\u96C6Toolbar\u6269\u5C55\u70B9\u7684\u6CE8\u518C\u9879 */
    onStart() {
        const contributions = this.contributionProvider.getContributions();
        for (const contribution of contributions) {
            contribution.registerToolbarItems(this);
        }
    }
    /**
     * App \u9500\u6BC1\u65F6\u8C03\u7528
     * dispose toolbarProvider
     */
    onStop() {
        this.toDispose.dispose();
    }
    /**
     * \u6CE8\u518CToolbarItem
     * item\u6240\u9700\u7684command\u9700\u8981\u63D0\u524D\u5728command registry\u6CE8\u518C
     * @param config IToolbarItem
     */
    registerItem(config) {
        if (this.toolbarItems.has(config.id)) {
            console.warn(\`ToolbarRegistry \${config.id} is duplicated, in\`, config);
        }
        /** \u6CE8\u518C */
        this.toolbarItems.set(config.id, config);
        /** \u901A\u77E5\u66F4\u65B0 */
        this.fireOnDidChange();
        const toDispose = new disposable_DisposableCollection(Disposable.create(() => this.fireOnDidChange()), Disposable.create(() => this.toolbarItems.delete(config.id)));
        return toDispose;
    }
    /**
     * \u521B\u5EFA ToolbarModel
     * @param option IToolbarItem
     */
    createToolbarModel(option) {
        const item = cloneDeep_default()(this.toolbarItems.get(option.id));
        const isEnabled = isBoolean_default()(item.isEnabled) ? item.isEnabled : true;
        const isVisible = isBoolean_default()(item.isVisible) ? item.isVisible : true;
        const toolbarItem = Object.assign(Object.assign({}, item), { isEnabled: isEnabled, isVisible: isVisible, iconName: item.iconName, text: item.text });
        return toolbarItem;
    }
};
toolbar_registry_decorate([
    Object(index_esm["inject"])(IGraphCommandService),
    toolbar_registry_metadata("design:type", Object)
], toolbar_registry_ToolbarRegistry.prototype, "commandService", void 0);
toolbar_registry_decorate([
    Object(index_esm["inject"])(IModelService),
    toolbar_registry_metadata("design:type", Object)
], toolbar_registry_ToolbarRegistry.prototype, "modelService", void 0);
toolbar_registry_decorate([
    Object(index_esm["contrib"])(IToolbarContribution),
    toolbar_registry_metadata("design:type", typeof (toolbar_registry_a = typeof index_esm["Contribution"] !== "undefined" && index_esm["Contribution"].Provider) === "function" ? toolbar_registry_a : Object)
], toolbar_registry_ToolbarRegistry.prototype, "contributionProvider", void 0);
toolbar_registry_ToolbarRegistry = toolbar_registry_decorate([
    Object(index_esm["singleton"])({ contrib: [IFrontendApplicationContribution, IToolbarService] })
], toolbar_registry_ToolbarRegistry);

//# sourceMappingURL=toolbar-registry.js.map
// CONCATENATED MODULE: ../xflow-core/es/toolbar/module.js

/** Application \u6269\u5C55\u4F9D\u8D56 */
/** Toolbar\u6269\u5C55\u70B9\u4F9D\u8D56 */




/** \u4F9D\u8D56\u6269\u5C55\u6A21\u5757\uFF0C\u5FC5\u987B\u8981\u52A0\u8F7D */
const toolbar_module_createModule = () => {
    return Object(index_esm["Module"])(register => {
        /** \u6CE8\u518C IToolbarContribution\u6269\u5C55\u70B9 */
        index_esm["Contribution"].register(register, IToolbarContribution);
        /** \u6CE8\u518C ToolbarRegistry \u5230 IFrontendApplicationContribution */
        /** \u6CE8\u518C ToolbarRegistry */
        register(toolbar_registry_ToolbarRegistry);
    });
};
//# sourceMappingURL=module.js.map
// CONCATENATED MODULE: ../xflow-core/es/toolbar/components/index.js
var components_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};



const components_ToolbarRegistry = props => {
    const {} = props;
    /** \u83B7\u53D6\u914D\u7F6E\u4E2D\u5FC3 */
    const extensionRegistry = useExtensionRegistry();
    react_default.a.useEffect(() => {
        const disposable = extensionRegistry.addCoreModule({
            config: { CONFIG_TYPE: 'ToolbarRegistry', getConfig: () => components_awaiter(void 0, void 0, void 0, function* () { }) },
            createModule: toolbar_module_createModule,
        });
        return () => {
            disposable.dispose();
        };
    }, [extensionRegistry]);
    return null;
};
components_ToolbarRegistry.defaultProps = { XFlowModuleType: 'ToolbarRegistry' };
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-core/es/toolbar/index.js



//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-core/es/menu/interface.js
// utils

/** rootMenuId */
const ROOT_MENU_ID = Symbol('xflow-menu-root');
/** Menu UI Model Service */
const IMenuService = Symbol('IMenuService');
/**
 * \u5E94\u8BE5\u5B9E\u73B0\u8FD9\u4E2A\u6269\u5C55\u70B9\u6765\u6CE8\u518C\u66F4\u591A\u7684Menu
 */
const IMenuContribution = index_esm["Syringe"].defineToken('IMenuContribution');
/**  menu item type. */
var MenuItemType;
(function (MenuItemType) {
    MenuItemType["Separator"] = "separator";
    MenuItemType["Submenu"] = "submenu";
    MenuItemType["Root"] = "root";
    MenuItemType["Leaf"] = "leaf";
})(MenuItemType || (MenuItemType = {}));
//# sourceMappingURL=interface.js.map
// CONCATENATED MODULE: ../xflow-core/es/menu/menu-registry.js
var menu_registry_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var menu_registry_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var menu_registry_a;




let menu_registry_MenuRegistry = class MenuRegistry {
    constructor() {
        /** disposables */
        this.toDispose = new disposable_DisposableCollection();
        /** menuMap */
        this.menuMap = new Map();
        /**
         * \u83B7\u53D6 menu
         * @param menuId menuId
         */
        this.getMenu = (menuId) => {
            return this.menuMap.get(menuId);
        };
        /**
         * \u6CE8\u518C\u4E00\u6279\u53EF\u5355\u72ECdispose\u7684\u6269\u5C55\u9879\u76EE
         * @param externalRegisterFn IRegisterMenuFunction
         */
        this.registerDisposableMenu = (externalRegisterFn) => {
            const toDispose = new disposable_DisposableCollection();
            const disposableRegistry = {
                registerMenu: (config) => {
                    const disposable = this.registerMenu(config);
                    toDispose.push(disposable);
                    return disposable;
                },
            };
            externalRegisterFn(disposableRegistry);
            this.toDispose.push(toDispose);
            return toDispose;
        };
    }
    /** app\u542F\u52A8\u65F6\uFF0C\u6536\u96C6menu\u6269\u5C55\u70B9\u7684\u6CE8\u518C\u9879 */
    onStart() {
        const contributions = this.contributionProvider.getContributions();
        for (const contribution of contributions) {
            contribution.registerMenu(this);
        }
    }
    /** app\u7684\u505C\u6B62\u903B\u8F91 */
    onStop() {
        this.toDispose.dispose();
    }
    /**
     * \u6CE8\u518C menu \u7C7B\u578B
     * @param config IMenu
     */
    registerMenu(config) {
        this.menuMap.set(config.id, config);
        return Disposable.create(() => this.menuMap.delete(config.id));
    }
};
menu_registry_decorate([
    Object(index_esm["contrib"])(IMenuContribution),
    menu_registry_metadata("design:type", typeof (menu_registry_a = typeof index_esm["Contribution"] !== "undefined" && index_esm["Contribution"].Provider) === "function" ? menu_registry_a : Object)
], menu_registry_MenuRegistry.prototype, "contributionProvider", void 0);
menu_registry_MenuRegistry = menu_registry_decorate([
    Object(index_esm["singleton"])({ contrib: [IFrontendApplicationContribution, IMenuService] })
], menu_registry_MenuRegistry);

//# sourceMappingURL=menu-registry.js.map
// CONCATENATED MODULE: ../xflow-core/es/menu/module.js

/** Application \u6269\u5C55\u4F9D\u8D56 */
/** \u6269\u5C55 menu \u6CE8\u518C */



/** \u4F9D\u8D56\u6269\u5C55\u6A21\u5757\uFF0C\u5FC5\u987B\u8981\u52A0\u8F7D */
const menu_module_createModule = () => {
    return Object(index_esm["Module"])(register => {
        /** \u6CE8\u518C IMenuContribution \u6210\u4E3A\u4E00\u4E2A\u6269\u5C55\u70B9 */
        index_esm["Contribution"].register(register, IMenuContribution);
        /** \u6CE8\u518C MenuModelRegistry \u5230 IFrontendApplicationContribution */
        /** \u6CE8\u518C MenuModelRegistry */
        register(menu_registry_MenuRegistry);
    });
};
//# sourceMappingURL=module.js.map
// CONCATENATED MODULE: ../xflow-core/es/menu/components/index.js
var menu_components_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};



const components_MenuRegistry = props => {
    const {} = props;
    /** \u83B7\u53D6\u914D\u7F6E\u4E2D\u5FC3 */
    const extensionRegistry = useExtensionRegistry();
    react_default.a.useEffect(() => {
        const disposable = extensionRegistry.addCoreModule({
            config: { CONFIG_TYPE: 'MenuRegistry', getConfig: () => menu_components_awaiter(void 0, void 0, void 0, function* () { }) },
            createModule: menu_module_createModule,
        });
        return () => {
            disposable.dispose();
        };
        /* eslint-disable-next-line  */
    }, []);
    return null;
};
components_MenuRegistry.defaultProps = { XFlowModuleType: 'MenuRegistry' };
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-core/es/menu/index.js



//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-core/es/xflow-main/components/index.js
var xflow_main_components_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};


/** app */


/** app-extension */




/** graph */

/** command */


/** hook */

/** UI model */


const XFlow = props => {
    const { meta, graphConfig, graphData, graphLayout, onLoad, isAutoCenter, hookConfig, modelServiceConfig, commandConfig, onAppConfigReady, onAppDestroy, children = [], className, } = props;
    const [appRef, setAppRef] = react_default.a.useState();
    /** XFlow App \u914D\u7F6E\u4E2D\u5FC3 */
    const extensionRegistry = createExtensionRegistry();
    /** didmount */
    react_default.a.useEffect(() => {
        /** before app start */
        if (onAppConfigReady) {
            onAppConfigReady(extensionRegistry);
        }
        /** \u521D\u59CB\u5316\u5E94\u7528 */
        const app = initApp(extensionRegistry);
        app.start().then(() => xflow_main_components_awaiter(void 0, void 0, void 0, function* () {
            /** \u4FDD\u7559\u5F15\u7528 */
            setAppRef(app);
            /** \u81EA\u52A8\u6267\u884C load Meta */
            if (meta) {
                yield app.commandService.executeCommand(XFlowGraphCommands.LOAD_META.id, { meta });
            }
            /** after app start */
            if (onLoad) {
                onLoad(app, extensionRegistry);
            }
            if (graphData) {
                if (graphLayout) {
                    yield app.commandService.executeCommand(XFlowGraphCommands.GRAPH_LAYOUT.id, Object.assign({ graphData }, graphLayout));
                }
                yield app.commandService.executeCommand(XFlowGraphCommands.GRAPH_RENDER.id, { graphData });
            }
        }));
        /** unmount */
        const destroy = () => xflow_main_components_awaiter(void 0, void 0, void 0, function* () {
            onAppDestroy && onAppDestroy(app);
        });
        return () => {
            destroy();
        };
        /** \u4E0D\u8981\u5220 \u4FDD\u8BC1\u53EA\u751F\u6210\u4E00\u6B21 */
        // eslint-disable-next-line
    }, []);
    /** \u81EA\u52A8\u66F4\u65B0meta */
    react_default.a.useEffect(() => {
        if (appRef) {
            appRef.commandService.executeCommand(XFlowGraphCommands.LOAD_META.id, { meta });
        }
        /** \u4E0D\u8981\u5220 \u53EA\u548Cmeta\u8054\u52A8 */
        // eslint-disable-next-line
    }, [meta]);
    /** \u81EA\u52A8\u6E32\u67D3\u753B\u5E03\u5185\u5BB9 */
    react_default.a.useEffect(() => {
        const fn = () => xflow_main_components_awaiter(void 0, void 0, void 0, function* () {
            if (appRef) {
                if (graphData && graphLayout) {
                    yield appRef.commandService.executeCommand(XFlowGraphCommands.GRAPH_LAYOUT.id, Object.assign({ graphData }, graphLayout));
                }
                yield appRef.commandService.executeCommand(XFlowGraphCommands.GRAPH_RENDER.id, {
                    graphData,
                });
                /** \u81EA\u52A8\u5C45\u4E2D\u753B\u5E03\u5185\u5BB9 */
                if (isAutoCenter) {
                    const x6Graph = yield appRef.getGraphInstance();
                    x6Graph.centerContent();
                }
            }
        });
        fn();
        /** \u4E0D\u8981\u5220 \u53EA\u548CgraphData\u8054\u52A8 */
        // eslint-disable-next-line
    }, [graphData]);
    /** classname */
    const appClzName = classnames_default()('xflow-app-workspace', className, ...extensionRegistry.getContainerClassNames());
    /** \u5224\u65AD\u662F\u5426\u9700\u8981\u81EA\u52A8\u6E32\u67D3\u753B\u5E03\u7EC4\u4EF6, \u5750\u6807\u76F8\u5BF9\u4E8Exflow-graph-root */
    const hasCanvasComponent = (Array.isArray(children) ? children : [children]).some(child => {
        return child && child.props.isXFlowCanvas;
    });
    return (react_default.a.createElement(XFlowAppInternalProvider, { app: appRef },
        react_default.a.createElement(ExtensionRegistryContext.Provider, { value: extensionRegistry },
            react_default.a.createElement("div", { className: appClzName, id: extensionRegistry.getInstaceId() },
                !hasCanvasComponent && (react_default.a.createElement(XFlowCanvas, { config: graphConfig, position: { top: 0, bottom: 0, left: 0, right: 0 } })),
                children,
                react_default.a.createElement(ModelServiceRegistry, { config: modelServiceConfig }),
                react_default.a.createElement(CommandsRegistry, { config: commandConfig }),
                react_default.a.createElement(components_HookRegistry, { config: hookConfig }),
                react_default.a.createElement(components_ToolbarRegistry, null),
                react_default.a.createElement(components_MenuRegistry, null)))));
};
XFlow.defaultProps = {};
/* harmony default export */ var components = (XFlow);

//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-core/es/xflow-main/index.js


/** \u901A\u8FC7context\u83B7\u53D6app */

/** \u901A\u8FC7context \u6CE8\u518CExtension\u6A21\u5757 */

/** XFlowAppExtension */

/** classname  prefix  context */


/** Graph \u914D\u7F6E */

/** Application \u6269\u5C55\u4F9D\u8D56 */

//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-core/es/common/rx-model-hook.js
var rx_model_hook_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};


/** \u5224\u65ADmodel\u662F\u5426Mount */
const isRefMounted = (ref) => {
    return ref && ref.current && ref.current.isMounted;
};
/** \u7528\u4E8E\u5224\u65ADmodel\u662F\u5426Mount */
const useIsMountedRef = () => {
    /** \u8BB0\u5F55\u5F53\u524D\u7EC4\u4EF6\u7684\u52A0\u8F7D\u72B6\u6001 */
    const ref = react_default.a.useRef({ isMounted: true });
    react_default.a.useEffect(() => {
        return () => {
            ref.current.isMounted = false;
        };
    }, []);
    return ref;
};
/** \u5224\u65ADmodel\u662F\u5426Mount */
const useModel = (model) => {
    /** \u8BB0\u5F55\u5F53\u524D\u7EC4\u4EF6\u7684\u52A0\u8F7D\u72B6\u6001 */
    const ref = useIsMountedRef();
    const [state, setState] = react_default.a.useState(model.getValue());
    react_default.a.useEffect(() => {
        const disposeable = model.watch(val => {
            if (isRefMounted(ref)) {
                setState(val);
            }
        });
        return () => {
            disposeable.dispose();
        };
        /* eslint-disable-next-line  */
    }, [setState]);
    const value = state;
    const canRender = rx_model_NsModel.isValidValue(value);
    const setValue = react_default.a.useCallback(val => model.setValue(val), [model]);
    return [value, setValue, canRender];
};
/** \u5728\u7EC4\u4EF6\u5185\u90E8\u65B0\u5EFA\u4E00\u4E2Amodel */
const createComponentModel = (initialState) => {
    /* eslint-disable-next-line  */
    const model = react_default.a.useMemo(() => new rx_model_RxModel(initialState), []);
    /** model \u548C state \u7ED1\u5B9A\u89E6\u53D1view\u5237\u65B0 */
    /* eslint-disable-next-line  */
    const [modelValue, setModelValue, canRender] = useModel(model);
    /** unMount\u65F6dispose */
    /* eslint-disable-next-line  */
    react_default.a.useEffect(() => {
        return () => {
            model.dispose();
        };
    }, [model]);
    return [modelValue, setModelValue, model, canRender];
};
/**
 * useModelAsync\uFF1A
 * watch model\u7684\u503C\uFF0C
 * \u628Amodel\u7684\u503C\u901A\u8FC7useState\u548C\u7EC4\u4EF6\u72B6\u6001\u5173\u8054\u8D77\u6765
 */
const useModelAsync = (args) => {
    const { getModel, initialState } = args;
    /** \u8BB0\u5F55\u5F53\u524D\u7EC4\u4EF6\u7684\u52A0\u8F7D\u72B6\u6001 */
    const isMountedRef = useIsMountedRef();
    const modelRef = react_default.a.useRef();
    /** \u8BA2\u9605 model */
    const [state, setState] = react_default.a.useState(initialState);
    react_default.a.useEffect(() => {
        let d;
        getModel().then((model) => rx_model_hook_awaiter(void 0, void 0, void 0, function* () {
            modelRef.current = model;
            const newState = yield model.getValidValue();
            if (!isMountedRef.current.isMounted) {
                return;
            }
            setState(newState);
            d = model.watch(val => {
                if (isMountedRef.current.isMounted) {
                    setState(val);
                }
            });
        }));
        return () => {
            if (d && d.dispose) {
                d.dispose();
            }
        };
        /* eslint-disable-next-line  */
    }, []);
    return [state, setState, modelRef.current];
};
//# sourceMappingURL=rx-model-hook.js.map
// CONCATENATED MODULE: ../xflow-core/es/keybinding/interface.js

const IKeyBindingService = Symbol('IKeyBindingService');
/** \u5B9E\u73B0\u8FD9\u4E2A\u6269\u5C55\u70B9\u6765\u6CE8\u518C\u66F4\u591A\u7684keybinding */
const IKeyBindingContribution = index_esm["Syringe"].defineToken('IKeyBindingContribution');
const IKeyBindingOptionProvider = Symbol('IKeyBindingOptionProvider');
//# sourceMappingURL=interface.js.map
// CONCATENATED MODULE: ../xflow-core/es/keybinding/keybinding-registry.js
var keybinding_registry_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var keybinding_registry_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var keybinding_registry_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var keybinding_registry_a;







let keybinding_registry_KeyBindingRegistry = class KeyBindingRegistry {
    constructor() {
        /** disposables */
        this.toDispose = new disposable_DisposableCollection();
        /** disposables */
        this.keyBindingMap = new Map();
        /** disposables */
        this.enabledKeyBindingMap = new Map();
        /** \u6CE8\u518C\u7528\u6237\u5B9A\u4E49\u5728config\u4E2D\u7684keybinding */
        this.registerExternalKeybindings = () => keybinding_registry_awaiter(this, void 0, void 0, function* () {
            const { registerKeybindingFunc } = yield this.optionProvider.getOption();
            return registerKeybindingFunc(this);
        });
        /** \u6CE8\u518C\u53EFDispose\u7684Keybinding */
        this.registerKeybinding = (keybindings = []) => {
            const toDispose = new disposable_DisposableCollection();
            keybindings.forEach(keybinding => {
                /** \u6CE8\u518C Keybinding config */
                this.keyBindingMap.set(keybinding.id, keybinding);
                /** enable Keybinding */
                this.enableKeyBindings(keybinding.id).then(d => {
                    toDispose.push(Disposable.create(() => {
                        d.dispose();
                        this.keyBindingMap.delete(keybinding.id);
                    }));
                });
            });
            this.toDispose.push(toDispose);
            return toDispose;
        };
        /**
         * \u542F\u7528keybinding, \u7528\u4E8E\u89E6\u53D1command
         * @param id contextId
         */
        this.enableKeyBindings = (keybindingId) => keybinding_registry_awaiter(this, void 0, void 0, function* () {
            /** \u6E05\u7406\u540C\u6837\u7684\u952E\u76D8\u4E8B\u4EF6 */
            this.disableKeyBindings([keybindingId]);
            const keybinding = this.keyBindingMap.get(keybindingId);
            const graph = yield this.getX6Graph();
            /**
             * x6\u6587\u6863\uFF1Ahttps://x6.antv.vision/zh/docs/api/graph/keyboard
             * x6\u6E90\u7801\uFF1Apackages/x6/src/graph/keyboard.ts
             */
            const handler = this.runCommand(keybinding);
            graph.bindKey(keybinding.keybinding, handler);
            /** \u6CE8\u518Cdisposable */
            const toDispose = Disposable.create(() => {
                graph.unbindKey(keybinding.keybinding);
                this.enabledKeyBindingMap.delete(keybinding.id);
            });
            /** \u6CE8\u518Cdisposable */
            this.enabledKeyBindingMap.set(keybinding.id, toDispose);
            return toDispose;
        });
        /**
         * \u7981\u7528keybinding
         */
        this.disableKeyBindings = (ids) => {
            ids.forEach(id => {
                const disposable = this.enabledKeyBindingMap.get(id);
                if (disposable) {
                    disposable.dispose();
                }
            });
        };
        /**
         * \u6267\u884Ccommand
         */
        this.runCommand = (keybinding) => (e) => keybinding_registry_awaiter(this, void 0, void 0, function* () {
            yield keybinding.callback(keybinding, this.modelService, this.commandService, e);
        });
        /**
         * \u83B7\u53D6\u753B\u5E03\u5B9E\u4F8B
         */
        this.getX6Graph = () => keybinding_registry_awaiter(this, void 0, void 0, function* () {
            const graphInstance = yield this.graphProvider.getGraphInstance();
            return graphInstance;
        });
    }
    /**
     *  app\u542F\u52A8\u65F6, \u6CE8\u518Ckeybinding\u7684\u6269\u5C55
     */
    onStart() {
        const contributions = this.contributionProvider.getContributions();
        for (const contribution of contributions) {
            contribution.registerKeybinding(this);
        }
        this.registerExternalKeybindings();
    }
    /**
     * app\u505C\u6B62\u7684\u903B\u8F91
     */
    onStop() {
        this.toDispose.dispose();
    }
};
keybinding_registry_decorate([
    Object(index_esm["inject"])(IKeyBindingOptionProvider),
    keybinding_registry_metadata("design:type", Object)
], keybinding_registry_KeyBindingRegistry.prototype, "optionProvider", void 0);
keybinding_registry_decorate([
    Object(index_esm["inject"])(IGraphCommandService),
    keybinding_registry_metadata("design:type", Object)
], keybinding_registry_KeyBindingRegistry.prototype, "commandService", void 0);
keybinding_registry_decorate([
    Object(index_esm["inject"])(IModelService),
    keybinding_registry_metadata("design:type", Object)
], keybinding_registry_KeyBindingRegistry.prototype, "modelService", void 0);
keybinding_registry_decorate([
    Object(index_esm["contrib"])(IKeyBindingContribution),
    keybinding_registry_metadata("design:type", typeof (keybinding_registry_a = typeof index_esm["Contribution"] !== "undefined" && index_esm["Contribution"].Provider) === "function" ? keybinding_registry_a : Object)
], keybinding_registry_KeyBindingRegistry.prototype, "contributionProvider", void 0);
keybinding_registry_decorate([
    Object(index_esm["inject"])(IGraphProvider),
    keybinding_registry_metadata("design:type", Object)
], keybinding_registry_KeyBindingRegistry.prototype, "graphProvider", void 0);
keybinding_registry_KeyBindingRegistry = keybinding_registry_decorate([
    Object(index_esm["singleton"])({ contrib: [IFrontendApplicationContribution, IKeyBindingService] })
], keybinding_registry_KeyBindingRegistry);

//# sourceMappingURL=keybinding-registry.js.map
// CONCATENATED MODULE: ../xflow-core/es/keybinding/module.js
var keybinding_module_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
/* eslint-disable @typescript-eslint/no-redeclare */

/** Toolbar\u6269\u5C55\u70B9\u4F9D\u8D56 */



const registerKeybindingConfig = (register, config) => {
    register(IKeyBindingOptionProvider, {
        useDynamic: () => {
            return {
                getOption: () => keybinding_module_awaiter(void 0, void 0, void 0, function* () {
                    return config.getConfig();
                }),
            };
        },
        lifecycle: index_esm["Syringe"].Lifecycle.singleton,
    });
};
/** \u4F9D\u8D56\u6269\u5C55\u6A21\u5757\uFF0C\u5FC5\u987B\u8981\u52A0\u8F7D */
const keybinding_module_createModule = (keyBindingConfig) => {
    return Object(index_esm["Module"])(register => {
        /** \u7ED1\u5B9A context \u914D\u7F6E */
        registerKeybindingConfig(register, keyBindingConfig);
        /** \u6CE8\u518C IContextContribution */
        index_esm["Contribution"].register(register, IKeyBindingContribution);
        /** \u6CE8\u518C KeyBindingRegistry \u5230 IFrontendApplicationContribution  */
        /** \u6CE8\u518C KeyBindingRegistry */
        /** \u6CE8\u518C KeyBindingRegistry alias  IKeybindingService */
        register(keybinding_registry_KeyBindingRegistry);
    });
};
//# sourceMappingURL=module.js.map
// CONCATENATED MODULE: ../xflow-core/es/keybinding/config.js
var keybinding_config_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};


var NsContext;
(function (NsContext) {
    NsContext.CONFIG_TYPE = 'CONTEXT_CONFIG';
})(NsContext || (NsContext = {}));
const config_noop = () => Disposable.create(() => { });
class config_KeybindingConfig {
    constructor() {
        /** CONFIG_TYPE */
        this.CONFIG_TYPE = NsContext.CONFIG_TYPE;
        /** \u5916\u90E8\u6CE8\u518Ccontext\u7684\u65B9\u6CD5 */
        this.keybindingFunc = config_noop;
        /** \u662F\u5426\u5DF2\u52A0\u8F7D */
        this.isMounted = new Deferred();
        this.setKeybindingFunc = (fn) => {
            this.keybindingFunc = fn;
        };
        this.setMountState = () => {
            this.isMounted.resolve(true);
        };
        this.getConfig = () => keybinding_config_awaiter(this, void 0, void 0, function* () {
            yield this.isMounted.promise;
            return {
                CONFIG_TYPE: this.CONFIG_TYPE,
                registerKeybindingFunc: this.keybindingFunc,
            };
        });
        this.dispose = () => {
            this.keybindingFunc = config_noop;
            this.isMounted = new Deferred();
        };
    }
}
//# sourceMappingURL=config.js.map
// CONCATENATED MODULE: ../xflow-core/es/keybinding/components/index.js




const KeyBindings = props => {
    const { config } = props;
    /** \u83B7\u53D6\u914D\u7F6E\u4E2D\u5FC3 */
    const extensionRegistry = useExtensionRegistry();
    /** \u83B7\u53D6ContextService\u7684\u914D\u7F6E */
    const keybindingConfig = react_default.a.useMemo(() => (config ? config : new config_KeybindingConfig()), [config]);
    react_default.a.useEffect(() => {
        const disposable = extensionRegistry.addCoreModule({
            config: keybindingConfig,
            createModule: keybinding_module_createModule,
        });
        /** resolve */
        keybindingConfig.setMountState();
        return () => {
            disposable.dispose();
            keybindingConfig.dispose();
        };
    }, [extensionRegistry, keybindingConfig]);
    return null;
};
const createKeybindingConfig = (addOptions) => (value) => {
    /** bridge config and value */
    const valueContainer = react_default.a.useMemo(() => ({ getValue: () => ({}) }), []);
    valueContainer.getValue = () => value;
    const hookConfig = react_default.a.useMemo(() => {
        const config = new config_KeybindingConfig();
        addOptions(config, valueContainer);
        return config;
    }, [valueContainer]);
    return hookConfig;
};
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-core/es/keybinding/index.js




//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-core/es/common/delay.js
// yield delay(1000)
function delay(ms) {
    return new Promise(resolve => setTimeout(() => resolve(true), ms));
}
//# sourceMappingURL=delay.js.map
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/QuestionCircleOutlined.js + 1 modules
var QuestionCircleOutlined = __webpack_require__("LxhF");

// CONCATENATED MODULE: ../xflow-core/es/antd-icons/index.js

class antd_icons_IconStoreBase {
    constructor() {
        /** icon map */
        this.map = new Map([
            ['default', QuestionCircleOutlined["a" /* default */]],
            ['QuestionCircleOutlined', QuestionCircleOutlined["a" /* default */]],
        ]);
        this.map.set('default', QuestionCircleOutlined["a" /* default */]);
        this.map.set('QuestionCircleOutlined', QuestionCircleOutlined["a" /* default */]);
    }
    /** \u83B7\u53D6\u5168\u5C40\u7684icon component */
    // @ts-ignore
    get(id) {
        const component = this.map.get(id);
        return component;
    }
    /** \u8BBE\u7F6E\u5168\u5C40\u7684icon component */
    set(id, component) {
        this.map.set(id, component);
    }
    /** \u5224\u65AD\u662F\u5426\u6709\u503C */
    has(id) {
        return this.map.has(id);
    }
}
const IconStore = new antd_icons_IconStoreBase();
/* harmony default export */ var antd_icons = (IconStore);
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-core/es/index.js
// IOC


/** XFlow \u57FA\u7840 interface */

/*******************************************************
 * \u6838\u5FC3\u7EC4\u4EF6\uFF1A
 * 1. Application\uFF1AXFlow
 * 2. Application Extension\uFF1AXFlowAppExtensionMoudle
 * 3. Graph\uFF1AXFlowCanvas
 *****************************************************/

/** graphProvider\uFF1A\u6CE8\u5165Graph\u65F6 \u9700\u8981 */

/** app\uFF1A\u7528\u4E8Eextension\u6269\u5C55*/

/** Command Service */

/** Command \u5E38\u91CF */

/** React Node Context */

/*******************************************************
 *  XFlow Hooks\uFF1A \u94A9\u5B50\u51FD\u6570
 *****************************************************/

/*******************************************************
 *  Model Service\uFF1A\u5168\u5C40\u72B6\u6001
 *****************************************************/



/*******************************************************
 *  Toolbar\uFF1A\u5DE5\u5177\u680F
 *****************************************************/
/** Toolbar \u914D\u7F6E */

/*******************************************************
 *  Menu\uFF1A\u83DC\u5355
 *****************************************************/
/** Menu \u914D\u7F6E */

/*******************************************************
 *  KeyBindings\uFF1A\u5FEB\u6377\u952E
 *****************************************************/
/** KeyBindings \u914D\u7F6E */

/*******************************************************
 *  UTILS\uFF1A\u5DE5\u5177\u65B9\u6CD5
 *****************************************************/
/** utils\uFF1Adispose */

/** utils\uFF1Adefer \u5EF6\u8FDF */

/** utils\uFF1A\u5EF6\u8FDF */

/** utils\uFF1Auuid */

/** utils\uFF1A\u7EDD\u5BF9\u5B9A\u4F4D */

/** utils\uFF1AinsertCss */

/*******************************************************
 * Icon\uFF1AAntd Icon
 *****************************************************/
/** ICON */



//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow/es/core/index.js

/** XFlow \u57FA\u7840 interface */

/*******************************************************
 * \u6838\u5FC3\u7EC4\u4EF6\uFF1A
 * 1. Application\uFF1AXFlow
 * 2. Application Extension\uFF1AXFlowAppExtensionMoudle
 * 3. Graph\uFF1AXFlowCanvas
 *****************************************************/

/** graphProvider\uFF1A\u6CE8\u5165Graph\u65F6 \u9700\u8981 */

/** app\uFF1A\u7528\u4E8Eextension\u6269\u5C55*/

/** Command Service */

/** Command \u5E38\u91CF */

/** React Node Context */

/*******************************************************
 *  XFlow Hooks\uFF1A \u94A9\u5B50\u51FD\u6570
 *****************************************************/

/*******************************************************
 *  Model Service\uFF1A\u5168\u5C40\u72B6\u6001
 *****************************************************/



/*******************************************************
 *  Toolbar\uFF1A\u5DE5\u5177\u680F
 *****************************************************/
/** Toolbar \u914D\u7F6E */

/*******************************************************
 *  Menu\uFF1A\u83DC\u5355
 *****************************************************/
/** Menu \u914D\u7F6E */

/*******************************************************
 *  KeyBindings\uFF1A\u5FEB\u6377\u952E
 *****************************************************/
/** KeyBindings \u914D\u7F6E */

/*******************************************************
 *  UTILS\uFF1A\u5DE5\u5177\u65B9\u6CD5
 *****************************************************/
/** utils\uFF1Adispose */

/** utils\uFF1Adefer \u5EF6\u8FDF */

/** utils\uFF1A\u5EF6\u8FDF */

/** utils\uFF1Auuid */

/** utils\uFF1A\u7EDD\u5BF9\u5B9A\u4F4D */

/** utils\uFF1AinsertCss */

/*******************************************************
 * Icon\uFF1AAntd Icon
 *****************************************************/
/** ICON */

/** \u5168\u5C40\u5E38\u91CF */

//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-snapline/contributions/hook.js
var hook_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var hook_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};


/**
 * \u5185\u7F6E\u7684hook contribution
 * \u5904\u7406 config\u4E0A\u7684runtime\u7684\u6CE8\u518C\u9879
 */
let hook_HookContribution = class HookContribution {
    constructor() {
        this.toDispose = new disposable_DisposableCollection();
        // args: registry: IHookService<ICmdHooks>
        this.registerHookHub = () => hook_awaiter(this, void 0, void 0, function* () {
            return Disposable.create(() => { });
        });
        this.registerHook = (hooks) => hook_awaiter(this, void 0, void 0, function* () {
            const toDispose = new disposable_DisposableCollection();
            const disposables = [
                hooks.graphOptions.registerHook({
                    name: 'add snapline options',
                    handler: (args) => hook_awaiter(this, void 0, void 0, function* () {
                        // \u5BF9\u9F50\u7EBF\u914D\u7F6E\uFF0C\u8F85\u52A9\u79FB\u52A8\u8282\u70B9\u6392\u7248\uFF08\u8BE6\u7EC6\u6587\u6863\uFF1Ahttps://X6.antv.vision/zh/docs/tutorial/basic/snapline\uFF09
                        args.snapline = {
                            enabled: true,
                            className: 'xflow-snapline',
                            clean: 5000,
                        };
                    }),
                }),
            ];
            toDispose.pushAll(disposables);
            return Disposable.create(() => { });
        });
    }
};
hook_HookContribution = hook_decorate([
    index_esm.singleton({ contrib: IHookContribution })
], hook_HookContribution);

//# sourceMappingURL=hook.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-snapline/module.js

/** Application \u6269\u5C55\u4F9D\u8D56 */


/** \u4F9D\u8D56\u6269\u5C55\u6A21\u5757\uFF0C\u5FC5\u987B\u8981\u52A0\u8F7D */
const canvas_snapline_module_createModule = () => {
    return index_esm.Module(register => {
        /** \u6269\u5C55 runtime hook */
        register(hook_HookContribution);
    });
};

//# sourceMappingURL=module.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-snapline/components/index.js
var canvas_snapline_components_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};



const components_CONFIG_TYPE = 'CanvasSnapline';
/** \u9ED8\u8BA4\u989C\u8272 */
const SNAPLINE_COLOR = '#faad14';
const CanvasSnapline = props => {
    const { color = SNAPLINE_COLOR } = props;
    const extension = useExtensionRegistry();
    const config = react_default.a.useMemo(() => ({
        CONFIG_TYPE: components_CONFIG_TYPE,
        getConfig: () => canvas_snapline_components_awaiter(void 0, void 0, void 0, function* () { return ({}); }),
    }), []);
    /** \u8BBE\u7F6Ecss \u6837\u5F0F */
    react_default.a.useEffect(() => {
        const className = \`xflow-snapline-\${Date.now()}\`;
        // \u591Axflow\u4E4B\u95F4\u9694\u79BB
        extension.addContainerClassNames(className);
        const cssString = \`
    .\${className} .xflow-snapline .x6-widget-snapline-horizontal, 
    .\${className} .xflow-snapline .x6-widget-snapline-vertical {
      border-color: \${color};
    }\`;
        const $style = insertCss(cssString);
        return () => {
            document.head.removeChild($style);
        };
    }, [color, extension]);
    return react_default.a.createElement(XFlowAppExtensionMoudle, { config: config, createModule: canvas_snapline_module_createModule });
};
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-snapline/index.js

//# sourceMappingURL=index.js.map
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/tooltip/index.js + 1 modules
var es_tooltip = __webpack_require__("9xBf");

// CONCATENATED MODULE: ../xflow-extension/es/canvas-node-port-tooltip/interface.js
var interface_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var NsPortEvent;
(function (NsPortEvent) {
    NsPortEvent.MOUSE_ENTER = 'node-port:mouseenter';
    NsPortEvent.MOUSE_LEAVE = 'node-port:mouseleave';
})(NsPortEvent || (NsPortEvent = {}));
var ACTIVE_NODE_PORT;
(function (ACTIVE_NODE_PORT) {
    ACTIVE_NODE_PORT.id = 'ACTIVE_NODE_PORT';
    ACTIVE_NODE_PORT.useModel = (modelService) => interface_awaiter(this, void 0, void 0, function* () {
        const model = yield modelService.awaitModel(ACTIVE_NODE_PORT.id);
        const data = yield model.getValidValue();
        return { data, model };
    });
})(ACTIVE_NODE_PORT || (ACTIVE_NODE_PORT = {}));
//# sourceMappingURL=interface.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-node-port-tooltip/contributions/node-port.js
var node_port_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var node_port_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var node_port_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};





/**
 * \u5185\u7F6E\u7684hook contribution
 * \u5904\u7406 config\u4E0A\u7684runtime\u7684\u6CE8\u518C\u9879
 */
let node_port_NodePortTooltipContribution = class NodePortTooltipContribution {
    constructor() {
        this.toDispose = new disposable_DisposableCollection();
        /** \u83B7\u53D6\u753B\u5E03\u5B9E\u4F8B */
        this.getGraphInstance = () => node_port_awaiter(this, void 0, void 0, function* () {
            const graphInstance = yield this.graphProvider.getGraphInstance();
            const graphConfig = yield this.graphProvider.getGraphOptions();
            return { graph: graphInstance, config: graphConfig };
        });
        /** \u83B7\u53D6GraphOptions */
        this.getPortRenderConfig = () => {
            const dagOptions = {
                onPortRendered(portRenderedArgs) {
                    var _a, _b;
                    /* eslint-disable-next-line @typescript-eslint/no-this-alias */
                    const graph = this;
                    const { port, node } = portRenderedArgs;
                    const { contentSelectors } = portRenderedArgs;
                    const portContainer = contentSelectors && contentSelectors['xflow-port-group'];
                    if (portContainer instanceof Element) {
                        portContainer.setAttribute('class', classnames_default()('xflow-port-group', {
                            connected: port.connected && port.group !== 'out',
                            groupPort: ((_a = node) === null || _a === void 0 ? void 0 : _a.isGroup) && ((_b = node) === null || _b === void 0 ? void 0 : _b.isGroup()),
                        }));
                        portContainer.addEventListener('mouseenter', e => {
                            const eventArgs = {
                                e: e,
                                portId: port.id,
                                nodeId: node.id,
                                portData: port,
                                nodeData: node.getData(),
                                tooltip: port.tooltip,
                                placement: port.group,
                            };
                            graph.trigger(NsPortEvent.MOUSE_ENTER, eventArgs);
                        });
                        portContainer.addEventListener('mouseleave', e => {
                            const eventArgs = {
                                e: e,
                                portId: port.id,
                                nodeId: node.id,
                                portData: port,
                                nodeData: node.getData(),
                                tooltip: port.tooltip,
                                placement: port.group,
                            };
                            graph.trigger(NsPortEvent.MOUSE_LEAVE, eventArgs);
                        });
                    }
                },
            };
            return dagOptions;
        };
        this.registerHookHub = () => node_port_awaiter(this, void 0, void 0, function* () {
            return Disposable.create(() => { });
        });
        this.registerHook = (hooks) => node_port_awaiter(this, void 0, void 0, function* () {
            const toDispose = new disposable_DisposableCollection();
            const disposables = [
                hooks.graphOptions.registerHook({
                    name: 'add onPortRendered options ',
                    handler: (args) => node_port_awaiter(this, void 0, void 0, function* () {
                        Object.assign(args, this.getPortRenderConfig());
                    }),
                }),
            ];
            toDispose.pushAll(disposables);
            return Disposable.create(() => { });
        });
    }
    registerModel(registry) {
        registry.registerModel({
            id: ACTIVE_NODE_PORT.id,
            watchChange: (self) => node_port_awaiter(this, void 0, void 0, function* () {
                const { graph, config } = yield this.getGraphInstance();
                const calcPosition = (e) => {
                    const { x, y, width, height } = e.target.getBoundingClientRect();
                    const clientRect = config.rootContainer.getBoundingClientRect();
                    const position = {
                        x: x - ((clientRect === null || clientRect === void 0 ? void 0 : clientRect.x) || 0) + width / 2,
                        y: y - ((clientRect === null || clientRect === void 0 ? void 0 : clientRect.y) || 0) + height / 2,
                    };
                    return position;
                };
                const onMouseEnter = (args) => {
                    self.setValue(Object.assign(Object.assign({}, args), { position: calcPosition(args.e) }));
                };
                const onMouseLeave = () => {
                    self.setValue(null);
                };
                /** \u7ED1\u5B9A\u4E8B\u4EF6 */
                graph.on(NsPortEvent.MOUSE_ENTER, onMouseEnter);
                graph.on(NsPortEvent.MOUSE_LEAVE, onMouseLeave);
                graph.on('cell:mouseleave', onMouseLeave);
                return Disposable.create(() => {
                    /** \u89E3\u9664\u7ED1\u5B9A */
                    graph.off(NsPortEvent.MOUSE_ENTER, onMouseEnter);
                    graph.off(NsPortEvent.MOUSE_LEAVE, onMouseLeave);
                });
            }),
        });
    }
};
node_port_decorate([
    index_esm.inject(IGraphProvider),
    node_port_metadata("design:type", Object)
], node_port_NodePortTooltipContribution.prototype, "graphProvider", void 0);
node_port_NodePortTooltipContribution = node_port_decorate([
    index_esm.singleton({ contrib: [IHookContribution, IModelContribution] })
], node_port_NodePortTooltipContribution);

//# sourceMappingURL=node-port.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-node-port-tooltip/module.js


/** Application \u6269\u5C55\u4F9D\u8D56 */

/** \u4F9D\u8D56\u6269\u5C55\u6A21\u5757\uFF0C\u5FC5\u987B\u8981\u52A0\u8F7D */
const canvas_node_port_tooltip_module_createModule = () => {
    return index_esm.Module(register => {
        /** \u6269\u5C55 runtime hook */
        register(node_port_NodePortTooltipContribution);
    });
};

//# sourceMappingURL=module.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-node-port-tooltip/components/index.js
var canvas_node_port_tooltip_components_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};





const canvas_node_port_tooltip_components_CONFIG_TYPE = 'CanvasNodePortTooltip';
const RenderTooltip = props => {
    const xflow = useXFlowApp();
    const [state, , renderModel] = createComponentModel(null);
    react_default.a.useEffect(() => {
        if (!xflow) {
            return;
        }
        const subscribe = () => canvas_node_port_tooltip_components_awaiter(void 0, void 0, void 0, function* () {
            const { model } = yield ACTIVE_NODE_PORT.useModel(xflow.modelService);
            return model.watch(value => {
                renderModel.setValue(value);
            });
        });
        const subscription = subscribe();
        return () => {
            subscription.then(disposable => {
                disposable.dispose();
            });
        };
    }, [renderModel, xflow]);
    const visible = !!(state && state.position && state.position.x);
    if (!visible) {
        return null;
    }
    const title = props.getTooltip ? props.getTooltip(state) : state.tooltip;
    return (react_default.a.createElement(es_tooltip["a" /* default */], { visible: visible, title: title, placement: state.placement || 'top' },
        react_default.a.createElement("span", { className: "canvas-node-port-tooltip", style: { position: 'absolute', left: state.position.x, top: state.position.y } })));
};
const CanvasNodePortTooltip = props => {
    const getConfig = react_default.a.useCallback(() => canvas_node_port_tooltip_components_awaiter(void 0, void 0, void 0, function* () { return null; }), []);
    return (react_default.a.createElement(XFlowAppExtensionMoudle, { createModule: canvas_node_port_tooltip_module_createModule, config: { CONFIG_TYPE: canvas_node_port_tooltip_components_CONFIG_TYPE, getConfig } },
        react_default.a.createElement(RenderTooltip, Object.assign({}, props))));
};
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-node-port-tooltip/index.js

//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-context-menu/config.js
var canvas_context_menu_config_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};

var NsContextMenu;
(function (NsContextMenu) {
    NsContextMenu.CONFIG_TYPE = 'ContextMenuConfig';
})(NsContextMenu || (NsContextMenu = {}));
class config_ContextMenuConfig {
    /** uuid */
    constructor(moduleId) {
        /** config type */
        this.CONFIG_TYPE = NsContextMenu.CONFIG_TYPE;
        /** \u8BBE\u7F6E\u7EC4\u4EF6\u7684props */
        this.setMenuModelService = (service) => {
            this.menuModelService = service;
        };
        /** \u8BBE\u7F6E\u7EC4\u4EF6\u7684props */
        this.setCustomMenuRender = (service) => {
            this.menuCustomRender = service;
        };
        /** \u83B7\u53D6Props */
        this.getConfig = () => canvas_context_menu_config_awaiter(this, void 0, void 0, function* () {
            return {
                CONFIG_TYPE: this.CONFIG_TYPE,
                menuCustomRender: this.menuCustomRender,
                menuModelService: this.menuModelService,
            };
        });
        this.moduleId = moduleId || uuidv4();
    }
    /** dispose */
    dispose() { }
}
//# sourceMappingURL=config.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-context-menu/interface.js

var interface_CONTEXT_MENU_MODEL;
(function (CONTEXT_MENU_MODEL) {
    CONTEXT_MENU_MODEL.id = 'CONTEXT_MENU_MODEL';
    CONTEXT_MENU_MODEL.useValue = model_service_constant_namespaceObject.useModelValueUtil(CONTEXT_MENU_MODEL.id);
    CONTEXT_MENU_MODEL.getModel = model_service_constant_namespaceObject.getModelUtil(CONTEXT_MENU_MODEL.id);
})(interface_CONTEXT_MENU_MODEL || (interface_CONTEXT_MENU_MODEL = {}));
//# sourceMappingURL=interface.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-context-menu/contributions/model.js
var model_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var model_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var model_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};




const { inject, singleton } = index_esm;
/**
 * IModelContribution
 */
let model_CanvasContextMenuContribution = class CanvasContextMenuContribution {
    constructor() {
        /** \u6CE8\u518C model */
        this.toDispose = new disposable_DisposableCollection();
        /** \u83B7\u53D6 MenuModel */
        this.getMenuModelValue = (contextMenuInfo) => model_awaiter(this, void 0, void 0, function* () {
            const config = yield this.menuConfig.getConfig();
            /** \u83B7\u53D6\u5750\u6807 */
            const { anchor, type, cell } = contextMenuInfo;
            /** \u83B7\u53D6Menu */
            const toDispose = new disposable_DisposableCollection();
            this.toDispose.push(toDispose);
            const data = cell ? cell.getData() : null;
            const menuModel = new rx_model_RxModel({
                id: 'menuroot',
                type: MenuItemType.Root,
                submenu: [],
            });
            toDispose.push(Disposable.create(() => {
                menuModel.dispose();
            }));
            const renderProps = {
                toDispose,
                anchor: anchor,
                target: { data, type },
                customRender: null,
                menuModel: menuModel,
            };
            if (config.menuCustomRender) {
                renderProps.customRender = yield config.menuCustomRender(contextMenuInfo, this.modelService);
            }
            if (config.menuModelService) {
                yield config.menuModelService(contextMenuInfo, renderProps.menuModel, this.modelService, toDispose);
            }
            return renderProps;
        });
    }
    /** \u6CE8\u518C MenuModel */
    registerModel(registry) {
        const toDispose = [
            registry.registerModel({
                id: interface_CONTEXT_MENU_MODEL.id,
                getInitialValue: () => null,
                watchChange: (self, modelService) => model_awaiter(this, void 0, void 0, function* () {
                    const contextMenuModel = yield model_service_constant_namespaceObject.CONTEXTMENU_TARGET.getModel(modelService);
                    return contextMenuModel.watch((contextMenuInfo) => model_awaiter(this, void 0, void 0, function* () {
                        const contextMenuValue = yield this.getMenuModelValue(contextMenuInfo);
                        self.setValue(contextMenuValue);
                    }));
                }),
            }),
        ];
        this.toDispose.pushAll(toDispose);
    }
};
model_decorate([
    inject(config_ContextMenuConfig),
    model_metadata("design:type", config_ContextMenuConfig)
], model_CanvasContextMenuContribution.prototype, "menuConfig", void 0);
model_decorate([
    inject(IModelService),
    model_metadata("design:type", Object)
], model_CanvasContextMenuContribution.prototype, "modelService", void 0);
model_CanvasContextMenuContribution = model_decorate([
    singleton({ contrib: [IModelContribution] })
], model_CanvasContextMenuContribution);

//# sourceMappingURL=model.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-context-menu/module.js

/** Application \u6269\u5C55\u4F9D\u8D56 */



/** \u4F9D\u8D56\u6269\u5C55\u6A21\u5757\uFF0C\u5FC5\u987B\u8981\u52A0\u8F7D */
const canvas_context_menu_module_createModule = (config) => {
    return index_esm.Module(register => {
        /** \u6269\u5C55 runtime hook */
        register(model_CanvasContextMenuContribution);
        register(config_ContextMenuConfig, { useValue: config });
    });
};

//# sourceMappingURL=module.js.map
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@antv/x6-react-components/es/dropdown/index.js
var dropdown = __webpack_require__("jm/m");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@antv/x6-react-components/es/menu/menu.js + 4 modules
var menu = __webpack_require__("Et1O");

// CONCATENATED MODULE: ../xflow-extension/es/canvas-context-menu/components/menu-render.js
var menu_render_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};



const renderMenuOptions = (props) => {
    const { idx, menuOptions: menuItem, target, modelService, commandService, onHide } = props;
    const { id, label, isEnabled = true, isVisible = true, iconName, submenu = [], active, hotkey, render, onClick, } = menuItem;
    if (!isVisible) {
        return null;
    }
    /** \u5206\u9694\u7B26\uFF1Aseparator */
    if (menuItem.type === 'separator') {
        return react_default.a.createElement(menu["a" /* Menu */].Divider, { key: String(menuItem.id) + idx });
    }
    /** \u6839\u7ED3\u70B9\uFF1Aroot */
    if (menuItem.type === 'root') {
        return (react_default.a.createElement(menu["a" /* Menu */], { hasIcon: true }, submenu.map((item, submenuIdx) => renderMenuOptions({
            idx: submenuIdx,
            target,
            commandService,
            modelService,
            menuOptions: item,
            onHide,
        }))));
    }
    /** \u5B50\u83DC\u5355\uFF1Asubmenu */
    if (menuItem.submenu && Array.isArray(menuItem.submenu)) {
        const Icon = IconStore.get(iconName);
        const isDisable = !isEnabled;
        return (react_default.a.createElement(menu["a" /* Menu */].SubMenu, { key: String(id), text: label, disabled: isDisable || submenu.length === 0, icon: Icon ? react_default.a.createElement(Icon, null) : null, active: active, hotkey: hotkey }, submenu.map((item, submenuIdx) => renderMenuOptions({
            idx: submenuIdx,
            target,
            commandService,
            modelService,
            menuOptions: item,
            onHide,
        }))));
    }
    /** \u53F6\u5B50\u8282\u70B9 */
    const Icon = IconStore.get(iconName);
    if (render) {
        return react_default.a.createElement(render, { menuItem, target, commandService, modelService, onHide }, [
            react_default.a.createElement(menu["a" /* Menu */].Item, { key: String(id), text: label, disabled: !isEnabled, icon: Icon ? react_default.a.createElement(Icon, null) : null, active: active, hotkey: hotkey }),
        ]);
    }
    return (react_default.a.createElement(menu["a" /* Menu */].Item, { key: String(id), text: label, disabled: !isEnabled, icon: Icon ? react_default.a.createElement(Icon, null) : null, active: active, hotkey: hotkey, onClick: () => menu_render_awaiter(void 0, void 0, void 0, function* () {
            yield onClick({ menuItem, target, commandService, modelService });
            onHide && onHide();
        }) }));
};
//# sourceMappingURL=menu-render.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-context-menu/components/menu.js


const XFlowMenu = props => {
    const { menuModel, target, onHide } = props;
    const { modelService, commandService } = useXFlowApp();
    const [state] = useModel(menuModel);
    return renderMenuOptions({
        idx: -1,
        target,
        commandService,
        modelService,
        menuOptions: state,
        onHide,
    });
};
//# sourceMappingURL=menu.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-context-menu/components/index.js
var canvas_context_menu_components_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};





const DisposeHelper = ({ toDispose }) => {
    react_default.a.useEffect(() => {
        return () => {
            toDispose.dispose();
        };
    }, [toDispose]);
    return null;
};
const ContextMenuRender = () => {
    const domRef = react_default.a.useRef();
    const xflow = useXFlowApp();
    const [state, , renderModel] = useModelAsync({
        /** \u7ED1\u5B9AModel\u5230state */
        getModel: () => canvas_context_menu_components_awaiter(void 0, void 0, void 0, function* () {
            return yield interface_CONTEXT_MENU_MODEL.getModel(xflow.modelService);
        }),
        /** \u8BBE\u7F6Estate\u7684\u9ED8\u8BA4\u503C */
        initialState: {
            anchor: null,
            menuModel: null,
            target: null,
            customRender: null,
            toDispose: null,
        },
    });
    const { target, anchor, menuModel, customRender, toDispose } = state;
    if (!target || !anchor || !menuModel) {
        return null;
    }
    const onMaskClick = () => {
        renderModel.setValue({
            anchor: null,
            menuModel: null,
            target: null,
            customRender: null,
            toDispose: null,
        });
    };
    const overlay = customRender ? (react_default.a.createElement(customRender, {
        target,
        modelService: xflow.modelService,
        onHide: onMaskClick,
    })) : (react_default.a.createElement(XFlowMenu, { target: target, menuModel: menuModel, onHide: onMaskClick }));
    return (react_default.a.createElement("div", { className: "xflow-menu-mask", ref: domRef, onClick: onMaskClick, onContextMenu: e => {
            e.preventDefault();
            e.stopPropagation();
        } },
        react_default.a.createElement(DisposeHelper, { toDispose: toDispose }),
        react_default.a.createElement(dropdown["a" /* Dropdown */], { visible: true, getPopupContainer: () => domRef.current, overlay: overlay },
            react_default.a.createElement("div", { className: "xflow-context-menu-anchor", style: { top: anchor.y, left: anchor.x } }))));
};
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-context-menu/index.js





const canvas_context_menu_CONFIG_TYPE = 'CanvasContextMenu';
const CanvasContextMenu = props => {
    const xflow = useXFlowApp();
    const canRender = !!xflow;
    /** \u83B7\u53D6ContextMenu\u7684\u914D\u7F6E */
    const contextMenuConfig = react_default.a.useMemo(() => (props.config ? props.config : new config_ContextMenuConfig()), [props.config]);
    return (react_default.a.createElement(XFlowAppExtensionMoudle, { createModule: canvas_context_menu_module_createModule, config: contextMenuConfig }, canRender && react_default.a.createElement(ContextMenuRender, { config: contextMenuConfig })));
};
const createCtxMenuConfig = (addOptions) => (props) => {
    /** bridge config and props */
    const proxy = react_default.a.useMemo(() => ({ getValue: () => ({}) }), []);
    proxy.getValue = () => props;
    const toolbarConfig = react_default.a.useMemo(() => {
        const config = new config_ContextMenuConfig();
        addOptions(config, proxy);
        return config;
    }, [proxy]);
    return toolbarConfig;
};
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-toolbar/config.js

const config_CONFIG_TYPE = 'CanvasToolbar';
class config_ToolbarConfig {
    /** uuid */
    constructor() {
        /** config type */
        this.CONFIG_TYPE = config_CONFIG_TYPE;
        /** \u8BBE\u7F6Etoolbar id */
        this.setToolbarName = (moduleId) => {
            this.moduleId = config_CONFIG_TYPE + '__' + moduleId;
        };
        /** \u901A\u8FC7\u8BA2\u9605 modelService \u8BBE\u7F6Etoolbar model */
        this.setToolbarModelService = (service) => {
            this.toolbarModelService = service;
        };
        /** \u8BBE\u7F6E\u7EC4\u4EF6\u7684props */
        this.setCustomToolbarRender = (service) => {
            this.customRenderService = service;
        };
        /** \u83B7\u53D6Props */
        this.getConfig = () => {
            return {
                CONFIG_TYPE: this.CONFIG_TYPE,
                toolbarCustomRender: this.customRenderService,
                toolbarModelService: this.toolbarModelService,
            };
        };
        this.moduleId = config_CONFIG_TYPE + '__' + uuidv4();
    }
    /** dispose */
    dispose() { }
}
//# sourceMappingURL=config.js.map
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/spin/index.js
var spin = __webpack_require__("rAmn");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@antv/x6-react-components/es/toolbar/toolbar.js + 3 modules
var toolbar = __webpack_require__("4SbY");

// CONCATENATED MODULE: ../xflow-extension/es/canvas-toolbar/render-components/toolbar-item.js





const ToolbarItem = props => {
    const app = useXFlowApp();
    const { item, layout } = props;
    const Icon = IconStore.get(item.iconName);
    const clz = classnames_default()({
        ['xflow-toolbar-item']: true,
    });
    const text = layout === 'vertical' ? '' : item.text;
    const icon = Icon ? react_default.a.createElement(Icon, null) : null;
    const ToolbarItemWrap = item.render;
    const { isEnabled = true } = item;
    const { commandService, modelService } = app;
    const onItemClick = () => {
        if (item.onClick) {
            item.onClick({ toolbarItem: item, commandService, modelService });
        }
    };
    if (ToolbarItemWrap) {
        return (react_default.a.createElement(ToolbarItemWrap, Object.assign({}, item, { onClick: onItemClick }),
            react_default.a.createElement(toolbar["a" /* Toolbar */].Item, Object.assign({}, item, { icon: icon, text: text, className: clz, disabled: !isEnabled, tooltip: item.tooltip || item.text, tooltipProps: Object.assign({ placement: layout === 'vertical' ? 'left' : 'bottom' }, item.tooltipProps), onClick: () => { } }))));
    }
    return (react_default.a.createElement(toolbar["a" /* Toolbar */].Item, Object.assign({}, item, { icon: icon, text: text, className: clz, hidden: !item, disabled: !isEnabled, tooltip: item.tooltip || item.text, onClick: onItemClick, tooltipProps: Object.assign(Object.assign({}, item.tooltipProps), { placement: layout === 'vertical' ? 'left' : 'bottom' }) })));
};
//# sourceMappingURL=toolbar-item.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-toolbar/render-components/toolbar-group.js





const ToolbarGroup = props => {
    const { group, layout } = props;
    const groupKey = react_default.a.useMemo(() => {
        return group.name || uuidv4();
    }, [group.name]);
    const { items = [] } = group;
    if (items.length === 0) {
        return null;
    }
    const clz = classnames_default()({
        ['xflow-toolbar-group']: true,
    });
    return (react_default.a.createElement(toolbar["a" /* Toolbar */].Group, { className: clz, key: groupKey }, items.map(item => (react_default.a.createElement(ToolbarItem, { item: item, layout: layout, key: item.id })))));
};
//# sourceMappingURL=toolbar-group.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-toolbar/service.js
var service_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};


const useToolbarModel = (props) => {
    const { config } = props;
    const modelId = config.moduleId;
    const app = useXFlowApp();
    const [state, setState, toolbarModel, isModelReady] = createComponentModel({
        name: modelId,
        layout: props.layout,
        mainGroups: [],
        extraGroups: [],
        customRender: null,
    });
    /** \u6CE8\u518C\u5168\u5C40\u7684model */
    react_default.a.useEffect(() => {
        const toDispose = new disposable_DisposableCollection();
        const deferredModel = app.modelService.findDeferredModel(modelId);
        if (!deferredModel) {
            const { toolbarCustomRender, toolbarModelService } = config.getConfig();
            const d = app.modelService.registerModel({
                id: modelId,
                modelFactory: () => toolbarModel,
                watchChange: (self) => service_awaiter(void 0, void 0, void 0, function* () {
                    if (toolbarModelService) {
                        yield toolbarModelService(self, app.modelService, toDispose);
                    }
                    if (toolbarCustomRender) {
                        const updateCustomRender = customRender => {
                            self.setValue(m => (m.customRender = customRender));
                        };
                        yield toolbarCustomRender(app.modelService, updateCustomRender);
                    }
                    return toDispose;
                }),
            });
            toDispose.push(d);
        }
        return () => {
            toDispose.dispose();
        };
        /* eslint-disable-next-line  */
    }, []);
    return { isModelReady, state, setState, toolbarModel };
};
//# sourceMappingURL=service.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-toolbar/render-components/index.js




// component




/** render toolbar */
const ToolbarRender = props => {
    const { idx, groups, layout, toolbarOptions } = props;
    const { hoverEffect = true } = toolbarOptions;
    return (react_default.a.createElement(toolbar["a" /* Toolbar */], { hoverEffect: hoverEffect }, groups.map((g, gIdx) => {
        const key = idx + gIdx;
        return react_default.a.createElement(ToolbarGroup, { key: key, group: g, layout: layout });
    })));
};
const InnerRender = props => {
    const { isModelReady, state } = useToolbarModel(props);
    const positionStyle = usePositionStyle(props.position);
    const { mainGroups = [], extraGroups = [], layout, customRender } = state;
    const containerClz = classnames_default()(props.className, layout, 'xflow-toolbar');
    const clz = classnames_default()({
        [layout]: true,
        ['xflow-toolbar-root']: true,
    });
    // loading
    if (!isModelReady) {
        return (react_default.a.createElement("div", { className: containerClz, style: Object.assign(Object.assign({}, positionStyle), props.style) },
            react_default.a.createElement(spin["a" /* default */], { spinning: true, size: "small" })));
    }
    // render custom component
    if (customRender) {
        return (react_default.a.createElement("div", { className: containerClz, style: Object.assign(Object.assign({}, positionStyle), props.style) }, react_default.a.createElement(customRender, { config: state })));
    }
    // render toolbars
    return (react_default.a.createElement("div", { className: containerClz, style: Object.assign(Object.assign({}, positionStyle), props.style) },
        react_default.a.createElement("div", { className: clz },
            mainGroups.length > 0 && (react_default.a.createElement(ToolbarRender, { idx: "mainGroups", groups: mainGroups, layout: layout, toolbarOptions: state })),
            extraGroups.length > 0 && (react_default.a.createElement(ToolbarRender, { idx: "extraGroups", groups: extraGroups, layout: layout, toolbarOptions: state })))));
};
/** connect \u6570\u636E */
const XFlowToolbar = react_default.a.memo(InnerRender);
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-toolbar/index.js




const CanvasToolbar = props => {
    const app = useXFlowApp();
    const hasApp = !!app;
    /** \u83B7\u53D6ContextMenu\u7684\u914D\u7F6E */
    const contextMenuConfig = react_default.a.useMemo(() => (props.config ? props.config : new config_ToolbarConfig()), [props.config]);
    if (!hasApp) {
        return null;
    }
    return react_default.a.createElement(XFlowToolbar, Object.assign({}, props, { config: contextMenuConfig }));
};
const createToolbarConfig = (addOptions) => (value) => {
    /** bridge config and value */
    const proxy = react_default.a.useMemo(() => ({ getValue: () => ({}) }), []);
    proxy.getValue = () => value;
    /** \u751F\u6210config */
    const toolbarConfig = react_default.a.useMemo(() => {
        const config = new config_ToolbarConfig();
        addOptions(config, proxy);
        return config;
    }, [proxy]);
    return toolbarConfig;
};
//# sourceMappingURL=index.js.map
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/ZoomInOutlined.js + 1 modules
var ZoomInOutlined = __webpack_require__("H9Gg");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/ZoomOutOutlined.js + 1 modules
var ZoomOutOutlined = __webpack_require__("tdoK");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/OneToOneOutlined.js + 1 modules
var OneToOneOutlined = __webpack_require__("m+di");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/CompressOutlined.js + 1 modules
var CompressOutlined = __webpack_require__("ct5B");

// CONCATENATED MODULE: ../xflow-extension/es/canvas-scale-toolbar/config.js
var canvas_scale_toolbar_config_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};



var config_CANVAS_SCALE_TOOLBAR_CONFIG;
(function (CANVAS_SCALE_TOOLBAR_CONFIG) {
    IconStore.set('ZoomInOutlined', ZoomInOutlined["a" /* default */]);
    IconStore.set('ZoomOutOutlined', ZoomOutOutlined["a" /* default */]);
    IconStore.set('OneToOneOutlined', OneToOneOutlined["a" /* default */]);
    IconStore.set('CompressOutlined', CompressOutlined["a" /* default */]);
    CANVAS_SCALE_TOOLBAR_CONFIG.ZOOM_IN = XFlowGraphCommands.GRAPH_ZOOM.id + '-zoom-in';
    CANVAS_SCALE_TOOLBAR_CONFIG.ZOOM_OUT = XFlowGraphCommands.GRAPH_ZOOM.id + '-zoom-out';
    CANVAS_SCALE_TOOLBAR_CONFIG.SCALE_TO_ONE = XFlowGraphCommands.GRAPH_ZOOM.id + '-scale-to-one';
    CANVAS_SCALE_TOOLBAR_CONFIG.SCALE_TO_FIT = XFlowGraphCommands.GRAPH_ZOOM.id + '-scale-to-fit';
    CANVAS_SCALE_TOOLBAR_CONFIG.MAX_SCALE = 1.5;
    CANVAS_SCALE_TOOLBAR_CONFIG.MIN_SCALE = 0.05;
    CANVAS_SCALE_TOOLBAR_CONFIG.zoomOptions = {
        maxScale: CANVAS_SCALE_TOOLBAR_CONFIG.MAX_SCALE,
        minScale: CANVAS_SCALE_TOOLBAR_CONFIG.MIN_SCALE,
    };
    CANVAS_SCALE_TOOLBAR_CONFIG.getToolbarConfig = (zoomFactor) => {
        return [
            {
                name: 'main',
                items: [
                    {
                        id: CANVAS_SCALE_TOOLBAR_CONFIG.ZOOM_IN,
                        tooltip: '\u653E\u5927',
                        iconName: 'ZoomInOutlined',
                        onClick: ({ commandService }) => {
                            commandService.executeCommand(XFlowGraphCommands.GRAPH_ZOOM.id, {
                                factor: 0.1,
                                zoomOptions: CANVAS_SCALE_TOOLBAR_CONFIG.zoomOptions,
                            });
                        },
                    },
                    {
                        id: CANVAS_SCALE_TOOLBAR_CONFIG.ZOOM_OUT,
                        tooltip: '\u7F29\u5C0F',
                        iconName: 'ZoomOutOutlined',
                        onClick: ({ commandService }) => {
                            commandService.executeCommand(XFlowGraphCommands.GRAPH_ZOOM.id, {
                                factor: -0.1,
                                zoomOptions: CANVAS_SCALE_TOOLBAR_CONFIG.zoomOptions,
                            });
                        },
                    },
                    {
                        id: CANVAS_SCALE_TOOLBAR_CONFIG.SCALE_TO_ONE,
                        iconName: 'OneToOneOutlined',
                        tooltip: '\u7F29\u653E\u52301:1',
                        isEnabled: zoomFactor !== 1,
                        onClick: ({ commandService }) => {
                            commandService.executeCommand(XFlowGraphCommands.GRAPH_ZOOM.id, {
                                factor: 'real',
                                zoomOptions: CANVAS_SCALE_TOOLBAR_CONFIG.zoomOptions,
                            });
                        },
                    },
                    {
                        id: CANVAS_SCALE_TOOLBAR_CONFIG.SCALE_TO_FIT,
                        tooltip: '\u7F29\u653E\u5230\u9002\u5E94\u5C4F\u5E55',
                        iconName: 'CompressOutlined',
                        onClick: ({ commandService }) => {
                            commandService.executeCommand(XFlowGraphCommands.GRAPH_ZOOM.id, {
                                factor: 'fit',
                                zoomOptions: CANVAS_SCALE_TOOLBAR_CONFIG.zoomOptions,
                            });
                        },
                    },
                ],
            },
        ];
    };
})(config_CANVAS_SCALE_TOOLBAR_CONFIG || (config_CANVAS_SCALE_TOOLBAR_CONFIG = {}));
const TOOLBAR_TYPE = 'CANVAS_SCALE_TOOLBAR';
const useConfig = createToolbarConfig(config => {
    config.setToolbarModelService((model, modelService) => canvas_scale_toolbar_config_awaiter(void 0, void 0, void 0, function* () {
        const graphScale = yield model_service_constant_namespaceObject.GRAPH_SCALE.useValue(modelService);
        /** \u8BBE\u7F6E\u521D\u59CB\u503C*/
        model.setValue(m => {
            m.mainGroups = config_CANVAS_SCALE_TOOLBAR_CONFIG.getToolbarConfig(graphScale.zoomFactor);
        });
        const graphScaleModel = yield model_service_constant_namespaceObject.GRAPH_SCALE.getModel(modelService);
        /** graphScaleModel\u66F4\u65B0\u65F6\u8054\u52A8 Toolbar*/
        graphScaleModel.watch(({ zoomFactor }) => {
            model.setValue(m => {
                m.mainGroups = config_CANVAS_SCALE_TOOLBAR_CONFIG.getToolbarConfig(zoomFactor);
            });
        });
    }));
});
//# sourceMappingURL=config.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-scale-toolbar/index.js



const CanvasScaleToolbar = props => {
    const config = useConfig(props);
    return (react_default.a.createElement(CanvasToolbar, Object.assign({ layout: "vertical" }, props, { config: config, position: props.position || { top: 12, right: 12 } })));
};

//# sourceMappingURL=index.js.map
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/form/index.js + 15 modules
var es_form = __webpack_require__("UL5a");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/button/index.js
var es_button = __webpack_require__("SCaQ");

// CONCATENATED MODULE: ../xflow-extension/es/demo-utils/form-builder/index.js


function FormBuilder(props) {
    const { className, layout, initialValues, form, formItems = [], onFinish, submitButton, buttonProps, } = props;
    if (!form) {
        return null;
    }
    const style = layout === 'vertical' ? { padding: '0px 12px' } : { padding: '8px 12px' };
    return (react_default.a.createElement(es_form["a" /* default */], { size: "small", form: form, style: style, layout: layout, onFinish: onFinish, className: className, initialValues: initialValues, labelCol: layout === 'vertical' ? { span: 24 } : { span: 8 }, wrapperCol: layout === 'vertical' ? { span: 24 } : { span: 16 } },
        formItems.map(item => (react_default.a.createElement(es_form["a" /* default */].Item, Object.assign({ label: item.label, name: item.name, rules: item.rules }, item.itemProps), react_default.a.createElement(item.render, item.renderProps)))),
        react_default.a.createElement(es_form["a" /* default */].Item, { wrapperCol: { offset: 0, span: 24 } }, submitButton ? (submitButton) : (react_default.a.createElement(es_button["a" /* default */], Object.assign({ type: "primary", htmlType: "submit", style: { width: '100%' } }, buttonProps), "\\u6267\\u884C\\u547D\\u4EE4")))));
}
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/demo-utils/random/index.js
function randomInt(min, max) {
    return Math.floor(Math.random() * (max - min) + min);
}
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/demo-utils/index.js


//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-mini-map/interface.js
const IMinimapConfigProvider = Symbol('IMinimapConfigProvider');
//# sourceMappingURL=interface.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-mini-map/contributions/hook.js
var contributions_hook_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var hook_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var contributions_hook_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};



/**
 * \u5185\u7F6E\u7684hook contribution
 * \u5904\u7406 config\u4E0A\u7684runtime\u7684\u6CE8\u518C\u9879
 */
let contributions_hook_HookContribution = class HookContribution {
    constructor() {
        this.toDispose = new disposable_DisposableCollection();
        this.registerHookHub = () => contributions_hook_awaiter(this, void 0, void 0, function* () {
            return Disposable.create(() => { });
        });
        this.registerHook = (hooks) => contributions_hook_awaiter(this, void 0, void 0, function* () {
            const toDispose = new disposable_DisposableCollection();
            const disposables = [
                hooks.graphOptions.registerHook({
                    name: 'add minimap options',
                    handler: (args) => contributions_hook_awaiter(this, void 0, void 0, function* () {
                        // \u5BF9\u9F50\u7EBF\u914D\u7F6E\uFF0C\u8F85\u52A9\u79FB\u52A8\u8282\u70B9\u6392\u7248\uFF08\u8BE6\u7EC6\u6587\u6863\uFF1Ahttps://X6.antv.vision/zh/docs/tutorial/basic/snapline\uFF09
                        const minimapOptions = yield this.minimapConfig.getConfig();
                        args.minimap = Object.assign({}, minimapOptions);
                    }),
                }),
            ];
            toDispose.pushAll(disposables);
            return Disposable.create(() => { });
        });
    }
};
contributions_hook_decorate([
    index_esm.inject(IMinimapConfigProvider),
    hook_metadata("design:type", Object)
], contributions_hook_HookContribution.prototype, "minimapConfig", void 0);
contributions_hook_HookContribution = contributions_hook_decorate([
    index_esm.singleton({ contrib: IHookContribution })
], contributions_hook_HookContribution);

//# sourceMappingURL=hook.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-mini-map/module.js

/** Application \u6269\u5C55\u4F9D\u8D56 */



/** \u4F9D\u8D56\u6269\u5C55\u6A21\u5757\uFF0C\u5FC5\u987B\u8981\u52A0\u8F7D */
const canvas_mini_map_module_createModule = (config) => {
    return index_esm.Module(register => {
        register(IMinimapConfigProvider, { useDynamic: () => config });
        /** \u6269\u5C55 runtime hook */
        register(contributions_hook_HookContribution);
    });
};

//# sourceMappingURL=module.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-mini-map/x6-node-view/index.js

class x6_node_view_SimpleNodeView extends es["h" /* NodeView */] {
    renderMarkup() {
        return this.renderJSONMarkup({
            tagName: 'rect',
            selector: 'body',
        });
    }
    update() {
        super.update({
            body: {
                refWidth: '100%',
                refHeight: '100%',
                fill: x6_node_view_SimpleNodeView.nodeFillColor,
            },
        });
    }
}
x6_node_view_SimpleNodeView.nodeFillColor = '#31d0c6';
x6_node_view_SimpleNodeView.setNodeFillColor = (color) => {
    x6_node_view_SimpleNodeView.nodeFillColor = color;
};
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-mini-map/components/index.js
var canvas_mini_map_components_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};





/** \u914D\u7F6E\u7C7B\u578B */
const canvas_mini_map_components_CONFIG_TYPE = 'CanvasMiniMap';
/** \u83B7\u53D6\u9ED8\u8BA4\u914D\u7F6E */
const getDefaultMinimapOptions = () => {
    return {
        grid: false,
        enabled: true,
        width: 200,
        height: 120,
        padding: 8,
        graphOptions: {
            async: true,
            getCellView(cell) {
                if (cell.isNode()) {
                    return x6_node_view_SimpleNodeView;
                }
            },
            createCellView(cell) {
                if (cell.isEdge()) {
                    return null;
                }
            },
        },
    };
};
const CanvasMiniMap = props => {
    const { nodeFillColor, borderColor = '#ced4de', handlerColor = 'rgba(0,0,0,.3)', miniMapClz = '', position = { bottom: 12, right: 12 }, minimapOptions = {}, } = props;
    /** x6\u753B\u5E03\u7684dom\u8282\u70B9 */
    const minimapRef = react_default.a.useRef(null);
    const minimapConfigRef = react_default.a.useRef(props.minimapOptions);
    const classNameSet = react_default.a.useMemo(() => {
        return new Set([
            miniMapClz,
            'xflow-minimap',
            'minimap-instacne-' + Date.now().toString(),
        ]);
    }, [miniMapClz]);
    const getConfig = react_default.a.useMemo(() => () => canvas_mini_map_components_awaiter(void 0, void 0, void 0, function* () {
        return Object.assign(Object.assign(Object.assign({}, getDefaultMinimapOptions()), minimapConfigRef.current), { container: minimapRef.current });
    }), [minimapRef]);
    const style = usePositionStyle(position);
    react_default.a.useEffect(() => {
        /** \u8BBE\u7F6Eminimap\u5BB9\u5668 */
        minimapConfigRef.current = minimapOptions;
    }, [minimapConfigRef, minimapOptions]);
    react_default.a.useEffect(() => {
        /** \u8BBE\u7F6ENode\u6837\u5F0F */
        if (nodeFillColor) {
            x6_node_view_SimpleNodeView.setNodeFillColor(nodeFillColor);
        }
    }, [nodeFillColor]);
    react_default.a.useEffect(() => {
        const containerSelector = Array.from(classNameSet).reduce((acc, clz) => (clz ? \`\${acc}.\${clz}\` : acc), '');
        const cssString = \`
      \${containerSelector} .x6-widget-minimap-viewport {
        border: 1px solid \${borderColor};
        margin: 0;
      }
      \${containerSelector} .x6-widget-minimap-viewport-zoom {
        border: 1px solid \${handlerColor}; 
      }
    \`;
        const $style = insertCss(cssString);
        return () => {
            document.head.removeChild($style);
        };
    }, [borderColor, classNameSet, handlerColor]);
    const clzName = Array.from(classNameSet).join(' ');
    return (react_default.a.createElement(XFlowAppExtensionMoudle, { config: {
            getConfig,
            CONFIG_TYPE: canvas_mini_map_components_CONFIG_TYPE,
        }, createModule: canvas_mini_map_module_createModule },
        react_default.a.createElement("div", { ref: minimapRef, className: clzName, style: style })));
};
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-mini-map/index.js

//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/base-panel/config.js
/** baseConfig */
class PropsProxy {
    constructor() {
        /** \u8BBE\u7F6E\u7EC4\u4EF6\u7684props */
        this.getValue = () => {
            return {};
        };
    }
    /** dispose */
    dispose() {
        this.getValue = () => null;
    }
}
/** baseConfig */
class PanelBaseConfig {
    /** uuid */
    constructor(moduleId) {
        this.moduleId = moduleId;
    }
    /** dispose */
    dispose() { }
}
//# sourceMappingURL=config.js.map
// CONCATENATED MODULE: ../xflow-extension/es/base-panel/context.js

const PanelContext = react_default.a.createContext({
    propsProxy: null,
    commandService: null,
    modelService: null,
});
const usePanelContext = () => react_default.a.useContext(PanelContext);
//# sourceMappingURL=context.js.map
// CONCATENATED MODULE: ../xflow-extension/es/base-panel/index.js





const WorkspacePanel = props => {
    const { className, position, style, children } = props;
    const app = useXFlowApp();
    const positionStyle = usePositionStyle(position);
    const propsProxy = react_default.a.useMemo(() => {
        return new PropsProxy();
    }, []);
    react_default.a.useEffect(() => {
        return () => {
            propsProxy.dispose();
        };
    }, [propsProxy]);
    if (!app || !app.modelService) {
        return null;
    }
    propsProxy.getValue = () => props;
    const clz = classnames_default()({
        [className]: !!className,
        'xflow-workspace-panel': true,
    });
    const { commandService, modelService } = app;
    return (react_default.a.createElement(PanelContext.Provider, { value: { propsProxy, commandService, modelService } },
        react_default.a.createElement("div", { className: clz, style: Object.assign(Object.assign({}, positionStyle), style) }, children)));
};


//# sourceMappingURL=index.js.map
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/tree/index.js + 13 modules
var tree = __webpack_require__("6XiH");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/popover/index.js
var es_popover = __webpack_require__("excc");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/empty/index.js + 2 modules
var empty = __webpack_require__("MLLq");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/FolderOpenFilled.js + 1 modules
var FolderOpenFilled = __webpack_require__("aE8X");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/FolderFilled.js + 1 modules
var FolderFilled = __webpack_require__("R0Fx");

// CONCATENATED MODULE: ../xflow-extension/es/canvas-dag-extension/constants.js

const EDGE_PATH_TYPE = {
    /** node \u6C34\u5E73 */
    HORIRONTAL_NODE: 'xflow-node-horizontal-edge',
    /** Node \u5782\u76F4 */
    VERTICAL_NODE: 'xflow-node-vertical-edge',
    /** Group \u5782\u76F4 */
    VERTICAL_GROUP: 'xflow-group-vertical-edge',
};
const XFLOW_SHAPE = {
    EDGE: 'xflow-edge',
};
const XFLOW_NODE_SHAPE = 'XFLOW_NODE_SHAPE';
const EDGE_PROCESSING_CLASSNAME = 'processing';
const NODE_DEFAULT_WIDTH = 160;
const NODE_DEFAULT_HEIGHT = 32;
/** \u753B\u5E03\u72B6\u6001 */
var constants_GRAPH_STATUS_INFO;
(function (GRAPH_STATUS_INFO) {
    /** Model id */
    GRAPH_STATUS_INFO.id = 'GRAPH_STATUS_INFO';
    /** \u7C7B\u578B */
    let StatusEnum;
    (function (StatusEnum) {
        StatusEnum["SUCCESS"] = "success";
        StatusEnum["PROCESSING"] = "processing";
        StatusEnum["ERROR"] = "error";
        StatusEnum["DEFAULT"] = "default";
        StatusEnum["WARNING"] = "warning";
    })(StatusEnum = GRAPH_STATUS_INFO.StatusEnum || (GRAPH_STATUS_INFO.StatusEnum = {}));
    /** Model Utils */
    GRAPH_STATUS_INFO.getModel = getModelUtil(GRAPH_STATUS_INFO.id);
    GRAPH_STATUS_INFO.useValue = useModelValueUtil(GRAPH_STATUS_INFO.id);
})(constants_GRAPH_STATUS_INFO || (constants_GRAPH_STATUS_INFO = {}));
var XFlowDagCommands;
(function (XFlowDagCommands) {
    //\u66F4\u65B0\u8282\u70B9\u7684\u72B6\u6001
    XFlowDagCommands.QUERY_GRAPH_STATUS = {
        id: 'xflow:query-graph-status',
        label: '\u67E5\u8BE2\u753B\u5E03\u8282\u70B9\u72B6\u6001',
    };
})(XFlowDagCommands || (XFlowDagCommands = {}));
//# sourceMappingURL=constants.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-dag-extension/x6-extension/node.js
/* eslint-disable @typescript-eslint/lines-between-class-members */




let XFlowNode;
const { AnchorGroup } = NsGraph;
if (es["g" /* Node */].registry.exist(XFLOW_NODE_SHAPE)) {
    XFlowNode = es["g" /* Node */].registry.get(XFLOW_NODE_SHAPE);
}
else {
    XFlowNode = x6_react_shape_es["a" /* ReactShape */].define({
        width: NODE_DEFAULT_WIDTH,
        height: NODE_DEFAULT_HEIGHT,
        shape: XFLOW_NODE_SHAPE,
        // X6_NODE_PORTAL_NODE_VIEW
        view: constants_namespaceObject.X6_NODE_PORTAL_NODE_VIEW,
        ports: {
            groups: {
                top: {
                    zIndex: 2,
                    position: {
                        name: AnchorGroup.TOP,
                    },
                },
                bottom: {
                    zIndex: 2,
                    position: {
                        name: AnchorGroup.BOTTOM,
                    },
                },
                right: {
                    zIndex: 2,
                    position: {
                        name: AnchorGroup.RIGHT,
                    },
                },
                left: {
                    zIndex: 2,
                    position: {
                        name: AnchorGroup.LEFT,
                    },
                },
            },
        },
        attrs: {
            body: {
                magnet: false,
                fill: 'none',
                stroke: 'none',
                refWidth: '100%',
                refHeight: '100%',
                zIndex: 1,
            },
        },
        portMarkup: [
            {
                tagName: 'g',
                selector: 'xflow-port-group',
                className: 'xflow-port-group',
                attrs: {
                    width: 8,
                    height: 8,
                    x: -4,
                    y: -4,
                    zIndex: 10,
                    // magnet\u51B3\u5B9A\u662F\u5426\u53EF\u4EA4\u4E92
                    magnet: 'true',
                },
                children: [
                    {
                        tagName: 'circle',
                        selector: 'xflow-port',
                        className: 'xflow-port',
                        attrs: {
                            r: 4,
                            fill: '#fff',
                            stroke: '#d9d9d9',
                            zIndex: 12,
                        },
                    },
                    {
                        tagName: 'polygon',
                        selector: 'xflow-port-arrow',
                        className: 'xflow-port-arrow',
                        attrs: {
                            points: '0,0 8,0 4,4 ',
                            fill: '#d9d9d9',
                            stroke: '#d9d9d9',
                            zIndex: 13,
                            transform: 'translate(-4,0)',
                        },
                    },
                ],
            },
        ],
    });
}

//# sourceMappingURL=node.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-node-tree-panel/panel-body.js
var panel_body_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};






const { DirectoryTree, TreeNode } = tree["a" /* default */];
const FolderIcon = ({ expanded }) => {
    return expanded ? react_default.a.createElement(FolderOpenFilled["a" /* default */], null) : react_default.a.createElement(FolderFilled["a" /* default */], null);
};
const defaultNodeFactory = (args) => {
    return new XFlowNode(args);
};
const renderNode = (props) => {
    const { nodeConfig, onMouseDown, graphConfig, modelService, commandService } = props;
    if (!graphConfig) {
        return react_default.a.createElement("div", null);
    }
    const renderKey = graphConfig.nodeTypeParser(nodeConfig) || constants_namespaceObject.XFLOW_DEFAULT_NODE;
    const reactComponent = graphConfig.nodeRender.get(renderKey);
    return (react_default.a.createElement("div", { onMouseDown: onMouseDown }, react_default.a.createElement(reactComponent, {
        commandService,
        modelService,
        data: nodeConfig,
        isNodeTreePanel: true,
    })));
};
const NodeTitle = (props) => {
    const [isVisible, setVisible] = react_default.a.useState(false);
    const { prefixClz, graphConfig, commandService, modelService, popoverContent, onMouseDown, item, } = props;
    return (react_default.a.createElement(react_default.a.Fragment, null,
        popoverContent && (react_default.a.createElement(es_popover["a" /* default */], { placement: "right", destroyTooltipOnHide: true, content: popoverContent, visible: isVisible, onVisibleChange: val => {
                setVisible(val);
            } },
            react_default.a.createElement("div", { className: \`\${prefixClz}-node-wrapper\`, onMouseEnter: () => {
                    setVisible(true);
                } }, renderNode({
                graphConfig,
                commandService: commandService,
                onMouseDown,
                modelService,
                nodeConfig: item,
            })))),
        !popoverContent && (react_default.a.createElement("div", { className: \`\${prefixClz}-node-wrapper\`, onMouseEnter: () => {
                setVisible(true);
            } }, renderNode({
            graphConfig,
            commandService: commandService,
            onMouseDown,
            modelService,
            nodeConfig: item,
        })))));
};
const NodePanelBody = props => {
    const { x6NodeFactory, dndOptions, onNodeDrop, state, onFolderExpand, prefixClz } = props;
    const { graphProvider, modelService, commandService } = useXFlowApp();
    const [graphConfig, setConfig] = react_default.a.useState();
    const [dnd, setDnd] = react_default.a.useState();
    const [graph, setGraph] = react_default.a.useState();
    graphProvider.getGraphInstance().then(x6Graph => {
        setGraph(x6Graph);
    });
    react_default.a.useEffect(() => {
        graphProvider.getGraphOptions().then(x6GraphConfig => {
            setConfig(x6GraphConfig);
        });
        if (!graph) {
            return;
        }
        const dndInstance = new es["a" /* Addon */].Dnd(Object.assign(Object.assign({ scaled: false, animation: false }, dndOptions), { target: graph, 
            /** \u8FD9\u91CC\u8003\u8651\u5230\u9700\u8981\u65B0\u589E\u7FA4\u7EC4\u7684\u9700\u6C42\uFF0C\u4E0D\u4F7F\u7528x6\u7684getDropNod\u65B9\u6CD5
             * \u5728validateNode\u65F6\u8C03\u7528command\u6DFB\u52A0
             */
            validateNode: (droppingNode) => panel_body_awaiter(void 0, void 0, void 0, function* () {
                const nodeConfig = Object.assign(Object.assign({}, droppingNode.getData()), droppingNode.getPosition());
                if (onNodeDrop) {
                    yield onNodeDrop(nodeConfig, commandService, modelService);
                }
                else {
                    console.error('onNodeDrop method is required in NodeTree Panel');
                }
                return false;
            }) }));
        setDnd(dndInstance);
    }, [commandService, dndOptions, graph, graphProvider, modelService, onNodeDrop]);
    const onMouseDown = react_default.a.useCallback((nodeConfig) => (e) => {
        if (!graph || !dnd || !graphConfig) {
            return;
        }
        const renderKey = graphConfig.nodeTypeParser(nodeConfig);
        const reactComponent = graphConfig.nodeRender.get(renderKey);
        const wrappedComponent = getNodeReactComponent(reactComponent, commandService, modelService);
        const nodeData = {
            data: nodeConfig,
            width: nodeConfig.width || 180,
            height: nodeConfig.height || 40,
            // X6_NODE_PORTAL_NODE_VIEW
            view: graphConfig.graphId,
            component: wrappedComponent,
        };
        const x6Node = x6NodeFactory ? x6NodeFactory(nodeData) : defaultNodeFactory(nodeData);
        dnd.start(x6Node, e.nativeEvent);
    }, [commandService, dnd, graph, graphConfig, modelService, x6NodeFactory]);
    const renderTree = react_default.a.useCallback((treeList = []) => {
        return treeList.map(item => {
            const { isDirectory, children, popoverContent } = item;
            if (isDirectory) {
                return (react_default.a.createElement(TreeNode, { icon: FolderIcon, key: item.id, title: item.label, className: \`\${prefixClz}-tree-folder\` }, renderTree(children)));
            }
            return (react_default.a.createElement(TreeNode, { isLeaf: true, key: item.id, className: \`\${prefixClz}-tree-leaf\`, icon: react_default.a.createElement("span", null), title: react_default.a.createElement(NodeTitle, { item: item, onMouseDown: onMouseDown(item), popoverContent: popoverContent, prefixClz: prefixClz, modelService: modelService, commandService: commandService, graphConfig: graphConfig }) }));
        });
    }, [commandService, graphConfig, modelService, onMouseDown, prefixClz]);
    return (react_default.a.createElement(react_default.a.Fragment, null,
        react_default.a.createElement("div", { className: \`\${prefixClz}-body\`, style: props.style },
            !state.keyword && (react_default.a.createElement(DirectoryTree, { showIcon: true, selectable: false, autoExpandParent: false, onExpand: onFolderExpand, expandedKeys: state.expandedKeys, className: \`\${prefixClz}-tree\` }, renderTree(state.treeData))),
            state.searchList.length > 0 && (react_default.a.createElement("ul", { className: \`\${prefixClz}-body-list\` }, state.searchList.map(treeNode => (react_default.a.createElement("li", { className: \`\${prefixClz}-body-list-item\` },
                react_default.a.createElement(NodeTitle, { item: treeNode, onMouseDown: onMouseDown(treeNode), popoverContent: treeNode.popoverContent, prefixClz: prefixClz, modelService: modelService, commandService: commandService, graphConfig: graphConfig })))))),
            state.keyword && state.searchList.length === 0 && react_default.a.createElement(empty["a" /* default */], { style: { marginTop: '48px' } }))));
};
//# sourceMappingURL=panel-body.js.map
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/input/index.js + 11 modules
var input = __webpack_require__("BmDy");

// CONCATENATED MODULE: ../xflow-extension/es/canvas-node-tree-panel/panel-header.js



const NodePanelHeader = props => {
    const { prefixClz, onKeywordChange } = props;
    const { propsProxy } = usePanelContext();
    const panelProps = propsProxy.getValue();
    return (react_default.a.createElement(react_default.a.Fragment, null,
        react_default.a.createElement("div", { className: \`\${prefixClz}-header\`, style: props.style },
            panelProps.header && react_default.a.isValidElement(panelProps.header) && panelProps.header,
            panelProps.searchService && (react_default.a.createElement("div", { className: \`\${prefixClz}-header-search\` },
                react_default.a.createElement(input["a" /* default */], { placeholder: "\\u641C\\u7D22\\u7EC4\\u4EF6", allowClear: true, onChange: e => onKeywordChange(e.target.value), style: { width: '100%', border: 0 } }))))));
};
//# sourceMappingURL=panel-header.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-node-tree-panel/panel-footer.js


const NodePanelFooter = props => {
    const { prefixClz } = props;
    const { propsProxy } = usePanelContext();
    const panelProps = propsProxy.getValue();
    return (react_default.a.createElement(react_default.a.Fragment, null,
        react_default.a.createElement("div", { className: \`\${prefixClz}-footer\`, style: props.style }, panelProps.footer && react_default.a.isValidElement(panelProps.footer) && panelProps.footer)));
};
//# sourceMappingURL=panel-footer.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-node-tree-panel/constants.js
const PANEL_HEADER_HEIGHT = 40;
const PANEL_FOOTER_HEIGHT = 40;
const TREE_ROOT_ID = 'XFLOW_TREE_PANEL_ROOT_ID';
//# sourceMappingURL=constants.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-node-tree-panel/utils.js


const usePanelLyaoutStyle = (config) => {
    const headerHeight = (config && config.headerPosition && config.headerPosition.height) || PANEL_HEADER_HEIGHT;
    const footerHeight = (config.footerPosition && config.footerPosition.height) || PANEL_FOOTER_HEIGHT;
    return {
        headerStyle: usePositionStyle(Object.assign({ height: headerHeight, lineHeight: headerHeight, top: 0, left: 0, right: 0 }, config.headerPosition)),
        bodyStyle: usePositionStyle(Object.assign({ left: 0, right: 0, top: headerHeight, bottom: footerHeight }, config.bodyPosition)),
        footerStyle: usePositionStyle(Object.assign({ left: 0, right: 0, lineHeight: footerHeight, height: footerHeight, bottom: 0 }, config.footerPosition)),
    };
};
//# sourceMappingURL=utils.js.map
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/lodash/uniqBy.js
var uniqBy = __webpack_require__("yjkv");
var uniqBy_default = /*#__PURE__*/__webpack_require__.n(uniqBy);

// CONCATENATED MODULE: ../xflow-extension/es/canvas-node-tree-panel/service.js
var canvas_node_tree_panel_service_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};





var NsNodeTreePanelModel;
(function (NsNodeTreePanelModel) {
    NsNodeTreePanelModel.id = 'TREE_PANEL_MODEL';
    NsNodeTreePanelModel.useModel = (model) => canvas_node_tree_panel_service_awaiter(this, void 0, void 0, function* () {
        return model.awaitModel(NsNodeTreePanelModel.id);
    });
})(NsNodeTreePanelModel || (NsNodeTreePanelModel = {}));
/** \u65B9\u4FBF\u5176\u4ED6\u7EC4\u4EF6\u6267\u884CCommand\u6539\u53D8Panel\u5185\u90E8\u72B6\u6001 */
const executeNodeDndTreeCommand = (cmds, updateModel) => {
    cmds.executeCommand(XFlowModelCommands.UPDATE_MODEL.id, {
        getModel: (modelService) => canvas_node_tree_panel_service_awaiter(void 0, void 0, void 0, function* () {
            return NsNodeTreePanelModel.useModel(modelService);
        }),
        updateModel: updateModel,
    });
};
const useTreePanelData = (props) => {
    const { treeDataService, searchService } = props;
    const { modelService } = useXFlowApp();
    /** \u4F7F\u7528model */
    const [state, setState, panelModel] = createComponentModel({
        treeData: [],
        searchList: [],
        treeNodeList: [],
        expandedKeys: [],
        defaultExpandAll: false,
        keyword: '',
    });
    /** \u6CE8\u518C\u6210\u4E3A\u5168\u5C40\u72B6\u6001\uFF0C\u65B9\u4FBF\u5176\u4ED6\u7EC4\u4EF6\u8054\u52A8 */
    react_default.a.useEffect(() => {
        if (modelService.findDeferredModel(NsNodeTreePanelModel.id)) {
            return;
        }
        modelService.registerModel({
            id: NsNodeTreePanelModel.id,
            modelFactory: () => panelModel,
            watchChange: (self) => canvas_node_tree_panel_service_awaiter(void 0, void 0, void 0, function* () {
                const graphMetaModel = yield model_service_constant_namespaceObject.GRAPH_META.getModel(modelService); //useContext(MODELS.GRAPH_META.id)
                const fetch = (meta) => canvas_node_tree_panel_service_awaiter(void 0, void 0, void 0, function* () {
                    const listData = yield treeDataService(meta, modelService);
                    const { treeData, rootNodes } = NodeList2Tree(listData);
                    const currentState = yield self.getValidValue();
                    // \u8BBE\u7F6E\u9ED8\u8BA4\u5C55\u5F00\u7684keys
                    const expandedKeys = currentState.expandedKeys.length > 0
                        ? currentState.expandedKeys
                        : rootNodes.map(i => i.id);
                    return { listData, treeData, expandedKeys };
                });
                const graphMetaDisposable = graphMetaModel.watch((meta) => canvas_node_tree_panel_service_awaiter(void 0, void 0, void 0, function* () {
                    const data = yield fetch(meta);
                    self.setValue({
                        treeNodeList: data.listData,
                        treeData: data.treeData,
                        expandedKeys: data.expandedKeys,
                        defaultExpandAll: false,
                        keyword: '',
                        searchList: [],
                    });
                }));
                return Disposable.create(() => {
                    graphMetaDisposable.dispose();
                });
            }),
        });
        /* eslint-disable-next-line  */
    }, []);
    /** \u6298\u53E0\u6587\u4EF6\u5939 */
    const onFolderExpand = react_default.a.useCallback((expandedKeys) => {
        setState(modelState => {
            modelState.expandedKeys = expandedKeys;
        });
    }, [setState]);
    /** \u641C\u7D22 */
    const onKeywordChange = react_default.a.useCallback((keyword) => canvas_node_tree_panel_service_awaiter(void 0, void 0, void 0, function* () {
        if (!searchService) {
            return console.warn('searchService is not defined');
        }
        if (keyword) {
            const list = yield searchService(state.treeNodeList, keyword);
            setState(modelState => {
                modelState.keyword = keyword;
                modelState.searchList = list;
            });
        }
        else {
            setState(modelState => {
                modelState.keyword = '';
                modelState.searchList = [];
            });
        }
    }), 
    // eslint-disable-next-line
    [searchService, state.treeNodeList]);
    return {
        state,
        setState,
        onKeywordChange,
        onFolderExpand,
    };
};
// \u5C06list\u6570\u636E\u8F6C\u6362\u4E3A\u6811
function NodeList2Tree(treeNodes = []) {
    const getGroupByIdMap = (list) => {
        const uniqList = uniqBy_default()(list, 'id');
        const groups = uniqList.reduce((map, node) => {
            const parentId = node.parentId || TREE_ROOT_ID;
            if (!map.has(parentId)) {
                map.set(parentId, []);
            }
            const group = map.get(parentId);
            group.push(node);
            return map;
        }, new Map());
        return groups;
    };
    const groupMap = getGroupByIdMap(cloneDeep_default()(treeNodes));
    function iterator(nodes, groupMapArgs) {
        return nodes.map(node => {
            if (groupMapArgs.has(node.id)) {
                const children = groupMapArgs.get(node.id);
                node.key = node.id;
                node.isDirectory = true;
                node.children = iterator(children, groupMapArgs) || [];
            }
            else {
                node.isLeaf = true;
            }
            return node;
        });
    }
    const rootNodes = groupMap.get(TREE_ROOT_ID) || [];
    const treeData = iterator(rootNodes, groupMap);
    return { treeData, rootNodes };
}
//# sourceMappingURL=service.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-node-tree-panel/interface.js
var NsTreePanelData;
(function (NsTreePanelData) {
    NsTreePanelData.id = 'TREE_PANEL_DATA';
})(NsTreePanelData || (NsTreePanelData = {}));
//# sourceMappingURL=interface.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-node-tree-panel/index.js









const NodeTreePanelMain = props => {
    const { headerStyle, bodyStyle, footerStyle } = usePanelLyaoutStyle(props);
    const { state, onFolderExpand, onKeywordChange } = useTreePanelData(props);
    return (react_default.a.createElement(react_default.a.Fragment, null,
        react_default.a.createElement(NodePanelHeader, Object.assign({}, props, { state: state, style: headerStyle, onKeywordChange: onKeywordChange })),
        react_default.a.createElement(NodePanelBody, Object.assign({}, props, { state: state, style: bodyStyle, onFolderExpand: onFolderExpand })),
        react_default.a.createElement(NodePanelFooter, Object.assign({}, props, { state: state, style: footerStyle }))));
};
const NodeTreePanel = props => {
    const prefixClz = useXflowPrefixCls('node-dnd-panel');
    return (react_default.a.createElement(WorkspacePanel, Object.assign({}, props, { className: prefixClz }),
        react_default.a.createElement(NodeTreePanelMain, Object.assign({}, props, { prefixClz: prefixClz }))));
};

//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-json-schema-form/panel-footer.js



const PanelFooter = props => {
    const { state } = props;
    const { propsProxy } = usePanelContext();
    const panelProps = propsProxy.getValue();
    const app = useXFlowApp();
    /** \u662F\u5426\u6709 custom footer */
    const isValidFooterFC = panelProps.footer && typeof panelProps.footer === 'function';
    return (react_default.a.createElement(react_default.a.Fragment, null,
        react_default.a.createElement("div", { className: \`\${props.prefixClz}-footer\`, style: props.style },
            isValidFooterFC &&
                react_default.a.createElement(panelProps.footer, Object.assign(Object.assign({}, props), { headerStyle: {}, bodyStyle: {}, footerStyle: props.style, targetData: state.targetData, targetType: state.targetType, modelService: app.modelService, commandService: app.commandService })),
            !panelProps.footer && (react_default.a.createElement("div", { className: \`\${props.prefixClz}-footer-title\` }, panelProps.footerText)))));
};
//# sourceMappingURL=panel-footer.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-json-schema-form/panel-header.js



const PanelHeader = props => {
    const { prefixClz, hasSchema, state } = props;
    const { propsProxy } = usePanelContext();
    const panelProps = propsProxy.getValue();
    const app = useXFlowApp();
    /** form\u4F1A\u4F7F\u7528tab\u505A\u4E3Aheader\uFF0C\u9700\u8981\u8BA9\u51FA\u4F4D\u7F6E*/
    if (hasSchema) {
        return null;
    }
    /** \u662F\u5426\u6709 custom header */
    const isValidHeaderFC = panelProps.header && typeof panelProps.header === 'function';
    return (react_default.a.createElement(react_default.a.Fragment, null,
        react_default.a.createElement("div", { className: \`\${prefixClz}-header\`, style: props.style },
            isValidHeaderFC &&
                react_default.a.createElement(panelProps.header, Object.assign(Object.assign({}, props), { headerStyle: props.style, bodyStyle: {}, footerStyle: {}, targetData: state.targetData, targetType: state.targetType, modelService: app.modelService, commandService: app.commandService })),
            !panelProps.header && (react_default.a.createElement("div", { className: \`\${prefixClz}-header-title\` }, panelProps.headerText || 'Panel')))));
};
//# sourceMappingURL=panel-header.js.map
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/tabs/index.js + 4 modules
var es_tabs = __webpack_require__("NbVC");

// CONCATENATED MODULE: ../xflow-extension/es/canvas-json-schema-form/schema-form/common/tooltip/index.js
var __rest = (undefined && undefined.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};


const Tooltip = props => {
    const { text } = props, otherProps = __rest(props, ["text"]);
    if (!text) {
        return null;
    }
    return (react_default.a.createElement(es_tooltip["a" /* default */], Object.assign({ placement: "left", title: text }, otherProps),
        react_default.a.createElement("div", { className: "text-truncate" }, text)));
};
// \u6E32\u67D3 FormItem \u7684 extra \u9879
function renderFormItemExtra(text) {
    if (!text) {
        return undefined;
    }
    return react_default.a.createElement(Tooltip, { text: text });
}
//# sourceMappingURL=index.js.map
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/lodash/get.js
var get = __webpack_require__("2srY");
var get_default = /*#__PURE__*/__webpack_require__.n(get);

// CONCATENATED MODULE: ../xflow-extension/es/canvas-json-schema-form/schema-form/common/form-item-wrapper/util.js

// \u6839\u636E\u4F9D\u8D56\u5B57\u6BB5\u751F\u6210 FormItem \u7684 updater
function makeUpdaterByDependencies(dependencies, setReasonField) {
    return (prevValues, currentValues) => {
        const hasFunctionDep = dependencies.some(dep => typeof (dep === null || dep === void 0 ? void 0 : dep.condition) === 'function');
        if (hasFunctionDep) {
            if (typeof setReasonField === 'function') {
                setReasonField(undefined); // \u5728\u66F4\u65B0\u89C4\u5219\u662F\u4E00\u4E2A\u51FD\u6570\u65F6\uFF0C\u4E0D\u4F9D\u8D56\u7279\u5B9A\u5B57\u6BB5\u8FDB\u884C\u66F4\u65B0(\u5373\u53EA\u8981\u6709\u5B57\u6BB5\u7684\u503C\u66F4\u65B0\u4E86\u5C31\u66F4\u65B0\uFF0C\u56E0\u4E3A\u4E0D\u77E5\u9053\u51FD\u6570\u5185\u90E8\u4F9D\u8D56\u4EC0\u4E48\u5B57\u6BB5)
            }
            return true;
        }
        return dependencies.some(dep => {
            const { name } = dep;
            if (!name) {
                // eslint-disable-next-line no-console
                console.error(\`[Schema form]: A dependent name must be provided in the updater when the dependency condition is not a function.\`);
                return false;
            }
            const changed = get_default()(prevValues, name) !== get_default()(currentValues, name);
            if (changed) {
                if (typeof setReasonField === 'function') {
                    setReasonField(name);
                }
                return true;
            }
            return false;
        });
    };
}
function isEmptyParamValue(val) {
    return val === '' || val === undefined;
}
// \u6839\u636E\u4F9D\u8D56\u5B57\u6BB5\u7684\u503C\u751F\u6210\u5F53\u524D\u7684 FormItem \u7684\u503C
function makeFormItemControlledProps(form, schema, reasonField) {
    const { getFieldValue, getFieldsValue } = form;
    const { dependencies, hidden, disabled } = schema;
    let isHidden = hidden;
    let isDisabled = disabled;
    // \u5F53\u4F9D\u8D56\u6EE1\u8DB3\u5E76\u4E14\u4F9D\u8D56\u88AB\u64CD\u4F5C\u8FC7\u65F6\uFF0C\u6700\u7EC8\u72B6\u6001\u4F1A\u53D8\u6210\u4F9D\u8D56\u6307\u5B9A\u7684\u72B6\u6001
    dependencies === null || dependencies === void 0 ? void 0 : dependencies.forEach(dependency => {
        const { name: depName, condition, hidden: targetHiden, disabled: targetDisabled } = dependency;
        // \u5728 condition \u4E0D\u662F\u51FD\u6570\u65F6\uFF0C\u53EA\u68C0\u9A8C\u9020\u6210\u66F4\u65B0\u7684\u5B57\u6BB5\u7684\u53D8\u5316
        if (typeof condition !== 'function' && reasonField && depName !== reasonField) {
            return;
        }
        let match = false;
        if (typeof condition === 'function') {
            const values = getFieldsValue();
            match = !!condition(values);
        }
        else {
            if (!depName) {
                // eslint-disable-next-line no-console
                console.error(\`[Schema form]: A dependent name must be provided in the props genarator when the dependency condition is not a function.\`);
                return;
            }
            match = getFieldValue(depName) === condition;
        }
        if (match) {
            if (targetHiden !== undefined) {
                isHidden = targetHiden;
            }
            if (targetDisabled !== undefined) {
                isDisabled = targetDisabled;
            }
        }
    });
    return {
        hidden: isHidden,
        disabled: isDisabled,
    };
}
//# sourceMappingURL=util.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-json-schema-form/schema-form/common/form-item-wrapper/index.js



const FormItemWrapper = props => {
    const { schema, children } = props;
    const [updateReasonField, setUpdateReasonField] = Object(react["useState"])();
    const { dependencies, value, defaultValue, hidden, disabled } = schema;
    const updater = Object(react["useMemo"])(() => {
        return (dependencies === null || dependencies === void 0 ? void 0 : dependencies.length)
            ? makeUpdaterByDependencies(dependencies, setUpdateReasonField)
            : undefined;
    }, [dependencies]);
    if (typeof children !== 'function') {
        throw new Error('[Schema Form]: chilren of FormItemWrapper should be a render prop.');
    }
    const initValue = isEmptyParamValue(value) ? defaultValue : value;
    if (updater) {
        return (react_default.a.createElement(es_form["a" /* default */].Item, { noStyle: true, shouldUpdate: updater }, form => {
            const { hidden: isHidden, disabled: isDisabled } = makeFormItemControlledProps(form, schema, updateReasonField);
            return children({
                hidden: isHidden,
                disabled: isDisabled,
                initialValue: initValue,
            });
        }));
    }
    return children({
        hidden,
        disabled,
        initialValue: initValue,
    });
};
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-json-schema-form/schema-form/control-map/string-input/index.js




const StringInput = props => {
    const { controlSchema } = props;
    const { required, tooltip, extra, name, label, placeholder } = controlSchema;
    return (react_default.a.createElement(FormItemWrapper, { schema: controlSchema }, ({ disabled, hidden, initialValue }) => {
        return (react_default.a.createElement(es_form["a" /* default */].Item, { name: name, label: label, initialValue: initialValue, tooltip: tooltip, extra: renderFormItemExtra(extra), required: required, hidden: hidden },
            react_default.a.createElement(input["a" /* default */], { className: 'xflow-form-input', allowClear: true, placeholder: placeholder, disabled: disabled })));
    }));
};
//# sourceMappingURL=index.js.map
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/checkbox/index.js + 2 modules
var es_checkbox = __webpack_require__("ibId");

// CONCATENATED MODULE: ../xflow-extension/es/canvas-json-schema-form/schema-form/control-map/checkbox/index.js




const Checkbox = props => {
    const { controlSchema } = props;
    const { required, tooltip, extra, name, label } = controlSchema;
    return (react_default.a.createElement(FormItemWrapper, { schema: controlSchema }, ({ hidden, disabled, initialValue }) => {
        return (react_default.a.createElement(es_form["a" /* default */].Item, { className: "xflow-form-checkbox", name: name, initialValue: initialValue, tooltip: tooltip, extra: renderFormItemExtra(extra), required: required, hidden: hidden, valuePropName: "checked", getValueProps: checked => {
                const checkedMap = {
                    true: true,
                    false: false,
                };
                return { checked: !!checkedMap[checked] };
            } },
            react_default.a.createElement(es_checkbox["a" /* default */], { disabled: disabled }, label)));
    }));
};
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-json-schema-form/schema-form/control-map/text-area/index.js




const TextArea = props => {
    const { controlSchema } = props;
    const { required, tooltip, extra, name, label, placeholder } = controlSchema;
    return (react_default.a.createElement(FormItemWrapper, { schema: controlSchema }, ({ hidden, disabled, initialValue }) => {
        return (react_default.a.createElement(es_form["a" /* default */].Item, { name: name, label: label, initialValue: initialValue, tooltip: tooltip, extra: renderFormItemExtra(extra), required: required, hidden: hidden },
            react_default.a.createElement(input["a" /* default */].TextArea, { allowClear: true, placeholder: placeholder, rows: 3, disabled: disabled })));
    }));
};
//# sourceMappingURL=index.js.map
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/select/index.js + 10 modules
var es_select = __webpack_require__("x2dm");

// CONCATENATED MODULE: ../xflow-extension/es/canvas-json-schema-form/schema-form/control-map/select/index.js




const Select = props => {
    const { controlSchema } = props;
    const { required, tooltip, extra, name, label, placeholder, options = [] } = controlSchema;
    return (react_default.a.createElement(FormItemWrapper, { schema: controlSchema }, ({ hidden, disabled, initialValue }) => {
        return (react_default.a.createElement(es_form["a" /* default */].Item, { name: name, label: label, initialValue: initialValue, tooltip: tooltip, extra: renderFormItemExtra(extra), required: required, hidden: hidden },
            react_default.a.createElement(es_select["a" /* default */], { disabled: disabled, placeholder: placeholder }, options.map(option => {
                const { title, value } = option;
                return (react_default.a.createElement(es_select["a" /* default */].Option, { key: value.toString(), value: value }, title));
            }))));
    }));
};
//# sourceMappingURL=index.js.map
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/date-picker/index.js + 58 modules
var date_picker = __webpack_require__("i6l0");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/moment/moment.js
var moment = __webpack_require__("wgY5");
var moment_default = /*#__PURE__*/__webpack_require__.n(moment);

// CONCATENATED MODULE: ../xflow-extension/es/canvas-json-schema-form/schema-form/control-map/datetime/datetime-picker.js



const DatetimePicker = props => {
    const { className, style, disabled, value, onChange } = props;
    const [innerValue, setInnerValue] = Object(react["useState"])(value ? moment_default()(value) : undefined);
    const mountedRef = Object(react["useRef"])(false);
    Object(react["useEffect"])(() => {
        if (!mountedRef.current) {
            mountedRef.current = true;
            return;
        }
        const valueMoment = moment_default()(value);
        if (valueMoment.isValid()) {
            setInnerValue(valueMoment);
        }
    }, [value]);
    const onChangeMoment = Object(react["useCallback"])((_, dateString) => {
        const nextMoment = moment_default()(dateString);
        setInnerValue(nextMoment.isValid() ? nextMoment : undefined);
        if (typeof onChange === 'function') {
            onChange(nextMoment.isValid() ? nextMoment.format('YYYY-MM-DD HH:mm:ss') : '');
        }
    }, [onChange]);
    return (react_default.a.createElement(date_picker["a" /* default */], { showTime: true, allowClear: true, className: className, style: style, disabled: disabled, value: innerValue, onChange: onChangeMoment }));
};
//# sourceMappingURL=datetime-picker.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-json-schema-form/schema-form/control-map/datetime/index.js





const Datetime = props => {
    const { controlSchema } = props;
    const { required, tooltip, extra, name, label } = controlSchema;
    return (react_default.a.createElement(FormItemWrapper, { schema: controlSchema }, ({ disabled, hidden, initialValue }) => {
        return (react_default.a.createElement(es_form["a" /* default */].Item, { name: name, label: label, initialValue: initialValue, tooltip: tooltip, extra: renderFormItemExtra(extra), required: required, hidden: hidden },
            react_default.a.createElement(DatetimePicker, { style: { width: '100%' }, disabled: disabled })));
    }));
};
//# sourceMappingURL=index.js.map
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/input-number/index.js + 11 modules
var input_number = __webpack_require__("gJMY");

// CONCATENATED MODULE: ../xflow-extension/es/canvas-json-schema-form/schema-form/control-map/float/input-number.js


function transformValue(val) {
    const result = Number(val);
    return Number.isNaN(result) ? undefined : result;
}
const InputNumber = props => {
    const { disabled, placeholder, value, onChange } = props;
    const [innerValue, setInnerValue] = Object(react["useState"])(transformValue(value));
    const mountedRef = Object(react["useRef"])(false);
    Object(react["useEffect"])(() => {
        if (!mountedRef.current) {
            mountedRef.current = true;
        }
        setInnerValue(transformValue(value));
    }, [value]);
    const onValueChange = Object(react["useCallback"])((nextValue) => {
        setInnerValue(nextValue);
        if (typeof onChange === 'function') {
            if (nextValue === undefined) {
                onChange('');
            }
            else if (typeof transformValue(nextValue) === 'number') {
                onChange(transformValue(nextValue));
            }
        }
    }, [onChange]);
    return (react_default.a.createElement(input_number["a" /* default */], { style: { width: '100%' }, size: "small", placeholder: placeholder, value: innerValue, onChange: onValueChange, disabled: disabled }));
};
//# sourceMappingURL=input-number.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-json-schema-form/schema-form/control-map/float/index.js





const Float = props => {
    const { controlSchema } = props;
    const { required, tooltip, extra, name, label, placeholder } = controlSchema;
    return (react_default.a.createElement(FormItemWrapper, { schema: controlSchema }, ({ disabled, hidden, initialValue }) => {
        return (react_default.a.createElement(es_form["a" /* default */].Item, { name: name, label: label, initialValue: initialValue, tooltip: tooltip, extra: renderFormItemExtra(extra), required: required, hidden: hidden },
            react_default.a.createElement(InputNumber, { placeholder: placeholder, disabled: disabled })));
    }));
};
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-json-schema-form/interface.js
/**  Form\u63A7\u4EF6 shape\u7684\u7C7B\u578B */
var ControlShape;
(function (ControlShape) {
    ControlShape["INPUT"] = "input";
    ControlShape["CHECKBOX"] = "checkbox";
    ControlShape["TEXTAREA"] = "textArea";
    ControlShape["SELECT"] = "select";
    ControlShape["DATETIME"] = "datetime";
    ControlShape["FLOAT"] = "float";
})(ControlShape || (ControlShape = {}));
//# sourceMappingURL=interface.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-json-schema-form/schema-form/control-map/index.js







const xflowDefaultControls = [
    [ControlShape.INPUT, StringInput],
    [ControlShape.CHECKBOX, Checkbox],
    [ControlShape.TEXTAREA, TextArea],
    [ControlShape.DATETIME, Datetime],
    [ControlShape.SELECT, Select],
    [ControlShape.FLOAT, Float],
];
const makeControlMap = (controls) => {
    const controlMap = new Map();
    controls.forEach(item => {
        const [key, control] = item;
        const uuid = key.toLowerCase();
        if (controlMap.has(uuid)) {
            console.error(\`\${key} is duplicated in controlMap:\`, controlMap);
        }
        controlMap.set(uuid, control);
    });
    return controlMap;
};
const getControlFromMap = (key, controlMap, defaultControl = StringInput) => {
    if (controlMap.has(key)) {
        return controlMap.get(key);
    }
    const uuid = key.toLowerCase();
    if (controlMap.has(uuid)) {
        return controlMap.get(uuid);
    }
    console.warn(\`\${key} is not exist in controlmap, fallback to defaultControl\`);
    return defaultControl;
};
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-json-schema-form/schema-form/index.js
var schema_form_rest = (undefined && undefined.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};





const { TabPane } = es_tabs["a" /* default */];
const SchemaForm = props => {
    var _a;
    const { schema, form: formInstance, className, triggerUpdate, defaultControlRender, afterUpdatingCb, controlMap: controlMapfromParent } = props, otherProps = schema_form_rest(props, ["schema", "form", "className", "triggerUpdate", "defaultControlRender", "afterUpdatingCb", "controlMap"]);
    const { tabs } = schema;
    const [form] = es_form["a" /* default */].useForm(formInstance);
    const controlMap = react_default.a.useMemo(() => (props.controlMap ? props.controlMap : makeControlMap(xflowDefaultControls)), [props.controlMap]);
    const innerTriggerUpdate = Object(react["useCallback"])((values) => {
        if (typeof triggerUpdate === 'function') {
            triggerUpdate(form, values);
        }
    }, [form, triggerUpdate]);
    /** \u521D\u6B21\u6302\u8F7D\u65F6\u8BBE\u7F6E\u4E00\u6B21\u503C\u4EE5\u6FC0\u6D3B\u9996\u6B21\u8054\u52A8 */
    Object(react["useEffect"])(() => {
        form.setFieldsValue({});
    }, [form]);
    /** \u5207\u6362\u6807\u7B7E\u65F6\u6FC0\u6D3B\u8054\u52A8 */
    const onClickTab = Object(react["useCallback"])(() => {
        requestAnimationFrame(() => {
            form.setFieldsValue({});
        });
    }, [form]);
    return (react_default.a.createElement(es_form["a" /* default */], Object.assign({ size: "small", form: form, layout: "vertical", className: classnames_default()('xflow-json-form', className) }, otherProps),
        react_default.a.createElement(es_tabs["a" /* default */], { type: "card", defaultActiveKey: (_a = tabs[0]) === null || _a === void 0 ? void 0 : _a.name, className: classnames_default()({
                ['tabs']: true,
                ['xTab']: true,
                ['singleTab']: (tabs === null || tabs === void 0 ? void 0 : tabs.length) === 1,
                ['coupleTab']: (tabs === null || tabs === void 0 ? void 0 : tabs.length) === 2,
                ['ternateTab']: (tabs === null || tabs === void 0 ? void 0 : tabs.length) === 3,
            }), onTabClick: onClickTab }, tabs.map((tab) => {
            const { name: tabName, groups } = tab;
            return (react_default.a.createElement(TabPane, { key: tabName, tab: tabName },
                groups.length === 0 && react_default.a.createElement(empty["a" /* default */], { style: { padding: '24px 0' } }),
                groups.length > 0 &&
                    groups.map(group => {
                        const { controls: groupControls = [] } = group;
                        if (groupControls.length === 0) {
                            return react_default.a.createElement(empty["a" /* default */], { style: { padding: '24px 0' } });
                        }
                        return groupControls.map(control => {
                            const { shape, name: controlName } = control;
                            const ControlComponent = getControlFromMap(shape, controlMap, defaultControlRender);
                            if (!ControlComponent) {
                                console.error('\u672A\u627E\u5230\u5BF9\u5E94\u7684\u63A7\u4EF6:', shape);
                                return null;
                            }
                            return (react_default.a.createElement(ControlComponent, { key: controlName, form: form, controlSchema: control, triggerUpdate: innerTriggerUpdate, afterUpdatingCb: afterUpdatingCb }));
                        });
                    })));
        }))));
};
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-json-schema-form/panel-body.js




const PanelBody = props => {
    const { schema = { tabs: [] }, triggerUpdate, onFieldsChange, afterUpdatingCb, defaultControlRender, loading, controlMapService, defaultControls = [], } = props;
    const controlMapCache = react_default.a.useMemo(() => {
        const controlMap = makeControlMap([...xflowDefaultControls, ...defaultControls]);
        if (controlMapService) {
            controlMapService(controlMap);
        }
        return controlMap;
    }, [controlMapService, defaultControls]);
    if (loading) {
        return (react_default.a.createElement("div", { className: \`\${props.prefixClz}-body\`, style: Object.assign(Object.assign({}, props.style), { display: 'flex', justifyContent: 'center', alignItems: 'center' }) },
            react_default.a.createElement(spin["a" /* default */], { spinning: true })));
    }
    return (react_default.a.createElement("div", { className: \`\${props.prefixClz}-body\`, style: props.style },
        schema.tabs.length > 0 && (react_default.a.createElement(SchemaForm, { schema: schema, onFieldsChange: onFieldsChange, controlMap: controlMapCache, defaultControlRender: defaultControlRender, afterUpdatingCb: afterUpdatingCb, triggerUpdate: triggerUpdate })),
        schema.tabs.length === 0 && react_default.a.createElement(empty["a" /* default */], { style: { paddingTop: '64px' } })));
};
//# sourceMappingURL=panel-body.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-json-schema-form/constants.js
const constants_PANEL_HEADER_HEIGHT = 40;
const constants_PANEL_FOOTER_HEIGHT = 40;
//# sourceMappingURL=constants.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-json-schema-form/utils.js


const utils_usePanelLyaoutStyle = (config, noSchema) => {
    const headerHeight = (config && config.headerPosition && config.headerPosition.height) || constants_PANEL_HEADER_HEIGHT;
    const footerHeight = (config.footerPosition && config.footerPosition.height) || constants_PANEL_FOOTER_HEIGHT;
    return {
        headerStyle: usePositionStyle(Object.assign(Object.assign({ height: 0, top: 0, left: 0, right: 0 }, (noSchema ? { height: headerHeight, lineHeight: headerHeight } : {})), config.headerPosition)),
        bodyStyle: usePositionStyle(Object.assign(Object.assign({ left: 0, right: 0, top: 0 }, (noSchema ? { top: headerHeight, bottom: footerHeight } : { bottom: footerHeight })), config.bodyPosition)),
        footerStyle: usePositionStyle(Object.assign(Object.assign({ left: 0, right: 0, lineHeight: footerHeight, height: footerHeight, bottom: 0 }, (noSchema ? { lineHeight: footerHeight, height: footerHeight } : { bottom: 0 })), config.footerPosition)),
    };
};
//# sourceMappingURL=utils.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-json-schema-form/service.js
var canvas_json_schema_form_service_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};



var NsJsonSchemaFormModel;
(function (NsJsonSchemaFormModel) {
    NsJsonSchemaFormModel.id = 'XFLOW_JSON_SCHEMA_FORM';
    NsJsonSchemaFormModel.useModel = (model) => canvas_json_schema_form_service_awaiter(this, void 0, void 0, function* () {
        return model.awaitModel(NsJsonSchemaFormModel.id);
    });
})(NsJsonSchemaFormModel || (NsJsonSchemaFormModel = {}));
/** \u65B9\u4FBF\u5176\u4ED6\u7EC4\u4EF6\u6267\u884CCommand\u6539\u53D8Panel\u5185\u90E8\u72B6\u6001 */
const executeJsonSchemaFormCommand = (cmds, updateModel) => {
    cmds.executeCommand(XFlowModelCommands.UPDATE_MODEL.id, {
        getModel: (modelService) => canvas_json_schema_form_service_awaiter(void 0, void 0, void 0, function* () {
            return NsJsonSchemaFormModel.useModel(modelService);
        }),
        updateModel: updateModel,
    });
};
const useJsonSchemaFormModel = (props) => {
    const app = useXFlowApp();
    const { commandService, modelService } = app;
    const { formSchemaService } = props;
    const [state, setState, model, isModelReady] = createComponentModel({
        schema: { tabs: [] },
        targetType: null,
        targetData: null,
        targetCell: null,
        loading: false,
    });
    /** \u6CE8\u518C\u5168\u5C40\u7684model */
    react_default.a.useEffect(() => {
        if (!app || !app.modelService) {
            return;
        }
        const toDispose = new disposable_DisposableCollection();
        const deferredModel = app.modelService.findDeferredModel(NsJsonSchemaFormModel.id);
        if (!deferredModel) {
            const d = app.modelService.registerModel({
                id: NsJsonSchemaFormModel.id,
                modelFactory: () => model,
                /** \u76D1\u542CSELECTED_CELL\u7684\u53D8\u5316 */
                watchChange: (self, modelSerccie) => canvas_json_schema_form_service_awaiter(void 0, void 0, void 0, function* () {
                    const selectedCellModel = yield model_service_constant_namespaceObject.SELECTED_CELL.getModel(modelSerccie);
                    const nodeDisposable = selectedCellModel.watch((cell) => canvas_json_schema_form_service_awaiter(void 0, void 0, void 0, function* () {
                        const updateState = (targetCell, type) => canvas_json_schema_form_service_awaiter(void 0, void 0, void 0, function* () {
                            self.setValue(m => {
                                m.loading = true;
                                m.schema = { tabs: [] };
                                m.targetType = null;
                                m.targetData = null;
                                m.targetCell = null;
                            });
                            const targetData = targetCell ? targetCell.getData() : null;
                            if (!formSchemaService) {
                                return;
                            }
                            const schema = yield formSchemaService({
                                commandService,
                                modelService,
                                targetData,
                                cell: targetCell,
                                targetType: type,
                            });
                            self.setValue({
                                loading: false,
                                schema: schema,
                                targetType: type,
                                targetCell: targetCell,
                                targetData: targetData,
                            });
                        });
                        const getCellType = (targetCell) => {
                            if (!targetCell) {
                                return 'canvas';
                            }
                            else if (targetCell.isNode &&
                                targetCell.isNode() &&
                                targetCell.getProp('isGroup')) {
                                return 'group';
                            }
                            else if (targetCell.isNode && targetCell.isNode()) {
                                return 'node';
                            }
                            else if (targetCell.isEdge && targetCell.isEdge()) {
                                return 'edge';
                            }
                            else {
                                return 'canvas';
                            }
                        };
                        const targetCellType = getCellType(cell);
                        if ((props.targetType || ['node', 'canvas']).includes(targetCellType)) {
                            yield updateState(cell, targetCellType);
                        }
                    }));
                    return Disposable.create(() => {
                        nodeDisposable.dispose();
                        toDispose.push(nodeDisposable);
                    });
                }),
            });
            toDispose.push(d);
        }
        return () => {
            toDispose.dispose();
        };
        /* eslint-disable-next-line  */
    }, []);
    return { commandService, modelService, state, setState, model, isModelReady };
};
//# sourceMappingURL=service.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-json-schema-form/main.js
var main_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};










/** useFormPanelData\u83B7\u53D6\u6570\u636E */
const JsonSchemaFormMain = props => {
    const { prefixClz } = props;
    const { getCustomRenderComponent, afterUpdatingCb, formValueUpdateService = () => { } } = props;
    const { state, commandService, modelService } = useJsonSchemaFormModel(props);
    // \u8054\u52A8\u66F4\u65B0form items\u7684\u503C
    const triggerUpdate = react_default.a.useCallback((form, values = {}) => main_awaiter(void 0, void 0, void 0, function* () {
        form.setFieldsValue(values);
        const changedFields = Object.entries(values).map(([key, val]) => {
            return { name: key, value: val };
        });
        const allFields = Object.entries(state.targetData).map(([key, val]) => {
            return { name: key, value: val };
        });
        const result = yield formValueUpdateService({
            allFields: allFields,
            values: changedFields,
            modelService,
            commandService,
            targetData: state.targetData,
            targetType: state.targetType,
        });
        if (afterUpdatingCb) {
            afterUpdatingCb(result);
        }
    }), [
        afterUpdatingCb,
        commandService,
        formValueUpdateService,
        modelService,
        state.targetData,
        state.targetType,
    ]);
    // \u5728fields change\u65F6\u7684\u56DE\u8C03
    const onFieldsChange = react_default.a.useCallback((changedFields, allFields) => main_awaiter(void 0, void 0, void 0, function* () {
        const result = yield formValueUpdateService({
            values: changedFields,
            allFields,
            modelService,
            commandService,
            targetData: state.targetData,
            targetType: state.targetType,
        });
        if (afterUpdatingCb) {
            afterUpdatingCb(result);
        }
    }), [
        afterUpdatingCb,
        commandService,
        formValueUpdateService,
        modelService,
        state.targetData,
        state.targetType,
    ]);
    /** schema\u4E3A\u7A7A\u7684\u60C5\u51B5  */
    const noSchema = react_default.a.useMemo(() => {
        try {
            return state.schema.tabs.length === 0 || !state.schema;
        }
        catch (error) {
            return true;
        }
    }, [state.schema]);
    const { headerStyle, bodyStyle, footerStyle } = utils_usePanelLyaoutStyle(props, noSchema);
    /** \u652F\u6301\u81EA\u5B9A\u4E49\u6E32\u67D3 */
    if (getCustomRenderComponent) {
        const Component = getCustomRenderComponent(state.targetType, state.targetData, modelService, commandService);
        if (Component) {
            return react_default.a.createElement(Component, Object.assign(Object.assign({}, props), { headerStyle,
                bodyStyle,
                footerStyle, targetData: state.targetData, targetType: state.targetType, modelService: modelService, commandService: commandService }));
        }
    }
    return (react_default.a.createElement("div", { className: prefixClz },
        react_default.a.createElement(PanelHeader, Object.assign({ hasSchema: !noSchema }, props, { state: state, style: headerStyle, prefixClz: props.prefixClz })),
        react_default.a.createElement(PanelBody, Object.assign({}, props, { key: state.targetData && state.targetData.id, style: bodyStyle, prefixClz: props.prefixClz, loading: state.loading, schema: state.schema, triggerUpdate: triggerUpdate, onFieldsChange: onFieldsChange })),
        react_default.a.createElement(PanelFooter, Object.assign({}, props, { state: state, style: footerStyle }))));
};
const JsonSchemaForm = props => {
    const prefixClz = useXflowPrefixCls('json-schema-form');
    return (react_default.a.createElement(WorkspacePanel, Object.assign({}, props, { className: prefixClz }),
        react_default.a.createElement(JsonSchemaFormMain, Object.assign({}, props, { prefixClz: prefixClz }))));
};
//# sourceMappingURL=main.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-json-schema-form/index.js





//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-dag-extension/x6-extension/edge.js


if (!es["l" /* Registry */].Connector.registry.exist(EDGE_PATH_TYPE.VERTICAL_NODE)) {
    es["e" /* Graph */].registerConnector(EDGE_PATH_TYPE.VERTICAL_NODE, (s, e) => {
        const offset = 16;
        const deltaY = Math.abs(e.y - s.y);
        const control = Math.floor((deltaY / 3) * 2);
        const v1 = { x: s.x, y: s.y + offset + control };
        const v2 = { x: e.x, y: e.y - offset - control };
        return es["j" /* Path */].normalize(\`M \${s.x} \${s.y}
         L \${s.x} \${s.y + offset}
         C \${v1.x} \${v1.y} \${v2.x} \${v2.y} \${e.x} \${e.y - offset}
         L \${e.x} \${e.y}
        \`);
    }, true);
}
if (!es["l" /* Registry */].Connector.registry.exist(EDGE_PATH_TYPE.VERTICAL_GROUP)) {
    es["e" /* Graph */].registerConnector(EDGE_PATH_TYPE.VERTICAL_GROUP, (s, t) => {
        const offset = 4;
        const control = Math.abs(t.y - s.y);
        const v1 = { x: s.x, y: s.y + offset + control };
        const v2 = { x: t.x, y: t.y - offset - control };
        return es["j" /* Path */].normalize(\`M \${s.x} \${s.y}
       L \${s.x} \${s.y + offset}
       C \${v1.x} \${v1.y} \${v2.x} \${v2.y} \${t.x} \${t.y - offset}
       L \${t.x} \${t.y}
      \`);
    }, true);
}
// TODO: fix this vertical function
if (!es["l" /* Registry */].Connector.registry.exist(EDGE_PATH_TYPE.HORIRONTAL_NODE)) {
    es["e" /* Graph */].registerConnector(EDGE_PATH_TYPE.HORIRONTAL_NODE, (s, e) => {
        const offset = 4;
        // const control = 80;
        const deltaY = Math.abs(e.y - s.y);
        const control = Math.floor((deltaY / 3) * 2);
        const v1 = { x: s.x, y: s.y + offset + control };
        const v2 = { x: e.x, y: e.y - offset - control };
        return es["j" /* Path */].normalize(\`M \${s.x} \${s.y}
         L \${s.x} \${s.y + offset}
         C \${v1.x} \${v1.y} \${v2.x} \${v2.y} \${e.x} \${e.y - offset}
         L \${e.x} \${e.y}
        \`);
    }, true);
}
let XFlowEdge = es["n" /* Shape */].Edge.registry.get(XFLOW_SHAPE.EDGE);
if (!es["n" /* Shape */].Edge.registry.exist(XFLOW_SHAPE.EDGE)) {
    XFlowEdge = es["n" /* Shape */].Edge.registry.register(XFLOW_SHAPE.EDGE, es["n" /* Shape */].Edge.define({
        zIndex: 1,
        highlight: false,
        connector: { name: EDGE_PATH_TYPE.VERTICAL_NODE },
        shape: XFLOW_SHAPE.EDGE,
        // https://x6.antv.vision/zh/docs/api/registry/node-anchor
        // source: {
        //   anchor: {
        //     name: 'bottom',
        //   },
        // },
        // target: {
        //   anchor: {
        //     name: 'center',
        //   },
        // },
    }), true);
}

//# sourceMappingURL=edge.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-dag-extension/contributions/command.js
var command_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var command_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var command_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};


var command_NsGraphStatusCommand;
(function (NsGraphStatusCommand) {
    /** Command: \u83B7\u53D6\u6267\u884C\u72B6\u6001 */
    NsGraphStatusCommand.MODEL = constants_GRAPH_STATUS_INFO;
    /** Command: \u7528\u4E8E\u6CE8\u518C named factory */
    NsGraphStatusCommand.command = XFlowDagCommands.QUERY_GRAPH_STATUS;
    /** hookName */
    NsGraphStatusCommand.hookKey = 'queryGraphStatus';
    /** \u72B6\u6001 \u7C7B\u578B */
    let StatusEnum;
    (function (StatusEnum) {
        StatusEnum["SUCCESS"] = "success";
        StatusEnum["PROCESSING"] = "processing";
        StatusEnum["ERROR"] = "error";
        StatusEnum["DEFAULT"] = "default";
        StatusEnum["WARNING"] = "warning";
    })(StatusEnum = NsGraphStatusCommand.StatusEnum || (NsGraphStatusCommand.StatusEnum = {}));
    /** \u6309status \u5206\u7C7B  */
    NsGraphStatusCommand.initStatusMap = () => ({
        [NsGraphStatusCommand.StatusEnum.DEFAULT]: [],
        [NsGraphStatusCommand.StatusEnum.PROCESSING]: [],
        [NsGraphStatusCommand.StatusEnum.ERROR]: [],
        [NsGraphStatusCommand.StatusEnum.WARNING]: [],
        [NsGraphStatusCommand.StatusEnum.SUCCESS]: [],
    });
    /** \u63A5\u53E3\u8FD4\u56DE \u7C7B\u578B */
    NsGraphStatusCommand.groupByStatus = (data) => {
        const seed = NsGraphStatusCommand.initStatusMap();
        return Object.entries(data).reduce((acc, [nodeId, value]) => {
            acc[value.status].push(nodeId);
            return acc;
        }, seed);
    };
    /** diff status */
    NsGraphStatusCommand.statusDiff = (cur, next) => {
        const items = new Set([...cur, ...next]);
        const diff = { current: [], add: [], remove: [] };
        items.forEach(item => {
            if (next.includes(item) && !cur.includes(item)) {
                diff.add.push(item);
            }
            if (!next.includes(item) && cur.includes(item)) {
                diff.remove.push(item);
            }
        });
        return diff;
    };
    NsGraphStatusCommand.shouldStop = (info) => command_awaiter(this, void 0, void 0, function* () {
        return [StatusEnum.ERROR, StatusEnum.SUCCESS].includes(info.graphStatus);
    });
})(command_NsGraphStatusCommand || (command_NsGraphStatusCommand = {}));
/** \u521B\u5EFA\u8282\u70B9\u547D\u4EE4 */
let command_QueryGraphStatusCommand = class QueryGraphStatusCommand {
    constructor() {
        /** \u72B6\u6001\u7F13\u5B58 */
        this.statusInfo = command_NsGraphStatusCommand.initStatusMap();
        /** \u83B7\u53D6Model */
        this.getStatusModel = () => command_awaiter(this, void 0, void 0, function* () {
            const ctx = this.contextProvider();
            const modelService = ctx.getModelService();
            const statusModel = yield constants_GRAPH_STATUS_INFO.getModel(modelService);
            return statusModel;
        });
        /** \u66F4\u65B0Model\u6570\u636E */
        this.updateModelValue = (callback) => command_awaiter(this, void 0, void 0, function* () {
            const statusModel = yield this.getStatusModel();
            statusModel.setValue(callback);
        });
        /** \u505C\u6B62Looping\u7684flag */
        this.stopCurrentStatusLooping = () => command_awaiter(this, void 0, void 0, function* () {
            const statusModel = yield this.getStatusModel();
            const { subscription } = yield statusModel.getValidValue();
            subscription.dispose();
        });
        /** \u8BBE\u7F6E\u505C\u6B62looping\u7684\u65B9\u6CD5 */
        this.addStopDispose = () => command_awaiter(this, void 0, void 0, function* () {
            const statusModel = yield this.getStatusModel();
            const { subscription } = yield statusModel.getValidValue();
            subscription.push({
                dispose: () => {
                    /** \u91CD\u5236processing\u7684\u8FB9\u7684\u72B6\u6001 */
                    this.updateEdges(this.statusInfo, command_NsGraphStatusCommand.initStatusMap());
                    this.isLooping = false;
                },
            });
        });
        /** \u66F4\u65B0Graph\u7684\u6570\u636E */
        this.updateGraph = (curStatusInfo, nextStatusMap, statusMap) => {
            /** \u66F4\u65B0\u8282\u70B9 */
            this.updateNodes(curStatusInfo, nextStatusMap, statusMap);
            /** \u66F4\u65B0\u8FB9 */
            this.updateEdges(curStatusInfo, nextStatusMap);
        };
        /** \u66F4\u65B0\u8282\u70B9\u6570\u636E */
        this.updateNodeData = (id, data) => {
            const cell = this.x6Graph.getCellById(id);
            if (!cell) {
                return;
            }
            cell.setData(Object.assign(Object.assign(Object.assign(Object.assign({}, cell.getData()), cell.getSize()), cell.getPosition()), data));
        };
        /** \u66F4\u65B0\u8FDE\u7EBF\u6570\u636E */
        this.updateNodes = (curStatusInfo, nextStatusMap, statusMap) => {
            Object.keys(curStatusInfo).forEach(status => {
                const nodes = command_NsGraphStatusCommand.statusDiff(curStatusInfo[status], nextStatusMap[status]);
                nodes.add.forEach((id) => {
                    this.updateNodeData(id, statusMap[id]);
                });
                nodes.remove.forEach((id) => {
                    this.updateNodeData(id, statusMap[id]);
                });
            });
        };
        /** \u66F4\u65B0\u8282\u70B9\u6570\u636E */
        this.updateEdges = (curStatusInfo, nextStatusMap) => {
            const runningNodes = command_NsGraphStatusCommand.statusDiff(curStatusInfo.processing, nextStatusMap.processing);
            const edges = this.x6Graph.getEdges();
            edges.forEach(edge => {
                var _a;
                const view = (_a = this.x6Graph) === null || _a === void 0 ? void 0 : _a.findViewByCell(edge.id);
                const target = edge.getTargetCellId();
                if (!target) {
                    return;
                }
                const targetNodeId = target.toString();
                if (!view) {
                    return;
                }
                if (runningNodes.add.includes(targetNodeId)) {
                    /** \u65B0\u589EclassName */
                    return view.addClass(EDGE_PROCESSING_CLASSNAME);
                }
                else if (runningNodes.remove.includes(targetNodeId)) {
                    /** \u79FB\u9664className */
                    return view.removeClass(EDGE_PROCESSING_CLASSNAME);
                }
            });
        };
        /** \u6267\u884CCmd */
        this.execute = () => command_awaiter(this, void 0, void 0, function* () {
            const ctx = this.contextProvider();
            const { args, hooks: runtimeHook } = ctx.getArgs();
            const hooks = ctx.getHooks();
            // \u5F15\u7528
            this.x6Graph = yield ctx.getX6Graph();
            const result = yield hooks.queryGraphStatus.call(args, (handlerArgs) => command_awaiter(this, void 0, void 0, function* () {
                const { graphStatusService, shouldStop = command_NsGraphStatusCommand.shouldStop, doOnce, } = handlerArgs;
                // \u53D6\u6D88\u5DF2\u6709\u7684\u5FAA\u73AF
                yield this.stopCurrentStatusLooping();
                // \u5FAA\u73AF\u51FD\u6570
                const loopFunction = (service, loopInterval = 10000) => command_awaiter(this, void 0, void 0, function* () {
                    // \u67E5\u8BE2\u670D\u52A1\u7AEF\u72B6\u6001
                    const data = yield service(handlerArgs);
                    // \u66F4\u65B0\u5168\u5C40\u72B6\u6001
                    this.updateModelValue(state => {
                        Object.entries(data.statusMap).forEach(([key, value]) => {
                            state.statusMap.set(key, value);
                        });
                        state.graphStatus = data.graphStatus;
                    });
                    // \u66F4\u65B0\u56FE\u4E0A\u72B6\u6001
                    const statusGroupMap = command_NsGraphStatusCommand.groupByStatus(data.statusMap);
                    this.updateGraph(this.statusInfo, statusGroupMap, data.statusMap);
                    // \u7F13\u5B58\u5F53\u524D\u72B6\u6001\u4F5C\u4E3A\u5BF9\u6BD4\u6570\u636E
                    this.statusInfo = statusGroupMap;
                    // \u5EF6\u8FDF
                    yield delay(loopInterval);
                    // \u5224\u65AD\u662F\u5426\u5FAA\u73AF
                    if (!this.isLooping) {
                        return;
                    }
                    // \u5224\u65AD\u662F\u5426\u5FAA\u73AF
                    if (shouldStop) {
                        const isStop = yield shouldStop(data, handlerArgs);
                        if (isStop) {
                            return;
                        }
                    }
                    // \u6267\u884C\u4E0B\u6B21\u8C03\u7528
                    yield loopFunction(service, loopInterval);
                });
                // \u4ECE\u53C2\u6570\u66F4\u65B0\u5FAA\u73AF\u7684FLAG
                this.isLooping = handlerArgs.loop === undefined ? true : handlerArgs.loop;
                // \u6DFB\u52A0\u53EF\u4EE5\u505C\u6B62loop\u7684\u56DE\u8C03
                yield this.addStopDispose();
                // \u6267\u884C
                if (doOnce) {
                    yield doOnce(handlerArgs);
                }
                loopFunction(graphStatusService, handlerArgs.loopInterval);
                return {};
            }), runtimeHook);
            ctx.setResult(result);
            return this;
        });
        /** undo cmd */
        this.undo = () => command_awaiter(this, void 0, void 0, function* () {
            const ctx = this.contextProvider();
            if (this.isUndoable()) {
                ctx.undo();
            }
            return this;
        });
        /** redo cmd */
        this.redo = () => command_awaiter(this, void 0, void 0, function* () {
            if (!this.isUndoable()) {
                yield this.execute();
            }
            return this;
        });
    }
    isUndoable() {
        const ctx = this.contextProvider();
        return ctx.isUndoable();
    }
};
command_decorate([
    index_esm.inject(ICommandContextProvider),
    command_metadata("design:type", Object)
], command_QueryGraphStatusCommand.prototype, "contextProvider", void 0);
command_QueryGraphStatusCommand = command_decorate([
    index_esm.injectable({
        token: { token: ICommandHandler, named: command_NsGraphStatusCommand.command.id },
    })
], command_QueryGraphStatusCommand);

const command_execCmd = () => { };
//# sourceMappingURL=command.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-dag-extension/contributions/dag.js
var dag_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var dag_metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var dag_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};







var NsAddEdgeEvent;
(function (NsAddEdgeEvent) {
    NsAddEdgeEvent.EVENT_NAME = 'ADD_EDGE_CMD_EVENT';
})(NsAddEdgeEvent || (NsAddEdgeEvent = {}));
const ANT_PREFIX = 'ant';
const dag_dagOptions = {
    keyboard: {
        enabled: true,
    },
    // \u70B9\u9009/\u6846\u9009\u914D\u7F6E\uFF08\u8BE6\u7EC6\u6587\u6863\uFF1Ahttps://X6.antv.vision/zh/docs/tutorial/basic/selection\uFF09
    selecting: {
        enabled: true,
        multiple: true,
        selectCellOnMoved: true,
        showNodeSelectionBox: false,
        // \u6846\u9009\u53EF\u4EE5\u9009\u4E2Dedge
        rubberEdge: true,
        // \u6846\u9009\u53EF\u4EE5\u9009\u4E2Dnode
        rubberNode: true,
        movable: true,
    },
    connecting: {
        //\u94FE\u63A5\u6869\u7684\u4F4D\u7F6E https://x6.antv.vision/zh/docs/api/registry/node-anchor
        sourceAnchor: 'bottom',
        //\u94FE\u63A5\u6869\u7684\u4F4D\u7F6E https://x6.antv.vision/zh/docs/api/registry/node-anchor
        targetAnchor: 'center',
        connectionPoint: 'anchor',
        snap: { radius: 20 },
        router: { name: 'manhattan' },
        connector: {
            name: EDGE_PATH_TYPE.VERTICAL_NODE,
            args: {
                radius: 15,
            },
        },
        highlight: true,
        dangling: false,
        createEdge() {
            /* eslint-disable-next-line @typescript-eslint/no-this-alias */
            const graph = this;
            const edge = new XFlowEdge({
                attrs: {
                    line: {
                        strokeDasharray: '5 5',
                        stroke: '#888',
                        strokeWidth: 1,
                        targetMarker: {
                            name: 'block',
                            args: {
                                size: '6',
                            },
                        },
                    },
                },
            });
            graph.once('edge:connected', args => {
                const { isNew } = args;
                const edgeCell = args.edge;
                if (isNew && edgeCell.isEdge()) {
                    const portId = edgeCell.getTargetPortId();
                    const targetNode = edgeCell.getTargetCell();
                    if (targetNode && targetNode.isNode()) {
                        targetNode.setPortProp(portId, 'connected', false);
                        edgeCell.attr({
                            line: {
                                strokeDasharray: '',
                                targetMarker: '',
                                stroke: '#d5d5d5',
                            },
                        });
                        const targetPortId = edgeCell.getTargetPortId();
                        const sourcePortId = edgeCell.getSourcePortId();
                        const sourceCellId = edgeCell.getSourceCellId();
                        const targetCellId = edgeCell.getTargetCellId();
                        graph.trigger(NsAddEdgeEvent.EVENT_NAME, {
                            targetPortId,
                            sourcePortId,
                            source: sourceCellId,
                            target: targetCellId,
                            edge: edge,
                        });
                    }
                }
            });
            return edge;
        },
        validateEdge: args => {
            var _a;
            const { edge } = args;
            return !!((_a = edge === null || edge === void 0 ? void 0 : edge.target) === null || _a === void 0 ? void 0 : _a.port);
        },
        // \u662F\u5426\u89E6\u53D1\u4EA4\u4E92\u4E8B\u4EF6
        validateMagnet({ magnet }) {
            return magnet.getAttribute('port-group') !== NsGraph.AnchorGroup.TOP;
        },
        // \u663E\u793A\u53EF\u7528\u7684\u94FE\u63A5\u6869
        validateConnection({ sourceView, targetView, sourceMagnet, targetMagnet }) {
            // \u4E0D\u5141\u8BB8\u8FDE\u63A5\u5230\u81EA\u5DF1
            if (sourceView === targetView) {
                return false;
            }
            // \u53EA\u80FD\u4ECE\u4E0A\u6E38\u8282\u70B9\u7684\u8F93\u51FA\u94FE\u63A5\u6869\u521B\u5EFA\u8FDE\u63A5
            if (!sourceMagnet || sourceMagnet.getAttribute('port-group') === NsGraph.AnchorGroup.TOP) {
                return false;
            }
            // \u53EA\u80FD\u8FDE\u63A5\u5230\u4E0B\u6E38\u8282\u70B9\u7684\u8F93\u5165\u6869
            if (!targetMagnet || targetMagnet.getAttribute('port-group') !== NsGraph.AnchorGroup.TOP) {
                return false;
            }
            const node = targetView.cell;
            // \u5224\u65AD\u76EE\u6807\u94FE\u63A5\u6869\u662F\u5426\u53EF\u8FDE\u63A5
            const portId = targetMagnet.getAttribute('port');
            const port = node.getPort(portId);
            return !(port && port.connected);
        },
    },
    highlighting: {
        nodeAvailable: {
            name: 'className',
            args: {
                className: 'available',
            },
        },
        magnetAvailable: {
            name: 'className',
            args: {
                className: 'available',
            },
        },
        magnetAdsorbed: {
            name: 'className',
            args: {
                className: 'adsorbed',
            },
        },
    },
    scaling: {
        max: 1.05,
        min: 0.01,
    },
};
/**
 * \u5185\u7F6E\u7684hook contribution
 * \u5904\u7406 config\u4E0A\u7684runtime\u7684\u6CE8\u518C\u9879
 */
let dag_DagHooksContribution = class DagHooksContribution {
    constructor() {
        /** \u6CE8\u518CCommand */
        this.registerGraphCommands = (commands) => {
            commands.registerCommand(command_NsGraphStatusCommand.command, {
                createCommand: this.commandFactory,
            });
        };
        /** \u6CE8\u518CHub */
        this.toDispose = new disposable_DisposableCollection();
        /** \u6CE8\u518CHook */
        this.registerHook = (hooks) => dag_awaiter(this, void 0, void 0, function* () {
            const toDispose = new disposable_DisposableCollection();
            const disposables = [
                hooks.addNode.registerHook({
                    name: 'dag-add-node',
                    handler: (args) => dag_awaiter(this, void 0, void 0, function* () {
                        const cellFactory = (nodeConfig) => dag_awaiter(this, void 0, void 0, function* () {
                            const node = new XFlowNode(Object.assign({}, nodeConfig));
                            return node;
                        });
                        args.cellFactory = cellFactory;
                    }),
                }),
                hooks.addEdge.registerHook({
                    name: 'dag-add-edge',
                    handler: (args) => dag_awaiter(this, void 0, void 0, function* () {
                        const cellFactory = (edgeConfig) => dag_awaiter(this, void 0, void 0, function* () {
                            const cell = new XFlowEdge({
                                id: edgeConfig.id,
                                source: {
                                    cell: edgeConfig.source,
                                    port: edgeConfig.sourcePortId,
                                    anchor: {
                                        name: 'bottom',
                                    },
                                },
                                target: {
                                    cell: edgeConfig.target,
                                    port: edgeConfig.targetPortId,
                                    anchor: {
                                        name: 'center',
                                    },
                                },
                                attrs: {
                                    line: {
                                        strokeDasharray: '',
                                        targetMarker: '',
                                        stroke: '#d5d5d5',
                                        strokeWidth: 1,
                                    },
                                },
                                data: Object.assign({}, edgeConfig),
                            });
                            return cell;
                        });
                        args.cellFactory = cellFactory;
                    }),
                }),
                hooks.addEdge.registerHook({
                    name: 'after add edge, set target port props',
                    handler: (handlerArgs, handler) => dag_awaiter(this, void 0, void 0, function* () {
                        const main = (args) => dag_awaiter(this, void 0, void 0, function* () {
                            const res = yield handler(args);
                            const targetNode = res.edgeCell.getTargetCell();
                            const portId = res.edgeCell.getTargetPortId();
                            targetNode.setPortProp(portId, 'connected', true);
                            return res;
                        });
                        return main;
                    }),
                }),
                hooks.delEdge.registerHook({
                    name: 'afetr del edge, reset target node port props',
                    handler: (args, handler) => dag_awaiter(this, void 0, void 0, function* () {
                        const newHandler = (handlerArgs) => dag_awaiter(this, void 0, void 0, function* () {
                            const result = yield handler(handlerArgs);
                            const { targetCell, targetPortId } = result;
                            if (targetCell && targetCell.isNode() && targetPortId) {
                                targetCell.setPortProp(targetPortId, 'connected', false);
                            }
                            return result;
                        });
                        return newHandler;
                    }),
                }),
                hooks.afterGraphInit.registerHook({
                    name: 'call add edge to replace temp edge',
                    handler: (handlerArgs) => dag_awaiter(this, void 0, void 0, function* () {
                        const { commandService, graph } = handlerArgs;
                        graph.on(NsAddEdgeEvent.EVENT_NAME, (args) => {
                            commandService.executeCommand(XFlowEdgeCommands.ADD_EDGE.id, { edgeConfig: args });
                            args.edge.remove();
                        });
                    }),
                }),
                hooks.graphOptions.registerHook({
                    name: 'dag-extension-x6-options',
                    handler: (args) => dag_awaiter(this, void 0, void 0, function* () {
                        Object.assign(args, dag_dagOptions);
                    }),
                }),
            ];
            toDispose.pushAll(disposables);
            return Disposable.create(() => { });
        });
        /** \u6CE8\u518CHub */
        this.registerHookHub = (registry) => dag_awaiter(this, void 0, void 0, function* () {
            return registry.registerHookHub(command_NsGraphStatusCommand.hookKey, new es_HookHub());
        });
    }
    /** \u6269\u5C55Model */
    registerModel(registry) {
        /** node status map */
        registry.registerModel({
            id: constants_GRAPH_STATUS_INFO.id,
            getInitialValue: () => ({
                statusMap: new Map(),
                subscription: new disposable_DisposableCollection(),
                graphStatus: constants_GRAPH_STATUS_INFO.StatusEnum.DEFAULT,
            }),
            watchChange: (self) => dag_awaiter(this, void 0, void 0, function* () {
                const { subscription } = yield self.getValidValue();
                return subscription;
            }),
        });
    }
};
dag_decorate([
    index_esm.inject(IGraphCommandFactory),
    dag_metadata("design:type", Function)
], dag_DagHooksContribution.prototype, "commandFactory", void 0);
dag_DagHooksContribution = dag_decorate([
    index_esm.singleton({
        contrib: [IHookContribution, IModelContribution, IGraphCommandContribution],
    })
], dag_DagHooksContribution);

//# sourceMappingURL=dag.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-dag-extension/module.js

/** Application \u6269\u5C55\u4F9D\u8D56 */





/** \u4F9D\u8D56\u6269\u5C55\u6A21\u5757\uFF0C\u5FC5\u987B\u8981\u52A0\u8F7D */
const createDagExtensionModule = () => {
    return index_esm.Module(register => {
        /** \u6269\u5C55 runtime hook */
        register(dag_DagHooksContribution);
        register(command_QueryGraphStatusCommand);
    });
};

//# sourceMappingURL=module.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-dag-extension/components/index.js
var canvas_dag_extension_components_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};



const DagGraphExtension = props => {
    /** \u83B7\u53D6\u6269\u5C55Registry */
    const extensionRegistry = useExtensionRegistry();
    react_default.a.useEffect(() => {
        /** \u6DFB\u52A0 container\u7684classname */
        extensionRegistry.addContainerClassNames('dag-extension-container');
    }, [extensionRegistry]);
    const config = react_default.a.useMemo(() => ({
        CONFIG_TYPE: 'DAG_EXTENSION',
        getConfig: () => canvas_dag_extension_components_awaiter(void 0, void 0, void 0, function* () { return props; }),
    }), [props]);
    return react_default.a.createElement(XFlowAppExtensionMoudle, { config: config, createModule: createDagExtensionModule });
};
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-dag-extension/index.js



//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-flow-extension/constants.js
const constants_XFLOW_NODE_SHAPE = 'XFLOW_FLOW_NODE_SHAPE';
const constants_NODE_DEFAULT_WIDTH = 150;
const constants_NODE_DEFAULT_HEIGHT = 60;
//# sourceMappingURL=constants.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-flow-extension/x6-extension/node.js
/* eslint-disable @typescript-eslint/lines-between-class-members */




let node_XFlowNode;
const { AnchorGroup: node_AnchorGroup } = NsGraph;
const portAttrs = {
    circle: {
        r: 4,
        magnet: true,
        stroke: '#5F95FF',
        strokeWidth: 1,
        fill: '#fff',
        style: {
            visibility: 'hidden',
        },
    },
};
if (es["g" /* Node */].registry.exist(constants_XFLOW_NODE_SHAPE)) {
    node_XFlowNode = es["g" /* Node */].registry.get(constants_XFLOW_NODE_SHAPE);
}
else {
    node_XFlowNode = x6_react_shape_es["a" /* ReactShape */].define({
        width: constants_NODE_DEFAULT_WIDTH,
        height: constants_NODE_DEFAULT_HEIGHT,
        shape: constants_XFLOW_NODE_SHAPE,
        // X6_NODE_PORTAL_NODE_VIEW
        view: constants_namespaceObject.X6_NODE_PORTAL_NODE_VIEW,
        ports: {
            groups: {
                top: {
                    position: node_AnchorGroup.TOP,
                    attrs: portAttrs,
                },
                bottom: {
                    position: node_AnchorGroup.BOTTOM,
                    attrs: portAttrs,
                },
                right: {
                    position: node_AnchorGroup.RIGHT,
                    attrs: portAttrs,
                },
                left: {
                    position: node_AnchorGroup.LEFT,
                    attrs: portAttrs,
                },
            },
        },
        attrs: {
            body: {
                magnet: false,
                fill: 'none',
                stroke: 'none',
                refWidth: '100%',
                refHeight: '100%',
            },
        },
    });
}

//# sourceMappingURL=node.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-flow-extension/contributions/flow.js
var flow_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var flow_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};




const flowOptions = {
    grid: true,
    mousewheel: {
        enabled: true,
        zoomAtMousePosition: true,
        modifiers: 'ctrl',
        minScale: 0.5,
        maxScale: 3,
    },
    connecting: {
        router: 'manhattan',
        connector: {
            name: 'rounded',
            args: {
                radius: 8,
            },
        },
        anchor: 'center',
        connectionPoint: 'anchor',
        allowBlank: false,
        snap: {
            radius: 20,
        },
        createEdge() {
            return new es["n" /* Shape */].Edge({
                attrs: {
                    line: {
                        stroke: '#A2B1C3',
                        strokeWidth: 2,
                        targetMarker: {
                            name: 'block',
                            width: 12,
                            height: 8,
                        },
                    },
                },
                zIndex: 0,
            });
        },
        validateConnection({ targetMagnet }) {
            return !!targetMagnet;
        },
    },
    highlighting: {
        magnetAdsorbed: {
            name: 'stroke',
            args: {
                attrs: {
                    fill: '#5F95FF',
                    stroke: '#5F95FF',
                },
            },
        },
    },
    resizing: true,
    rotating: true,
    selecting: {
        enabled: true,
        rubberband: true,
        showNodeSelectionBox: true,
        modifiers: 'shift',
    },
    snapline: true,
    keyboard: true,
    clipboard: true,
};
/**
 * \u5185\u7F6E\u7684hook contribution
 * \u5904\u7406 config\u4E0A\u7684runtime\u7684\u6CE8\u518C\u9879
 */
let flow_FlowHooksContribution = class FlowHooksContribution {
    constructor() {
        this.toDispose = new disposable_DisposableCollection();
        this.registerHookHub = () => flow_awaiter(this, void 0, void 0, function* () {
            return Disposable.create(() => { });
        });
        this.registerHook = (hooks) => flow_awaiter(this, void 0, void 0, function* () {
            const toDispose = new disposable_DisposableCollection();
            const disposables = [
                hooks.addNode.registerHook({
                    name: 'flow-add-node',
                    handler: (args) => flow_awaiter(this, void 0, void 0, function* () {
                        const cellFactory = (nodeConfig) => flow_awaiter(this, void 0, void 0, function* () {
                            const node = new node_XFlowNode(Object.assign({}, nodeConfig));
                            return node;
                        });
                        args.cellFactory = cellFactory;
                    }),
                }),
                hooks.addEdge.registerHook({
                    name: 'flow-add-edge',
                    handler: (args) => flow_awaiter(this, void 0, void 0, function* () {
                        const cellFactory = (edgeConfig) => flow_awaiter(this, void 0, void 0, function* () {
                            delete edgeConfig.id;
                            const cell = new es["n" /* Shape */].Edge({
                                source: {
                                    cell: edgeConfig.source,
                                    port: edgeConfig.sourcePortId,
                                },
                                target: {
                                    cell: edgeConfig.target,
                                    port: edgeConfig.targetPortId,
                                },
                                attrs: {
                                    line: {
                                        stroke: '#A2B1C3',
                                        strokeWidth: 2,
                                        targetMarker: {
                                            name: 'block',
                                            width: 12,
                                            height: 8,
                                        },
                                    },
                                },
                                zIndex: -1,
                                data: Object.assign({}, edgeConfig),
                            });
                            return cell;
                        });
                        args.cellFactory = cellFactory;
                    }),
                }),
                hooks.graphOptions.registerHook({
                    name: 'assign options ',
                    handler: (args) => flow_awaiter(this, void 0, void 0, function* () {
                        Object.assign(args, flowOptions);
                    }),
                }),
            ];
            toDispose.pushAll(disposables);
            return Disposable.create(() => { });
        });
    }
};
flow_FlowHooksContribution = flow_decorate([
    index_esm.singleton({ contrib: IHookContribution })
], flow_FlowHooksContribution);

//# sourceMappingURL=flow.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-flow-extension/module.js

/** Application \u6269\u5C55\u4F9D\u8D56 */



/** \u4F9D\u8D56\u6269\u5C55\u6A21\u5757\uFF0C\u5FC5\u987B\u8981\u52A0\u8F7D */
const createFlowExtensionModule = () => {
    return index_esm.Module(register => {
        /** \u6269\u5C55 runtime hook */
        register(flow_FlowHooksContribution);
    });
};

//# sourceMappingURL=module.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-flow-extension/components/index.js
var canvas_flow_extension_components_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};



const FlowGraphExtension = () => {
    /** \u83B7\u53D6\u6269\u5C55Registry */
    const extensionRegistry = useExtensionRegistry();
    const config = react_default.a.useMemo(() => ({
        CONFIG_TYPE: 'DAG_EXTENSION',
        getConfig: () => canvas_flow_extension_components_awaiter(void 0, void 0, void 0, function* () { }),
    }), []);
    react_default.a.useEffect(() => {
        /** \u6CE8\u518C extension \u5230 Registry */
        const disposable = extensionRegistry.addExtension({
            config: config,
            createModule: createFlowExtensionModule,
        });
        /** \u6DFB\u52A0 classname */
        extensionRegistry.addContainerClassNames('flow-extension-container');
        return () => {
            disposable.dispose();
        };
    }, [config, extensionRegistry]);
    return null;
};
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/canvas-flow-extension/index.js

//# sourceMappingURL=index.js.map
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/config-provider/index.js + 3 modules
var config_provider = __webpack_require__("7xuC");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/DoubleRightOutlined.js + 1 modules
var DoubleRightOutlined = __webpack_require__("mWRm");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/DoubleLeftOutlined.js + 1 modules
var DoubleLeftOutlined = __webpack_require__("smvt");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/collapse/index.js + 8 modules
var collapse = __webpack_require__("ERsz");

// CONCATENATED MODULE: ../xflow-extension/es/flowchart-node-panel/constants.js
const flowchart_node_panel_constants_PANEL_HEADER_HEIGHT = 40;
const CONTAINER_CLASS = 'xflow-node-panel-collpase';
/** \u7EC4\u7FA4 ID */
const GROUP_NODE_RENDER_ID = 'GROUP_NODE_RENDER_ID';
// \u8282\u70B9\u9ED8\u8BA4\u5C3A\u5BF8
const NODE_WIDTH = 60;
const NODE_HEIGHT = 40;
// svg \u7ED8\u5236\u8D77\u59CB\u70B9\uFF0C\u89E3\u51B3\u8FB9\u4E0D\u6E05\u6670\u7684\u95EE\u9898
const NODE_PADDING = 1;
const DefaultNodeConfig = {
    stroke: '#A2B1C3',
    fill: '#FFFFFF',
    fontFill: '#000',
    fontSize: 12,
    label: '',
};
const NODEPOOL = [
    {
        name: 'Terminal',
    },
    {
        name: 'Process',
    },
    {
        name: 'Decision',
    },
    {
        name: 'Multi Document',
    },
    {
        name: 'Connector',
        width: NODE_HEIGHT,
        height: NODE_HEIGHT,
    },
    {
        name: 'DataIO',
        ports: ['top', 'bottom'],
    },
    {
        name: 'Database',
    },
    {
        name: 'Hard Disk',
    },
    {
        name: 'Stroed Data',
    },
    {
        name: 'Document',
    },
    {
        name: 'Predefined Process',
    },
    {
        name: 'Extract',
    },
    {
        name: 'Merge',
    },
    {
        name: 'Or',
        width: NODE_HEIGHT,
        height: NODE_HEIGHT,
    },
    {
        name: 'Manual Input',
    },
    {
        name: 'Preparation',
    },
    {
        name: 'Delay',
    },
    {
        name: 'Manual Operation',
    },
    {
        name: 'Display',
    },
    {
        name: 'Off Page Link',
    },
    {
        name: 'Note Left',
        label: '\u2263',
    },
    {
        name: 'Note Right',
        label: '\u2263',
    },
    {
        name: 'Internal Storage',
    },
    {
        name: 'Text',
        label: 'text',
    },
];
// \u7F29\u653E\u65F6\u4FDD\u5B58\u540C\u6BD4\u4F8B
const ASPECTRATIONODE = ['Connector', 'Or'];
//# sourceMappingURL=constants.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-node-panel/nodes/process/index.js



const ProcessNode = props => {
    const { size = { width: NODE_WIDTH, height: NODE_HEIGHT }, data = {} } = props;
    const { stroke = DefaultNodeConfig.stroke, label = DefaultNodeConfig.label, fill = DefaultNodeConfig.fill, fontFill = DefaultNodeConfig.fontFill, fontSize = DefaultNodeConfig.fontSize, } = data;
    const { width, height } = size;
    const path = [
        ['M', NODE_PADDING, NODE_PADDING],
        ['L', width - 2 * NODE_PADDING, NODE_PADDING],
        ['L', width - 2 * NODE_PADDING, height - 2 * NODE_PADDING],
        ['L', NODE_PADDING, height - 2 * NODE_PADDING],
        ['Z'],
    ];
    return (react_default.a.createElement("svg", { viewBox: \`0 0 \${width} \${height}\`, xmlns: "http://www.w3.org/2000/svg", width: "100%", height: "100%" },
        react_default.a.createElement("path", { d: createPath(path), fill: fill, stroke: stroke }),
        react_default.a.createElement("text", { x: width / 2, y: height / 2, fill: fontFill, textAnchor: "middle", alignmentBaseline: "middle", fontSize: fontSize }, label),
        "Sorry, your browser does not support inline SVG."));
};
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-node-panel/nodes/decision/index.js



const DecisionNode = props => {
    const { size = { width: NODE_WIDTH, height: NODE_HEIGHT }, data = {} } = props;
    const { stroke = DefaultNodeConfig.stroke, label = DefaultNodeConfig.label, fill = DefaultNodeConfig.fill, fontFill = DefaultNodeConfig.fontFill, fontSize = DefaultNodeConfig.fontSize, } = data;
    const { width, height } = size;
    const path = [
        ['M', width / 2, NODE_PADDING],
        ['L', width - 2 * NODE_PADDING, height / 2],
        ['L', width / 2, height - 2 * NODE_PADDING],
        ['L', NODE_PADDING, height / 2],
        ['Z'],
    ];
    return (react_default.a.createElement("svg", { viewBox: \`0 0 \${width} \${height}\`, xmlns: "http://www.w3.org/2000/svg", width: "100%", height: "100%" },
        react_default.a.createElement("path", { d: createPath(path), fill: fill, stroke: stroke }),
        react_default.a.createElement("text", { x: width / 2, y: height / 2, fill: fontFill, textAnchor: "middle", alignmentBaseline: "middle", fontSize: fontSize }, label),
        "Sorry, your browser does not support inline SVG."));
};
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-node-panel/nodes/connector/index.js


const ConnectorNode = props => {
    const { size = { width: NODE_WIDTH, height: NODE_HEIGHT }, data = {} } = props;
    const { stroke = DefaultNodeConfig.stroke, label = DefaultNodeConfig.label, fill = DefaultNodeConfig.fill, fontFill = DefaultNodeConfig.fontFill, fontSize = DefaultNodeConfig.fontSize, } = data;
    const { width, height } = size;
    const availableR = height - 2 * NODE_PADDING;
    return (react_default.a.createElement("svg", { viewBox: \`0 0 \${width} \${height}\`, xmlns: "http://www.w3.org/2000/svg", width: "100%", height: "100%" },
        react_default.a.createElement("path", { d: \`M \${NODE_PADDING},\${height / 2} a \${availableR / 2} \${availableR / 2} 0 1 1 0 1 z\`, fill: fill, stroke: stroke }),
        react_default.a.createElement("text", { x: height / 2, y: height / 2, fill: fontFill, textAnchor: "middle", alignmentBaseline: "middle", fontSize: fontSize }, label),
        "Sorry, your browser does not support inline SVG."));
};
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-node-panel/nodes/data-i-o/index.js



const DataIONode = props => {
    const { size = { width: NODE_WIDTH, height: NODE_HEIGHT }, data = {} } = props;
    const { stroke = DefaultNodeConfig.stroke, label = DefaultNodeConfig.label, fill = DefaultNodeConfig.fill, fontFill = DefaultNodeConfig.fontFill, fontSize = DefaultNodeConfig.fontSize, } = data;
    const { width, height } = size;
    const slope = height / 2; // \u7528\u4E8E\u8BA1\u7B97\u659C\u7387 tan(&) =  slope / height
    const path = [
        ['M', slope - NODE_PADDING, NODE_PADDING],
        ['L', width - 2 * NODE_PADDING, NODE_PADDING],
        ['L', width - slope, height - 2 * NODE_PADDING],
        ['L', NODE_PADDING, height - 2 * NODE_PADDING],
        ['Z'],
    ];
    return (react_default.a.createElement("svg", { viewBox: \`0 0 \${width} \${height}\`, xmlns: "http://www.w3.org/2000/svg", width: "100%", height: "100%" },
        react_default.a.createElement("path", { d: createPath(path), fill: fill, stroke: stroke }),
        react_default.a.createElement("text", { x: width / 2, y: height / 2, fill: fontFill, textAnchor: "middle", alignmentBaseline: "middle", fontSize: fontSize }, label),
        "Sorry, your browser does not support inline SVG."));
};
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-node-panel/nodes/terminator/index.js



const TerminalNode = props => {
    const { size = { width: NODE_WIDTH, height: NODE_HEIGHT }, data = {} } = props;
    const { stroke = DefaultNodeConfig.stroke, label = DefaultNodeConfig.label, fill = DefaultNodeConfig.fill, fontFill = DefaultNodeConfig.fontFill, fontSize = DefaultNodeConfig.fontSize, } = data;
    const { width, height } = size;
    const rx = Math.min(height, width) / 2;
    const path = [
        ['M', rx, NODE_PADDING],
        ['L', width - rx, NODE_PADDING],
        ['C', width - 2 * NODE_PADDING, NODE_PADDING, width - 2 * NODE_PADDING, height / 2],
        ['', width - 2 * NODE_PADDING, height / 2],
        [
            'C',
            width - 2 * NODE_PADDING,
            height / 2,
            width - 2 * NODE_PADDING,
            height - 2 * NODE_PADDING,
        ],
        ['', width - rx, height - 2 * NODE_PADDING],
        ['L', rx, height - 2 * NODE_PADDING],
        ['C', NODE_PADDING, height - 2 * NODE_PADDING, NODE_PADDING, height / 2],
        ['', NODE_PADDING, height / 2],
        ['C', NODE_PADDING, height / 2, NODE_PADDING, NODE_PADDING],
        ['', rx, NODE_PADDING],
    ];
    return (react_default.a.createElement("svg", { viewBox: \`0 0 \${width} \${height}\`, xmlns: "http://www.w3.org/2000/svg", width: "100%", height: "100%" },
        react_default.a.createElement("path", { d: createPath(path), fill: fill, stroke: stroke }),
        react_default.a.createElement("text", { x: width / 2, y: height / 2, fill: fontFill, textAnchor: "middle", alignmentBaseline: "middle", fontSize: fontSize }, label),
        "Sorry, your browser does not support inline SVG."));
};
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-node-panel/nodes/data-base/index.js



const DatabaseNode = props => {
    const { size = { width: NODE_WIDTH, height: NODE_HEIGHT }, data = {} } = props;
    const { stroke = DefaultNodeConfig.stroke, label = DefaultNodeConfig.label, fill = DefaultNodeConfig.fill, fontFill = DefaultNodeConfig.fontFill, fontSize = DefaultNodeConfig.fontSize, } = data;
    const { width, height } = size;
    const bezierX = width / 4;
    const bezierY = Math.min(height / 10, 12);
    const path = [
        ['M', NODE_PADDING, NODE_PADDING + bezierY],
        ['C', NODE_PADDING + bezierX, NODE_PADDING, NODE_PADDING + width - bezierX, NODE_PADDING],
        ['', width - 2 * NODE_PADDING, NODE_PADDING + bezierY],
        ['L', width - 2 * NODE_PADDING, height - 2 * NODE_PADDING - bezierY],
        [
            'C',
            width - 2 * NODE_PADDING - bezierX,
            height - 2 * NODE_PADDING,
            NODE_PADDING + bezierX,
            height - 2 * NODE_PADDING,
        ],
        ['', NODE_PADDING, height - 2 * NODE_PADDING - bezierY],
        ['Z'],
    ];
    // \u591A path \u89E3\u51B3\u586B\u5145\u95EE\u9898
    const path1 = [
        ['M', NODE_PADDING, NODE_PADDING + bezierY],
        [
            'C',
            NODE_PADDING + bezierX,
            NODE_PADDING + 2 * bezierY,
            NODE_PADDING + width - bezierX,
            NODE_PADDING + 2 * bezierY,
        ],
        ['', width - 2 * NODE_PADDING, NODE_PADDING + bezierY], // top-right
    ];
    return (react_default.a.createElement("svg", { viewBox: \`0 0 \${width} \${height}\`, xmlns: "http://www.w3.org/2000/svg", width: "100%", height: "100%" },
        react_default.a.createElement("path", { d: createPath(path), fill: fill, stroke: stroke }),
        react_default.a.createElement("path", { d: createPath(path1), fill: fill, stroke: stroke }),
        react_default.a.createElement("text", { x: width / 2, y: height / 2, fill: fontFill, textAnchor: "middle", alignmentBaseline: "middle", fontSize: fontSize }, label),
        "Sorry, your browser does not support inline SVG."));
};
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-node-panel/nodes/hard-disk/index.js



const HardDiskNode = props => {
    const { size = { width: NODE_WIDTH, height: NODE_HEIGHT }, data = {} } = props;
    const { stroke = DefaultNodeConfig.stroke, label = DefaultNodeConfig.label, fill = DefaultNodeConfig.fill, fontFill = DefaultNodeConfig.fontFill, fontSize = DefaultNodeConfig.fontSize, } = data;
    const { width, height } = size;
    const bezierX = Math.min(width / 10, height / 4);
    const bezierY = Math.min(height / 4, width / 4);
    const path = [
        ['M', NODE_PADDING + bezierX, NODE_PADDING],
        ['L', width - 2 * NODE_PADDING - bezierX, NODE_PADDING],
        [
            'C',
            width - 2 * NODE_PADDING,
            NODE_PADDING + bezierY,
            width - 2 * NODE_PADDING,
            height - 2 * NODE_PADDING - bezierY,
        ],
        ['', width - 2 * NODE_PADDING - bezierX, height - 2 * NODE_PADDING],
        ['L', NODE_PADDING + bezierX, height - 2 * NODE_PADDING],
        ['C', NODE_PADDING, height - 2 * NODE_PADDING - bezierY, NODE_PADDING, NODE_PADDING + bezierY],
        ['', NODE_PADDING + bezierX, NODE_PADDING], // top-left
    ];
    // \u9075\u5FAA\u7ED8\u5236\u987A\u5E8F\uFF0C\u591A\u4E2A path \u7ED8\u5236\u5F27
    const pathBezierRight = [
        ['M', width - 2 * NODE_PADDING - bezierX, NODE_PADDING],
        [
            'C',
            width - 2 * NODE_PADDING - 2 * bezierX,
            NODE_PADDING + bezierY,
            width - 2 * NODE_PADDING - 2 * bezierX,
            height - 2 * NODE_PADDING - bezierY,
        ],
        ['', width - 2 * NODE_PADDING - bezierX, height - 2 * NODE_PADDING], // bottom-right
    ];
    return (react_default.a.createElement("svg", { viewBox: \`0 0 \${width} \${height}\`, xmlns: "http://www.w3.org/2000/svg", width: "100%", height: "100%" },
        react_default.a.createElement("path", { d: createPath(path), fill: fill, stroke: stroke }),
        react_default.a.createElement("path", { d: createPath(pathBezierRight), fill: fill, stroke: stroke }),
        react_default.a.createElement("text", { x: width / 2, y: height / 2, fill: fontFill, textAnchor: "middle", alignmentBaseline: "middle", fontSize: fontSize }, label),
        "Sorry, your browser does not support inline SVG."));
};
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-node-panel/nodes/stored-data/index.js



const StroedDataNode = props => {
    const { size = { width: NODE_WIDTH, height: NODE_HEIGHT }, data = {} } = props;
    const { stroke = DefaultNodeConfig.stroke, label = DefaultNodeConfig.label, fill = DefaultNodeConfig.fill, fontFill = DefaultNodeConfig.fontFill, fontSize = DefaultNodeConfig.fontSize, } = data;
    const { width, height } = size;
    const bezierX = Math.min(width / 10, height / 4);
    const bezierY = Math.min(height / 4, width / 4);
    const path = [
        ['M', NODE_PADDING + bezierX, NODE_PADDING],
        ['L', width - 2 * NODE_PADDING - bezierX, NODE_PADDING],
        [
            'C',
            width - 2 * NODE_PADDING - 2 * bezierX,
            NODE_PADDING + bezierY,
            width - 2 * NODE_PADDING - 2 * bezierX,
            height - 2 * NODE_PADDING - bezierY,
        ],
        ['', width - 2 * NODE_PADDING - bezierX, height - 2 * NODE_PADDING],
        ['L', NODE_PADDING + bezierX, height - 2 * NODE_PADDING],
        ['C', NODE_PADDING, height - 2 * NODE_PADDING - bezierY, NODE_PADDING, NODE_PADDING + bezierY],
        ['', NODE_PADDING + bezierX, NODE_PADDING], // top-left
    ];
    return (react_default.a.createElement("svg", { viewBox: \`0 0 \${width} \${height}\`, xmlns: "http://www.w3.org/2000/svg", width: "100%", height: "100%" },
        react_default.a.createElement("path", { d: createPath(path), fill: fill, stroke: stroke }),
        react_default.a.createElement("text", { x: width / 2, y: height / 2, fill: fontFill, textAnchor: "middle", alignmentBaseline: "middle", fontSize: fontSize }, label),
        "Sorry, your browser does not support inline SVG."));
};
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-node-panel/nodes/document/index.js



const DocumentNode = props => {
    const { size = { width: NODE_WIDTH, height: NODE_HEIGHT }, data = {} } = props;
    const { stroke = DefaultNodeConfig.stroke, label = DefaultNodeConfig.label, fill = DefaultNodeConfig.fill, fontFill = DefaultNodeConfig.fontFill, fontSize = DefaultNodeConfig.fontSize, } = data;
    const { width, height } = size;
    const bezierX = width / 8;
    const bezierY = height / 8;
    const path = [
        ['M', NODE_PADDING, NODE_PADDING],
        ['L', width - 2 * NODE_PADDING, NODE_PADDING],
        ['L', width - 2 * NODE_PADDING, height - 2 * NODE_PADDING - bezierY],
        [
            'C',
            width - 2 * NODE_PADDING - bezierX,
            height - 2 * NODE_PADDING - 2 * bezierY,
            width / 2 + bezierX,
            height - 2 * NODE_PADDING - 2 * bezierY,
        ],
        ['', width / 2, height - 2 * NODE_PADDING - bezierY],
        [
            'S',
            width / 4,
            height - 2 * NODE_PADDING,
            NODE_PADDING,
            height - 2 * NODE_PADDING - 2 * bezierY,
        ],
        ['L', NODE_PADDING, NODE_PADDING], // top-left
    ];
    return (react_default.a.createElement("svg", { viewBox: \`0 0 \${width} \${height}\`, xmlns: "http://www.w3.org/2000/svg", width: "100%", height: "100%" },
        react_default.a.createElement("path", { d: createPath(path), fill: fill, stroke: stroke }),
        react_default.a.createElement("text", { x: width / 2, y: height / 2, fill: fontFill, textAnchor: "middle", alignmentBaseline: "middle", fontSize: fontSize }, label),
        "Sorry, your browser does not support inline SVG."));
};
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-node-panel/nodes/multi-document/index.js



const MultiDocumentNode = props => {
    const { size = { width: NODE_WIDTH, height: NODE_HEIGHT }, data = {} } = props;
    const { stroke = DefaultNodeConfig.stroke, label = DefaultNodeConfig.label, fill = DefaultNodeConfig.fill, fontFill = DefaultNodeConfig.fontFill, fontSize = DefaultNodeConfig.fontSize, } = data;
    const multipleWidth = 6;
    const padding = NODE_PADDING;
    const multiPadding = multipleWidth / 2;
    let { width, height } = size;
    width += multipleWidth;
    height += multipleWidth;
    const bezierX = width / 8;
    const bezierY = height / 8;
    const path = [
        ['M', padding + multiPadding, padding],
        ['L', width - 2 * padding, padding],
        ['L', width - 2 * padding, height - 2 * padding - bezierY],
        [
            'C',
            width - 2 * padding - bezierX,
            height - 2 * padding - 2 * bezierY,
            width / 2 + bezierX,
            height - 2 * padding - 2 * bezierY,
        ],
        ['', width / 2, height - 2 * padding - bezierY],
        [
            'S',
            width / 4,
            height - 2 * padding,
            padding + multiPadding,
            height - 2 * padding - 2 * bezierY,
        ],
        ['L', padding + multiPadding, padding], // top-left
    ];
    return (react_default.a.createElement("svg", { viewBox: \`0 0 \${width} \${height}\`, xmlns: "http://www.w3.org/2000/svg", width: "100%", height: "100%" },
        react_default.a.createElement("path", { d: createPath(path), fill: fill, stroke: stroke }),
        react_default.a.createElement("path", { d: createPath(path, -multipleWidth / 2, multipleWidth / 2), fill: fill, stroke: stroke }),
        react_default.a.createElement("text", { x: width / 2, y: height / 2, fill: fontFill, textAnchor: "middle", alignmentBaseline: "middle", fontSize: fontSize }, label),
        "Sorry, your browser does not support inline SVG."));
};
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-node-panel/nodes/predefined-process/index.js



const PredefinedProcessNode = props => {
    const { size = { width: NODE_WIDTH, height: NODE_HEIGHT }, data = {} } = props;
    const { stroke = DefaultNodeConfig.stroke, label = DefaultNodeConfig.label, fill = DefaultNodeConfig.fill, fontFill = DefaultNodeConfig.fontFill, fontSize = DefaultNodeConfig.fontSize, } = data;
    const { width, height } = size;
    const struckOffset = width / 8;
    const path = [
        ['M', NODE_PADDING, NODE_PADDING],
        ['L', width - 2 * NODE_PADDING, NODE_PADDING],
        ['L', width - 2 * NODE_PADDING, height - 2 * NODE_PADDING],
        ['L', NODE_PADDING, height - 2 * NODE_PADDING],
        ['Z'],
    ];
    const path1 = [
        ['M', struckOffset, NODE_PADDING],
        ['L', struckOffset, height - 2 * NODE_PADDING],
    ];
    const path2 = [
        ['M', width - struckOffset, NODE_PADDING],
        ['L', width - struckOffset, height - 2 * NODE_PADDING], // right-center
    ];
    return (react_default.a.createElement("svg", { viewBox: \`0 0 \${width} \${height}\`, xmlns: "http://www.w3.org/2000/svg", width: "100%", height: "100%" },
        react_default.a.createElement("path", { d: createPath(path), fill: fill, stroke: stroke }),
        react_default.a.createElement("path", { d: createPath(path1), stroke: stroke }),
        react_default.a.createElement("path", { d: createPath(path2), stroke: stroke }),
        react_default.a.createElement("text", { x: width / 2, y: height / 2, fill: fontFill, textAnchor: "middle", alignmentBaseline: "middle", fontSize: fontSize }, label),
        "Sorry, your browser does not support inline SVG."));
};
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-node-panel/nodes/extract/index.js



const ExtractNode = props => {
    const { size = { width: NODE_WIDTH, height: NODE_HEIGHT }, data = {} } = props;
    const { stroke = DefaultNodeConfig.stroke, label = DefaultNodeConfig.label, fill = DefaultNodeConfig.fill, fontFill = DefaultNodeConfig.fontFill, fontSize = DefaultNodeConfig.fontSize, } = data;
    const { width, height } = size;
    const path = [
        ['M', width / 2, NODE_PADDING],
        ['L', width - 2 * NODE_PADDING, height - 2 * NODE_PADDING],
        ['L', NODE_PADDING, height - 2 * NODE_PADDING],
        ['Z'],
    ];
    return (react_default.a.createElement("svg", { viewBox: \`0 0 \${width} \${height}\`, xmlns: "http://www.w3.org/2000/svg", width: "100%", height: "100%" },
        react_default.a.createElement("path", { d: createPath(path), fill: fill, stroke: stroke }),
        react_default.a.createElement("text", { x: width / 2, y: height / 2, fill: fontFill, textAnchor: "middle", alignmentBaseline: "middle", fontSize: fontSize }, label),
        "Sorry, your browser does not support inline SVG."));
};
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-node-panel/nodes/merge/index.js



const MergeNode = props => {
    const { size = { width: NODE_WIDTH, height: NODE_HEIGHT }, data = {} } = props;
    const { stroke = DefaultNodeConfig.stroke, label = DefaultNodeConfig.label, fill = DefaultNodeConfig.fill, fontFill = DefaultNodeConfig.fontFill, fontSize = DefaultNodeConfig.fontSize, } = data;
    const { width, height } = size;
    const path = [
        ['M', NODE_PADDING, NODE_PADDING],
        ['L', width - 2 * NODE_PADDING, NODE_PADDING],
        ['L', width / 2, height - 2 * NODE_PADDING],
        ['Z'],
    ];
    return (react_default.a.createElement("svg", { viewBox: \`0 0 \${width} \${height}\`, xmlns: "http://www.w3.org/2000/svg", width: "100%", height: "100%" },
        react_default.a.createElement("path", { d: createPath(path), fill: fill, stroke: stroke }),
        react_default.a.createElement("text", { x: width / 2, y: height / 2, fill: fontFill, textAnchor: "middle", alignmentBaseline: "middle", fontSize: fontSize }, label),
        "Sorry, your browser does not support inline SVG."));
};
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-node-panel/nodes/or/index.js



const OrNode = props => {
    const { size = { width: NODE_WIDTH, height: NODE_HEIGHT }, data = {} } = props;
    const { stroke = DefaultNodeConfig.stroke, label = DefaultNodeConfig.label, fill = DefaultNodeConfig.fill, fontFill = DefaultNodeConfig.fontFill, fontSize = DefaultNodeConfig.fontSize, } = data;
    const { width, height } = size;
    const path1 = [
        ['M', height / 2, NODE_PADDING],
        ['L', height / 2, height - 2 * NODE_PADDING], // bottom-center
    ];
    const path2 = [
        ['M', NODE_PADDING, height / 2],
        ['L', height - 2 * NODE_PADDING, height / 2], // right-center
    ];
    const availableR = height - 2 * NODE_PADDING;
    return (react_default.a.createElement("svg", { viewBox: \`0 0 \${width} \${height}\`, xmlns: "http://www.w3.org/2000/svg", width: "100%", height: "100%" },
        react_default.a.createElement("path", { d: \`M \${NODE_PADDING},\${height / 2} a \${availableR / 2} \${availableR / 2} 0 1 1 0 1 z\`, fill: fill, stroke: stroke }),
        react_default.a.createElement("path", { d: createPath(path1), stroke: stroke }),
        react_default.a.createElement("path", { d: createPath(path2), stroke: stroke }),
        react_default.a.createElement("text", { x: width / 2, y: height / 2, fill: fontFill, textAnchor: "middle", alignmentBaseline: "middle", fontSize: fontSize }, label),
        "Sorry, your browser does not support inline SVG."));
};
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-node-panel/nodes/manual-input/index.js



const ManualInputNode = props => {
    const { size = { width: NODE_WIDTH, height: NODE_HEIGHT }, data = {} } = props;
    const { stroke = DefaultNodeConfig.stroke, label = DefaultNodeConfig.label, fill = DefaultNodeConfig.fill, fontFill = DefaultNodeConfig.fontFill, fontSize = DefaultNodeConfig.fontSize, } = data;
    const { width, height } = size;
    const path = [
        ['M', NODE_PADDING, height / 5],
        ['L', width - 2 * NODE_PADDING, NODE_PADDING],
        ['L', width - 2 * NODE_PADDING, height - 2 * NODE_PADDING],
        ['L', NODE_PADDING, height - 2 * NODE_PADDING],
        ['Z'],
    ];
    return (react_default.a.createElement("svg", { viewBox: \`0 0 \${width} \${height}\`, xmlns: "http://www.w3.org/2000/svg", width: "100%", height: "100%" },
        react_default.a.createElement("path", { d: createPath(path), fill: fill, stroke: stroke }),
        react_default.a.createElement("text", { x: width / 2, y: height / 2, fill: fontFill, textAnchor: "middle", alignmentBaseline: "middle", fontSize: fontSize }, label),
        "Sorry, your browser does not support inline SVG."));
};
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-node-panel/nodes/preparation/index.js



const PreparationNode = props => {
    const { size = { width: NODE_WIDTH, height: NODE_HEIGHT }, data = {} } = props;
    const { stroke = DefaultNodeConfig.stroke, label = DefaultNodeConfig.label, fill = DefaultNodeConfig.fill, fontFill = DefaultNodeConfig.fontFill, fontSize = DefaultNodeConfig.fontSize, } = data;
    const { width, height } = size;
    const rx = Math.tan(Math.PI / 6) * (height / 2);
    const path = [
        ['M', rx, NODE_PADDING],
        ['L', width - rx, NODE_PADDING],
        ['L', width - 2 * NODE_PADDING, height / 2],
        ['L', width - rx, height - 2 * NODE_PADDING],
        ['L', rx, height - 2 * NODE_PADDING],
        ['L', NODE_PADDING, height / 2],
        ['Z'],
    ];
    return (react_default.a.createElement("svg", { viewBox: \`0 0 \${width} \${height}\`, xmlns: "http://www.w3.org/2000/svg", width: "100%", height: "100%" },
        react_default.a.createElement("path", { d: createPath(path), fill: fill, stroke: stroke }),
        react_default.a.createElement("text", { x: width / 2, y: height / 2, fill: fontFill, textAnchor: "middle", alignmentBaseline: "middle", fontSize: fontSize }, label),
        "Sorry, your browser does not support inline SVG."));
};
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-node-panel/nodes/delay/index.js



const DelayNode = props => {
    const { size = { width: NODE_WIDTH, height: NODE_HEIGHT }, data = {} } = props;
    const { stroke = DefaultNodeConfig.stroke, label = DefaultNodeConfig.label, fill = DefaultNodeConfig.fill, fontFill = DefaultNodeConfig.fontFill, fontSize = DefaultNodeConfig.fontSize, } = data;
    const { width, height } = size;
    const rx = Math.min(height, width) / 2;
    const path = [
        ['M', NODE_PADDING, NODE_PADDING],
        ['L', width - rx, NODE_PADDING],
        ['C', width - 2 * NODE_PADDING, NODE_PADDING, width - 2 * NODE_PADDING, height / 2],
        ['', width - 2 * NODE_PADDING, height / 2],
        [
            'C',
            width - 2 * NODE_PADDING,
            height / 2,
            width - 2 * NODE_PADDING,
            height - 2 * NODE_PADDING,
        ],
        ['', width - rx, height - 2 * NODE_PADDING],
        ['L', NODE_PADDING, height - 2 * NODE_PADDING],
        ['Z'],
    ];
    return (react_default.a.createElement("svg", { viewBox: \`0 0 \${width} \${height}\`, xmlns: "http://www.w3.org/2000/svg", width: "100%", height: "100%" },
        react_default.a.createElement("path", { d: createPath(path), fill: fill, stroke: stroke }),
        react_default.a.createElement("text", { x: width / 2, y: height / 2, fill: fontFill, textAnchor: "middle", alignmentBaseline: "middle", fontSize: fontSize }, label),
        "Sorry, your browser does not support inline SVG."));
};
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-node-panel/nodes/manual-operation/index.js



const ManualOperationNode = props => {
    const { size = { width: NODE_WIDTH, height: NODE_HEIGHT }, data = {} } = props;
    const { stroke = DefaultNodeConfig.stroke, label = DefaultNodeConfig.label, fill = DefaultNodeConfig.fill, fontFill = DefaultNodeConfig.fontFill, fontSize = DefaultNodeConfig.fontSize, } = data;
    const { width, height } = size;
    const rx = Math.min(Math.tan(Math.PI / 6) * height, width / 2);
    const path = [
        ['M', NODE_PADDING, NODE_PADDING],
        ['L', width - 2 * NODE_PADDING, NODE_PADDING],
        ['L', width - rx, height - 2 * NODE_PADDING],
        ['L', rx, height - 2 * NODE_PADDING],
        ['Z'],
    ];
    return (react_default.a.createElement("svg", { viewBox: \`0 0 \${width} \${height}\`, xmlns: "http://www.w3.org/2000/svg", width: "100%", height: "100%" },
        react_default.a.createElement("path", { d: createPath(path), fill: fill, stroke: stroke }),
        react_default.a.createElement("text", { x: width / 2, y: height / 2, fill: fontFill, textAnchor: "middle", alignmentBaseline: "middle", fontSize: fontSize }, label),
        "Sorry, your browser does not support inline SVG."));
};
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-node-panel/nodes/display/index.js



const DisplayNode = props => {
    const { size = { width: NODE_WIDTH, height: NODE_HEIGHT }, data = {} } = props;
    const { stroke = DefaultNodeConfig.stroke, label = DefaultNodeConfig.label, fill = DefaultNodeConfig.fill, fontFill = DefaultNodeConfig.fontFill, fontSize = DefaultNodeConfig.fontSize, } = data;
    const { width, height } = size;
    const sx = Math.min(height, width) / 3;
    const dx = Math.min(Math.tan(Math.PI / 6) * (height / 2), width / 3);
    const path = [
        ['M', dx, NODE_PADDING],
        ['L', width - sx, NODE_PADDING],
        ['C', width - 2 * NODE_PADDING, NODE_PADDING, width - 2 * NODE_PADDING, height / 2],
        ['', width - 2 * NODE_PADDING, height / 2],
        [
            'C',
            width - 2 * NODE_PADDING,
            height / 2,
            width - 2 * NODE_PADDING,
            height - 2 * NODE_PADDING,
        ],
        ['', width - sx, height - 2 * NODE_PADDING],
        ['L', dx, height - 2 * NODE_PADDING],
        ['L', NODE_PADDING, height / 2],
        ['Z'],
    ];
    return (react_default.a.createElement("svg", { viewBox: \`0 0 \${width} \${height}\`, 
        // viewBox={\`0 0 40 30\`}
        xmlns: "http://www.w3.org/2000/svg", width: "100%", height: "100%" },
        react_default.a.createElement("path", { d: createPath(path), fill: fill, stroke: stroke }),
        react_default.a.createElement("text", { x: width / 2, y: height / 2, fill: fontFill, textAnchor: "middle", alignmentBaseline: "middle", fontSize: fontSize }, label),
        "Sorry, your browser does not support inline SVG."));
};
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-node-panel/nodes/off-page-link/index.js



const OffPageLinkNode = props => {
    const { size = { width: NODE_WIDTH, height: NODE_HEIGHT }, data = {} } = props;
    const { stroke = DefaultNodeConfig.stroke, label = DefaultNodeConfig.label, fill = DefaultNodeConfig.fill, fontFill = DefaultNodeConfig.fontFill, fontSize = DefaultNodeConfig.fontSize, } = data;
    const { width, height } = size;
    const dx = Math.min(Math.tan(Math.PI / 6) * (width / 2), height / 4);
    const path = [
        ['M', NODE_PADDING, NODE_PADDING],
        ['L', width - 2 * NODE_PADDING, NODE_PADDING],
        ['L', width - 2 * NODE_PADDING, height - dx],
        ['L', width / 2, height - 2 * NODE_PADDING],
        ['L', NODE_PADDING, height - dx],
        ['Z'],
    ];
    return (react_default.a.createElement("svg", { viewBox: \`0 0 \${width} \${height}\`, xmlns: "http://www.w3.org/2000/svg", width: "100%", height: "100%" },
        react_default.a.createElement("path", { d: createPath(path), fill: fill, stroke: stroke }),
        react_default.a.createElement("text", { x: width / 2, y: height / 2, fill: fontFill, textAnchor: "middle", alignmentBaseline: "middle", fontSize: fontSize }, label),
        "Sorry, your browser does not support inline SVG."));
};
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-node-panel/nodes/note-left/index.js



const NoteLeftNode = props => {
    const { size = { width: NODE_WIDTH, height: NODE_HEIGHT }, data = {} } = props;
    const { stroke = DefaultNodeConfig.stroke, label = DefaultNodeConfig.label, fill = 'transparent', fontFill = DefaultNodeConfig.fontFill, fontSize = DefaultNodeConfig.fontSize, } = data;
    const { width, height } = size;
    const dx = 6;
    const baseX = width - 2 * NODE_PADDING;
    const path = [
        ['M', baseX, NODE_PADDING],
        ['C', baseX - dx, NODE_PADDING, baseX - dx, dx],
        ['', baseX - dx, (height - dx) / 2],
        ['L', baseX - 2 * dx, height / 2],
        ['L', baseX - dx, (height + dx) / 2],
        ['L', baseX - dx, height - 2 * NODE_PADDING - dx],
        ['C', baseX - dx, height - 2 * NODE_PADDING, baseX, height - 2 * NODE_PADDING],
        ['', baseX, height - 2 * NODE_PADDING],
    ];
    return (react_default.a.createElement("svg", { viewBox: \`0 0 \${width} \${height}\`, 
        // viewBox={\`0 0 40 30\`}
        xmlns: "http://www.w3.org/2000/svg", width: "100%", height: "100%" },
        react_default.a.createElement("path", { d: createPath(path), fill: fill, stroke: stroke }),
        react_default.a.createElement("text", { x: width / 2, y: height / 2, fill: fontFill, textAnchor: "middle", alignmentBaseline: "middle", fontSize: fontSize }, label),
        "Sorry, your browser does not support inline SVG."));
};
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-node-panel/nodes/note-right/index.js



const NoteRightNode = props => {
    const { size = { width: NODE_WIDTH, height: NODE_HEIGHT }, data = {} } = props;
    const { stroke = DefaultNodeConfig.stroke, label = DefaultNodeConfig.label, fill = 'transparent', fontFill = DefaultNodeConfig.fontFill, fontSize = DefaultNodeConfig.fontSize, } = data;
    const { width, height } = size;
    const dx = 6;
    const path = [
        ['M', NODE_PADDING, NODE_PADDING],
        ['C', dx, NODE_PADDING, dx, dx],
        ['', dx, (height - dx) / 2],
        ['L', 2 * dx, height / 2],
        ['L', dx, (height + dx) / 2],
        ['L', dx, height - 2 * NODE_PADDING - dx],
        ['C', dx, height - 2 * NODE_PADDING, NODE_PADDING, height - 2 * NODE_PADDING],
        ['', NODE_PADDING, height - 2 * NODE_PADDING],
    ];
    return (react_default.a.createElement("svg", { viewBox: \`0 0 \${width} \${height}\`, 
        // viewBox={\`0 0 40 30\`}
        xmlns: "http://www.w3.org/2000/svg", width: "100%", height: "100%" },
        react_default.a.createElement("path", { d: createPath(path), fill: fill, stroke: stroke }),
        react_default.a.createElement("text", { x: width / 2, y: height / 2, fill: fontFill, textAnchor: "middle", alignmentBaseline: "middle", fontSize: fontSize }, label),
        "Sorry, your browser does not support inline SVG."));
};
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-node-panel/nodes/internal-storage/index.js



const InternalStorageNode = props => {
    const { size = { width: NODE_WIDTH, height: NODE_HEIGHT }, data = {} } = props;
    const { stroke = DefaultNodeConfig.stroke, label = DefaultNodeConfig.label, fill = DefaultNodeConfig.fill, fontFill = DefaultNodeConfig.fontFill, fontSize = DefaultNodeConfig.fontSize, } = data;
    const { width, height } = size;
    const availableWidth = width - 2 * NODE_PADDING;
    const availableHieght = height - 2 * NODE_PADDING;
    const rx = 6;
    const path = [
        ['M', NODE_PADDING, NODE_PADDING],
        ['L', availableWidth - rx, NODE_PADDING],
        ['C', availableWidth, NODE_PADDING, availableWidth, rx],
        ['', availableWidth, height / 2],
        ['L', availableWidth, availableHieght - rx],
        ['C', availableWidth, availableHieght, availableWidth - rx, availableHieght],
        ['', availableWidth - rx, availableHieght],
        ['L', rx, availableHieght],
        ['C', NODE_PADDING, availableHieght, NODE_PADDING, availableHieght - rx],
        ['', NODE_PADDING, availableHieght - rx],
        ['Z'],
    ];
    return (react_default.a.createElement("svg", { viewBox: \`0 0 \${width} \${height}\`, 
        // viewBox={\`0 0 40 30\`}
        xmlns: "http://www.w3.org/2000/svg", width: "100%", height: "100%" },
        react_default.a.createElement("path", { d: createPath(path), fill: fill, stroke: stroke }),
        react_default.a.createElement("path", { d: \`M \${NODE_PADDING},\${rx} L \${availableWidth - 1} \${rx} \`, fill: fill, stroke: stroke }),
        react_default.a.createElement("path", { d: \`M \${rx},\${NODE_PADDING} L \${rx} \${availableHieght} \`, fill: fill, stroke: stroke }),
        react_default.a.createElement("text", { x: width / 2, y: height / 2, fill: fontFill, textAnchor: "middle", alignmentBaseline: "middle", fontSize: fontSize }, label),
        "Sorry, your browser does not support inline SVG."));
};
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-node-panel/nodes/text/index.js


const TextNode = props => {
    const { size = { width: NODE_WIDTH, height: NODE_HEIGHT }, data = {} } = props;
    const { label = DefaultNodeConfig.label, fontFill = DefaultNodeConfig.fontFill, fontSize = DefaultNodeConfig.fontSize, } = data;
    const { width, height } = size;
    // \u7528\u4E8E\u653E\u5927\u6587\u672C\uFF0C\u907F\u514D\u770B\u4E0D\u6E05
    const scale = 2;
    return (react_default.a.createElement("svg", { viewBox: \`0 0 \${width / scale} \${height / scale}\`, xmlns: "http://www.w3.org/2000/svg", width: "100%", height: "100%" },
        react_default.a.createElement("text", { x: width / (2 * scale), y: height / (2 * scale), fill: fontFill, textAnchor: "middle", alignmentBaseline: "middle", fontSize: fontSize }, label),
        "Sorry, your browser does not support inline SVG."));
};
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-node-panel/nodes/index.js
























//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-node-panel/utils.js
var utils_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};




/** \u548C graph config \u6CE8\u518C\u7684\u8282\u70B9\u4FDD\u6301\u4E00\u81F4 */
const getAnchorStyle = (position) => {
    return {
        position: { name: position },
        attrs: {
            circle: {
                r: 4,
                magnet: true,
                stroke: '#31d0c6',
                strokeWidth: 2,
                fill: '#fff',
                style: {
                    visibility: 'hidden',
                },
            },
        },
        zIndex: 10,
    };
};
const getPorts = (position = ['top', 'right', 'bottom', 'left']) => {
    return {
        items: position.map(name => {
            return { group: name, id: uuidv4() };
        }),
        groups: {
            top: getAnchorStyle('top'),
            right: getAnchorStyle('right'),
            bottom: getAnchorStyle('bottom'),
            left: getAnchorStyle('left'),
        },
    };
};
const getRegisterNode = nodes => {
    return (nodes || []).map(item => {
        const { name, popover, label = '', width = NODE_HEIGHT, height = NODE_HEIGHT, ports } = item;
        const id = uuidv4(); // \u6682\u4E0D\u4F7F\u7528\u4E0A\u5C42\u6570\u636E
        return {
            id,
            renderKey: name,
            name,
            label,
            popoverContent: popover,
            width,
            height,
            ports: ports || getPorts(),
            originData: Object.assign({}, item),
            isCustom: true,
        };
    });
};
const nodeService = (nodes) => utils_awaiter(void 0, void 0, void 0, function* () {
    const customNodes = getRegisterNode(nodes);
    return [
        ...customNodes,
        ...NODEPOOL.map(({ name, ports, width = NODE_WIDTH, height = NODE_HEIGHT, label = '' }) => {
            return {
                id: uuidv4(),
                renderKey: name,
                name,
                label,
                popoverContent: () => name,
                width,
                height,
                ports: getPorts(ports),
            };
        }),
    ];
});
const setNodeRender = (config, nodes = []) => {
    // \u81EA\u5B9A\u4E49\u8282\u70B9
    if (nodes === null || nodes === void 0 ? void 0 : nodes.length) {
        nodes.forEach(item => {
            const { name, component } = item;
            config.setNodeRender(name, component);
        });
    }
    /** \u9ED8\u8BA4\u8282\u70B9\uFF0C\u901A\u8FC7 Terminal \u6807\u8BC6\uFF0C\u907F\u514D\u591A\u6B21\u8C03\u7528*/
    if (!config.nodeRender.get('Terminal')) {
        NODEPOOL.forEach(item => {
            config.setNodeRender(item.name, nodes_namespaceObject[\`\${item.name.replace(/\\s+/g, '')}Node\`]);
        });
    }
};
// \u521B\u5EFA\u8282\u70B9\u8DEF\u5F84
const createPath = (paths, offsetX = 0, offsetY = 0) => {
    if (!paths.length) {
        return null;
    }
    let path = '';
    // @ts-ignore
    paths.forEach((item) => {
        const [c, x, y, c2x, c2y] = item;
        path += Object(lodash["isNumber"])(y) ? \` \${c} \${x + offsetX} \${y + offsetY}\` : \` \${c}\`;
        if (c2y) {
            path += \` \${c2x + offsetX} \${c2y + offsetY}\`;
        }
    });
    return path;
};
//# sourceMappingURL=utils.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-canvas/utils/util.js
var util_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};


// \u89E3\u51B3\u914D\u7F6E\u5171\u4EAB\u95EE\u9898
const globalProps = {
    config: {},
};
const setProps = props => {
    globalProps.config = props;
};
const getProps = (key) => {
    var _a;
    return (_a = globalProps.config) === null || _a === void 0 ? void 0 : _a[key];
};
const graphInstance = new Map();
const appInstance = new Map();
const setInstance = (app) => util_awaiter(void 0, void 0, void 0, function* () {
    const x6graph = yield app.getGraphInstance();
    graphInstance.set('x6graph', x6graph);
    appInstance.set('app', app);
});
const getGraphInstance = () => {
    return graphInstance.get('x6graph');
};
const getAppInstance = () => {
    return appInstance.get('app');
};
const getGraphData = () => util_awaiter(void 0, void 0, void 0, function* () {
    const app = getAppInstance();
    let data;
    yield app.executeCommand(XFlowGraphCommands.SAVE_GRAPH_DATA.id, {
        saveGraphDataService: (graphMeta, graphData) => util_awaiter(void 0, void 0, void 0, function* () {
            data = graphData;
        }),
    });
    return data;
});
/** \u66F4\u65B0\u914D\u7F6E\u65F6\u901A\u77E5\u4E0A\u4F20\u6267\u884C\u4FDD\u5B58 */
const onConfigChange = Object(lodash["debounce"])(config => {
    const configChange = getProps('onConfigChange');
    if (!configChange || typeof configChange !== 'function') {
        return;
    }
    return configChange(Object.assign({ data: getGraphData() }, config));
}, 300, {
    trailing: true,
});
//# sourceMappingURL=util.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-canvas/utils/events.js
var events_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};



/** \u8282\u70B9\u79FB\u52A8\u65F6\uFF0C\u5B9E\u65F6\u66F4\u65B0\u4F4D\u7F6E\u4FE1\u606F\uFF0C\u5185\u7F6E\u4E4B\u540E\u53EF\u53BB\u6389 */
const movedNode = (e, cmds) => events_awaiter(void 0, void 0, void 0, function* () {
    const { node } = e;
    if (!node) {
        return;
    }
    const { data } = node;
    // \u66F4\u65B0\u7EC4\u5185\u5143\u7D20
    if (data === null || data === void 0 ? void 0 : data.groupChildren) {
        const x6Graph = getGraphInstance();
        data === null || data === void 0 ? void 0 : data.groupChildren.forEach((id) => events_awaiter(void 0, void 0, void 0, function* () {
            var _a;
            const currentNode = x6Graph.getCellById(id);
            const position = (_a = currentNode.getPosition) === null || _a === void 0 ? void 0 : _a.call(currentNode);
            if (currentNode && position) {
                yield cmds.executeCommand(XFlowNodeCommands.UPDATE_NODE.id, {
                    nodeConfig: Object.assign(Object.assign(Object.assign({}, currentNode.data), position), currentNode.getSize()),
                });
            }
        }));
    }
    const nodeConfig = Object.assign(Object.assign(Object.assign({}, node.data), node.getPosition()), node.getSize());
    yield cmds.executeCommand(XFlowNodeCommands.UPDATE_NODE.id, {
        nodeConfig,
    });
    onConfigChange({ type: 'move:node', config: nodeConfig });
});
/** \u4FEE\u6539\u8282\u70B9\u5927\u5C0F */
const resizeNode = (e, cmds) => events_awaiter(void 0, void 0, void 0, function* () {
    const { node } = e;
    if (!node) {
        return;
    }
    const nodeConfig = Object.assign(Object.assign(Object.assign({}, node.data), node.getPosition()), node.size());
    yield cmds.executeCommand(XFlowNodeCommands.UPDATE_NODE.id, {
        nodeConfig,
    });
    onConfigChange({ type: 'resize:node', config: nodeConfig });
});
const getContainer = e => {
    var _a;
    let currentNode = (_a = e === null || e === void 0 ? void 0 : e.e) === null || _a === void 0 ? void 0 : _a.currentTarget;
    if (!currentNode) {
        return document.getElementsByClassName('xflow-canvas-root');
    }
    let containter = null;
    while (!containter) {
        const current = currentNode.getElementsByClassName('xflow-canvas-root');
        if ((current === null || current === void 0 ? void 0 : current.length) > 0) {
            containter = current;
        }
        currentNode = currentNode.parentNode;
    }
    return containter;
};
/** \u8BBE\u7F6E ports visible */
const changePortsVisible = (visible, e) => {
    const containers = getContainer(e);
    Array.from(containers).forEach((container) => {
        var _a, _b;
        const ports = container.querySelectorAll('.x6-port-body');
        const graph = getGraphInstance();
        // \u9009\u4E2D\u4E2D\u8282\u70B9\u65F6\u4E0D\u5C55\u793A\u94FE\u63A5\u6869
        const isSelectedNode = (_b = (_a = graph.getSelectedCells()) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.isNode();
        for (let i = 0, len = ports.length; i < len; i = i + 1) {
            ports[i].style.visibility = !isSelectedNode && visible ? 'visible' : 'hidden';
        }
    });
};
/** \u6DFB\u52A0\u8F85\u52A9\u5DE5\u5177 */
const addTools = (e) => events_awaiter(void 0, void 0, void 0, function* () {
    const { edge } = e;
    if (!edge) {
        return;
    }
    edge.addTools('vertices', 'ondbclick');
});
/** \u79FB\u9664\u8F85\u52A9\u5DE5\u5177 */
const removeTools = (e, cmds) => events_awaiter(void 0, void 0, void 0, function* () {
    const { edge } = e;
    if (!edge) {
        return;
    }
    if (edge.hasTools('ondbclick')) {
        cmds.executeCommand(XFlowEdgeCommands.UPDATE_EDGE.id, {
            edgeConfig: Object.assign(Object.assign({}, Object(lodash["get"])(edge, 'data')), { vertices: edge.getVertices() }),
        });
        edge.removeTools();
    }
});
//# sourceMappingURL=events.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-canvas/utils/index.js


//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-node-panel/panel-body.js
var flowchart_node_panel_panel_body_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};








const { Panel } = collapse["a" /* default */];
const panel_body_NodePanelBody = props => {
    const { x6NodeFactory, dndOptions, state, prefixClz, registerNode, defaultActiveKey = ['official', 'custom'], } = props;
    const { title = '\u590D\u5236\u8282\u70B9' } = registerNode !== null && registerNode !== void 0 ? registerNode : {};
    const { graphProvider, modelService, commandService } = useXFlowApp();
    const [dnd, setDnd] = react_default.a.useState();
    /** \u83B7\u53D6graph\u5B9E\u4F8B */
    const [graph, setGraph] = react_default.a.useState();
    graphProvider.getGraphInstance().then(x6Graph => {
        setGraph(x6Graph);
    });
    let graphConfig = undefined;
    graphProvider.getGraphOptions().then(x6GraphConfig => {
        /** x6GraphConfig \u4E0A\u7F3A\u5931 setNodeRender \u65B9\u6CD5  */
        setNodeRender(getProps('graphConfig'), Object(lodash["get"])(props, 'registerNode.nodes', []));
        graphConfig = x6GraphConfig;
    });
    const onNodeDrop = Object(react["useCallback"])((node) => flowchart_node_panel_panel_body_awaiter(void 0, void 0, void 0, function* () {
        var _a;
        const { ports } = node;
        const nodeConfig = Object.assign(Object.assign({}, node), { id: \`node-\${uuidv4()}\`, zIndex: 10, ports: Object.assign(Object.assign({}, ports), { items: (_a = ports.items) === null || _a === void 0 ? void 0 : _a.map(item => (Object.assign(Object.assign({}, item), { id: uuidv4() }))) }) });
        const args = {
            nodeConfig,
        };
        yield commandService.executeCommand(XFlowNodeCommands.ADD_NODE.id, args);
        const onAddNode = getProps('onAddNode');
        if (typeof onAddNode === 'function') {
            onAddNode(nodeConfig);
        }
    }), [commandService]);
    react_default.a.useEffect(() => {
        if (!graph) {
            return;
        }
        const dndInstance = new es["a" /* Addon */].Dnd(Object.assign(Object.assign({ scaled: false, animation: false }, dndOptions), { target: graph, 
            /** \u8FD9\u91CC\u8003\u8651\u5230\u9700\u8981\u65B0\u589E\u7FA4\u7EC4\u7684\u9700\u6C42\uFF0C\u4E0D\u4F7F\u7528x6\u7684getDropNod\u65B9\u6CD5
             * \u5728validateNode\u65F6\u8C03\u7528command\u6DFB\u52A0
             */
            validateNode: (droppingNode) => flowchart_node_panel_panel_body_awaiter(void 0, void 0, void 0, function* () {
                const nodeConfig = Object.assign(Object.assign({}, droppingNode.getData()), droppingNode.getPosition());
                yield onNodeDrop(nodeConfig);
                return false;
            }) }));
        setDnd(dndInstance);
    }, [commandService, dndOptions, graph, modelService, onNodeDrop]);
    const onMouseDown = react_default.a.useCallback((nodeConfig) => (e) => {
        if (!graph || !dnd || !graphConfig) {
            return;
        }
        const renderKey = graphConfig.nodeTypeParser(nodeConfig);
        const { width = 180, height = 40 } = nodeConfig;
        const reactComponent = graphConfig.nodeRender.get(renderKey);
        const wrappedComponent = getNodeReactComponent(reactComponent, commandService, modelService);
        const nodeData = {
            data: nodeConfig,
            width,
            height,
            view: graphConfig.graphId,
            component: wrappedComponent,
        };
        const x6Node = x6NodeFactory ? x6NodeFactory(nodeData) : defaultNodeFactory(nodeData);
        dnd.start(x6Node, e.nativeEvent);
    }, [commandService, dnd, graph, graphConfig, modelService, x6NodeFactory]);
    const renderTree = react_default.a.useCallback((list = []) => {
        return list.map(item => {
            const { popoverContent } = item;
            return (react_default.a.createElement(NodeTitle, { item: item, key: item.id, onMouseDown: onMouseDown(item), popoverContent: popoverContent, prefixClz: prefixClz, modelService: modelService, commandService: commandService, graphConfig: graphConfig }));
        });
    }, [commandService, graphConfig, modelService, onMouseDown, prefixClz]);
    const customNode = state.nodeList.filter(item => item.isCustom);
    const officialNode = state.nodeList.filter(item => !item.isCustom);
    const searchCustomNode = state.searchList.filter(item => item.isCustom);
    const searchOfficialNode = state.searchList.filter(item => !item.isCustom);
    const hasCustomNode = customNode.length > 0;
    return (react_default.a.createElement(react_default.a.Fragment, null,
        react_default.a.createElement("div", { className: \`\${prefixClz}-body\` },
            react_default.a.createElement(collapse["a" /* default */], { defaultActiveKey: defaultActiveKey, style: { border: 'none' } },
                react_default.a.createElement(Panel, { header: "\\u901A\\u7528\\u8282\\u70B9", key: "official", style: { border: 'none' } },
                    !state.keyword && (react_default.a.createElement("div", { className: \`\${prefixClz}-official\` }, renderTree(officialNode))),
                    state.searchList.length > 0 && (react_default.a.createElement("div", { className: \`\${prefixClz}-official\` }, renderTree(searchOfficialNode)))),
                hasCustomNode && (react_default.a.createElement(Panel, { header: title, key: "custom", style: { border: 'none' } },
                    !state.keyword && (react_default.a.createElement("div", { className: \`\${prefixClz}-custom\` }, renderTree(customNode))),
                    state.searchList.length > 0 && (react_default.a.createElement("div", { className: \`\${prefixClz}-custom\` }, renderTree(searchCustomNode)))))),
            state.keyword && state.searchList.length === 0 && react_default.a.createElement(empty["a" /* default */], { style: { marginTop: '48px' } }))));
};
//# sourceMappingURL=panel-body.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-node-panel/panel-header.js



const panel_header_NodePanelHeader = props => {
    const { prefixClz, onKeywordChange } = props;
    const { propsProxy } = usePanelContext();
    const panelProps = propsProxy.getValue();
    return (react_default.a.createElement(react_default.a.Fragment, null,
        react_default.a.createElement("div", { className: \`\${prefixClz}-header\`, style: Object.assign({ zIndex: 1 }, props.style) },
            panelProps.header && react_default.a.isValidElement(panelProps.header) && panelProps.header,
            react_default.a.createElement("div", { className: \`\${prefixClz}-header-search\` },
                react_default.a.createElement(input["a" /* default */], { placeholder: "\\u641C\\u7D22\\u7EC4\\u4EF6", allowClear: true, onChange: e => onKeywordChange(e.target.value), style: { width: '100%', border: 0 } })))));
};
//# sourceMappingURL=panel-header.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-node-panel/service.js
var flowchart_node_panel_service_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};



var NsPanelData;
(function (NsPanelData) {
    NsPanelData.id = 'NODE_PANEL_DATA';
})(NsPanelData || (NsPanelData = {}));
/** \u8282\u70B9\u67E5\u627E */
const DefaultsearchService = (nodeList = [], keyword) => flowchart_node_panel_service_awaiter(void 0, void 0, void 0, function* () {
    const list = nodeList.filter(i => { var _a, _b; return i.isDirectory || ((_a = i.label) === null || _a === void 0 ? void 0 : _a.includes(keyword)) || ((_b = i.name) === null || _b === void 0 ? void 0 : _b.includes(keyword)); });
    return list;
});
const usePanelData = (props) => {
    const { registerNode, searchService = DefaultsearchService } = props;
    const { nodes } = registerNode !== null && registerNode !== void 0 ? registerNode : {};
    const { modelService } = useXFlowApp();
    /** \u4F7F\u7528model */
    const [state, setState, panelModel] = createComponentModel({
        searchList: [],
        nodeList: [],
        defaultExpandAll: false,
        keyword: '',
    });
    /** \u6CE8\u518C\u6210\u4E3A\u5168\u5C40\u72B6\u6001\uFF0C\u65B9\u4FBF\u5176\u4ED6\u7EC4\u4EF6\u8054\u52A8 */
    react_default.a.useEffect(() => {
        if (modelService.findDeferredModel(NsPanelData.id)) {
            return;
        }
        modelService.registerModel({
            id: NsPanelData.id,
            modelFactory: () => panelModel,
            watchChange: (self) => flowchart_node_panel_service_awaiter(void 0, void 0, void 0, function* () {
                const graphMetaModel = yield model_service_constant_namespaceObject.GRAPH_META.getModel(modelService); //useContext(MODELS.GRAPH_META.id)
                const fetch = () => flowchart_node_panel_service_awaiter(void 0, void 0, void 0, function* () {
                    const listData = yield nodeService(nodes);
                    return { listData };
                });
                const graphMetaDisposable = graphMetaModel.watch(() => flowchart_node_panel_service_awaiter(void 0, void 0, void 0, function* () {
                    const data = yield fetch();
                    self.setValue({
                        nodeList: data.listData,
                        defaultExpandAll: false,
                        keyword: '',
                        searchList: [],
                    });
                }));
                return Disposable.create(() => {
                    graphMetaDisposable.dispose();
                });
            }),
        });
        /* eslint-disable-next-line  */
    }, []);
    /** \u641C\u7D22 */
    const onKeywordChange = react_default.a.useCallback((keyword) => flowchart_node_panel_service_awaiter(void 0, void 0, void 0, function* () {
        if (!searchService) {
            return;
        }
        if (keyword) {
            // @ts-ignore
            const list = yield searchService(state.nodeList, keyword);
            setState(modelState => {
                modelState.keyword = keyword;
                modelState.searchList = list;
            });
        }
        else {
            setState(modelState => {
                modelState.keyword = '';
                modelState.searchList = [];
            });
        }
    }), [searchService, state.nodeList, setState]);
    return {
        state,
        setState,
        onKeywordChange,
    };
};
//# sourceMappingURL=service.js.map
// EXTERNAL MODULE: ../xflow-extension/es/flowchart-node-panel/group-panel/group.less
var group_panel_group = __webpack_require__("lNU9");

// CONCATENATED MODULE: ../xflow-extension/es/flowchart-node-panel/group-panel/group.js




const GroupNode = props => {
    const { cell, data: { label, stroke, fill, fontSize, fontFill, width = 200, isCollapsed = false }, } = props;
    const app = useXFlowApp();
    const onExpand = () => {
        app.executeCommand(XFlowGroupCommands.COLLAPSE_GROUP.id, {
            nodeId: cell.id,
            isCollapsed: false,
            collapsedSize: { width, height: 40 },
        });
    };
    const onCollapse = () => {
        app.executeCommand(XFlowGroupCommands.COLLAPSE_GROUP.id, {
            nodeId: cell.id,
            isCollapsed: true,
            collapsedSize: { width, height: 40 },
            gap: 3,
        });
    };
    return (react_default.a.createElement("div", { className: "xflow-group-node", style: {
            borderColor: stroke,
            backgroundColor: fill,
            fontSize,
            color: fontFill,
        } },
        react_default.a.createElement("div", { className: "xflow-group-header" },
            react_default.a.createElement("div", { className: "header-left" }, label),
            react_default.a.createElement("div", { className: "header-right" },
                isCollapsed && react_default.a.createElement(PlusSquareOutlined["a" /* default */], { onClick: onExpand }),
                !isCollapsed && react_default.a.createElement(MinusSquareOutlined["a" /* default */], { onClick: onCollapse })))));
};
//# sourceMappingURL=group.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-node-panel/group-panel/index.js


const setGroupRender = config => {
    config.setNodeRender(GROUP_NODE_RENDER_ID, GroupNode);
};
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-node-panel/interface.js

var NsFlowchartPanelData;
(function (NsFlowchartPanelData) {
    NsFlowchartPanelData.id = 'FLOWCHART_PANEL_DATA';
})(NsFlowchartPanelData || (NsFlowchartPanelData = {}));
//# sourceMappingURL=interface.js.map
// EXTERNAL MODULE: ../xflow-extension/es/flowchart-node-panel/style/index.less
var flowchart_node_panel_style = __webpack_require__("MYiY");

// CONCATENATED MODULE: ../xflow-extension/es/flowchart-node-panel/style/index.js

//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-node-panel/index.js
var flowchart_node_panel_rest = (undefined && undefined.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};





// import { NodePanelHeader } from '../canvas-node-tree-panel/panel-header'









const NodePanelMain = props => {
    const { prefixClz, position = { width: 240, top: 0, bottom: 0, left: 0 }, showHeader = true } = props, rest = flowchart_node_panel_rest(props, ["prefixClz", "position", "showHeader"]);
    const { width = 200 } = position;
    const { headerStyle, bodyStyle } = usePanelLyaoutStyle(props);
    const { state, onKeywordChange } = usePanelData(props);
    return (react_default.a.createElement(react_default.a.Fragment, null,
        showHeader && (react_default.a.createElement(WorkspacePanel, Object.assign({}, rest, { position: {
                top: 0,
                left: 0,
                height: flowchart_node_panel_constants_PANEL_HEADER_HEIGHT,
                width,
            } }),
            react_default.a.createElement(panel_header_NodePanelHeader, Object.assign({}, props, { state: state, style: headerStyle, onKeywordChange: onKeywordChange })))),
        react_default.a.createElement(WorkspacePanel, Object.assign({ className: \`\${CONTAINER_CLASS}-nodes\` }, rest, { position: Object.assign(Object.assign({}, position), { top: showHeader ? flowchart_node_panel_constants_PANEL_HEADER_HEIGHT : 0 }) }),
            react_default.a.createElement(panel_body_NodePanelBody, Object.assign({}, props, { state: state, style: bodyStyle })))));
};
const FlowchartNodePanel = props => {
    const prefixClz = useXflowPrefixCls('node-panel');
    const [collpased, setCollpased] = Object(react["useState"])(false);
    const { show = true, position = { width: 240, top: 40, bottom: 0, left: 0 } } = props, rest = flowchart_node_panel_rest(props, ["show", "position"]);
    if (!show) {
        return null;
    }
    const { width = 200, left } = position;
    return (react_default.a.createElement(WorkspacePanel, { className: CONTAINER_CLASS, position: Object.assign(Object.assign({}, position), { left: !collpased ? left : -width }) },
        react_default.a.createElement("div", { className: \`\${CONTAINER_CLASS}-wrapper\` },
            react_default.a.createElement(WorkspacePanel, Object.assign({ className: prefixClz }, rest, { position: {
                    top: 0,
                    bottom: 0,
                    left: 0,
                    right: 0,
                } }),
                react_default.a.createElement(NodePanelMain, Object.assign({}, props, { prefixClz: prefixClz, position: position }))),
            react_default.a.createElement("div", { className: \`\${CONTAINER_CLASS}-icon\`, style: {
                    top: 21,
                    right: !collpased ? -10 : -20,
                    borderRadius: !collpased ? '50%' : '0 50% 50% 0',
                    borderLeft: !collpased ? '' : 'none',
                }, onClick: () => {
                    setCollpased(!collpased);
                } }, collpased ? react_default.a.createElement(DoubleRightOutlined["a" /* default */], null) : react_default.a.createElement(DoubleLeftOutlined["a" /* default */], null)))));
};
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-canvas/config-graph.js








/** \u81EA\u5B9A\u4E49React\u8282\u70B9 */
const config_graph_ANT_PREFIX = 'ant';
var config_graph_NsAddEdgeEvent;
(function (NsAddEdgeEvent) {
    NsAddEdgeEvent.EVENT_NAME = 'ADD_FLOWCHART_EDGE_CMD_EVENT';
})(config_graph_NsAddEdgeEvent || (config_graph_NsAddEdgeEvent = {}));
const config_graph_XFlowEdge = es["n" /* Shape */].Edge.registry.register('xflow', es["n" /* Shape */].Edge.define({
    zIndex: 1,
    highlight: true,
    shape: 'EDGE1',
    name: 'custom-edge',
    label: '',
    anchor: {
        name: 'midSide',
        args: {
            dx: 10,
        },
    },
    attrs: {
        line: {
            stroke: '#A2B1C3',
            targetMarker: {
                name: 'block',
                width: 12,
                height: 8,
            },
            strokeDasharray: '5 5',
            strokeWidth: 1,
        },
    },
    data: {
        label: '',
    },
}), true);
const useGraphConfig = createGraphConfig((config, proxy) => {
    const { config: canvasConfig = {} } = proxy.getValue();
    config.setEdgeTypeParser(edge => edge === null || edge === void 0 ? void 0 : edge.renderKey);
    setNodeRender(config);
    setGroupRender(config);
    /** \u8FD9\u91CC\u6BD4\u8F83\u9ED1\uFF0Cprops \u5171\u4EAB*/
    setProps(Object.assign(Object.assign({}, proxy.getValue()), { graphConfig: config }));
    config.setX6Config(Object.assign({ grid: true, history: true, resizing: {
            enabled: true,
            minWidth: NODE_HEIGHT,
            minHeight: NODE_HEIGHT,
            preserveAspectRatio: shape => {
                const { data } = shape;
                return ASPECTRATIONODE.includes(data.name);
            },
        }, snapline: {
            enabled: true,
        }, connecting: {
            router: 'manhattan',
            connector: {
                name: 'rounded',
                args: {
                    radius: 8,
                },
            },
            anchor: 'center',
            connectionPoint: 'anchor',
            allowBlank: false,
            snap: {
                radius: 20,
            },
            createEdge() {
                const tempEdge = new config_graph_XFlowEdge({});
                this.once('edge:connected', args => {
                    const { edge, isNew } = args;
                    if (isNew && edge.isEdge()) {
                        const targetNode = edge.getTargetCell();
                        if (targetNode && targetNode.isNode()) {
                            const targetPortId = edge.getTargetPortId();
                            const sourcePortId = edge.getSourcePortId();
                            const sourceCellId = edge.getSourceCellId();
                            const targetCellId = edge.getTargetCellId();
                            this.trigger(config_graph_NsAddEdgeEvent.EVENT_NAME, {
                                targetPortId,
                                sourcePortId,
                                source: sourceCellId,
                                target: targetCellId,
                                edge: edge,
                            });
                        }
                    }
                });
                return tempEdge;
            },
            validateEdge: args => {
                var _a;
                const { edge } = args;
                return !!((_a = edge === null || edge === void 0 ? void 0 : edge.target) === null || _a === void 0 ? void 0 : _a.port);
            },
            // \u662F\u5426\u89E6\u53D1\u4EA4\u4E92\u4E8B\u4EF6
            validateMagnet() {
                // \u6240\u6709\u951A\u70B9\u5747\u53EF\u89E6\u53D1
                return true;
            },
            // \u663E\u793A\u53EF\u7528\u7684\u94FE\u63A5\u6869
            validateConnection({ sourceView, targetView, targetMagnet }) {
                // \u4E0D\u5141\u8BB8\u8FDE\u63A5\u5230\u81EA\u5DF1
                if (sourceView === targetView) {
                    return false;
                }
                const node = targetView.cell;
                // \u5224\u65AD\u76EE\u6807\u94FE\u63A5\u6869\u662F\u5426\u53EF\u8FDE\u63A5
                if (targetMagnet) {
                    const portId = targetMagnet.getAttribute('port');
                    const port = node.getPort(portId);
                    return !(port && port.connected);
                }
                return;
            },
        }, highlighting: {
            nodeAvailable: {
                name: 'className',
                args: {
                    className: 'available',
                },
            },
            magnetAvailable: {
                name: 'className',
                args: {
                    className: 'available',
                },
            },
            magnetAdsorbed: {
                name: 'className',
                args: {
                    className: 'adsorbed',
                },
            },
        }, onPortRendered(args) {
            const { port } = args;
            const { contentSelectors } = args;
            const container = contentSelectors && contentSelectors.content;
            const placement = port.group;
            const clz = classnames_default()('xflow-port', { connected: port.connected });
            if (container) {
                react_dom_default.a.render((react_default.a.createElement(config_provider["a" /* default */], { prefixCls: config_graph_ANT_PREFIX },
                    react_default.a.createElement(es_tooltip["a" /* default */], { title: port.tooltip, placement: placement },
                        react_default.a.createElement("span", { className: clz })))), container);
            }
        } }, canvasConfig));
    /** \u5185\u4EA4\u4E92\uFF0C\u4E0A\u5C42\u901A\u8FC7\u5B9E\u4F8B\u7ED1\u5B9A */
    config.setEvents([
        {
            eventName: 'node:selected',
            callback: () => {
                changePortsVisible(false);
            },
        },
        {
            eventName: 'edge:dblclick',
            callback: e => {
                addTools(e);
            },
        },
        {
            eventName: 'edge:mouseleave',
            callback: (e, cmds) => {
                removeTools(e, cmds);
            },
        },
        {
            eventName: 'node:mouseenter',
            callback: e => {
                changePortsVisible(true, e);
            },
        },
        {
            eventName: 'node:mouseleave',
            callback: e => {
                changePortsVisible(false, e);
            },
        },
        {
            eventName: 'node:moved',
            callback: (e, cmds) => {
                movedNode(e, cmds);
            },
        },
        {
            eventName: 'node:resized',
            callback: (e, cmds) => {
                resizeNode(e, cmds);
            },
        },
    ]);
});
//# sourceMappingURL=config-graph.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-canvas/extension/contributions/flow.js
var contributions_flow_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var contributions_flow_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var flow_rest = (undefined && undefined.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};





/**
 * \u5185\u7F6E\u7684hook contribution
 * \u5904\u7406 config\u4E0A\u7684runtime\u7684\u6CE8\u518C\u9879
 */
let contributions_flow_FlowHooksContribution = class FlowHooksContribution {
    constructor() {
        this.toDispose = new disposable_DisposableCollection();
        this.registerHookHub = () => contributions_flow_awaiter(this, void 0, void 0, function* () {
            return Disposable.create(() => { });
        });
        this.registerHook = (hooks) => contributions_flow_awaiter(this, void 0, void 0, function* () {
            const toDispose = new disposable_DisposableCollection();
            const disposables = [
                hooks.afterGraphInit.registerHook({
                    name: 'call add edge to replace temp edge',
                    handler: (handlerArgs) => contributions_flow_awaiter(this, void 0, void 0, function* () {
                        const { commandService, graph } = handlerArgs;
                        graph.on(config_graph_NsAddEdgeEvent.EVENT_NAME, (args) => contributions_flow_awaiter(this, void 0, void 0, function* () {
                            const { edge } = args, edgeConfig = flow_rest(args, ["edge"]);
                            const config = {
                                edgeConfig: Object.assign(Object.assign({}, edgeConfig), { 
                                    // renderKey: FLOWCHART_EDGE, // \u6682\u4E0D\u652F\u6301
                                    source: {
                                        cell: edgeConfig.source,
                                        port: edgeConfig.sourcePortId,
                                    }, target: {
                                        cell: edgeConfig.target,
                                        port: edgeConfig.targetPortId,
                                    }, zIndex: 1, attrs: {
                                        line: {
                                            stroke: '#A2B1C3',
                                            targetMarker: {
                                                name: 'block',
                                                width: 12,
                                                height: 8,
                                            },
                                            strokeDasharray: '5 5',
                                            strokeWidth: 1,
                                        },
                                    }, data: Object.assign({}, edgeConfig) }),
                            };
                            yield commandService.executeCommand(XFlowEdgeCommands.ADD_EDGE.id, config);
                            const onAddEdge = getProps('onAddEdge');
                            if (typeof onAddEdge === 'function') {
                                onAddEdge(config);
                            }
                            args.edge.remove();
                        }));
                    }),
                }),
            ];
            toDispose.pushAll(disposables);
            return Disposable.create(() => { });
        });
    }
};
contributions_flow_FlowHooksContribution = contributions_flow_decorate([
    Object(index_esm["singleton"])({ contrib: IHookContribution })
], contributions_flow_FlowHooksContribution);

//# sourceMappingURL=flow.js.map
// EXTERNAL MODULE: ../xflow-extension/es/flowchart-canvas/extension/components/index.less
var extension_components = __webpack_require__("31I/");

// CONCATENATED MODULE: ../xflow-extension/es/flowchart-canvas/extension/components/index.js
var extension_components_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};




const FlowchartExtension = () => {
    /** \u83B7\u53D6\u6269\u5C55Registry */
    const extensionRegistry = useExtensionRegistry();
    const config = react_default.a.useMemo(() => ({
        CONFIG_TYPE: 'FLOWCHART_EXTENSION',
        getConfig: () => extension_components_awaiter(void 0, void 0, void 0, function* () { }),
    }), []);
    react_default.a.useEffect(() => {
        /** \u6CE8\u518C extension \u5230 Registry */
        const disposable = extensionRegistry.addExtension({
            config: config,
            createModule: createFlowchartExtensionModule,
        });
        /** \u6DFB\u52A0 classname */
        extensionRegistry.addContainerClassNames('flowchart-extension-container');
        return () => {
            disposable.dispose();
        };
    }, [config, extensionRegistry]);
    return null;
};
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-canvas/extension/module.js

/** Application \u6269\u5C55\u4F9D\u8D56 */



/** \u4F9D\u8D56\u6269\u5C55\u6A21\u5757\uFF0C\u5FC5\u987B\u8981\u52A0\u8F7D */
const createFlowchartExtensionModule = () => {
    return Object(index_esm["Module"])(register => {
        /** \u6269\u5C55 runtime hook */
        register(contributions_flow_FlowHooksContribution);
    });
};

//# sourceMappingURL=module.js.map
// EXTERNAL MODULE: ../xflow-extension/es/flowchart-canvas/index.less
var flowchart_canvas = __webpack_require__("Pjj+");

// CONCATENATED MODULE: ../xflow-extension/es/flowchart-canvas/interface.js

//# sourceMappingURL=interface.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-canvas/index.js







const FlowchartCanvas = props => {
    const { position = { top: 40, left: 240, right: 240, bottom: 0 } } = props;
    const graphConfig = useGraphConfig(props);
    const app = useXFlowApp();
    Object(react["useEffect"])(() => {
        if (app) {
            setInstance(app);
        }
    }, [app]);
    return (react_default.a.createElement(XFlowCanvas, Object.assign({}, props, { config: graphConfig, position: position }), props.children));
};
FlowchartCanvas.defaultProps = {
    isXFlowCanvas: true,
};
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-editor-panel/form-schema-service/index.js
var form_schema_service_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const defaultFormSchemaService = (args) => form_schema_service_awaiter(void 0, void 0, void 0, function* () {
    var _a;
    const { targetType } = args;
    const isGroup = (_a = args.targetData) === null || _a === void 0 ? void 0 : _a.isGroup;
    const groupSchema = {
        tabs: [
            {
                name: '\u8BBE\u7F6E',
                groups: [
                    {
                        name: 'groupName',
                        controls: [
                            {
                                label: '\u5206\u7EC4\u540D',
                                name: 'group-service',
                                shape: 'group-service',
                                placeholder: '\u5206\u7EC4\u540D\u79F0',
                            },
                        ],
                    },
                ],
            },
        ],
    };
    const nodeSchema = {
        tabs: [
            {
                name: '\u8BBE\u7F6E',
                groups: [
                    {
                        name: 'groupName',
                        controls: [
                            {
                                label: '\u8282\u70B9\u540D',
                                name: 'node-service',
                                shape: 'node-service',
                                placeholder: '\u8282\u70B9\u540D\u79F0',
                            },
                        ],
                    },
                ],
            },
        ],
    };
    const edgeSchema = {
        tabs: [
            {
                name: '\u8BBE\u7F6E',
                groups: [
                    {
                        name: 'groupName',
                        controls: [
                            {
                                label: '\u8FB9',
                                name: 'edge-service',
                                shape: 'edge-service',
                                placeholder: '\u8FB9\u540D\u79F0',
                            },
                        ],
                    },
                ],
            },
        ],
    };
    if (isGroup) {
        return groupSchema;
    }
    if (targetType === 'node') {
        return nodeSchema;
    }
    if (targetType === 'edge') {
        return edgeSchema;
    }
    return {
        tabs: [
            {
                name: '\u8BBE\u7F6E',
                groups: [
                    {
                        name: 'groupName',
                        controls: [
                            {
                                label: '',
                                name: 'canvas-service',
                                shape: 'canvas-service',
                            },
                        ],
                    },
                ],
            },
        ],
    };
});
//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-editor-panel/useAsync.js

function useAsync(fn) {
    const [state, set] = Object(react["useState"])({
        loading: true,
    });
    const callback = () => {
        fn().then(value => {
            set({
                loading: false,
                data: value,
            });
        }, error => {
            set({
                loading: false,
            });
            console.error(error);
        });
    };
    Object(react["useEffect"])(() => {
        callback();
    }, [callback, fn]);
    return state;
}
//# sourceMappingURL=useAsync.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-editor-panel/form-wrapper.js
var form_wrapper_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};






const FlowchartFormWrapper = props => {
    const { controlSchema, children, type: formType = 'node' } = props;
    const { commandService, modelService } = usePanelContext();
    const getSelectNode = Object(react["useCallback"])(() => form_wrapper_awaiter(void 0, void 0, void 0, function* () {
        const { data } = yield model_service_constant_namespaceObject.SELECTED_NODE.useValue(modelService);
        return data;
    }), [modelService]);
    const getSelectEdge = Object(react["useCallback"])(() => form_wrapper_awaiter(void 0, void 0, void 0, function* () {
        const cell = yield model_service_constant_namespaceObject.SELECTED_CELL.useValue(modelService);
        const data = cell.getData();
        return Object.assign({ id: cell.id }, data);
    }), [modelService]);
    const { data, loading } = useAsync(formType === 'edge' ? getSelectEdge : getSelectNode);
    react_default.a.useEffect(() => {
        commandService.executeCommand(XFlowGraphCommands.SAVE_GRAPH_DATA.id, {
            saveGraphDataService: (meta, graph) => form_wrapper_awaiter(void 0, void 0, void 0, function* () {
                return { err: null, data: graph, meta };
            }),
        });
    }, [commandService, props]);
    const updateNode = (value) => form_wrapper_awaiter(void 0, void 0, void 0, function* () {
        const currentNodeData = yield getSelectNode();
        const nodeConfig = Object.assign(Object.assign({}, currentNodeData), value);
        yield commandService.executeCommand(XFlowNodeCommands.UPDATE_NODE.id, {
            nodeConfig,
        });
        onConfigChange({ type: 'update:node', config: nodeConfig });
    });
    const updateEdge = (value, type = 'line', key) => form_wrapper_awaiter(void 0, void 0, void 0, function* () {
        var _a;
        const currentEdgeData = yield getSelectEdge();
        // \u66F4\u65B0\u7EBF\u3001\u6587\u672C\u6837\u5F0F
        const edgeConfig = Object.assign(Object.assign(Object.assign({}, currentEdgeData), (key ? value[key] : value)), { attrs: Object.assign(Object.assign({}, currentEdgeData.attrs), { [type]: Object.assign(Object.assign({}, (_a = currentEdgeData.attrs) === null || _a === void 0 ? void 0 : _a[type]), (key ? value[key] : value)) }) });
        yield commandService.executeCommand(XFlowEdgeCommands.UPDATE_EDGE.id, { edgeConfig });
        onConfigChange({ type: 'update:edge', config: edgeConfig });
    });
    const updateGroup = (value) => form_wrapper_awaiter(void 0, void 0, void 0, function* () {
        const currentGroupData = yield getSelectNode();
        const nodeConfig = Object.assign(Object.assign({}, currentGroupData), value);
        yield commandService.executeCommand(XFlowNodeCommands.UPDATE_NODE.id, {
            nodeConfig,
        });
        onConfigChange({ type: 'update:group', config: nodeConfig });
    });
    if (loading) {
        return null;
    }
    return (react_default.a.createElement(FormItemWrapper, { schema: controlSchema }, () => {
        return children(Object.assign({}, data), { updateNode, updateEdge, updateGroup });
    }));
};
//# sourceMappingURL=form-wrapper.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-editor-panel/control-map-service/components/constants.js
const PREFIX = 'flowchart-editor';
const FormItemHeight = 24;
/** \u8FB9\u9ED8\u8BA4\u914D\u7F6E */
const DefaultEdgeConfig = {
    attrs: {
        line: {
            stroke: '#A2B1C3',
            strokeWidth: 1,
        },
        text: {
            fill: '#000',
            fontSize: 12,
            textAnchor: 'middle',
            textVerticalAnchor: 'middle',
        },
    },
};
const ArrowConfig = {
    width: 12,
    height: 8,
    name: 'block',
};
const DisableArrowConfig = {
    width: 0,
    height: 0,
    name: '',
};
const ArrowMaps = {
    target: {
        sourceMarker: DisableArrowConfig,
        targetMarker: ArrowConfig,
    },
    source: {
        sourceMarker: ArrowConfig,
        targetMarker: DisableArrowConfig,
    },
    all: {
        sourceMarker: ArrowConfig,
        targetMarker: ArrowConfig,
    },
    none: {
        sourceMarker: DisableArrowConfig,
        targetMarker: DisableArrowConfig,
    },
};
const ArrowStrokeMaps = {
    solid: [0, 0],
    dash: [5, 5],
};
//# sourceMappingURL=constants.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-editor-panel/control-map-service/components/fields/input.js



const InputFiled = props => {
    const { label = '\u6807\u7B7E', value, onChange } = props;
    return (react_default.a.createElement("div", { className: "group" },
        react_default.a.createElement("label", null, label),
        react_default.a.createElement(input["a" /* default */], { value: value, style: {
                height: FormItemHeight,
            }, onChange: (e) => {
                onChange === null || onChange === void 0 ? void 0 : onChange(e.target.value);
            } })));
};
/* harmony default export */ var fields_input = (InputFiled);
//# sourceMappingURL=input.js.map
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/react-color/es/index.js + 58 modules
var react_color_es = __webpack_require__("oD+P");

// CONCATENATED MODULE: ../xflow-extension/es/flowchart-editor-panel/control-map-service/components/fields/color.js






const ColorPicker = props => {
    const { label, value = '', onChange } = props;
    const [show, setShow] = Object(react["useState"])(false);
    const colorRef = Object(react["useRef"])(value);
    const { graphProvider } = useXFlowApp();
    const graphConfig = Object(react["useRef"])();
    graphProvider.getGraphOptions().then(x6GraphConfig => {
        graphConfig.current = x6GraphConfig;
    });
    const PickContainer = () => {
        return (react_default.a.createElement("div", { className: \`\${PREFIX}-popover\` },
            react_default.a.createElement(react_color_es["a" /* SketchPicker */], { style: {
                    width: '100%',
                }, onChange: color => {
                    colorRef.current = color.hex;
                } }),
            react_default.a.createElement("div", { className: "foolter" },
                react_default.a.createElement(es_button["a" /* default */], { onClick: () => {
                        setShow(false);
                    } }, "\\u53D6\\u6D88"),
                react_default.a.createElement(es_button["a" /* default */], { type: "primary", onClick: () => {
                        onChange === null || onChange === void 0 ? void 0 : onChange(colorRef.current);
                        setShow(false);
                    } }, "\\u786E\\u8BA4"))));
    };
    /**  react-color mouseOver \u548C\u4E0A\u5C42\u4E8B\u4EF6\u51B2\u7A81\uFF0C\u4E0D\u5F97\u5DF2\u4E3A\u4E4B\uFF0C\u975E DI \u73AF\u5883\u5E94\u8BE5\u4E0D\u5B58\u5728\uFF0C\u540E\u7EED\u6539\u8FDB */
    const CreatePickColorContainer = (visible) => {
        var _a;
        const container = ((_a = graphConfig.current) === null || _a === void 0 ? void 0 : _a.graphContainer) || document.body;
        const exist = document.querySelector(\`#\${PREFIX}-pick-color-container\`);
        if (exist) {
            container.removeChild(exist);
        }
        if (!visible) {
            return;
        }
        const div = document.createElement('div');
        div.id = \`\${PREFIX}-pick-color-container\`;
        div.className = \`\${PREFIX}-pick-color-container\`;
        Object(react_dom["render"])(react_default.a.createElement(PickContainer, null), div);
        container.appendChild(div);
    };
    return (react_default.a.createElement("div", { className: "group" },
        label && react_default.a.createElement("label", null, label),
        react_default.a.createElement("div", { className: \`\${PREFIX}-color-container\`, onClick: () => {
                setShow(true);
            } },
            react_default.a.createElement("div", { className: \`\${PREFIX}-color\`, style: {
                    backgroundColor: value,
                    height: '100%',
                } })),
        CreatePickColorContainer(show)));
};
/* harmony default export */ var fields_color = (Object(react["memo"])(ColorPicker, (pre, next) => {
    return pre.label === next.label && pre.value === next.value;
}));
//# sourceMappingURL=color.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-editor-panel/control-map-service/components/fields/input-number.js



const InputNumberFiled = props => {
    const { label, value, onChange, min, width } = props;
    return (react_default.a.createElement("div", { className: "group" },
        label && react_default.a.createElement("label", null, label),
        react_default.a.createElement(input_number["a" /* default */], { value: value, min: min, style: {
                width,
                height: FormItemHeight,
            }, onChange: (v) => {
                onChange === null || onChange === void 0 ? void 0 : onChange(v);
            } })));
};
/* harmony default export */ var fields_input_number = (InputNumberFiled);
//# sourceMappingURL=input-number.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-editor-panel/control-map-service/components/fields/position.js



const Item = ({ value, onChangeItem, addonBefore }) => (react_default.a.createElement("div", { className: "addon-before-group" },
    react_default.a.createElement(input_number["a" /* default */], { value: value, style: { height: FormItemHeight, border: 'none' }, onChange: (v) => {
            onChangeItem(v);
        } }),
    react_default.a.createElement("span", null, addonBefore)));
const Position = props => {
    const { x, y, onChange } = props;
    return (react_default.a.createElement("div", { className: "group" },
        react_default.a.createElement("label", null, "\\u4F4D\\u7F6E"),
        react_default.a.createElement("div", { className: "split" },
            react_default.a.createElement(Item, { addonBefore: "X", value: x, onChangeItem: (value) => {
                    onChange === null || onChange === void 0 ? void 0 : onChange('x', value);
                } }),
            react_default.a.createElement(Item, { addonBefore: "Y", value: y, onChangeItem: (value) => {
                    onChange === null || onChange === void 0 ? void 0 : onChange('y', value);
                } }))));
};
/* harmony default export */ var fields_position = (Position);
//# sourceMappingURL=position.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-editor-panel/control-map-service/components/fields/size.js


const Size = props => {
    const { width, height, onChange } = props;
    return (react_default.a.createElement("div", { className: "group" },
        react_default.a.createElement("label", null, "\\u5C3A\\u5BF8"),
        react_default.a.createElement("div", { className: "split" },
            react_default.a.createElement(Item, { addonBefore: "W", value: width, onChangeItem: (value) => {
                    onChange === null || onChange === void 0 ? void 0 : onChange('width', value);
                } }),
            react_default.a.createElement(Item, { addonBefore: "H", value: height, onChangeItem: (value) => {
                    onChange === null || onChange === void 0 ? void 0 : onChange('height', value);
                } }))));
};
/* harmony default export */ var fields_size = (Size);
//# sourceMappingURL=size.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-editor-panel/control-map-service/components/fields/select.js



const { Option } = es_select["a" /* default */];
const SelectField = props => {
    const { label = '\u7BAD\u5934', value, onChange, options = [], width } = props;
    return (react_default.a.createElement("div", { className: "group" },
        react_default.a.createElement("label", null, label),
        react_default.a.createElement(es_select["a" /* default */], { size: "small", value: value, style: {
                width,
                height: FormItemHeight,
            }, getPopupContainer: trigger => trigger.parentNode, optionFilterProp: "children", onChange: (v) => {
                onChange === null || onChange === void 0 ? void 0 : onChange(v);
            }, filterOption: (input, option) => (option === null || option === void 0 ? void 0 : option.children.toLowerCase().indexOf(input.toLowerCase())) >= 0 }, options.map(option => (react_default.a.createElement(Option, { key: option.label, value: option.value }, option.label))))));
};
/* harmony default export */ var fields_select = (SelectField);
//# sourceMappingURL=select.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-editor-panel/control-map-service/components/fields/index.js







//# sourceMappingURL=index.js.map
// EXTERNAL MODULE: ../xflow-extension/es/flowchart-editor-panel/control-map-service/components/style.less
var components_style = __webpack_require__("VIcP");

// CONCATENATED MODULE: ../xflow-extension/es/flowchart-editor-panel/control-map-service/components/node.js






const NodeComponent = props => {
    const { config, plugin = {} } = props;
    const { updateNode } = plugin;
    const [nodeConfig, setNodeConfig] = Object(react["useState"])(Object.assign(Object.assign({}, DefaultNodeConfig), config));
    const onNodeConfigChange = (key, value) => {
        setNodeConfig(Object.assign(Object.assign({}, nodeConfig), { [key]: value }));
        updateNode({
            [key]: value,
        });
    };
    Object(react["useEffect"])(() => {
        setNodeConfig(Object.assign(Object.assign({}, DefaultNodeConfig), config));
    }, [config]);
    return (react_default.a.createElement("div", { className: \`\${PREFIX}-panel-body\` },
        react_default.a.createElement("div", { className: \`\${PREFIX}-panel-group\` },
            react_default.a.createElement("h5", null, "\\u5185\\u5BB9"),
            react_default.a.createElement(fields_input, { label: "\\u6807\\u9898", value: nodeConfig.label, onChange: value => {
                    onNodeConfigChange('label', value);
                } })),
        react_default.a.createElement("div", { className: \`\${PREFIX}-panel-group\` },
            react_default.a.createElement("h5", null, "\\u6837\\u5F0F"),
            react_default.a.createElement(fields_position, { x: nodeConfig.x, y: nodeConfig.y, onChange: (key, value) => {
                    onNodeConfigChange(key, value);
                } }),
            react_default.a.createElement(fields_size, { width: nodeConfig.width, height: nodeConfig.height, onChange: (key, value) => {
                    onNodeConfigChange(key, value);
                } }),
            react_default.a.createElement(fields_color, { label: "\\u586B\\u5145", value: nodeConfig.fill, onChange: (value) => {
                    onNodeConfigChange('fill', value);
                } }),
            react_default.a.createElement(fields_color, { label: "\\u8FB9\\u6846", value: nodeConfig.stroke, onChange: (value) => {
                    onNodeConfigChange('stroke', value);
                } }),
            react_default.a.createElement("div", { className: \`\${PREFIX}-node-text-style\` },
                react_default.a.createElement(fields_input_number, { label: "\\u5B57\\u53F7", value: nodeConfig.fontSize, width: 68, onChange: value => {
                        onNodeConfigChange('fontSize', value);
                    } }),
                react_default.a.createElement(fields_color, { value: nodeConfig.fontFill, onChange: (value) => {
                        onNodeConfigChange('fontFill', value);
                    } })))));
};
const NodeService = props => {
    return (react_default.a.createElement(FlowchartFormWrapper, Object.assign({}, props), (config, plugin) => react_default.a.createElement(NodeComponent, Object.assign({}, props, { plugin: plugin, config: config }))));
};
//# sourceMappingURL=node.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-editor-panel/control-map-service/components/edge.js





const EdgeComponent = props => {
    const { config, plugin = {} } = props;
    const { updateEdge } = plugin;
    const [edgeConfig, setEdgeConfig] = Object(react["useState"])(Object.assign(Object.assign({}, DefaultEdgeConfig), config));
    Object(react["useEffect"])(() => {
        setEdgeConfig(Object.assign(Object.assign({}, DefaultEdgeConfig), config));
    }, [config]);
    const getAttrs = (key, type = 'line') => {
        var _a;
        const { attrs = {} } = edgeConfig;
        return (_a = attrs[type]) === null || _a === void 0 ? void 0 : _a[key];
    };
    const getArrowValue = () => {
        var _a, _b, _c, _d, _e;
        const { attrs = {} } = edgeConfig;
        const { line = {} } = attrs;
        if (((_a = line.sourceMarker) === null || _a === void 0 ? void 0 : _a.name) && ((_b = line.targetMarker) === null || _b === void 0 ? void 0 : _b.name)) {
            return 'all';
        }
        if (!((_c = line.sourceMarker) === null || _c === void 0 ? void 0 : _c.name) && !((_d = line.targetMarker) === null || _d === void 0 ? void 0 : _d.name)) {
            return 'none';
        }
        if ((_e = line.sourceMarker) === null || _e === void 0 ? void 0 : _e.name) {
            return 'source';
        }
        return 'target';
    };
    const getSrokeDashValue = () => {
        const { attrs = {} } = edgeConfig;
        const { line = {} } = attrs;
        return line.strokeDasharray ? 'dash' : 'solid';
    };
    const onEdgeConfigChange = (key, value, type = 'line') => {
        var _a, _b;
        /** \u5168\u91CF\u66F4\u65B0\uFF0C\u7B80\u5316\u903B\u8F91 */
        if (key === 'arrow') {
            setEdgeConfig(Object.assign(Object.assign({}, edgeConfig), { attrs: Object.assign(Object.assign({}, edgeConfig.attrs), { [type]: Object.assign(Object.assign({}, (_a = edgeConfig.attrs) === null || _a === void 0 ? void 0 : _a[type]), value) }) }));
        }
        else {
            setEdgeConfig(Object.assign(Object.assign({}, edgeConfig), { [key]: value, attrs: Object.assign(Object.assign({}, edgeConfig.attrs), { [type]: Object.assign(Object.assign({}, (_b = edgeConfig.attrs) === null || _b === void 0 ? void 0 : _b[type]), { [key]: value }) }) }));
        }
        updateEdge({
            [key]: value,
        }, type, key === 'arrow' ? 'arrow' : '');
    };
    return (react_default.a.createElement("div", { className: \`\${PREFIX}-panel-body\` },
        react_default.a.createElement("div", { className: \`\${PREFIX}-panel-group\` },
            react_default.a.createElement("h5", null, "\\u5185\\u5BB9"),
            react_default.a.createElement(fields_input, { label: "\\u6807\\u7B7E", value: edgeConfig.label, onChange: value => {
                    onEdgeConfigChange('label', value);
                } })),
        react_default.a.createElement("h5", { style: { marginBottom: 12 } }, "\\u6837\\u5F0F"),
        react_default.a.createElement("div", { className: \`\${PREFIX}-panel-group\`, style: { marginBottom: 0 } },
            react_default.a.createElement("h5", null, "\\u7EBF"),
            react_default.a.createElement(fields_select, { label: "\\u7BAD\\u5934", value: getArrowValue(), width: "100%", options: [
                    {
                        label: '\u6B63\u5411',
                        value: 'target',
                    },
                    {
                        label: '\u9006\u5411',
                        value: 'source',
                    },
                    {
                        label: '\u53CC\u5411',
                        value: 'all',
                    },
                    {
                        label: '\u65E0',
                        value: 'none',
                    },
                ], onChange: value => {
                    onEdgeConfigChange('arrow', ArrowMaps[value], 'line');
                } }),
            react_default.a.createElement("div", { className: \`\${PREFIX}-edge-stroke-style\` },
                react_default.a.createElement(fields_select, { label: "\\u7EBF\\u5F62", width: 68, value: getSrokeDashValue(), options: [
                        {
                            label: '\u5B9E\u7EBF',
                            value: 'solid',
                        },
                        {
                            label: '\u865A\u7EBF',
                            value: 'dash',
                        },
                    ], onChange: value => {
                        onEdgeConfigChange('strokeDasharray', ArrowStrokeMaps[value], 'line');
                    } }),
                react_default.a.createElement(fields_input_number, { value: getAttrs('strokeWidth'), min: 1, onChange: value => {
                        onEdgeConfigChange('strokeWidth', value, 'line');
                    } })),
            react_default.a.createElement(fields_color, { label: "\\u8FB9\\u6846", value: getAttrs('stroke'), onChange: (value) => {
                    onEdgeConfigChange('stroke', value, 'line');
                } })),
        react_default.a.createElement("div", { className: \`\${PREFIX}-panel-group\` },
            react_default.a.createElement("h5", null, "\\u6807\\u7B7E"),
            react_default.a.createElement("div", { className: \`\${PREFIX}-edge-text-style\` },
                react_default.a.createElement(fields_input_number, { label: "\\u5B57\\u53F7", min: 10, width: 68, value: getAttrs('fontSize', 'text') || 12, onChange: value => {
                        onEdgeConfigChange('fontSize', value, 'text');
                    } }),
                react_default.a.createElement(fields_color, { value: getAttrs('fill', 'text') || '#000', onChange: (value) => {
                        onEdgeConfigChange('fill', value, 'text');
                    } })))));
};
const EdgeService = props => {
    return (react_default.a.createElement(FlowchartFormWrapper, Object.assign({}, props, { type: "edge" }), (config, plugin) => react_default.a.createElement(EdgeComponent, Object.assign({}, props, { plugin: plugin, config: config }))));
};
//# sourceMappingURL=edge.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-editor-panel/control-map-service/components/group.js






const GroupComponent = props => {
    const { config, plugin = {} } = props;
    const { updateGroup } = plugin;
    const [groupConfig, setGroupConfig] = Object(react["useState"])(Object.assign(Object.assign({}, DefaultNodeConfig), config));
    const onGroupConfigChange = (key, value) => {
        setGroupConfig(Object.assign(Object.assign({}, groupConfig), { [key]: value }));
        updateGroup({
            [key]: value,
        });
    };
    Object(react["useEffect"])(() => {
        setGroupConfig(Object.assign(Object.assign({}, DefaultNodeConfig), config));
    }, [config]);
    return (react_default.a.createElement("div", { className: \`\${PREFIX}-panel-body\` },
        react_default.a.createElement("div", { className: \`\${PREFIX}-panel-group\` },
            react_default.a.createElement("h5", null, "\\u5185\\u5BB9"),
            react_default.a.createElement(fields_input, { label: "\\u6807\\u9898", value: groupConfig.label, onChange: value => {
                    onGroupConfigChange('label', value);
                } })),
        react_default.a.createElement("div", { className: \`\${PREFIX}-panel-group\` },
            react_default.a.createElement("h5", null, "\\u6837\\u5F0F"),
            react_default.a.createElement(fields_position, { x: groupConfig.x, y: groupConfig.y, onChange: (key, value) => {
                    onGroupConfigChange(key, value);
                } }),
            react_default.a.createElement(fields_size, { width: groupConfig.width, height: groupConfig.height, onChange: (key, value) => {
                    onGroupConfigChange(key, value);
                } }),
            react_default.a.createElement(fields_color, { label: "\\u586B\\u5145", value: groupConfig.fill, onChange: (value) => {
                    onGroupConfigChange('fill', value);
                } }),
            react_default.a.createElement(fields_color, { label: "\\u8FB9\\u6846", value: groupConfig.stroke, onChange: (value) => {
                    onGroupConfigChange('stroke', value);
                } }),
            react_default.a.createElement("div", { className: \`\${PREFIX}-node-text-style\` },
                react_default.a.createElement(fields_input_number, { label: "\\u5B57\\u53F7", value: groupConfig.fontSize, width: 68, onChange: value => {
                        onGroupConfigChange('fontSize', value);
                    } }),
                react_default.a.createElement(fields_color, { value: groupConfig.fontFill, onChange: (value) => {
                        onGroupConfigChange('fontFill', value);
                    } })))));
};
const GroupService = props => {
    return (react_default.a.createElement(FlowchartFormWrapper, Object.assign({}, props), (config, plugin) => react_default.a.createElement(GroupComponent, Object.assign({}, props, { plugin: plugin, config: config }))));
};
//# sourceMappingURL=group.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-editor-panel/control-map-service/components/canvas.js



const CanvasService = () => {
    return (react_default.a.createElement("div", { className: \`\${PREFIX}-canvas-panel\` },
        react_default.a.createElement("span", null, "\\u672A\\u9009\\u4E2D")));
};
//# sourceMappingURL=canvas.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-editor-panel/control-map-service/index.js




/** \u9ED8\u8BA4\u652F\u6301\u4FEE\u6539\u6807\u7B7E\u548C\u91CD\u547D\u540D\u529F\u80FD */
const defaultControlMapService = controlMap => {
    controlMap.set('node-service', NodeService);
    controlMap.set('edge-service', EdgeService);
    controlMap.set('group-service', GroupService);
    controlMap.set('canvas-service', CanvasService);
    return controlMap;
};
//# sourceMappingURL=index.js.map
// EXTERNAL MODULE: ../xflow-extension/es/flowchart-editor-panel/style.less
var flowchart_editor_panel_style = __webpack_require__("pG31");

// CONCATENATED MODULE: ../xflow-extension/es/flowchart-editor-panel/form-panel.js
var form_panel_rest = (undefined && undefined.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};







const form_panel_CONTAINER_CLASS = 'xflow-editor-panel-collpase';
const FlowchartFormPanel = props => {
    const [collpased, setCollpased] = Object(react["useState"])(false);
    const { controlMapService = defaultControlMapService, formSchemaService = defaultFormSchemaService, position = { width: 240, top: 0, bottom: 0, right: 0 }, show = true } = props, rest = form_panel_rest(props, ["controlMapService", "formSchemaService", "position", "show"]);
    if (!show) {
        return null;
    }
    const { width = 200, right } = position;
    return (react_default.a.createElement(WorkspacePanel, { className: form_panel_CONTAINER_CLASS, position: Object.assign(Object.assign({}, position), { right: !collpased ? right : -width }) },
        react_default.a.createElement("div", { className: \`\${form_panel_CONTAINER_CLASS}-wrapper\` },
            react_default.a.createElement(JsonSchemaForm, Object.assign({ targetType: ['node', 'edge', 'canvas', 'group'], controlMapService: controlMapService, formSchemaService: formSchemaService, position: Object.assign(Object.assign({}, position), { top: 0 }), prefixClz: "xflow-form-editor" }, rest)),
            react_default.a.createElement("div", { className: \`\${form_panel_CONTAINER_CLASS}-icon\`, style: {
                    top: 21,
                    left: !collpased ? -10 : -20,
                    borderRadius: !collpased ? '50%' : '50% 0 0  50%',
                    borderRight: !collpased ? '' : 'none',
                }, onClick: () => {
                    setCollpased(!collpased);
                } }, collpased ? react_default.a.createElement(DoubleLeftOutlined["a" /* default */], null) : react_default.a.createElement(DoubleRightOutlined["a" /* default */], null)))));
};
//# sourceMappingURL=form-panel.js.map
// CONCATENATED MODULE: ../xflow-extension/es/flowchart-editor-panel/index.js


//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow-extension/es/index.js
/** \u5BF9\u9F50\u7EBF */

/** Port Tooltip */

/** \u753B\u5E03 \u53F3\u952E\u83DC\u5355 */

/** \u753B\u5E03 Scale Toolbar */

/** \u753B\u5E03 Toolbar */

/** demo utils */

/** \u753B\u5E03 minimap */

/** \u7EC4\u4EF6\u6811 */

/** JSON Schema Form */

/** Panel \u63D0\u4F9B getValue context\u548C ensure app context\u5B58\u5728 */

/** DAG\u56FE\u6269\u5C55 */

/** \u6D41\u7A0B\u56FE\u6269\u5C55 */

/** \u6D41\u7A0B\u56FE\u76F8\u5173 */



//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow/es/extensions/index.js
/** \u5BF9\u9F50\u7EBF */

/** Port Tooltip */

/** \u753B\u5E03 \u53F3\u952E\u83DC\u5355 */

/** \u753B\u5E03 Scale Toolbar */

/** \u753B\u5E03 Toolbar */

/** demo utils */

/** \u753B\u5E03 minimap */

/** \u7EC4\u4EF6\u6811 */

/** JSON Schema Form */

/** Panel \u63D0\u4F9B getValue context\u548C ensure app context\u5B58\u5728 */

/** DAG\u56FE\u6269\u5C55 */

/** \u6D41\u7A0B\u56FE\u6269\u5C55 */

/** \u6D41\u7A0B\u56FE\u76F8\u5173\u7EC4\u4EF6 */

//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow/es/hook/index.js

//# sourceMappingURL=index.js.map
// CONCATENATED MODULE: ../xflow/es/index.js



//# sourceMappingURL=index.js.map

//# sourceURL=webpack:///../xflow/es/index.js_+_271_modules?`)},nyl5:function(module,__webpack_exports__,__webpack_require__){"use strict";eval(`// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "useGraphConfig", function() { return /* binding */ useGraphConfig; });

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__("KOBo");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__("RY7m");
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("q1tI");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ../xflow/es/index.js + 271 modules
var es = __webpack_require__("mqVf");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/PlusCircleOutlined.js + 1 modules
var PlusCircleOutlined = __webpack_require__("Uhj0");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/DeleteOutlined.js + 1 modules
var DeleteOutlined = __webpack_require__("UmCv");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/SaveOutlined.js + 1 modules
var SaveOutlined = __webpack_require__("GcFv");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-toolbar/demos/toolbar-model/toolbar-config.tsx





var NSToolbarConfig;
/** toolbar\u4F9D\u8D56\u7684\u914D\u7F6E\u9879 */

(function (_NSToolbarConfig) {
  /** \u6CE8\u518Cicon \u7C7B\u578B */
  es["q" /* IconStore */].set('PlusCircleOutlined', PlusCircleOutlined["a" /* default */]);
  es["q" /* IconStore */].set('DeleteOutlined', DeleteOutlined["a" /* default */]);
  es["q" /* IconStore */].set('SaveOutlined', SaveOutlined["a" /* default */]);
  /** toolbar\u4F9D\u8D56\u7684\u72B6\u6001 */

  var getToolbarState = _NSToolbarConfig.getToolbarState = /*#__PURE__*/function () {
    var _ref3 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee3(modelService) {
      var nodes;
      return regenerator_default.a.wrap(function _callee3$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              _context3.next = 2;
              return es["t" /* MODELS */].SELECTED_NODES.useValue(modelService);

            case 2:
              nodes = _context3.sent;
              return _context3.abrupt("return", {
                isNodeSelected: nodes.length > 0
              });

            case 4:
            case "end":
              return _context3.stop();
          }
        }
      }, _callee3);
    }));

    return function (_x3) {
      return _ref3.apply(this, arguments);
    };
  }();

  var getToolbarItems = _NSToolbarConfig.getToolbarItems = /*#__PURE__*/function () {
    var _ref4 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee4(state) {
      var toolbarGroup1;
      return regenerator_default.a.wrap(function _callee4$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              toolbarGroup1 = [];
              toolbarGroup1.push({
                id: es["J" /* XFlowNodeCommands */].MOVE_NODE.id,
                text: '\u5220\u9664\u8282\u70B9\uFF0C\u53EA\u6709Node\u9009\u4E2D\u65F6\u53EF\u7528',
                iconName: 'DeleteOutlined',
                tooltip: '\u5220\u9664\u8282\u70B9: \u53EA\u5728\u6709node\u9009\u4E2D\u65F6Enable',
                isEnabled: state.isNodeSelected
              });
              return _context4.abrupt("return", [{
                name: 'toolbar',
                items: toolbarGroup1
              }]);

            case 3:
            case "end":
              return _context4.stop();
          }
        }
      }, _callee4);
    }));

    return function (_x4) {
      return _ref4.apply(this, arguments);
    };
  }();
})(NSToolbarConfig || (NSToolbarConfig = {}));

var useToolbarConfig = Object(es["Q" /* createToolbarConfig */])(toolbarConfig => {
  /** \u751F\u4EA7 toolbar item */
  toolbarConfig.setToolbarModelService( /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee2(toolbarModel, modelService) {
      var updateToolbarState, model;
      return regenerator_default.a.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              // \u66F4\u65B0toolbar model
              updateToolbarState = /*#__PURE__*/function () {
                var _ref2 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee() {
                  var toolbarState, toolbarItems;
                  return regenerator_default.a.wrap(function _callee$(_context) {
                    while (1) {
                      switch (_context.prev = _context.next) {
                        case 0:
                          _context.next = 2;
                          return NSToolbarConfig.getToolbarState(modelService);

                        case 2:
                          toolbarState = _context.sent;
                          _context.next = 5;
                          return NSToolbarConfig.getToolbarItems(toolbarState);

                        case 5:
                          toolbarItems = _context.sent;
                          toolbarModel.setValue(toolbar => {
                            toolbar.mainGroups = toolbarItems;
                          });

                        case 7:
                        case "end":
                          return _context.stop();
                      }
                    }
                  }, _callee);
                }));

                return function updateToolbarState() {
                  return _ref2.apply(this, arguments);
                };
              }(); // \u76D1\u542C\u5BF9\u5E94\u7684model


              _context2.next = 3;
              return es["t" /* MODELS */].SELECTED_NODES.getModel(modelService);

            case 3:
              model = _context2.sent;
              model.watch(() => {
                updateToolbarState();
              });

            case 5:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    }));

    return function (_x, _x2) {
      return _ref.apply(this, arguments);
    };
  }());
});
// EXTERNAL MODULE: ./docs/tutorial/extension-components/canvas-toolbar/demos/toolbar-model/index.less
var toolbar_model = __webpack_require__("UZsY");

// EXTERNAL MODULE: ../xflow/dist/index.css
var dist = __webpack_require__("1MRj");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-toolbar/demos/toolbar-model/index.tsx



/**
 * title: \u5DE5\u5177\u680F\u72B6\u6001\u8054\u52A8
 * desc: \u901A\u8FC7ModelService\u5B9E\u73B0ToolbarItem\u7684\u53EF\u7528\u72B6\u6001
 */






/**  Demo Props  */

/**  graphConfig\uFF1A\u914D\u7F6EGraph  */
var useGraphConfig = Object(es["M" /* createGraphConfig */])(graphConfig => {
  graphConfig.setDefaultNodeRender(props => {
    return /*#__PURE__*/react_default.a.createElement("div", {
      className: "react-node"
    }, " ", props.data.label, " ");
  });
});

var XFlowDemo = props => {
  var graphConfig = useGraphConfig(props);
  var toolbarConfig = useToolbarConfig(props);

  var onLoad = /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(app) {
      return regenerator_default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              console.log(app);
              app.executeCommand(es["J" /* XFlowNodeCommands */].ADD_NODE.id, {
                nodeConfig: {
                  id: "Node-1",
                  label: "Node-1",
                  x: 100,
                  y: 50,
                  width: 160,
                  height: 32
                }
              });
              app.executeCommand(es["J" /* XFlowNodeCommands */].ADD_NODE.id, {
                nodeConfig: {
                  id: "Node-2",
                  label: "Node-2",
                  x: 110,
                  y: 60,
                  width: 160,
                  height: 32
                }
              });
              app.executeCommand(es["J" /* XFlowNodeCommands */].ADD_NODE.id, {
                nodeConfig: {
                  id: "Node-3",
                  label: "Node-3",
                  x: 120,
                  y: 70,
                  width: 160,
                  height: 32
                }
              });

            case 4:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function onLoad(_x) {
      return _ref.apply(this, arguments);
    };
  }();

  return /*#__PURE__*/react_default.a.createElement(es["B" /* XFlow */], {
    onLoad: onLoad,
    className: "xflow-workspace"
  }, /*#__PURE__*/react_default.a.createElement(es["f" /* CanvasToolbar */], {
    layout: "horizontal",
    config: toolbarConfig,
    position: {
      top: 0,
      left: 0,
      right: 0,
      height: 40
    }
  }), /*#__PURE__*/react_default.a.createElement(es["D" /* XFlowCanvas */], {
    config: graphConfig,
    position: {
      top: 40,
      bottom: 0,
      left: 0,
      right: 0
    }
  }));
};

/* harmony default export */ var demos_toolbar_model = __webpack_exports__["default"] = (XFlowDemo);

//# sourceURL=webpack:///./docs/tutorial/extension-components/canvas-toolbar/demos/toolbar-model/index.tsx_+_1_modules?`)},ofWA:function(module,__webpack_exports__,__webpack_require__){"use strict";eval(`__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useGraphConfig", function() { return useGraphConfig; });
/* harmony import */ var _Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("KOBo");
/* harmony import */ var _Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("jem/");
/* harmony import */ var _Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("RY7m");
/* harmony import */ var _Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("q1tI");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _antv_xflow__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("mqVf");
/* harmony import */ var _index_less__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("0a+M");
/* harmony import */ var _index_less__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_index_less__WEBPACK_IMPORTED_MODULE_5__);




/** \u56FE\u6838\u5FC3\u7EC4\u4EF6 & \u7C7B\u578B\u5B9A\u4E49 */



var useGraphConfig = Object(_antv_xflow__WEBPACK_IMPORTED_MODULE_4__[/* createGraphConfig */ "M"])(config => {
  config.setX6Config({
    grid: true
  });
  config.setNodeRender('NODE1', props => {
    var _props$data, _props$data$info;

    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement("div", {
      className: "react-node"
    }, (_props$data = props.data) === null || _props$data === void 0 ? void 0 : (_props$data$info = _props$data.info) === null || _props$data$info === void 0 ? void 0 : _props$data$info.text);
  });
  config.setNodeTypeParser(node => node === null || node === void 0 ? void 0 : node.renderKey);
});
var appRef = undefined;

var Demo = () => {
  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_3__["useState"])(undefined),
      _useState2 = Object(_Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(_useState, 2),
      graphData = _useState2[0],
      setGraphData = _useState2[1];

  var onLoad = /*#__PURE__*/function () {
    var _ref = Object(_Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])( /*#__PURE__*/_Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee(app) {
      var nodes, edges, graphData;
      return _Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              appRef = app;
              nodes = [{
                id: 'root1',
                width: 150,
                height: 40,
                renderKey: 'NODE1',
                info: {
                  text: 'root1'
                }
              }, {
                id: 'down1',
                width: 150,
                height: 40,
                renderKey: 'NODE1',
                info: {
                  text: 'down1'
                }
              }, {
                id: 'down2',
                width: 150,
                height: 40,
                renderKey: 'NODE1',
                info: {
                  text: 'down2'
                }
              }, {
                id: 'down3',
                width: 150,
                height: 40,
                renderKey: 'NODE1',
                info: {
                  text: 'down3'
                }
              }];
              edges = [{
                id: 'root1-down1',
                source: 'root1',
                target: 'down1',
                label: '1:1'
              }, {
                id: 'root1-down2',
                source: 'root1',
                target: 'down2',
                label: '1:N'
              }, {
                id: 'root1-down3',
                source: 'root1',
                target: 'down3',
                label: 'N:N'
              }];
              graphData = {
                nodes,
                edges
              };
              setGraphData(graphData);

            case 5:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function onLoad(_x) {
      return _ref.apply(this, arguments);
    };
  }();

  var zoomGraph = key => {
    if (key === '\u653E\u5927') {
      appRef.executeCommand(_antv_xflow__WEBPACK_IMPORTED_MODULE_4__[/* XFlowGraphCommands */ "H"].GRAPH_ZOOM.id, {
        factor: 0.1,
        zoomOptions: {
          absolute: false,
          minScale: 0.1,
          maxScale: 3.0
        }
      });
    }

    if (key === '\u7F29\u5C0F') {
      appRef.executeCommand(_antv_xflow__WEBPACK_IMPORTED_MODULE_4__[/* XFlowGraphCommands */ "H"].GRAPH_ZOOM.id, {
        factor: -0.1,
        zoomOptions: {
          absolute: false,
          minScale: 0.1,
          maxScale: 3.0
        }
      });
    }

    if (key === '\u753B\u5E031:1(real)') {
      appRef.executeCommand(_antv_xflow__WEBPACK_IMPORTED_MODULE_4__[/* XFlowGraphCommands */ "H"].GRAPH_ZOOM.id, {
        factor: 'real'
      });
    }

    if (key === '\u9002\u5E94\u753B\u5E03(fit)') {
      appRef.executeCommand(_antv_xflow__WEBPACK_IMPORTED_MODULE_4__[/* XFlowGraphCommands */ "H"].GRAPH_ZOOM.id, {
        factor: 'fit'
      });
    }
  };

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(_antv_xflow__WEBPACK_IMPORTED_MODULE_4__[/* XFlow */ "B"], {
    className: "xflow-graph-zoom-demo",
    graphData: graphData,
    graphLayout: {
      layoutType: 'dagre',
      layoutOptions: {
        type: 'dagre',
        rankdir: 'TB',
        nodesep: 60,
        ranksep: 40
      }
    },
    onLoad: onLoad
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement("div", {
    className: "toolbar"
  }, ['\u653E\u5927', '\u7F29\u5C0F', '\u753B\u5E031:1(real)', '\u9002\u5E94\u753B\u5E03(fit)'].map(item => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement("div", {
    key: item,
    className: "div",
    onClick: () => zoomGraph(item)
  }, item))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(_antv_xflow__WEBPACK_IMPORTED_MODULE_4__[/* XFlowCanvas */ "D"], {
    config: useGraphConfig()
  }));
};

/* harmony default export */ __webpack_exports__["default"] = (Demo);

//# sourceURL=webpack:///./docs/api/commands/graph/graph-zoom/demos/index.tsx?`)},oiMV:function(module,__webpack_exports__,__webpack_require__){"use strict";eval(`// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "useGraphConfig", function() { return /* binding */ useGraphConfig; });

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__("KOBo");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__("RY7m");
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("q1tI");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ../xflow/es/index.js + 271 modules
var es = __webpack_require__("mqVf");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/objectSpread2.js
var objectSpread2 = __webpack_require__("BcGY");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-mini-map/demos/basic/mock.ts

 // NodeConfig

var NODE_COMMON_PROPS = {
  width: 160,
  height: 32
}; // NodeConfig

var EDGE_COMMON_PROPS = {
  attrs: {
    line: {
      targetMarker: {
        name: 'block',
        width: 4,
        height: 8
      },
      strokeDasharray: '',
      stroke: '#A2B1C3',
      strokeWidth: 1
    }
  }
}; // mock data

var getGraphData = () => {
  var nodes = [Object(objectSpread2["a" /* default */])({
    id: 'node1',
    label: '\u7B97\u6CD5\u8282\u70B9-1'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node2',
    label: '\u7B97\u6CD5\u8282\u70B9-2'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node3',
    label: '\u7B97\u6CD5\u8282\u70B9-3'
  }, NODE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: 'node4',
    label: '\u7B97\u6CD5\u8282\u70B9-4'
  }, NODE_COMMON_PROPS)];
  var edges = [Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node2',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node2-input-1'
  }, EDGE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node3',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node3-input-1'
  }, EDGE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node4',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node4-input-1'
  }, EDGE_COMMON_PROPS)];
  return {
    nodes: nodes,
    edges: edges
  };
};
// EXTERNAL MODULE: ../xflow/dist/index.css
var dist = __webpack_require__("1MRj");

// EXTERNAL MODULE: ./docs/tutorial/extension-components/canvas-mini-map/demos/basic/index.less
var basic = __webpack_require__("SX+c");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-mini-map/demos/basic/index.tsx



/**
 * title: \u57FA\u7840\u4F7F\u7528
 * desc:  \u653E\u7F6E\u5728XFlowCanvas\u7EC4\u4EF6\u5185\u90E8\u751F\u6548
 */





/**  Demo Props  */

/**  graphConfig\uFF1A\u914D\u7F6EGraph  */
var useGraphConfig = Object(es["M" /* createGraphConfig */])(graphConfig => {
  graphConfig.setDefaultNodeRender(props => {
    return /*#__PURE__*/react_default.a.createElement("div", {
      className: "react-node"
    }, " ", props.data.label, " ");
  });
});

var XFlowDemo = props => {
  var graphConfig = useGraphConfig(props);

  var onLoad = /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(app) {
      var res, _res$contextProvider$, graphData;

      return regenerator_default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_LAYOUT.id, {
                layoutType: 'dagre',
                layoutOptions: {
                  type: 'dagre',

                  /** \u5E03\u5C40\u65B9\u5411 */
                  rankdir: 'TB',

                  /** \u8282\u70B9\u95F4\u8DDD */
                  nodesep: 60,

                  /** \u5C42\u95F4\u8DDD */
                  ranksep: 30
                },
                graphData: getGraphData()
              });

            case 2:
              res = _context.sent;
              _res$contextProvider$ = res.contextProvider().getResult(), graphData = _res$contextProvider$.graphData; // render

              _context.next = 6;
              return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_RENDER.id, {
                graphData: graphData
              });

            case 6:
              _context.next = 8;
              return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_ZOOM.id, {
                factor: 'real'
              });

            case 8:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function onLoad(_x) {
      return _ref.apply(this, arguments);
    };
  }();

  return /*#__PURE__*/react_default.a.createElement(es["B" /* XFlow */], {
    onLoad: onLoad,
    className: "xflow-workspace"
  }, /*#__PURE__*/react_default.a.createElement(es["D" /* XFlowCanvas */], {
    config: graphConfig,
    position: {
      top: 0,
      bottom: 0,
      left: 0,
      right: 0
    }
  }, /*#__PURE__*/react_default.a.createElement(es["b" /* CanvasMiniMap */], {
    position: {
      top: 12,
      left: 12
    }
  })));
};

/* harmony default export */ var demos_basic = __webpack_exports__["default"] = (XFlowDemo);

//# sourceURL=webpack:///./docs/tutorial/extension-components/canvas-mini-map/demos/basic/index.tsx_+_1_modules?`)},rbyC:function(module,__webpack_exports__,__webpack_require__){"use strict";eval(`// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "useGraphConfig", function() { return /* binding */ useGraphConfig; });

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__("KOBo");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__("RY7m");
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("q1tI");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ../xflow/es/index.js + 271 modules
var es = __webpack_require__("mqVf");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 3 modules
var slicedToArray = __webpack_require__("jem/");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/input/index.js + 11 modules
var input = __webpack_require__("BmDy");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/form/index.js + 15 modules
var es_form = __webpack_require__("UL5a");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/message/index.js + 3 modules
var message = __webpack_require__("DuHN");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/button/index.js
var es_button = __webpack_require__("SCaQ");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/card/index.js + 2 modules
var card = __webpack_require__("jMRu");

// CONCATENATED MODULE: ./docs/api/commands/nodes/node-center/demos/form.tsx







var width = 100;
var height = 40;
var formItems = [{
  name: 'id',
  label: 'id',
  rules: [{
    required: true
  }],
  render: input["a" /* default */]
}, {
  name: 'nodeConfig',
  label: 'nodeConfig',
  rules: [{
    required: true
  }],
  render: input["a" /* default */].TextArea,
  renderProps: {
    rows: 5
  }
}];
var CmdForm = () => {
  var app = Object(es["W" /* useXFlowApp */])();

  var _Form$useForm = es_form["a" /* default */].useForm(),
      _Form$useForm2 = Object(slicedToArray["a" /* default */])(_Form$useForm, 1),
      form = _Form$useForm2[0];

  var _useModelAsync = Object(es["U" /* useModelAsync */])({
    getModel: function () {
      var _getModel = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee() {
        return regenerator_default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt("return", es["t" /* MODELS */].SELECTED_NODE.getModel(app.modelService));

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      function getModel() {
        return _getModel.apply(this, arguments);
      }

      return getModel;
    }(),
    initialState: null
  }),
      _useModelAsync2 = Object(slicedToArray["a" /* default */])(_useModelAsync, 1),
      selectNode = _useModelAsync2[0];

  react_default.a.useEffect(() => {
    if (selectNode) {
      var node = selectNode.getData();
      form.setFieldsValue({
        id: node.id,
        nodeConfig: JSON.stringify(node)
      });
    }
  }, [form, selectNode]);

  var onFinish = /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee2(values) {
      return regenerator_default.a.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              app.commandService.executeCommand(es["J" /* XFlowNodeCommands */].CENTER_NODE.id, {
                nodeConfig: JSON.parse(values.nodeConfig)
              });
              message["b" /* default */].success("".concat(es["J" /* XFlowNodeCommands */].CENTER_NODE.label, ": \\u547D\\u4EE4\\u6267\\u884C\\u6210\\u529F"));

            case 2:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    }));

    return function onFinish(_x) {
      return _ref.apply(this, arguments);
    };
  }();

  return /*#__PURE__*/react_default.a.createElement(es["n" /* FormBuilder */], {
    form: form,
    formItems: formItems,
    onFinish: onFinish,
    initialValues: {
      id: null,
      nodeConfig: null
    },
    submitButton: /*#__PURE__*/react_default.a.createElement(es_button["a" /* default */], {
      type: "primary",
      htmlType: "submit",
      style: {
        width: '100%'
      },
      disabled: !selectNode
    }, "\\u9009\\u4E2D\\u8282\\u70B9\\u6267\\u884C\\u547D\\u4EE4")
  });
};
var FormPanel = () => {
  return /*#__PURE__*/react_default.a.createElement(es["A" /* WorkspacePanel */], {
    position: {
      top: 0,
      left: 0,
      bottom: 0,
      width: 230
    },
    className: "panel"
  }, /*#__PURE__*/react_default.a.createElement(card["a" /* default */], {
    title: "NodeConfig Options",
    size: "small",
    bordered: false
  }, /*#__PURE__*/react_default.a.createElement(CmdForm, null)));
};
// EXTERNAL MODULE: ./docs/api/commands/nodes/node-center/demos/index.less
var demos = __webpack_require__("9lUb");

// CONCATENATED MODULE: ./docs/api/commands/nodes/node-center/demos/index.tsx






/**  graphConfig hook  */

var useGraphConfig = Object(es["M" /* createGraphConfig */])(graphConfig => {
  graphConfig.setX6Config({
    grid: true
  });
  graphConfig.setDefaultNodeRender(props => {
    return /*#__PURE__*/react_default.a.createElement("div", {
      className: "react-node"
    }, " ", props.data.label, " ");
  });
});

var NodeAddDemo = () => {
  var graphConfig = useGraphConfig();

  var onLoad = /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(app) {
      return regenerator_default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              app.executeCommand(es["J" /* XFlowNodeCommands */].ADD_NODE.id, {
                nodeConfig: {
                  id: 'node1',
                  x: 100,
                  y: 30,
                  label: 'Hello World 1',
                  width: width,
                  height: height
                }
              });
              app.executeCommand(es["J" /* XFlowNodeCommands */].ADD_NODE.id, {
                nodeConfig: {
                  id: 'node2',
                  x: 50,
                  y: 150,
                  label: 'Hello World 2',
                  width: width,
                  height: height
                }
              });
              app.executeCommand(es["J" /* XFlowNodeCommands */].ADD_NODE.id, {
                nodeConfig: {
                  id: 'node3',
                  x: 200,
                  y: 150,
                  label: 'Hello World 3',
                  width: width,
                  height: height
                }
              });
              return _context.abrupt("return", app);

            case 4:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function onLoad(_x) {
      return _ref.apply(this, arguments);
    };
  }();

  return /*#__PURE__*/react_default.a.createElement(es["B" /* XFlow */], {
    onLoad: onLoad,
    className: "xflow-workspace"
  }, /*#__PURE__*/react_default.a.createElement(FormPanel, null), /*#__PURE__*/react_default.a.createElement(es["D" /* XFlowCanvas */], {
    className: "app-main-content",
    config: graphConfig,
    position: {
      top: 0,
      left: 230,
      right: 0,
      bottom: 0
    }
  }));
};

/* harmony default export */ var node_center_demos = __webpack_exports__["default"] = (NodeAddDemo);

//# sourceURL=webpack:///./docs/api/commands/nodes/node-center/demos/index.tsx_+_1_modules?`)},rzPi:function(module,__webpack_exports__,__webpack_require__){"use strict";eval(`// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "Demo", function() { return /* binding */ Demo; });

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__("KOBo");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__("RY7m");
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("q1tI");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ../xflow/es/index.js + 271 modules
var es = __webpack_require__("mqVf");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/DeleteOutlined.js + 1 modules
var DeleteOutlined = __webpack_require__("UmCv");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/EditOutlined.js + 1 modules
var EditOutlined = __webpack_require__("xdJY");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/StopOutlined.js + 1 modules
var StopOutlined = __webpack_require__("PJfV");

// CONCATENATED MODULE: ./docs/tutorial/solutions/flow/demos/config-menu.ts






/** \u8282\u70B9\u547D\u4EE4 */
var CustomCommands;

(function (_CustomCommands) {
  var category = '\u8282\u70B9\u64CD\u4F5C';
  /** \u6E05\u9664\u753B\u5E03 */

  var CLEAR_GRAPH = _CustomCommands.CLEAR_GRAPH = {
    id: 'xflow:clear-graph',
    label: '\u6E05\u9664',
    category
  };
  var EXPORT_GRAPH = _CustomCommands.EXPORT_GRAPH = {
    id: 'xflow:export-graph',
    label: '\u5BFC\u51FA',
    category
  };
  var SHOW_RENAME_MODAL = _CustomCommands.SHOW_RENAME_MODAL = {
    id: 'xflow:rename-node-modal',
    label: '\u6253\u5F00\u91CD\u547D\u540D\u5F39\u7A97',
    category
  };
})(CustomCommands || (CustomCommands = {}));

var NsRenameNodeCmd;
/** menuitem \u914D\u7F6E */

(function (_NsRenameNodeCmd) {
  var command = _NsRenameNodeCmd.command = CustomCommands.SHOW_RENAME_MODAL;
  var hookKey = _NsRenameNodeCmd.hookKey = 'renameNode';
})(NsRenameNodeCmd || (NsRenameNodeCmd = {}));

var NsMenuItemConfig;

(function (_NsMenuItemConfig) {
  /** \u6CE8\u518C\u83DC\u5355\u4F9D\u8D56\u7684icon */
  es["q" /* IconStore */].set('DeleteOutlined', DeleteOutlined["a" /* default */]);
  es["q" /* IconStore */].set('EditOutlined', EditOutlined["a" /* default */]);
  es["q" /* IconStore */].set('StopOutlined', StopOutlined["a" /* default */]);
  var DELETE_EDGE = _NsMenuItemConfig.DELETE_EDGE = {
    id: es["G" /* XFlowEdgeCommands */].DEL_EDGE.id,
    label: '\u5220\u9664\u8FB9',
    iconName: 'DeleteOutlined',
    onClick: function () {
      var _onClick = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee2(_ref2) {
        var target, commandService;
        return regenerator_default.a.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                target = _ref2.target, commandService = _ref2.commandService;
                commandService.executeCommand(es["G" /* XFlowEdgeCommands */].DEL_EDGE.id, {
                  edgeConfig: target.data
                });

              case 2:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      function onClick(_x5) {
        return _onClick.apply(this, arguments);
      }

      return onClick;
    }()
  };
  var DELETE_NODE = _NsMenuItemConfig.DELETE_NODE = {
    id: es["J" /* XFlowNodeCommands */].DEL_NODE.id,
    label: '\u5220\u9664\u8282\u70B9',
    iconName: 'DeleteOutlined',
    onClick: function () {
      var _onClick2 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee3(_ref3) {
        var target, commandService;
        return regenerator_default.a.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                target = _ref3.target, commandService = _ref3.commandService;
                commandService.executeCommand(es["J" /* XFlowNodeCommands */].DEL_NODE.id, {
                  nodeConfig: {
                    id: target.data.id
                  }
                });

              case 2:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3);
      }));

      function onClick(_x6) {
        return _onClick2.apply(this, arguments);
      }

      return onClick;
    }()
  };
  var EMPTY_MENU = _NsMenuItemConfig.EMPTY_MENU = {
    id: 'EMPTY_MENU_ITEM',
    label: '\u6682\u65E0\u53EF\u7528',
    isEnabled: false,
    iconName: 'DeleteOutlined'
  };
  var SEPARATOR = _NsMenuItemConfig.SEPARATOR = {
    id: 'separator',
    type: es["v" /* MenuItemType */].Separator
  };
})(NsMenuItemConfig || (NsMenuItemConfig = {}));

var useMenuConfig = Object(es["L" /* createCtxMenuConfig */])(config => {
  config.setMenuModelService( /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(target, model, modelService, toDispose) {
      var type, cell;
      return regenerator_default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              type = target.type, cell = target.cell;
              console.log(type);
              _context.t0 = type;
              _context.next = _context.t0 === 'node' ? 5 : _context.t0 === 'edge' ? 7 : _context.t0 === 'blank' ? 9 : 11;
              break;

            case 5:
              model.setValue({
                id: 'root',
                type: es["v" /* MenuItemType */].Root,
                submenu: [NsMenuItemConfig.DELETE_NODE]
              });
              return _context.abrupt("break", 13);

            case 7:
              model.setValue({
                id: 'root',
                type: es["v" /* MenuItemType */].Root,
                submenu: [NsMenuItemConfig.DELETE_EDGE]
              });
              return _context.abrupt("break", 13);

            case 9:
              model.setValue({
                id: 'root',
                type: es["v" /* MenuItemType */].Root,
                submenu: [NsMenuItemConfig.EMPTY_MENU]
              });
              return _context.abrupt("break", 13);

            case 11:
              model.setValue({
                id: 'root',
                type: es["v" /* MenuItemType */].Root,
                submenu: [NsMenuItemConfig.EMPTY_MENU]
              });
              return _context.abrupt("break", 13);

            case 13:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function (_x, _x2, _x3, _x4) {
      return _ref.apply(this, arguments);
    };
  }());
});
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/SaveOutlined.js + 1 modules
var SaveOutlined = __webpack_require__("GcFv");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/UndoOutlined.js + 1 modules
var UndoOutlined = __webpack_require__("++9l");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/RedoOutlined.js + 1 modules
var RedoOutlined = __webpack_require__("YDSq");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/VerticalAlignTopOutlined.js + 1 modules
var VerticalAlignTopOutlined = __webpack_require__("9Ic3");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/VerticalAlignBottomOutlined.js + 1 modules
var VerticalAlignBottomOutlined = __webpack_require__("gErv");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/GatewayOutlined.js + 1 modules
var GatewayOutlined = __webpack_require__("a1K2");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/GroupOutlined.js + 1 modules
var GroupOutlined = __webpack_require__("iyY0");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/UngroupOutlined.js + 1 modules
var UngroupOutlined = __webpack_require__("1cKU");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/CopyOutlined.js + 1 modules
var CopyOutlined = __webpack_require__("aRoJ");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/SnippetsOutlined.js + 1 modules
var SnippetsOutlined = __webpack_require__("6V9+");

// CONCATENATED MODULE: ./docs/tutorial/solutions/flow/demos/config-toolbar.ts




var GROUP_NODE_RENDER_ID = 'GROUP_NODE_RENDER_ID';
var TOOLBAR_ITEMS;

(function (_TOOLBAR_ITEMS) {
  var BACK_NODE = _TOOLBAR_ITEMS.BACK_NODE = es["J" /* XFlowNodeCommands */].BACK_NODE.id;
  var FRONT_NODE = _TOOLBAR_ITEMS.FRONT_NODE = es["J" /* XFlowNodeCommands */].FRONT_NODE.id;
  var SAVE_GRAPH_DATA = _TOOLBAR_ITEMS.SAVE_GRAPH_DATA = es["H" /* XFlowGraphCommands */].SAVE_GRAPH_DATA.id;
  var REDO_CMD = _TOOLBAR_ITEMS.REDO_CMD = "".concat(es["H" /* XFlowGraphCommands */].REDO_CMD.id);
  var UNDO_CMD = _TOOLBAR_ITEMS.UNDO_CMD = "".concat(es["H" /* XFlowGraphCommands */].UNDO_CMD.id);
  var MULTI_SELECT = _TOOLBAR_ITEMS.MULTI_SELECT = "".concat(es["H" /* XFlowGraphCommands */].GRAPH_TOGGLE_MULTI_SELECT.id);
  var ADD_GROUP = _TOOLBAR_ITEMS.ADD_GROUP = "".concat(es["I" /* XFlowGroupCommands */].ADD_GROUP.id);
  var DEL_GROUP = _TOOLBAR_ITEMS.DEL_GROUP = "".concat(es["I" /* XFlowGroupCommands */].DEL_GROUP.id);
  var COPY = _TOOLBAR_ITEMS.COPY = "".concat(es["H" /* XFlowGraphCommands */].GRAPH_COPY.id);
  var PASTE = _TOOLBAR_ITEMS.PASTE = "".concat(es["H" /* XFlowGraphCommands */].GRAPH_PASTE.id);
})(TOOLBAR_ITEMS || (TOOLBAR_ITEMS = {}));

var NSToolbarConfig;

(function (_NSToolbarConfig) {
  /** toolbar\u4F9D\u8D56\u7684\u72B6\u6001 */
  var getDependencies = _NSToolbarConfig.getDependencies = /*#__PURE__*/function () {
    var _ref4 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee4(modelService) {
      return regenerator_default.a.wrap(function _callee4$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              _context4.next = 2;
              return es["t" /* MODELS */].SELECTED_NODES.getModel(modelService);

            case 2:
              _context4.t0 = _context4.sent;
              _context4.next = 5;
              return es["t" /* MODELS */].GRAPH_ENABLE_MULTI_SELECT.getModel(modelService);

            case 5:
              _context4.t1 = _context4.sent;
              return _context4.abrupt("return", [_context4.t0, _context4.t1]);

            case 7:
            case "end":
              return _context4.stop();
          }
        }
      }, _callee4);
    }));

    return function (_x4) {
      return _ref4.apply(this, arguments);
    };
  }();

  var getToolbarState = _NSToolbarConfig.getToolbarState = /*#__PURE__*/function () {
    var _ref5 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee5(modelService) {
      var _yield$MODELS$GRAPH_E, isMultiSelctionActive, isGroupSelected, isNormalNodesSelected, isUndoable, isRedoable;

      return regenerator_default.a.wrap(function _callee5$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:
              _context5.next = 2;
              return es["t" /* MODELS */].GRAPH_ENABLE_MULTI_SELECT.useValue(modelService);

            case 2:
              _yield$MODELS$GRAPH_E = _context5.sent;
              isMultiSelctionActive = _yield$MODELS$GRAPH_E.isEnable;
              _context5.next = 6;
              return es["t" /* MODELS */].IS_GROUP_SELECTED.useValue(modelService);

            case 6:
              isGroupSelected = _context5.sent;
              _context5.next = 9;
              return es["t" /* MODELS */].IS_NORMAL_NODES_SELECTED.useValue(modelService);

            case 9:
              isNormalNodesSelected = _context5.sent;
              _context5.next = 12;
              return es["t" /* MODELS */].COMMAND_UNDOABLE.useValue(modelService);

            case 12:
              isUndoable = _context5.sent;
              _context5.next = 15;
              return es["t" /* MODELS */].COMMAND_REDOABLE.useValue(modelService);

            case 15:
              isRedoable = _context5.sent;
              return _context5.abrupt("return", {
                isUndoable,
                isRedoable,
                isNodeSelected: isNormalNodesSelected,
                isGroupSelected,
                isMultiSelctionActive
              });

            case 17:
            case "end":
              return _context5.stop();
          }
        }
      }, _callee5);
    }));

    return function (_x5) {
      return _ref5.apply(this, arguments);
    };
  }();

  var getToolbarItems = _NSToolbarConfig.getToolbarItems = /*#__PURE__*/function () {
    var _ref6 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee12(state) {
      var toolbarGroup;
      return regenerator_default.a.wrap(function _callee12$(_context12) {
        while (1) {
          switch (_context12.prev = _context12.next) {
            case 0:
              toolbarGroup = []; // const history = getGraphHistory()
              // /** \u64A4\u9500 */
              // toolbarGroup.push({
              //   tooltip: '\u64A4\u9500',
              //   iconName: 'UndoOutlined',
              //   id: TOOLBAR_ITEMS.UNDO_CMD,
              //   isEnabled: history.canUndo(),
              //   onClick: async () => {
              //     history.undo()
              //   },
              // })
              // /** \u91CD\u505A */
              // toolbarGroup.push({
              //   tooltip: '\u91CD\u505A',
              //   iconName: 'RedoOutlined',
              //   id: TOOLBAR_ITEMS.REDO_CMD,
              //   isEnabled: history.canRedo(),
              //   onClick: async () => {
              //     history.redo()
              //   },
              // })

              /** FRONT_NODE */

              // const history = getGraphHistory()
              // /** \u64A4\u9500 */
              // toolbarGroup.push({
              //   tooltip: '\u64A4\u9500',
              //   iconName: 'UndoOutlined',
              //   id: TOOLBAR_ITEMS.UNDO_CMD,
              //   isEnabled: history.canUndo(),
              //   onClick: async () => {
              //     history.undo()
              //   },
              // })
              // /** \u91CD\u505A */
              // toolbarGroup.push({
              //   tooltip: '\u91CD\u505A',
              //   iconName: 'RedoOutlined',
              //   id: TOOLBAR_ITEMS.REDO_CMD,
              //   isEnabled: history.canRedo(),
              //   onClick: async () => {
              //     history.redo()
              //   },
              // })

              /** FRONT_NODE */
              toolbarGroup.push({
                tooltip: '\u7F6E\u524D',
                iconName: 'VerticalAlignTopOutlined',
                id: TOOLBAR_ITEMS.FRONT_NODE,
                isEnabled: state.isNodeSelected,
                onClick: function () {
                  var _onClick = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee6(_ref7) {
                    var commandService, modelService, node;
                    return regenerator_default.a.wrap(function _callee6$(_context6) {
                      while (1) {
                        switch (_context6.prev = _context6.next) {
                          case 0:
                            commandService = _ref7.commandService, modelService = _ref7.modelService;
                            _context6.next = 3;
                            return es["t" /* MODELS */].SELECTED_NODE.useValue(modelService);

                          case 3:
                            node = _context6.sent;
                            commandService.executeCommand(TOOLBAR_ITEMS.FRONT_NODE, {
                              nodeId: node === null || node === void 0 ? void 0 : node.id
                            });

                          case 5:
                          case "end":
                            return _context6.stop();
                        }
                      }
                    }, _callee6);
                  }));

                  function onClick(_x7) {
                    return _onClick.apply(this, arguments);
                  }

                  return onClick;
                }()
              });
              /** BACK_NODE */

              /** BACK_NODE */
              toolbarGroup.push({
                tooltip: '\u7F6E\u540E',
                iconName: 'VerticalAlignBottomOutlined',
                id: TOOLBAR_ITEMS.BACK_NODE,
                isEnabled: state.isNodeSelected,
                onClick: function () {
                  var _onClick2 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee7(_ref8) {
                    var commandService, modelService, node;
                    return regenerator_default.a.wrap(function _callee7$(_context7) {
                      while (1) {
                        switch (_context7.prev = _context7.next) {
                          case 0:
                            commandService = _ref8.commandService, modelService = _ref8.modelService;
                            _context7.next = 3;
                            return es["t" /* MODELS */].SELECTED_NODE.useValue(modelService);

                          case 3:
                            node = _context7.sent;
                            commandService.executeCommand(TOOLBAR_ITEMS.BACK_NODE, {
                              nodeId: node === null || node === void 0 ? void 0 : node.id
                            });

                          case 5:
                          case "end":
                            return _context7.stop();
                        }
                      }
                    }, _callee7);
                  }));

                  function onClick(_x8) {
                    return _onClick2.apply(this, arguments);
                  }

                  return onClick;
                }()
              });
              /** \u5F00\u542F\u6846\u9009 */

              /** \u5F00\u542F\u6846\u9009 */
              toolbarGroup.push({
                tooltip: '\u5F00\u542F\u6846\u9009',
                iconName: 'GatewayOutlined',
                id: TOOLBAR_ITEMS.MULTI_SELECT,
                active: state.isMultiSelctionActive,
                onClick: function () {
                  var _onClick3 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee8(_ref9) {
                    var commandService;
                    return regenerator_default.a.wrap(function _callee8$(_context8) {
                      while (1) {
                        switch (_context8.prev = _context8.next) {
                          case 0:
                            commandService = _ref9.commandService;
                            commandService.executeCommand(TOOLBAR_ITEMS.MULTI_SELECT, {});

                          case 2:
                          case "end":
                            return _context8.stop();
                        }
                      }
                    }, _callee8);
                  }));

                  function onClick(_x9) {
                    return _onClick3.apply(this, arguments);
                  }

                  return onClick;
                }()
              });
              /** \u65B0\u5EFA\u7FA4\u7EC4 */

              /** \u65B0\u5EFA\u7FA4\u7EC4 */
              toolbarGroup.push({
                tooltip: '\u65B0\u5EFA\u7FA4\u7EC4',
                iconName: 'GroupOutlined',
                id: TOOLBAR_ITEMS.ADD_GROUP,
                isEnabled: state.isNodeSelected,
                onClick: function () {
                  var _onClick4 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee9(_ref10) {
                    var commandService, modelService, cells, groupChildren;
                    return regenerator_default.a.wrap(function _callee9$(_context9) {
                      while (1) {
                        switch (_context9.prev = _context9.next) {
                          case 0:
                            commandService = _ref10.commandService, modelService = _ref10.modelService;
                            _context9.next = 3;
                            return es["t" /* MODELS */].SELECTED_CELLS.useValue(modelService);

                          case 3:
                            cells = _context9.sent;
                            groupChildren = cells.map(cell => cell.id);
                            commandService.executeCommand(TOOLBAR_ITEMS.ADD_GROUP, {
                              nodeConfig: {
                                id: Object(es["X" /* uuidv4 */])(),
                                renderKey: GROUP_NODE_RENDER_ID,
                                groupChildren,
                                groupCollapsedSize: {
                                  width: 200,
                                  height: 40
                                },
                                label: '\u65B0\u5EFA\u7FA4\u7EC4'
                              }
                            });

                          case 6:
                          case "end":
                            return _context9.stop();
                        }
                      }
                    }, _callee9);
                  }));

                  function onClick(_x10) {
                    return _onClick4.apply(this, arguments);
                  }

                  return onClick;
                }()
              });
              /** \u89E3\u6563\u7FA4\u7EC4 */

              /** \u89E3\u6563\u7FA4\u7EC4 */
              toolbarGroup.push({
                tooltip: '\u89E3\u6563\u7FA4\u7EC4',
                iconName: 'UngroupOutlined',
                id: TOOLBAR_ITEMS.DEL_GROUP,
                isEnabled: state.isGroupSelected,
                onClick: function () {
                  var _onClick5 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee10(_ref11) {
                    var commandService, modelService, cell, nodeConfig;
                    return regenerator_default.a.wrap(function _callee10$(_context10) {
                      while (1) {
                        switch (_context10.prev = _context10.next) {
                          case 0:
                            commandService = _ref11.commandService, modelService = _ref11.modelService;
                            _context10.next = 3;
                            return es["t" /* MODELS */].SELECTED_NODE.useValue(modelService);

                          case 3:
                            cell = _context10.sent;
                            nodeConfig = cell.getData();
                            commandService.executeCommand(es["I" /* XFlowGroupCommands */].DEL_GROUP.id, {
                              nodeConfig: nodeConfig
                            });

                          case 6:
                          case "end":
                            return _context10.stop();
                        }
                      }
                    }, _callee10);
                  }));

                  function onClick(_x11) {
                    return _onClick5.apply(this, arguments);
                  }

                  return onClick;
                }()
              });
              /** \u4FDD\u5B58\u6570\u636E */

              /** \u4FDD\u5B58\u6570\u636E */
              toolbarGroup.push({
                tooltip: '\u4FDD\u5B58',
                iconName: 'SaveOutlined',
                id: TOOLBAR_ITEMS.SAVE_GRAPH_DATA,
                onClick: function () {
                  var _onClick6 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee11(_ref12) {
                    var commandService;
                    return regenerator_default.a.wrap(function _callee11$(_context11) {
                      while (1) {
                        switch (_context11.prev = _context11.next) {
                          case 0:
                            commandService = _ref12.commandService;
                            commandService.executeCommand(TOOLBAR_ITEMS.SAVE_GRAPH_DATA, {
                              saveGraphDataService: (meta, graphData) => {
                                console.log(graphData);
                                return null;
                              }
                            });

                          case 2:
                          case "end":
                            return _context11.stop();
                        }
                      }
                    }, _callee11);
                  }));

                  function onClick(_x12) {
                    return _onClick6.apply(this, arguments);
                  }

                  return onClick;
                }()
              });
              return _context12.abrupt("return", [{
                name: 'graphData',
                items: toolbarGroup
              }]);

            case 8:
            case "end":
              return _context12.stop();
          }
        }
      }, _callee12);
    }));

    return function (_x6) {
      return _ref6.apply(this, arguments);
    };
  }();
})(NSToolbarConfig || (NSToolbarConfig = {}));
/** \u6CE8\u518Cicon \u7C7B\u578B */


var registerIcon = () => {
  es["q" /* IconStore */].set('SaveOutlined', SaveOutlined["a" /* default */]);
  es["q" /* IconStore */].set('UndoOutlined', UndoOutlined["a" /* default */]);
  es["q" /* IconStore */].set('RedoOutlined', RedoOutlined["a" /* default */]);
  es["q" /* IconStore */].set('VerticalAlignTopOutlined', VerticalAlignTopOutlined["a" /* default */]);
  es["q" /* IconStore */].set('VerticalAlignBottomOutlined', VerticalAlignBottomOutlined["a" /* default */]);
  es["q" /* IconStore */].set('GatewayOutlined', GatewayOutlined["a" /* default */]);
  es["q" /* IconStore */].set('GroupOutlined', GroupOutlined["a" /* default */]);
  es["q" /* IconStore */].set('UngroupOutlined', UngroupOutlined["a" /* default */]);
  es["q" /* IconStore */].set('CopyOutlined', CopyOutlined["a" /* default */]);
  es["q" /* IconStore */].set('SnippetsOutlined', SnippetsOutlined["a" /* default */]);
};

var useToolbarConfig = Object(es["Q" /* createToolbarConfig */])((toolbarConfig, proxy) => {
  registerIcon();
  /** \u751F\u4EA7 toolbar item */

  toolbarConfig.setToolbarModelService( /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee3(toolbarModel, modelService, toDispose) {
      var updateToolbarModel, models, subscriptions;
      return regenerator_default.a.wrap(function _callee3$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              updateToolbarModel = /*#__PURE__*/function () {
                var _ref2 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee() {
                  var state, toolbarItems;
                  return regenerator_default.a.wrap(function _callee$(_context) {
                    while (1) {
                      switch (_context.prev = _context.next) {
                        case 0:
                          _context.next = 2;
                          return NSToolbarConfig.getToolbarState(modelService);

                        case 2:
                          state = _context.sent;
                          _context.next = 5;
                          return NSToolbarConfig.getToolbarItems(state);

                        case 5:
                          toolbarItems = _context.sent;
                          toolbarModel.setValue(toolbar => {
                            toolbar.mainGroups = toolbarItems;
                          });

                        case 7:
                        case "end":
                          return _context.stop();
                      }
                    }
                  }, _callee);
                }));

                return function updateToolbarModel() {
                  return _ref2.apply(this, arguments);
                };
              }();

              _context3.next = 3;
              return NSToolbarConfig.getDependencies(modelService);

            case 3:
              models = _context3.sent;
              subscriptions = models.map(model => {
                return model.watch( /*#__PURE__*/Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee2() {
                  return regenerator_default.a.wrap(function _callee2$(_context2) {
                    while (1) {
                      switch (_context2.prev = _context2.next) {
                        case 0:
                          updateToolbarModel();

                        case 1:
                        case "end":
                          return _context2.stop();
                      }
                    }
                  }, _callee2);
                })));
              });
              toDispose.pushAll(subscriptions);

            case 6:
            case "end":
              return _context3.stop();
          }
        }
      }, _callee3);
    }));

    return function (_x, _x2, _x3) {
      return _ref.apply(this, arguments);
    };
  }());
});
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/objectSpread2.js
var objectSpread2 = __webpack_require__("BcGY");

// CONCATENATED MODULE: ./docs/tutorial/solutions/flow/demos/config-keybinding.ts




var useKeybindingConfig = Object(es["O" /* createKeybindingConfig */])(config => {
  // delete
  config.setKeybindingFunc(regsitry => {
    return regsitry.registerKeybinding([{
      id: 'delete node or edge',
      keybinding: 'backspace',
      callback: function () {
        var _callback = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(item, modelService, cmd, e) {
          var cells;
          return regenerator_default.a.wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  _context.next = 2;
                  return es["t" /* MODELS */].SELECTED_CELLS.useValue(modelService);

                case 2:
                  cells = _context.sent;
                  cells.map(cell => {
                    if (cell.isNode()) {
                      return cmd.executeCommand(es["J" /* XFlowNodeCommands */].DEL_NODE.id, {
                        nodeConfig: Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({}, cell.getData()), {}, {
                          id: cell.id
                        })
                      });
                    }

                    if (cell.isEdge()) {
                      return cmd.executeCommand(es["G" /* XFlowEdgeCommands */].DEL_EDGE.id, {
                        edgeConfig: Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({}, cell.getData()), {}, {
                          id: cell.id
                        })
                      });
                    }
                  });

                case 4:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee);
        }));

        function callback(_x, _x2, _x3, _x4) {
          return _callback.apply(this, arguments);
        }

        return callback;
      }()
    }, {
      id: 'copy',
      keybinding: ['command+c', 'ctrl+c'],
      callback: function () {
        var _callback2 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee2(item, modelService, cmd, e) {
          return regenerator_default.a.wrap(function _callee2$(_context2) {
            while (1) {
              switch (_context2.prev = _context2.next) {
                case 0:
                  e.preventDefault();
                  console.log(item);
                  cmd.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_COPY.id, {});

                case 3:
                case "end":
                  return _context2.stop();
              }
            }
          }, _callee2);
        }));

        function callback(_x5, _x6, _x7, _x8) {
          return _callback2.apply(this, arguments);
        }

        return callback;
      }()
    }, {
      id: 'paste',
      keybinding: ['command+v', 'ctrl+v'],
      callback: function () {
        var _callback3 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee3(item, ctx, cmd, e) {
          return regenerator_default.a.wrap(function _callee3$(_context3) {
            while (1) {
              switch (_context3.prev = _context3.next) {
                case 0:
                  e.preventDefault();
                  cmd.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_PASTE.id, {});

                case 2:
                case "end":
                  return _context3.stop();
              }
            }
          }, _callee3);
        }));

        function callback(_x9, _x10, _x11, _x12) {
          return _callback3.apply(this, arguments);
        }

        return callback;
      }()
    }, {
      id: 'undo',
      keybinding: ['meta+z', 'ctrl+z'],
      callback: function () {
        var _callback4 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee4(item, ctx, cmd, e) {
          return regenerator_default.a.wrap(function _callee4$(_context4) {
            while (1) {
              switch (_context4.prev = _context4.next) {
                case 0:
                  e.preventDefault();
                  cmd.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_HISTORY_UNDO.id, {});

                case 2:
                case "end":
                  return _context4.stop();
              }
            }
          }, _callee4);
        }));

        function callback(_x13, _x14, _x15, _x16) {
          return _callback4.apply(this, arguments);
        }

        return callback;
      }()
    }, {
      id: 'redo',
      keybinding: ['meta+shift+z', 'ctrl+shift+z'],
      callback: function () {
        var _callback5 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee5(item, ctx, cmd, e) {
          return regenerator_default.a.wrap(function _callee5$(_context5) {
            while (1) {
              switch (_context5.prev = _context5.next) {
                case 0:
                  e.preventDefault();
                  cmd.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_HISTORY_REDO.id, {});

                case 2:
                case "end":
                  return _context5.stop();
              }
            }
          }, _callee5);
        }));

        function callback(_x17, _x18, _x19, _x20) {
          return _callback5.apply(this, arguments);
        }

        return callback;
      }()
    }]);
  });
});
// EXTERNAL MODULE: ./docs/tutorial/solutions/flow/demos/react-node/dnd-node.less
var dnd_node = __webpack_require__("etqE");

// CONCATENATED MODULE: ./docs/tutorial/solutions/flow/demos/react-node/dnd-node.tsx


var DndNode = props => {
  var _props$size = props.size,
      size = _props$size === void 0 ? {
    width: 126,
    height: 104
  } : _props$size,
      data = props.data;
  var width = size.width,
      height = size.height;
  var label = data.label,
      stroke = data.stroke,
      fill = data.fill,
      fontFill = data.fontFill,
      fontSize = data.fontSize;
  return /*#__PURE__*/react_default.a.createElement("div", {
    className: "container",
    style: {
      width,
      height,
      borderColor: stroke,
      backgroundColor: fill,
      color: fontFill,
      fontSize
    }
  }, /*#__PURE__*/react_default.a.createElement("span", null, label));
};
// EXTERNAL MODULE: ./docs/tutorial/solutions/flow/demos/index.less
var demos = __webpack_require__("beTX");

// CONCATENATED MODULE: ./docs/tutorial/solutions/flow/demos/index.tsx



/** \u4EA4\u4E92\u7EC4\u4EF6 */



/** \u914D\u7F6EMenu */

/** \u914D\u7F6EToolbar */


/** \u914D\u7F6E\u5FEB\u6377\u952E */


/** \u914D\u7F6EDnd\u7EC4\u4EF6\u9762\u677F */



var Demo = props => {
  var meta = props.meta;
  var toolbarConfig = useToolbarConfig();
  var menuConfig = useMenuConfig();
  var keybindingConfig = useKeybindingConfig();
  var graphRef = Object(react["useRef"])();
  /**
   * @param app \u5F53\u524DXFlow\u5DE5\u4F5C\u7A7A\u95F4
   * @param extensionRegistry \u5F53\u524DXFlow\u914D\u7F6E\u9879
   */

  var onLoad = /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(app) {
      return regenerator_default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return app.getGraphInstance();

            case 2:
              graphRef.current = _context.sent;

            case 3:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function onLoad(_x) {
      return _ref.apply(this, arguments);
    };
  }();

  Object(react["useEffect"])(() => {
    if (graphRef.current) {
      graphRef.current.on('node:click', function () {
        for (var _len = arguments.length, arg = new Array(_len), _key = 0; _key < _len; _key++) {
          arg[_key] = arguments[_key];
        }

        console.log(arg);
      });
    }
  }, [graphRef]);
  return /*#__PURE__*/react_default.a.createElement(es["B" /* XFlow */], {
    className: "flow-user-custom-clz",
    onLoad: onLoad,
    meta: meta
  }, /*#__PURE__*/react_default.a.createElement(es["k" /* FlowchartExtension */], null), /*#__PURE__*/react_default.a.createElement(es["m" /* FlowchartNodePanel */], {
    registerNode: {
      title: '\u81EA\u5B9A\u4E49\u8282\u70B9',
      nodes: [{
        component: DndNode,
        popover: () => /*#__PURE__*/react_default.a.createElement("div", null, "\\u81EA\\u5B9A\\u4E49\\u8282\\u70B9"),
        name: 'custom-node-indicator',
        width: 210,
        height: 130,
        label: '\u81EA\u5B9A\u4E49\u8282\u70B9'
      }]
    },
    position: {
      width: 162,
      top: 40,
      bottom: 0,
      left: 0
    }
  }), /*#__PURE__*/react_default.a.createElement(es["f" /* CanvasToolbar */], {
    className: "xflow-workspace-toolbar-top",
    layout: "horizontal",
    config: toolbarConfig,
    position: {
      top: 0,
      left: 0,
      right: 0,
      bottom: 0
    }
  }), /*#__PURE__*/react_default.a.createElement(es["j" /* FlowchartCanvas */], {
    position: {
      top: 40,
      left: 0,
      right: 0,
      bottom: 0
    }
  }, /*#__PURE__*/react_default.a.createElement(es["d" /* CanvasScaleToolbar */], {
    layout: "horizontal",
    position: {
      top: -40,
      right: 0
    },
    style: {
      width: 120,
      left: 'auto',
      height: 39
    }
  }), /*#__PURE__*/react_default.a.createElement(es["a" /* CanvasContextMenu */], {
    config: menuConfig
  }), /*#__PURE__*/react_default.a.createElement(es["e" /* CanvasSnapline */], {
    color: "#faad14"
  }), /*#__PURE__*/react_default.a.createElement(es["c" /* CanvasNodePortTooltip */], null)), /*#__PURE__*/react_default.a.createElement(es["l" /* FlowchartFormPanel */], {
    show: true,
    position: {
      width: 200,
      top: 40,
      bottom: 0,
      right: 0
    }
  }), /*#__PURE__*/react_default.a.createElement(es["s" /* KeyBindings */], {
    config: keybindingConfig
  }));
};
/* harmony default export */ var flow_demos = __webpack_exports__["default"] = (Demo);

//# sourceURL=webpack:///./docs/tutorial/solutions/flow/demos/index.tsx_+_4_modules?`)},suys:function(module,__webpack_exports__,__webpack_require__){"use strict";eval(`__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useGraphConfig", function() { return useGraphConfig; });
/* harmony import */ var _Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("KOBo");
/* harmony import */ var _Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("RY7m");
/* harmony import */ var _Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("q1tI");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _antv_xflow__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("mqVf");
/* harmony import */ var _index_less__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("BqF6");
/* harmony import */ var _index_less__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_index_less__WEBPACK_IMPORTED_MODULE_4__);





var useGraphConfig = Object(_antv_xflow__WEBPACK_IMPORTED_MODULE_3__[/* createGraphConfig */ "M"])(config => {
  config.setX6Config({
    grid: true
  });
  config.setNodeRender('NODE1', props => {
    var _props$data;

    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("div", {
      className: "react-node"
    }, (_props$data = props.data) === null || _props$data === void 0 ? void 0 : _props$data.text);
  });
  config.setNodeTypeParser(node => node === null || node === void 0 ? void 0 : node.renderKey);
});

var Demo = () => {
  var onLoad = /*#__PURE__*/function () {
    var _ref = Object(_Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])( /*#__PURE__*/_Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee(app) {
      var nodes, edges, graphData;
      return _Users_lyn_github_xflow_github_node_modules_umijs_babel_preset_umi_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              nodes = [{
                id: 'root1',
                width: 150,
                height: 40,
                renderKey: 'NODE1',
                text: '\u8282\u70B91'
              }, {
                id: 'down1',
                width: 150,
                height: 40,
                renderKey: 'NODE1',
                text: '\u8282\u70B92'
              }, {
                id: 'down2',
                width: 150,
                height: 40,
                renderKey: 'NODE1',
                text: '\u8282\u70B93'
              }, {
                id: 'down3',
                width: 150,
                height: 40,
                renderKey: 'NODE1',
                text: '\u8282\u70B94'
              }];
              edges = [{
                id: 'root1-down1',
                source: 'root1',
                target: 'down1',
                label: '1:1'
              }, {
                id: 'root1-down2',
                source: 'root1',
                target: 'down2',
                label: '1:N'
              }, {
                id: 'root1-down3',
                source: 'root1',
                target: 'down3',
                label: 'N:N'
              }];
              graphData = {
                nodes,
                edges
              };
              _context.next = 5;
              return app.executeCommand(_antv_xflow__WEBPACK_IMPORTED_MODULE_3__[/* XFlowGraphCommands */ "H"].GRAPH_LAYOUT.id, {
                graphData,
                layoutType: 'dagre',
                layoutOptions: {
                  type: 'dagre',
                  rankdir: 'LR',
                  nodesep: 10,
                  ranksep: 80
                }
              });

            case 5:
              _context.next = 7;
              return app.executeCommand(_antv_xflow__WEBPACK_IMPORTED_MODULE_3__[/* XFlowGraphCommands */ "H"].GRAPH_RENDER.id, {
                graphData
              });

            case 7:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function onLoad(_x) {
      return _ref.apply(this, arguments);
    };
  }();

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_antv_xflow__WEBPACK_IMPORTED_MODULE_3__[/* XFlow */ "B"], {
    onLoad: onLoad,
    className: "xflow-graph-layout-demo"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_antv_xflow__WEBPACK_IMPORTED_MODULE_3__[/* XFlowCanvas */ "D"], {
    config: useGraphConfig()
  }));
};

/* harmony default export */ __webpack_exports__["default"] = (Demo);

//# sourceURL=webpack:///./docs/api/commands/graph/graph-layout/demos/index.tsx?`)},u8p8:function(module,__webpack_exports__,__webpack_require__){"use strict";eval(`// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "width", function() { return /* binding */ width; });
__webpack_require__.d(__webpack_exports__, "height", function() { return /* binding */ height; });
__webpack_require__.d(__webpack_exports__, "useGraphConfig", function() { return /* binding */ useGraphConfig; });

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__("KOBo");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__("RY7m");
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("q1tI");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ../xflow/es/index.js + 271 modules
var es = __webpack_require__("mqVf");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 3 modules
var slicedToArray = __webpack_require__("jem/");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/input/index.js + 11 modules
var input = __webpack_require__("BmDy");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/form/index.js + 15 modules
var es_form = __webpack_require__("UL5a");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/message/index.js + 3 modules
var message = __webpack_require__("DuHN");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/antd/es/card/index.js + 2 modules
var card = __webpack_require__("jMRu");

// CONCATENATED MODULE: ./docs/api/commands/nodes/node-back/demos/form.tsx







var formItems = [{
  name: 'nodeId',
  label: 'nodeId',
  rules: [{
    required: true
  }],
  render: input["a" /* default */],
  renderProps: {
    disabled: true
  }
}];
var CmdForm = () => {
  var _usePanelContext = Object(es["V" /* usePanelContext */])(),
      commandService = _usePanelContext.commandService;

  var _Form$useForm = es_form["a" /* default */].useForm(),
      _Form$useForm2 = Object(slicedToArray["a" /* default */])(_Form$useForm, 1),
      form = _Form$useForm2[0];

  var onFinish = /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(values) {
      return regenerator_default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              commandService.executeCommand(es["J" /* XFlowNodeCommands */].BACK_NODE.id, values);
              console.log('executeCommand with args', values);
              message["b" /* default */].success("".concat(es["J" /* XFlowNodeCommands */].BACK_NODE.label, ": \\u547D\\u4EE4\\u6267\\u884C\\u6210\\u529F"));
              form.setFieldsValue({
                nodeId: values.nodeId === 'node1' ? 'node2' : 'node1'
              });

            case 4:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function onFinish(_x) {
      return _ref.apply(this, arguments);
    };
  }();

  return /*#__PURE__*/react_default.a.createElement(es["n" /* FormBuilder */], {
    form: form,
    formItems: formItems,
    onFinish: onFinish,
    initialValues: {
      nodeId: 'node1'
    }
  });
};
var FormPanel = () => {
  return /*#__PURE__*/react_default.a.createElement(es["A" /* WorkspacePanel */], {
    position: {
      top: 0,
      left: 0,
      bottom: 0,
      width: 230
    },
    className: "panel"
  }, /*#__PURE__*/react_default.a.createElement(card["a" /* default */], {
    title: "NodeConfig Options",
    size: "small",
    bordered: false
  }, /*#__PURE__*/react_default.a.createElement(CmdForm, null)));
};
// EXTERNAL MODULE: ./docs/api/commands/nodes/node-back/demos/index.less
var demos = __webpack_require__("04JV");

// CONCATENATED MODULE: ./docs/api/commands/nodes/node-back/demos/index.tsx






var width = 100;
var height = 40;
/**  graphConfig hook  */

var useGraphConfig = Object(es["M" /* createGraphConfig */])(graphConfig => {
  graphConfig.setX6Config({
    grid: true
  });
  graphConfig.setDefaultNodeRender(props => {
    return /*#__PURE__*/react_default.a.createElement("div", {
      className: "react-node"
    }, " ", props.data.label, " ");
  });
});

var NodeAddDemo = () => {
  var graphConfig = useGraphConfig();

  var onLoad = /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(app) {
      return regenerator_default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              app.executeCommand(es["J" /* XFlowNodeCommands */].ADD_NODE.id, {
                nodeConfig: {
                  id: 'node1',
                  x: 100,
                  y: 30,
                  label: 'NODENODE1',
                  width,
                  height
                }
              });
              app.executeCommand(es["J" /* XFlowNodeCommands */].ADD_NODE.id, {
                nodeConfig: {
                  id: 'node2',
                  x: 120,
                  y: 50,
                  label: 'NODENODE2',
                  width,
                  height
                }
              });
              return _context.abrupt("return", app);

            case 3:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function onLoad(_x) {
      return _ref.apply(this, arguments);
    };
  }();

  return /*#__PURE__*/react_default.a.createElement(es["B" /* XFlow */], {
    meta: {
      flowId: 'add-node-demo'
    },
    onLoad: onLoad,
    className: "xflow-workspace"
  }, /*#__PURE__*/react_default.a.createElement(FormPanel, null), /*#__PURE__*/react_default.a.createElement(es["D" /* XFlowCanvas */], {
    className: "app-main-content",
    config: graphConfig,
    position: {
      top: 0,
      left: 230,
      right: 0,
      bottom: 0
    }
  }));
};

/* harmony default export */ var node_back_demos = __webpack_exports__["default"] = (NodeAddDemo);

//# sourceURL=webpack:///./docs/api/commands/nodes/node-back/demos/index.tsx_+_1_modules?`)},ui7r:function(module,__webpack_exports__,__webpack_require__){"use strict";eval(`// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("q1tI");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ../xflow/es/index.js + 271 modules
var es = __webpack_require__("mqVf");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__("KOBo");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__("RY7m");
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/objectSpread2.js
var objectSpread2 = __webpack_require__("BcGY");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/context-menu/demos/dynamic-config/mock.ts

 // NodeConfig

var NODE_COMMON_PROPS = {
  width: 160,
  height: 32
}; // NodeConfig

var EDGE_COMMON_PROPS = {
  attrs: {
    line: {
      targetMarker: {
        name: 'block',
        width: 4,
        height: 8
      },
      strokeDasharray: '',
      stroke: '#A2B1C3',
      strokeWidth: 1
    }
  }
}; // mock data

var getGraphData = () => {
  var nodes = [Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({
    id: 'node1',
    label: '\u7B97\u6CD5\u8282\u70B9-1'
  }, NODE_COMMON_PROPS), {}, {
    menuItems: ['\u52A8\u6001\u6E32\u67D3\u7684MenuItem ']
  }), Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({
    id: 'node2',
    label: '\u7B97\u6CD5\u8282\u70B9-2'
  }, NODE_COMMON_PROPS), {}, {
    menuItems: ['\u52A8\u6001\u6E32\u67D3\u7684MenuItem ', '\u52A8\u6001\u6E32\u67D3\u7684MenuItem ']
  }), Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({
    id: 'node3',
    label: '\u7B97\u6CD5\u8282\u70B9-3'
  }, NODE_COMMON_PROPS), {}, {
    menuItems: ['\u52A8\u6001\u6E32\u67D3\u7684MenuItem ', '\u52A8\u6001\u6E32\u67D3\u7684MenuItem ', '\u52A8\u6001\u6E32\u67D3\u7684MenuItem ']
  }), Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({
    id: 'node4',
    label: '\u7B97\u6CD5\u8282\u70B9-4'
  }, NODE_COMMON_PROPS), {}, {
    menuItems: []
  })];
  var edges = [Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node2',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node2-input-1'
  }, EDGE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node3',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node3-input-1'
  }, EDGE_COMMON_PROPS), Object(objectSpread2["a" /* default */])({
    id: Object(es["X" /* uuidv4 */])(),
    source: 'node1',
    target: 'node4',
    sourcePortId: 'node1-output-1',
    targetPortId: 'node4-input-1'
  }, EDGE_COMMON_PROPS)];
  return {
    nodes: nodes,
    edges: edges
  };
};
// CONCATENATED MODULE: ./docs/tutorial/extension-components/context-menu/demos/dynamic-config/graph-config.tsx






var onLoad = /*#__PURE__*/function () {
  var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(app) {
    var res, _res$contextProvider$, graphData;

    return regenerator_default.a.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_LAYOUT.id, {
              layoutType: 'dagre',
              layoutOptions: {
                type: 'dagre',

                /** \u5E03\u5C40\u65B9\u5411 */
                rankdir: 'TB',

                /** \u8282\u70B9\u95F4\u8DDD */
                nodesep: 60,

                /** \u5C42\u95F4\u8DDD */
                ranksep: 30
              },
              graphData: getGraphData()
            });

          case 2:
            res = _context.sent;
            _res$contextProvider$ = res.contextProvider().getResult(), graphData = _res$contextProvider$.graphData; // render

            _context.next = 6;
            return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_RENDER.id, {
              graphData: graphData
            });

          case 6:
            _context.next = 8;
            return app.executeCommand(es["H" /* XFlowGraphCommands */].GRAPH_ZOOM.id, {
              factor: 'real'
            });

          case 8:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function onLoad(_x) {
    return _ref.apply(this, arguments);
  };
}();
/**  graphConfig\uFF1A\u914D\u7F6EGraph  */

var useGraphConfig = Object(es["M" /* createGraphConfig */])(graphConfig => {
  graphConfig.setDefaultNodeRender(props => {
    return /*#__PURE__*/react_default.a.createElement("div", {
      className: "react-node"
    }, " ", props.data.label, " ");
  });
});
// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/DeleteOutlined.js + 1 modules
var DeleteOutlined = __webpack_require__("UmCv");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/EditOutlined.js + 1 modules
var EditOutlined = __webpack_require__("xdJY");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/StopOutlined.js + 1 modules
var StopOutlined = __webpack_require__("PJfV");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/UnorderedListOutlined.js + 1 modules
var UnorderedListOutlined = __webpack_require__("/sAC");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/context-menu/demos/dynamic-config/menu-config.tsx






var useMenuConfig = Object(es["L" /* createCtxMenuConfig */])(config => {
  config.setMenuModelService( /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(data, model, modelService, toDispose) {
      var type, cell;
      return regenerator_default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              type = data.type, cell = data.cell;
              console.log(type);
              _context.t0 = type;
              _context.next = _context.t0 === 'node' ? 5 : 7;
              break;

            case 5:
              model.setValue({
                id: 'root',
                type: es["v" /* MenuItemType */].Root,
                submenu: [NsCustomMenuItems.DELETE_NODE, NsCustomMenuItems.getDynamicMenuItems(data)]
              });
              return _context.abrupt("break", 9);

            case 7:
              model.setValue({
                id: 'root',
                type: es["v" /* MenuItemType */].Root,
                submenu: [NsCustomMenuItems.EMPTY_MENU]
              });
              return _context.abrupt("break", 9);

            case 9:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function (_x, _x2, _x3, _x4) {
      return _ref.apply(this, arguments);
    };
  }());
});
/** menuitem \u914D\u7F6E */

var NsCustomMenuItems;

(function (_NsCustomMenuItems) {
  /** \u6CE8\u518C\u83DC\u5355\u4F9D\u8D56\u7684icon */
  es["q" /* IconStore */].set('DeleteOutlined', DeleteOutlined["a" /* default */]);
  es["q" /* IconStore */].set('EditOutlined', EditOutlined["a" /* default */]);
  es["q" /* IconStore */].set('StopOutlined', StopOutlined["a" /* default */]);
  es["q" /* IconStore */].set('UnorderedListOutlined', UnorderedListOutlined["a" /* default */]);

  var getDynamicMenuItems = _NsCustomMenuItems.getDynamicMenuItems = state => {
    var data = state.cell.getData();
    return {
      id: '\u52A8\u6001\u6E32\u7684submenu',
      label: '\u52A8\u6001\u6E32\u67D3\u7684\u83DC\u5355',
      iconName: 'UnorderedListOutlined',
      type: es["v" /* MenuItemType */].Submenu,
      submenu: data.menuItems.map((item, idx) => {
        return {
          id: item + '#' + idx,
          label: item + '#' + (idx + 1),
          type: es["v" /* MenuItemType */].Leaf,
          iconName: 'UnorderedListOutlined',
          onClick: function () {
            var _onClick = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee2(_ref2) {
              var target;
              return regenerator_default.a.wrap(function _callee2$(_context2) {
                while (1) {
                  switch (_context2.prev = _context2.next) {
                    case 0:
                      target = _ref2.target;
                      console.log('submenu is  click', target, item);

                    case 2:
                    case "end":
                      return _context2.stop();
                  }
                }
              }, _callee2);
            }));

            function onClick(_x5) {
              return _onClick.apply(this, arguments);
            }

            return onClick;
          }()
        };
      })
    };
  };

  var DELETE_NODE = _NsCustomMenuItems.DELETE_NODE = {
    id: es["J" /* XFlowNodeCommands */].DEL_NODE.id,
    label: '\u5220\u9664\u8282\u70B9',
    iconName: 'DeleteOutlined',
    onClick: function () {
      var _onClick2 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee3(_ref3) {
        var target, commandService;
        return regenerator_default.a.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                target = _ref3.target, commandService = _ref3.commandService;
                commandService.executeCommand(es["J" /* XFlowNodeCommands */].DEL_NODE.id, {
                  nodeConfig: {
                    id: target.data.id
                  }
                });

              case 2:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3);
      }));

      function onClick(_x6) {
        return _onClick2.apply(this, arguments);
      }

      return onClick;
    }()
  };
  var EMPTY_MENU = _NsCustomMenuItems.EMPTY_MENU = {
    id: 'EMPTY_MENU_ITEM',
    label: '\u6682\u65E0\u53EF\u7528',
    isEnabled: false,
    iconName: 'DeleteOutlined',
    onClick: function () {
      var _onClick3 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee4(_ref4) {
        var target, commandService;
        return regenerator_default.a.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                target = _ref4.target, commandService = _ref4.commandService;
                commandService.executeCommand(es["J" /* XFlowNodeCommands */].DEL_NODE.id, {
                  nodeConfig: {
                    id: target.data.id
                  }
                });

              case 2:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4);
      }));

      function onClick(_x7) {
        return _onClick3.apply(this, arguments);
      }

      return onClick;
    }()
  };
  var SEPARATOR = _NsCustomMenuItems.SEPARATOR = {
    id: 'separator',
    type: es["v" /* MenuItemType */].Separator
  };
})(NsCustomMenuItems || (NsCustomMenuItems = {}));
// EXTERNAL MODULE: ./docs/tutorial/extension-components/context-menu/demos/dynamic-config/index.less
var dynamic_config = __webpack_require__("shw0");

// EXTERNAL MODULE: ../xflow/dist/index.css
var dist = __webpack_require__("1MRj");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/context-menu/demos/dynamic-config/index.tsx
/**
 *  title: \u52A8\u6001\u6E32\u67D3\uFF1A\u4E0D\u540C\u7684\u8282\u70B9\u6709\u4E0D\u540C\u7684\u83DC\u5355
 *  desc: |
 *    \u53EF\u4EE5\u6839\u636E\u4E0D\u540C\u7684\u8282\u70B9\u6570\u636E\uFF0C\u52A8\u6001\u7684\u751F\u6210\u4E0D\u540C\u7684Menu Items <br>
 */






/**  Demo Props  */

var XFlowDemo = props => {
  var graphConfig = useGraphConfig(props);
  var menucConfig = useMenuConfig(props);
  return /*#__PURE__*/react_default.a.createElement(es["B" /* XFlow */], {
    onLoad: onLoad,
    className: "xflow-workspace"
  }, /*#__PURE__*/react_default.a.createElement(es["D" /* XFlowCanvas */], {
    config: graphConfig,
    position: {
      top: 0,
      bottom: 0,
      left: 0,
      right: 0
    }
  }, /*#__PURE__*/react_default.a.createElement(es["a" /* CanvasContextMenu */], {
    config: menucConfig
  })));
};

/* harmony default export */ var demos_dynamic_config = __webpack_exports__["default"] = (XFlowDemo);

//# sourceURL=webpack:///./docs/tutorial/extension-components/context-menu/demos/dynamic-config/index.tsx_+_3_modules?`)},yenX:function(module,__webpack_exports__,__webpack_require__){"use strict";eval(`// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "useGraphConfig", function() { return /* binding */ useGraphConfig; });

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__("KOBo");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__("RY7m");
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__("q1tI");
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ../xflow/es/index.js + 271 modules
var es = __webpack_require__("mqVf");

// EXTERNAL MODULE: /Users/lyn/github/xflow-github/node_modules/@ant-design/icons/es/icons/PlusCircleOutlined.js + 1 modules
var PlusCircleOutlined = __webpack_require__("Uhj0");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-toolbar/demos/toolbar-layout/toolbar-config.tsx





es["q" /* IconStore */].set('PlusCircleOutlined', PlusCircleOutlined["a" /* default */]);
var useToolbarConfig1 = Object(es["Q" /* createToolbarConfig */])(toolbarConfig => {
  /** \u751F\u4EA7 toolbar item */
  toolbarConfig.setToolbarModelService( /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(toolbarModel) {
      return regenerator_default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              toolbarModel.setValue(toolbar => {
                toolbar.mainGroups = [{
                  name: 'main',
                  items: [{
                    id: '1',
                    iconName: 'PlusCircleOutlined',
                    tooltip: 'vertical'
                  }, {
                    id: '2',
                    iconName: 'PlusCircleOutlined',
                    tooltip: 'vertical'
                  }]
                }];
                toolbar.extraGroups = [{
                  name: 'extra',
                  items: [{
                    id: '3',
                    iconName: 'PlusCircleOutlined',
                    tooltip: 'vertical'
                  }]
                }];
              });

            case 1:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function (_x) {
      return _ref.apply(this, arguments);
    };
  }());
});
var useToolbarConfig2 = Object(es["Q" /* createToolbarConfig */])(toolbarConfig => {
  /** \u751F\u4EA7 toolbar item */
  toolbarConfig.setToolbarModelService( /*#__PURE__*/function () {
    var _ref2 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee2(toolbarModel) {
      return regenerator_default.a.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              toolbarModel.setValue(toolbar => {
                toolbar.mainGroups = [{
                  name: 'main',
                  items: [{
                    id: '1',
                    text: '\u6DFB\u52A0\u8282\u70B9',
                    iconName: 'PlusCircleOutlined',
                    tooltip: 'horizontal'
                  }, {
                    id: '2',
                    text: '\u6DFB\u52A0\u8282\u70B9',
                    iconName: 'PlusCircleOutlined',
                    tooltip: 'horizontal'
                  }]
                }];
                toolbar.extraGroups = [{
                  name: 'extra',
                  items: [{
                    id: '3',
                    iconName: 'PlusCircleOutlined',
                    text: '\u6DFB\u52A0\u8282\u70B9',
                    tooltip: '\u6DFB\u52A0\u8282\u70B9\uFF0C\u914D\u7F6EextraGroups'
                  }]
                }];
              });

            case 1:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    }));

    return function (_x2) {
      return _ref2.apply(this, arguments);
    };
  }());
});
var useToolbarConfig3 = Object(es["Q" /* createToolbarConfig */])(toolbarConfig => {
  /** \u751F\u4EA7 toolbar item */
  toolbarConfig.setToolbarModelService( /*#__PURE__*/function () {
    var _ref3 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee3(toolbarModel) {
      return regenerator_default.a.wrap(function _callee3$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              toolbarModel.setValue(toolbar => {
                toolbar.mainGroups = [{
                  name: 'main',
                  items: [{
                    id: '1',
                    text: '\u6DFB\u52A0\u8282\u70B9',
                    iconName: 'PlusCircleOutlined',
                    tooltip: 'horizontal-center'
                  }, {
                    id: '2',
                    text: '\u6DFB\u52A0\u8282\u70B9',
                    iconName: 'PlusCircleOutlined',
                    tooltip: 'horizontal-center'
                  }]
                }];
                toolbar.extraGroups = [{
                  name: 'extra',
                  items: [{
                    id: '3',
                    iconName: 'PlusCircleOutlined',
                    text: '\u6DFB\u52A0\u8282\u70B9',
                    tooltip: '\u6DFB\u52A0\u8282\u70B9\uFF0C\u914D\u7F6EextraGroups'
                  }]
                }];
              });

            case 1:
            case "end":
              return _context3.stop();
          }
        }
      }, _callee3);
    }));

    return function (_x3) {
      return _ref3.apply(this, arguments);
    };
  }());
});
// EXTERNAL MODULE: ./docs/tutorial/extension-components/canvas-toolbar/demos/toolbar-layout/index.less
var toolbar_layout = __webpack_require__("OTTS");

// EXTERNAL MODULE: ../xflow/dist/index.css
var dist = __webpack_require__("1MRj");

// CONCATENATED MODULE: ./docs/tutorial/extension-components/canvas-toolbar/demos/toolbar-layout/index.tsx



/**
 * title: \u5DE5\u5177\u680F\u5E03\u5C40
 * desc: \u652F\u6301\u4E09\u79CD\u5E03\u5C40\uFF1A'vertical'|'horizontal'|'horizontal-center'
 */





/**  Demo Props  */

/**  graphConfig\uFF1A\u914D\u7F6EGraph  */
var useGraphConfig = Object(es["M" /* createGraphConfig */])(graphConfig => {
  graphConfig.setDefaultNodeRender(props => {
    return /*#__PURE__*/react_default.a.createElement("div", {
      className: "react-node"
    }, " ", props.data.label, " ");
  });
});

var XFlowDemo = props => {
  var graphConfig = useGraphConfig(props);
  var toolbarConfig1 = useToolbarConfig1(props);
  var toolbarConfig2 = useToolbarConfig2(props);
  var toolbarConfig3 = useToolbarConfig3(props);

  var onLoad = /*#__PURE__*/function () {
    var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regenerator_default.a.mark(function _callee(app) {
      return regenerator_default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              console.log(app);

            case 1:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function onLoad(_x) {
      return _ref.apply(this, arguments);
    };
  }();

  return /*#__PURE__*/react_default.a.createElement(es["B" /* XFlow */], {
    onLoad: onLoad,
    className: "xflow-workspace"
  }, /*#__PURE__*/react_default.a.createElement(es["f" /* CanvasToolbar */], {
    layout: 'vertical',
    config: toolbarConfig1,
    position: {
      top: 48,
      left: 8,
      bottom: 48
    }
  }), /*#__PURE__*/react_default.a.createElement(es["f" /* CanvasToolbar */], {
    layout: "horizontal",
    config: toolbarConfig2,
    position: {
      top: 0,
      left: 0,
      right: 0,
      height: 40
    }
  }), /*#__PURE__*/react_default.a.createElement(es["f" /* CanvasToolbar */], {
    layout: 'horizontal-center',
    config: toolbarConfig3,
    position: {
      bottom: 0,
      left: 0,
      right: 0,
      height: 40
    }
  }), /*#__PURE__*/react_default.a.createElement(es["D" /* XFlowCanvas */], {
    config: graphConfig,
    position: {
      top: 0,
      bottom: 0,
      left: 0,
      right: 0
    }
  }));
};

/* harmony default export */ var demos_toolbar_layout = __webpack_exports__["default"] = (XFlowDemo);

//# sourceURL=webpack:///./docs/tutorial/extension-components/canvas-toolbar/demos/toolbar-layout/index.tsx_+_1_modules?`)}}]);
